COMMENT change the value of the internal flag that determines whether all storage is handed by a dense backing array rather than an associative store param dense only new value for dense only flag throws illegal argument exception if an attempt is made to enable dense only after it was disabled native array code is not written to handle switching back to a dense representation FUNCTION TYPE void NAME void NAME set dense only PARAMETER LIST boolean dense only PARAMETER boolean dense only TYPE boolean NAME boolean NAME dense only BLOCK IF if dense only this dense only throw new illegal argument exception CONDITION dense only this dense only EXPR dense only this dense only NAME dense only NAME this dense only NAME this NAME dense only THEN throw new illegal argument exception BLOCK THROW throw new illegal argument exception EXPR new illegal argument exception CALL illegal argument exception NAME illegal argument exception ARGUMENT LIST EXPR this dense only dense only NAME this dense only NAME this NAME dense only NAME dense only change the value of the internal flag that determines whether all root ROOT change det value the dobj change value case flag of det flag the amod flag internal nmod of value flag nsubj determines flag ref flag that acl relcl flag determines dobj determines whether det whether all storage is handed by a dense backing array rather than an associative root ROOT handed nsubjpass handed storage auxpass handed is case array by det array a amod array dense compound array backing nmod agent handed array cc array rather mwe rather than det associative an nmod agent handed associative conj negcc array associative store param dense only new value for dense only flag root ROOT value compound value param amod value dense advmod value only amod value new case flag for amod flag dense amod flag only nmod for value flag throws illegal argument exception if an attempt is made to enable root ROOT throws amod exception illegal compound exception argument dobj throws exception mark made if det attempt an nsubjpass made attempt nsubj xsubj enable attempt auxpass made is advcl if throws made mark enable to xcomp made enable dense only after it was disabled native array code is not written root ROOT written advmod written dense advmod code only mark code after nsubj code it cop code was amod code disabled amod code native compound code array nsubjpass written code auxpass written is neg written not to handle switching back to a dense representation root ROOT handle mark handle to dobj handle switching advmod handle back case representation to det representation a amod representation dense nmod to back representation void NN set VBN dense JJ only RB root ROOT set xcomp set dense advmod set only boolean NN dense JJ only RB root ROOT dense advmod dense only if IN dense JJ only RB root ROOT dense advmod dense only this DT dense JJ only RB throw VB new JJ illegal JJ argument NN exception NN root ROOT exception amod exception illegal compound exception argument this DT dense JJ only RB dense JJ only RB root ROOT dense advmod dense only change throw ANTONYM ANTONYM change throws ANTONYM ANTONYM determines made ANTONYM ANTONYM enable disabled ANTONYM ANTONYM handed made ANTONYM ANTONYM handed throw ANTONYM ANTONYM handed throws ANTONYM ANTONYM is made ANTONYM ANTONYM made switching ANTONYM ANTONYM made was ANTONYM ANTONYM
