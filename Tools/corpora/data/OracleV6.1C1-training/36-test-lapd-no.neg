COMMENT checks the url to see if this repository refers to an external repository param original repository return true if external FUNCTION SPECIFIER static TYPE boolean NAME boolean NAME is external repo PARAMETER LIST artifact repository original repository PARAMETER artifact repository original repository TYPE artifact repository NAME artifact repository NAME original repository BLOCK TRY try url url new url original repository get url return url get host equals localhost url get host equals url get protocol equals file catch malformed url exception e bad url just skip it here it should have been validated already but the wagon lookup will deal with it return false BLOCK DECL STMT TYPE url NAME url NAME url INIT new url original repository get url EXPR new url original repository get url CALL url original repository get url NAME url ARGUMENT LIST ARGUMENT EXPR original repository get url CALL original repository get url NAME original repository get url NAME original repository NAME get url ARGUMENT LIST RETURN return url get host equals localhost url get host equals url get protocol equals file EXPR url get host equals localhost url get host equals url get protocol equals file CALL url get host NAME url get host NAME url NAME get host ARGUMENT LIST CALL equals localhost NAME equals ARGUMENT LIST ARGUMENT EXPR localhost CALL url get host NAME url get host NAME url NAME get host ARGUMENT LIST CALL equals NAME equals ARGUMENT LIST ARGUMENT EXPR CALL url get protocol NAME url get protocol NAME url NAME get protocol ARGUMENT LIST CALL equals file NAME equals ARGUMENT LIST ARGUMENT EXPR file CATCH catch malformed url exception e bad url just skip it here it should have been validated already but the wagon lookup will deal with it return false PARAMETER LIST malformed url exception e PARAMETER malformed url exception e TYPE malformed url exception NAME malformed url exception NAME e BLOCK COMMENT bad url just skip it here it should have been validated already but the wagon lookup will deal with it RETURN return false EXPR false checks the url to see if this repository refers to an external repository root ROOT checks det url the dobj checks url mark see to acl to url see mark refers if det repository this nsubj refers repository advcl if see refers case repository to det repository an amod repository external nmod to refers repository param original repository root ROOT repository compound repository param amod repository original return true if external root ROOT return amod return true mark external if advcl if true external static JJ boolean NN is VBZ external JJ repo NN root ROOT repo cop repo is amod repo external artifact NN repository NN root ROOT repository compound repository artifact original JJ repository NN root ROOT repository amod repository original try VB url NN url NN new JJ url NN original JJ repository JJ get VB url NN root ROOT get amod repository original nsubj get repository dobj get url return NN url NN get VB host NN root ROOT get nsubj get url dobj get host equals VBZ localhost NN url NN get VB host NN root ROOT get nsubj get url dobj get host equals VBZ url NN get VB protocol NN root ROOT get nsubj get url dobj get protocol equals VBZ file NN catch NN malformed JJ url NN exception NN root ROOT exception amod exception malformed compound exception url e SYM bad url just skip it here it should have been validated already but the wagon lookup will deal with it root ROOT skip amod url bad nsubj skip url advmod skip just dobj skip it advmod skip here nsubjpass validated it aux validated should aux validated have auxpass validated been dep skip validated advmod validated already cc validated but det lookup the compound lookup wagon nsubj deal lookup aux deal will dep skip deal conj but validated deal case it with nmod with deal it bad url just skip it here it should have been validated already but the wagon lookup will deal with it root ROOT skip amod url bad nsubj skip url advmod skip just dobj skip it advmod skip here nsubjpass validated it aux validated should aux validated have auxpass validated been dep skip validated advmod validated already cc validated but det lookup the compound lookup wagon nsubj deal lookup aux deal will dep skip deal conj but validated deal case it with nmod with deal it return NN false JJ bad just ANTONYM ANTONYM bad new ANTONYM ANTONYM bad true ANTONYM ANTONYM catch have ANTONYM ANTONYM checks catch ANTONYM ANTONYM checks catch ANTONYM ANTONYM checks equals ANTONYM ANTONYM checks have ANTONYM ANTONYM checks return ANTONYM ANTONYM equals catch ANTONYM ANTONYM have deal ANTONYM ANTONYM just new ANTONYM ANTONYM just true ANTONYM ANTONYM refers equals ANTONYM ANTONYM return have ANTONYM ANTONYM return try ANTONYM ANTONYM see deal ANTONYM ANTONYM see have ANTONYM ANTONYM see try ANTONYM ANTONYM true false ANTONYM ANTONYM bad false SYNONYM SYNONYM
