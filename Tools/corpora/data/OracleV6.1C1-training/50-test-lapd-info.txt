FUNCTION SPECIFIER protected TYPE void NAME void NAME get method bodies PARAMETER LIST compilation unit declaration unit int place PARAMETER compilation unit declaration unit TYPE compilation unit declaration NAME compilation unit declaration NAME unit PARAMETER int place TYPE int NAME int NAME place BLOCK COMMENT fill the methods bodies in order for the code to be generated IF if unit ignore method bodies unit ignore further investigation true return if initial diet parse did not work no need to dig into method bodies CONDITION unit ignore method bodies EXPR unit ignore method bodies NAME unit ignore method bodies NAME unit NAME ignore method bodies THEN unit ignore further investigation true return if initial diet parse did not work no need to dig into method bodies BLOCK EXPR unit ignore further investigation true NAME unit ignore further investigation NAME unit NAME ignore further investigation RETURN return COMMENT if initial diet parse did not work no need to dig into method bodies IF if place parse threshold return CONDITION place parse threshold EXPR place parse threshold NAME place NAME parse threshold THEN return BLOCK RETURN return COMMENT work already done COMMENT real parse of the method EXPR parser scanner set source buffer unit compilation result compilation unit get contents CALL parser scanner set source buffer unit compilation result compilation unit get contents NAME parser scanner set source buffer NAME parser NAME scanner NAME set source buffer ARGUMENT LIST ARGUMENT EXPR unit compilation result compilation unit get contents CALL unit compilation result compilation unit get contents NAME unit compilation result compilation unit get contents NAME unit NAME compilation result NAME compilation unit NAME get contents ARGUMENT LIST IF if unit types null for int i unit types length i unit types i parse method parser unit CONDITION unit types null EXPR unit types null NAME unit types NAME unit NAME types THEN for int i unit types length i unit types i parse method parser unit BLOCK FOR for int i unit types length i unit types i parse method parser unit CONTROL int i unit types length i INIT int i unit types length TYPE int NAME int NAME i INIT unit types length EXPR unit types length NAME unit types length NAME unit NAME types NAME length CONDITION i EXPR i NAME i INCR BLOCK EXPR unit types i parse method parser unit NAME unit types i NAME unit NAME types INDEX i EXPR i NAME i CALL parse method parser unit NAME parse method ARGUMENT LIST ARGUMENT EXPR parser NAME parser ARGUMENT EXPR unit NAME unit protected VBN void NN get VB method NN bodies NNS root ROOT get compound bodies method dobj get bodies compilation NN unit NN declaration NN root ROOT declaration compound declaration compilation compound declaration unit unit NN int NN place NN fill the methods bodies in order for the code to be generated root ROOT fill det bodies the compound bodies methods dobj fill bodies mark generated in mwe in order mark generated for det code the nsubjpass generated code mark generated to auxpass generated be advcl in order fill generated if IN unit NN ignore VB method NN bodies NNS root ROOT ignore nsubj ignore unit compound bodies method dobj ignore bodies unit NN ignore VB further RB investigation NN root ROOT ignore nsubj ignore unit advmod ignore further dobj ignore investigation true JJ return NN if IN initial JJ diet NN parse VB did VBD not RB work NN no DT need NN to TO dig NN into IN method NN bodies NNS if IN place NN parse VB threshold NN root ROOT parse dobj parse threshold return NN work NN already RB done VBN real parse of the method root ROOT parse amod parse real case method of det method the nmod of parse method parser NN scanner NN set VBN source NN buffer NN root ROOT set compound scanner parser nsubj set scanner compound buffer source dobj set buffer unit NN compilation NN result VBP compilation NN unit NN get VB contents NNS root ROOT result compound compilation unit nsubj result compilation compound unit compilation nsubj get unit ccomp result get dobj get contents if IN unit NN types NNS root ROOT types compound types unit null JJ for IN int NN i LS unit NN types NNS length NN root ROOT length compound types unit nsubj length types i LS unit NN types NNS root ROOT types compound types unit i LS parse VB method NN root ROOT parse dobj parse method parser NN unit NN bodies be ANTONYM ANTONYM did work ANTONYM ANTONYM fill need ANTONYM ANTONYM fill void ANTONYM ANTONYM order did ANTONYM ANTONYM order done ANTONYM ANTONYM place did ANTONYM ANTONYM place done ANTONYM ANTONYM work done ANTONYM ANTONYM,1
