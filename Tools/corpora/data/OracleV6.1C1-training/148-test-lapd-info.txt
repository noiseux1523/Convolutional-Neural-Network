FUNCTION SPECIFIER private TYPE void NAME void NAME set timeout PARAMETER LIST BLOCK COMMENT set a reasonable minimum delay since this mock task may not actually consume any data from kafka it may only COMMENT see put calls triggered by wakeups for offset commits to make sure we aren t tied to the offset commit COMMENT interval we force a wakeup every ms or after the failure delay whichever is smaller this is not overly COMMENT aggressive but ensures any scheduled tasks this connector performs are reasonably close to the target time EXPR context timeout math min failure delay ms CALL context timeout math min failure delay ms NAME context timeout NAME context NAME timeout ARGUMENT LIST ARGUMENT EXPR math min failure delay ms CALL math min failure delay ms NAME math min NAME math NAME min ARGUMENT LIST ARGUMENT EXPR failure delay ms NAME failure delay ms ARGUMENT EXPR private JJ void NN set VBN timeout NN root ROOT set dobj set timeout set a reasonable minimum delay since this mock task may not actually consume any data from kafka it may only root ROOT set det delay a amod delay reasonable compound delay minimum dobj set delay mark consume since det task this amod task mock nsubj consume task aux consume may neg consume not advmod consume actually advcl since set consume det data any dobj consume data case kafka from nmod from only kafka nsubj only it aux only may dep data only set a reasonable minimum delay since this mock task may not actually consume any data from kafka it may only root ROOT set det delay a amod delay reasonable compound delay minimum dobj set delay mark consume since det task this amod task mock nsubj consume task aux consume may neg consume not advmod consume actually advcl since set consume det data any dobj consume data case kafka from nmod from only kafka nsubj only it aux only may dep data only see put calls triggered by wakeups for offset commits to make sure we aren t tied to the offset commit root ROOT commit csubj commit see amod calls put nsubj commits calls nsubj xsubj make calls acl calls triggered case wakeups by nmod by triggered wakeups case offset for nmod for wakeups offset ccomp see commits mark make to xcomp commits make xcomp make sure nsubj aren we ccomp sure aren dobj aren t acl t tied case offset to det offset the nmod to tied offset see put calls triggered by wakeups for offset commits to make sure we aren t tied to the offset commit root ROOT commit csubj commit see amod calls put nsubj commits calls nsubj xsubj make calls acl calls triggered case wakeups by nmod by triggered wakeups case offset for nmod for wakeups offset ccomp see commits mark make to xcomp commits make xcomp make sure nsubj aren we ccomp sure aren dobj aren t acl t tied case offset to det offset the nmod to tied offset interval we force a wakeup every ms or after the failure delay whichever is smaller this is not overly root ROOT interval nsubj force we acl relcl interval force det wakeup a dobj force wakeup det ms every dep wakeup ms cc ms or case delay after det delay the compound delay failure dep wakeup delay conj or ms delay nsubj smaller whichever cop smaller is acl relcl delay smaller nsubj overly this cop overly is neg overly not ccomp smaller overly interval we force a wakeup every ms or after the failure delay whichever is smaller this is not overly root ROOT interval nsubj force we acl relcl interval force det wakeup a dobj force wakeup det ms every dep wakeup ms cc ms or case delay after det delay the compound delay failure dep wakeup delay conj or ms delay nsubj smaller whichever cop smaller is acl relcl delay smaller nsubj overly this cop overly is neg overly not ccomp smaller overly aggressive but ensures any scheduled tasks this connector performs are reasonably close to the target time root ROOT time amod tasks aggressive cc aggressive but conj but aggressive ensures amod tasks ensures det tasks any amod tasks scheduled nsubj time tasks det connector this nsubj performs connector acl relcl tasks performs cop time are advmod time reasonably case time close mwe close to det time the compound time target context NN timeout NN root ROOT timeout compound timeout context math NN min NN root ROOT min compound min math failure NN delay NN ms NNS root ROOT ms compound ms failure compound ms delay calls make ANTONYM ANTONYM commit force ANTONYM ANTONYM commit target ANTONYM ANTONYM commits force ANTONYM ANTONYM commits make ANTONYM ANTONYM commits target ANTONYM ANTONYM consume make ANTONYM ANTONYM consume see ANTONYM ANTONYM delay ensures ANTONYM ANTONYM delay see ANTONYM ANTONYM make are ANTONYM ANTONYM make commit ANTONYM ANTONYM make force ANTONYM ANTONYM make is ANTONYM ANTONYM make performs ANTONYM ANTONYM make tied ANTONYM ANTONYM offset close ANTONYM ANTONYM put calls ANTONYM ANTONYM put target ANTONYM ANTONYM see calls ANTONYM ANTONYM see make ANTONYM ANTONYM set commit ANTONYM ANTONYM set commits ANTONYM ANTONYM set make ANTONYM ANTONYM set performs ANTONYM ANTONYM set see ANTONYM ANTONYM set target ANTONYM ANTONYM tied force ANTONYM ANTONYM triggered offset ANTONYM ANTONYM sure close SYNONYM SYNONYM tied close SYNONYM SYNONYM,0
