FUNCTION SPECIFIER public TYPE void NAME void NAME set read listener PARAMETER LIST read listener listener PARAMETER read listener listener TYPE read listener NAME read listener NAME listener BLOCK IF if listener null throw new null pointer exception sm get string request null read listener CONDITION listener null EXPR listener null NAME listener THEN throw new null pointer exception sm get string request null read listener BLOCK THROW throw new null pointer exception sm get string request null read listener EXPR new null pointer exception sm get string request null read listener CALL null pointer exception sm get string request null read listener NAME null pointer exception ARGUMENT LIST ARGUMENT EXPR sm get string request null read listener CALL sm get string request null read listener NAME sm get string NAME sm NAME get string ARGUMENT LIST ARGUMENT EXPR request null read listener IF if get read listener null throw new illegal state exception sm get string request read listener set CONDITION get read listener null EXPR get read listener null CALL get read listener NAME get read listener ARGUMENT LIST THEN throw new illegal state exception sm get string request read listener set BLOCK THROW throw new illegal state exception sm get string request read listener set EXPR new illegal state exception sm get string request read listener set CALL illegal state exception sm get string request read listener set NAME illegal state exception ARGUMENT LIST ARGUMENT EXPR sm get string request read listener set CALL sm get string request read listener set NAME sm get string NAME sm NAME get string ARGUMENT LIST ARGUMENT EXPR request read listener set COMMENT note this class is not used for http upgrade so only need to test COMMENT for async DECL STMT TYPE atomic boolean NAME atomic boolean NAME result INIT new atomic boolean false EXPR new atomic boolean false CALL atomic boolean false NAME atomic boolean ARGUMENT LIST ARGUMENT EXPR false EXPR action action code async is async result CALL action action code async is async result NAME action ARGUMENT LIST ARGUMENT EXPR action code async is async NAME action code async is async NAME action code NAME async is async ARGUMENT EXPR result NAME result IF if result get throw new illegal state exception sm get string request not async CONDITION result get EXPR result get CALL result get NAME result get NAME result NAME get ARGUMENT LIST THEN throw new illegal state exception sm get string request not async BLOCK THROW throw new illegal state exception sm get string request not async EXPR new illegal state exception sm get string request not async CALL illegal state exception sm get string request not async NAME illegal state exception ARGUMENT LIST ARGUMENT EXPR sm get string request not async CALL sm get string request not async NAME sm get string NAME sm NAME get string ARGUMENT LIST ARGUMENT EXPR request not async EXPR this listener listener NAME this listener NAME this NAME listener NAME listener public NN void NN set VBN read NN listener NN root ROOT set compound listener read dobj set listener read VB listener NN root ROOT read dobj read listener listener NN if IN listener NN null JJ throw VB new JJ null JJ pointer NN exception NN root ROOT exception amod exception null compound exception pointer sm NN get VB string NN root ROOT get nsubj get sm dobj get string request NN null JJ read NN listener NN root ROOT listener compound listener request amod listener null compound listener read if IN get VB read VB listener NN root ROOT read aux read get dobj read listener null JJ throw VB new JJ illegal JJ state NN exception NN root ROOT exception amod exception illegal compound exception state sm NN get VB string NN root ROOT get nsubj get sm dobj get string request NN read VBD listener NN set NN root ROOT read nsubj read request compound set listener dobj read set note this class is not used for http upgrade so only need to test root ROOT note det class this nsubjpass used class auxpass used is neg used not acl relcl note used case upgrade for amod upgrade http nmod for used upgrade advmod need so advmod need only dep used need mark test to xcomp need test for async root ROOT async case async for atomic JJ boolean NN root ROOT boolean amod boolean atomic result NN new JJ atomic JJ boolean NN root ROOT boolean amod boolean atomic false JJ action NN action NN code NN async NN root ROOT async compound async action compound async code is VBZ async NN root ROOT async cop async is result NN if IN result NN get VB root ROOT get nsubj get result throw VB new JJ illegal JJ state NN exception NN root ROOT exception amod exception illegal compound exception state sm NN get VB string NN root ROOT get nsubj get sm dobj get string request NN not RB async IN root ROOT request neg async not dep request async this DT listener NN listener NN get result ANTONYM ANTONYM need get ANTONYM ANTONYM new used ANTONYM ANTONYM request need ANTONYM ANTONYM throw get ANTONYM ANTONYM null false SYNONYM SYNONYM void false SYNONYM SYNONYM,0
