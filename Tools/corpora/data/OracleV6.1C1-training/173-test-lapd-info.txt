COMMENT add an end of window hold or if too late for that a garbage collection hold if required return the link instant at which hold was added or literal null if no hold was added FUNCTION ANNOTATION nullable NAME nullable SPECIFIER private TYPE instant NAME instant NAME add end of window or garbage collection holds PARAMETER LIST reduce fn w context context boolean pane is empty PARAMETER reduce fn w context context TYPE reduce fn w context NAME reduce fn w context NAME reduce fn w NAME reduce fn ARGUMENT LIST ARGUMENT NAME ARGUMENT NAME ARGUMENT NAME ARGUMENT NAME w NAME context NAME context PARAMETER boolean pane is empty TYPE boolean NAME boolean NAME pane is empty BLOCK DECL STMT TYPE instant NAME instant NAME hold INIT add end of window hold context pane is empty EXPR add end of window hold context pane is empty CALL add end of window hold context pane is empty NAME add end of window hold ARGUMENT LIST ARGUMENT EXPR context NAME context ARGUMENT EXPR pane is empty NAME pane is empty IF if hold null hold add garbage collection hold context pane is empty CONDITION hold null EXPR hold null NAME hold THEN hold add garbage collection hold context pane is empty BLOCK EXPR hold add garbage collection hold context pane is empty NAME hold CALL add garbage collection hold context pane is empty NAME add garbage collection hold ARGUMENT LIST ARGUMENT EXPR context NAME context ARGUMENT EXPR pane is empty NAME pane is empty RETURN return hold EXPR hold NAME hold add an end of window hold or if too late for that a garbage collection hold if required root ROOT add det end an dobj add end case hold of compound hold window nmod of end hold cc add or case late if advmod late too conj or add late mark hold for mark hold that det collection a compound collection garbage nsubj hold collection dep late hold mark required if advcl if hold required return the link instant at which hold was added or literal null if no hold was added root ROOT return det instant the compound instant link dobj return instant nmod at added instant case which at ref instant which aux added hold auxpass added was acl relcl instant added cc added or amod null literal acl relcl instant null conj or added null mark added if neg hold no nsubjpass added hold auxpass added was dep added added nullable JJ private JJ instant NN add VB end NN of IN window NN or CC garbage NN collection NN holds VBZ root ROOT holds csubj holds add dobj add end case window of nmod of end window cc window or compound collection garbage nmod of end collection conj or window collection reduce VB fn NN root ROOT reduce dobj reduce fn w NN context NN context NN boolean NN pane NN is VBZ empty JJ root ROOT empty nsubj empty pane cop empty is instant NN hold NN add VB end NN of IN window NN hold NN root ROOT add dobj add end case hold of compound hold window nmod of end hold context NN pane NN is VBZ empty JJ root ROOT empty nsubj empty pane cop empty is if IN hold NN null JJ hold NN add VB garbage NN collection NN hold VBP root ROOT hold csubj hold add compound collection garbage dobj add collection context NN pane NN is VBZ empty JJ root ROOT empty nsubj empty pane cop empty is return NN hold NN hold required ANTONYM ANTONYM hold return ANTONYM ANTONYM,0
