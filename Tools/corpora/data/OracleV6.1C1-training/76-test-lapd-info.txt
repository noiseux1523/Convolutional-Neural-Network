COMMENT records a value in the set the referenced bytes are hashed and then modulo n d where n is the chosen size of the internal bitset param value the key value to be hashed throws io exception if there is a low level i o error FUNCTION SPECIFIER public TYPE void NAME void NAME add value PARAMETER LIST bytes ref value PARAMETER bytes ref value TYPE bytes ref NAME bytes ref NAME value THROWS throws io exception ARGUMENT EXPR io exception NAME io exception BLOCK DECL STMT TYPE int NAME int NAME hash INIT hash function hash value EXPR hash function hash value CALL hash function hash value NAME hash function hash NAME hash function NAME hash ARGUMENT LIST ARGUMENT EXPR value NAME value IF if hash hash hash CONDITION hash EXPR hash NAME hash THEN hash hash BLOCK EXPR hash hash NAME hash NAME hash COMMENT bitmasking using bloom size is effectively a modulo operation DECL STMT TYPE int NAME int NAME bloom pos INIT hash bloom size EXPR hash bloom size NAME hash NAME bloom size EXPR filter set bloom pos CALL filter set bloom pos NAME filter set NAME filter NAME set ARGUMENT LIST ARGUMENT EXPR bloom pos NAME bloom pos records a value in the set the referenced bytes are hashed and then modulo n d where n is the root ROOT records det value a dobj records value case set in det set the nmod in hashed set det bytes the amod bytes referenced nsubjpass hashed bytes auxpass hashed are dep value hashed cc hashed and advmod d then compound d modulo compound d n dep value d conj and hashed d advmod the where nsubj the n cop the is acl relcl d the records a value in the set the referenced bytes are hashed and then modulo n d where n is the root ROOT records det value a dobj records value case set in det set the nmod in hashed set det bytes the amod bytes referenced nsubjpass hashed bytes auxpass hashed are dep value hashed cc hashed and advmod d then compound d modulo compound d n dep value d conj and hashed d advmod the where nsubj the n cop the is acl relcl d the chosen size of the internal bitset root ROOT size amod size chosen case bitset of det bitset the amod bitset internal nmod of size bitset param value the key value to be hashed root ROOT value compound value param det value the amod value key dep value value mark hashed to auxpass hashed be acl to value hashed throws io exception if there is a low level i o error root ROOT throws compound exception io dobj throws exception mark is if expl is there advcl if throws is det level a amod level low nsubj is level compound error i compound error o dep level error public NN void NN add VB value NN root ROOT add dobj add value bytes NNS ref VBP root ROOT ref nsubj ref bytes value NN throws VBZ io NN exception NN root ROOT exception compound exception io int NN hash NN hash NN function NN hash VBP root ROOT hash compound function hash nsubj hash function value NN if IN hash NN hash NN hash NN bitmasking using bloom size is effectively a modulo operation root ROOT operation csubj operation bitmasking xcomp bitmasking using compound size bloom dobj using size cop operation is advmod operation effectively det operation a amod operation modulo int NN bloom NN pos NNS root ROOT pos compound pos bloom hash NN bloom NN size NN root ROOT size compound size bloom filter NN set NN root ROOT set compound set filter bloom NN pos NNS root ROOT pos compound pos bloom d key ANTONYM ANTONYM i key ANTONYM ANTONYM level set ANTONYM ANTONYM public internal ANTONYM ANTONYM d i SYNONYM SYNONYM,0
