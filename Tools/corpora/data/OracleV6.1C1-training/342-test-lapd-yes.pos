COMMENT for each class file in the suite directory create a test file object for live connect the test class name needs to be the name of the class and the file path needs to be the full package name prepended with the java script keyword packages and without the class suffix FUNCTION SPECIFIER public TYPE void NAME void NAME get cases PARAMETER LIST test suite suite PARAMETER test suite suite TYPE test suite NAME test suite NAME suite BLOCK EXPR enable privileges CALL enable privileges NAME enable privileges ARGUMENT LIST DECL STMT TYPE file NAME file NAME dir INIT new file suite file path EXPR new file suite file path CALL file suite file path NAME file ARGUMENT LIST ARGUMENT EXPR suite file path NAME suite file path NAME suite NAME file path DECL STMT TYPE string NAME string NAME string INDEX NAME files INIT dir list EXPR dir list CALL dir list NAME dir list NAME dir NAME list ARGUMENT LIST COMMENT xxx hardcoded package name need to fix this DECL STMT TYPE string NAME string NAME filename INIT packages com netscape javascript qa liveconnect suite name EXPR packages com netscape javascript qa liveconnect suite name NAME suite name NAME suite NAME name FOR for int i i files length i if files i ends with get suffix test file item new test file files i filename files i substring files i length get suffix length p item file path suite add element item CONTROL int i i files length i INIT int i TYPE int NAME int NAME i INIT EXPR CONDITION i files length EXPR i files length NAME i NAME files length NAME files NAME length INCR i EXPR i NAME i BLOCK IF if files i ends with get suffix test file item new test file files i filename files i substring files i length get suffix length p item file path suite add element item CONDITION files i ends with get suffix EXPR files i ends with get suffix NAME files i NAME files INDEX i EXPR i NAME i CALL ends with get suffix NAME ends with ARGUMENT LIST ARGUMENT EXPR get suffix CALL get suffix NAME get suffix ARGUMENT LIST THEN test file item new test file files i filename files i substring files i length get suffix length p item file path suite add element item BLOCK DECL STMT TYPE test file NAME test file NAME item INIT new test file files i filename files i substring files i length get suffix length EXPR new test file files i filename files i substring files i length get suffix length CALL test file files i filename files i substring files i length get suffix length NAME test file ARGUMENT LIST ARGUMENT EXPR files i NAME files i NAME files INDEX i EXPR i NAME i ARGUMENT EXPR filename files i substring files i length get suffix length NAME filename NAME files i NAME files INDEX i EXPR i NAME i CALL substring files i length get suffix length NAME substring ARGUMENT LIST ARGUMENT EXPR ARGUMENT EXPR files i length get suffix length NAME files i NAME files INDEX i EXPR i NAME i CALL length NAME length ARGUMENT LIST CALL get suffix NAME get suffix ARGUMENT LIST CALL length NAME length ARGUMENT LIST EXPR p item file path CALL p item file path NAME p ARGUMENT LIST ARGUMENT EXPR item file path NAME item file path NAME item NAME file path EXPR suite add element item CALL suite add element item NAME suite add element NAME suite NAME add element ARGUMENT LIST ARGUMENT EXPR item NAME item for each class file in the suite directory create a test file object root ROOT create case file for det file each compound file class nmod for create file case directory in det directory the compound directory suite nmod in file directory det object a compound object test compound object file dobj create object for live connect the test class name needs to be the name of the class root ROOT connect mark connect for nsubj connect live det name the compound name test compound name class nsubj needs name nsubj xsubj name name ccomp connect needs mark name to cop name be det name the xcomp needs name case class of det class the nmod of name class and the file path needs to be the full package name prepended with the root ROOT needs cc needs and det path the compound path file nsubj needs path nsubj xsubj name path mark name to cop name be det name the amod name full compound name package xcomp needs name acl name prepended case the with nmod with prepended the java script keyword packages and without the class suffix root ROOT packages compound packages java compound packages script compound packages keyword cc packages and case suffix without det suffix the compound suffix class conj and packages suffix java script keyword packages and without the class suffix root ROOT packages compound packages java compound packages script compound packages keyword cc packages and case suffix without det suffix the compound suffix class conj and packages suffix public NN void NN get VB cases NNS root ROOT get dobj get cases test NN suite NN root ROOT suite compound suite test suite NN enable VB privileges NNS root ROOT enable dobj enable privileges file NN dir NN new JJ file NN suite NN file NN path NN root ROOT path compound path suite compound path file string NN files NNS dir NN list NN root ROOT list compound list dir xxx hardcoded package name need to fix this root ROOT hardcoded nsubj hardcoded xxx compound name package nsubj need name nsubj xsubj fix name ccomp hardcoded need mark fix to xcomp need fix dobj fix this xxx hardcoded package name need to fix this root ROOT hardcoded nsubj hardcoded xxx compound name package nsubj need name nsubj xsubj fix name ccomp hardcoded need mark fix to xcomp need fix dobj fix this string NN filename NN packages NNS com NN netscape NN javascript NN qa NN liveconnect NN root ROOT liveconnect compound liveconnect packages compound liveconnect com compound liveconnect netscape compound liveconnect javascript compound liveconnect qa suite NN name NN root ROOT name compound name suite for IN int NN i LS i LS files NNS length NN root ROOT length compound length files i LS if IN files NNS i LS ends NNS with IN root ROOT ends dep ends with get VB suffix NN root ROOT get dobj get suffix test NN file NN root ROOT file compound file test item NN new JJ test NN file NN root ROOT file compound file test files NNS i LS filename NN files NNS i LS substring VBG files NNS i LS length NN get VB suffix NN root ROOT get dobj get suffix length NN p NN item NN file NN path NN root ROOT path compound path item compound path file suite NN add VBP element NN root ROOT add nsubj add suite dobj add element item NN class path ANTONYM ANTONYM create fix ANTONYM ANTONYM create name ANTONYM ANTONYM full void ANTONYM ANTONYM name be ANTONYM ANTONYM name fix ANTONYM ANTONYM xxx i SYNONYM SYNONYM
