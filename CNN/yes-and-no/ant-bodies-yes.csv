begin_comment tests whether or not the parent classloader should be checked for a resource before this one if the resource matches both the use parent classloader first and the use this classloader first lists the latter takes priority param resource name the name of the resource to check must not be code null code return whether or not the parent classloader should be checked for a resource before this one is end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is parent first  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name resource name  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment default to the global setting and then see  end_comment  begin_comment if this class belongs to a package which has been  end_comment  begin_comment designated to use a specific loader first  end_comment  begin_comment this one or the parent one  end_comment  begin_comment xxx shouldn t this always return false in isolated mode  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name use parent first  end_name  begin_init  begin_expr  begin_name parent first  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name enumeration  end_name  end_type  begin_name e  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name system packages  end_name  begin_operator  end_operator  begin_name elements  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name has more elements  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_incr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name package name  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name string  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name next element  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name resource name  end_name  begin_operator  end_operator  begin_name starts with  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name package name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name use parent first  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_then  end_if  end_block  end_for  begin_for  begin_init  begin_decl  begin_type  begin_name enumeration  end_name  end_type  begin_name e  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name loader packages  end_name  begin_operator  end_operator  begin_name elements  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name has more elements  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_incr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name package name  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name string  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name next element  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name resource name  end_name  begin_operator  end_operator  begin_name starts with  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name package name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name use parent first  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_then  end_if  end_block  end_for  begin_return  begin_expr  begin_name use parent first  end_name  end_expr  end_return  end_block 
begin_comment find a project component for a specific project creating it if it does not exist param project the project return the project component for a specific project end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name component helper  end_name  end_type  begin_name get component helper  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name project  end_name  end_type  begin_name project  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name project  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_comment singleton for now it may change per classloader  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name component helper  end_name  end_type  begin_name ph  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name component helper  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name get reference  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name component helper reference  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name ph  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name ph  end_name  end_expr  end_return  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name ph  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name component helper  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ph  end_name  begin_operator  end_operator  begin_name set project  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name project  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name add reference  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name component helper reference  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name ph  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name ph  end_name  end_expr  end_return  end_block 
begin_comment call org apache env which if available param out the stream to print the content to end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name do report which  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name print stream  end_name  end_type  begin_name out  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name throwable  end_name  end_type  begin_name error  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name class  end_name  end_type  begin_name which  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name class  end_name  begin_operator  end_operator  begin_name for name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name method  end_name  end_type  begin_name method  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name which  end_name  begin_operator  end_operator  begin_name get method  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name class  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_name  begin_name string  end_name  begin_index  end_index  end_name  begin_operator  end_operator  end_expr  end_block  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name invoke  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name object  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_operator  end_operator  begin_name  begin_name string  end_name  begin_index  end_index  end_name  begin_block  end_block  end_expr  end_block  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name class not found exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name out  end_name  begin_operator  end_operator  begin_name println  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name out  end_name  begin_operator  end_operator  begin_name println  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name invocation target exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_name error  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name get target exception  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_name e  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name get target exception  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name throwable  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_name error  end_name  begin_operator  end_operator  begin_name e  end_name  end_expr  end_expr_stmt  end_block  end_catch  end_try  begin_comment report error if something weird happens this is diagnostic  end_comment  begin_if  begin_condition  begin_expr  begin_name error  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name out  end_name  begin_operator  end_operator  begin_name println  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name error  end_name  begin_operator  end_operator  begin_name print stack trace  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block 
begin_comment scan the given directory for files and directories found files and directories are placed in their respective collections based on the matching of includes excludes and the selectors when a directory is found it is scanned recursively param dir the directory to scan must not be code null code param vpath the path relative to the base directory needed to prevent problems with an absolute path when using dir must not be code null code param fast whether or not this call is part of a fast scan see files included see files not included see files excluded see dirs included see dirs not included see dirs excluded see slow scan end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name scandir  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name dir  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name vpath  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name fast  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name dir  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name build exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name dir  end_name  begin_operator  end_operator  begin_name exists  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name build exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dir  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name dir  end_name  begin_operator  end_operator  begin_name is directory  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name build exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dir  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  end_else  end_if  end_else  end_if  begin_comment avoid double scanning of directories can only happen in fast mode  end_comment  begin_if  begin_condition  begin_expr  begin_name fast  end_name  begin_operator  end_operator  begin_call  begin_name has been scanned  end_name  begin_argument_list  begin_argument  begin_expr  begin_name vpath  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  begin_index  end_index  end_type  begin_name newfiles  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name dir  end_name  begin_operator  end_operator  begin_name list  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name newfiles  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment two reasons are mentioned in the api docs for file list 1 dir is not a directory this is impossible as we wouldn t get here in this case 2 an io error occurred why doesn t it throw an exception then  end_comment  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name build exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name dir  end_name  begin_operator  end_operator  begin_name get absolute path  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name follow symlinks  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name vector  end_name  end_type  begin_name no links  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name vector  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name  begin_name newfiles  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_try  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name file utils  end_name  begin_operator  end_operator  begin_name is symbolic link  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dir  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name newfiles  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  begin_init  begin_expr  begin_name vpath  end_name  begin_operator  end_operator  begin_name  begin_name newfiles  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name file  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name file  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dir  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name newfiles  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name is directory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name dirs excluded  end_name  begin_operator  end_operator  begin_name files excluded  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name add element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name no links  end_name  begin_operator  end_operator  begin_name add element  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name newfiles  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name io exception  end_name  end_type  begin_name ioe  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name msg  end_name  begin_init  begin_expr  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_comment will be caught and redirected to ant s logging system  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name err  end_name  begin_operator  end_operator  begin_name println  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name msg  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name no links  end_name  begin_operator  end_operator  begin_name add element  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name newfiles  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  end_try  end_block  end_for  begin_expr_stmt  begin_expr  begin_name newfiles  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name string  end_name  begin_index  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name no links  end_name  begin_operator  end_operator  begin_name to array  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name string  end_name  begin_index  begin_expr  begin_call  begin_name  begin_name no links  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name  begin_name newfiles  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  begin_init  begin_expr  begin_name vpath  end_name  begin_operator  end_operator  begin_name  begin_name newfiles  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name file  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name file  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dir  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name newfiles  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name is directory  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name is included  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name account for included dir  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name file  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name fast  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name everything included  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name dirs not included  end_name  begin_operator  end_operator  begin_name add element  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name fast  end_name  begin_operator  end_operator  begin_call  begin_name could hold included  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name scandir  end_name  begin_argument_list  begin_argument  begin_expr  begin_name file  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name separator  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name fast  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_else  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name fast  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name scandir  end_name  begin_argument_list  begin_argument  begin_expr  begin_name file  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name separator  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name fast  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name is file  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name is included  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name account for included file  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name file  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name everything included  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name files not included  end_name  begin_operator  end_operator  begin_name add element  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  end_if  end_else  end_if  end_block  end_for  end_block 
begin_comment handles the start of an element this base implementation does nothing param uri the namespace uri for the tag param tag the name of the element being started will not be code null code param qname the qualified name of the element param attrs attributes of the element being started will not be code null code param context the context that this element is in exception sax parse exception if this method is not overridden or in case of error in an overridden version end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name on start element  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name uri  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name tag  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name qname  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name attributes  end_name  end_type  begin_name attrs  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ant xml context  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name sax parse exception  end_name  end_expr  end_argument  end_throws  begin_block  end_block 
begin_comment initialisation routine called after handler creation with the element name and attributes the attributes which this handler can deal with are code default code code name code code id code and code basedir code param uri the namespace uri for this element param tag name of the element which caused this handler to be created should not be code null code ignored in this implementation param qname the qualified name for this element param attrs attributes of the element which caused this handler to be created must not be code null code param context the current context exception sax parse exception if an unexpected attribute is encountered or if the code default code attribute is missing end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name on start element  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name uri  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name tag  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name qname  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name attributes  end_name  end_type  begin_name attrs  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ant xml context  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name sax parse exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name base dir  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name name attribute set  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name project  end_name  end_type  begin_name project  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get project  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment set the location of the implicit target associated with the project tag  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get implicit target  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set location  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name location  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get locator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment xxx i really don t like this the xml processor is still too involved in the processing a better solution imo would be to create ue for project and target too and then process the tree and have project target deal with its attributes similar with description if we eventually switch to or add support for dom things will work smoothly ue can be avoided almost completely it could still be created on demand for backward compatibility  end_comment  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name attrs  end_name  begin_operator  end_operator  begin_name get length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name attr uri  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name attrs  end_name  begin_operator  end_operator  begin_name get uri  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name attr uri  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name attr uri  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name attr uri  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name uri  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_continue  end_continue  begin_comment ignore attributes from unknown uris  end_comment  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name key  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name attrs  end_name  begin_operator  end_operator  begin_name get local name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name value  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name attrs  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name key  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name value  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name is ignoring project tag  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name set default  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name key  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name value  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name set current project name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name name attribute set  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name is ignoring project tag  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name set name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name add reference  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name project  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name key  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name value  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment what s the difference between id and name  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name is ignoring project tag  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name add reference  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name project  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name key  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name is ignoring project tag  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name base dir  end_name  begin_operator  end_operator  begin_name value  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  begin_else  begin_block  begin_comment xxx ignore attributes in a different ns maybe store them  end_comment  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name sax parse exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name attrs  end_name  begin_operator  end_operator  begin_name get q name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get locator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_block  end_for  begin_comment xxx move to project so it is shared by all helpers  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name ant file prop  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get current project name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name dup  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name get property  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ant file prop  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name dup  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name name attribute set  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name dup file  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name file  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dup  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name is ignoring project tag  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name dup file  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get build file  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name log  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get current project name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_name dup  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get build file  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name msg warn  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get build file  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_name name attribute set  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name set user property  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get current project name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get build file  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to string  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name is ignoring project tag  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment no further processing  end_comment  begin_return  end_return  end_block  end_then  end_if  begin_comment set explicitly before starting  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name get property  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name set basedir  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name get property  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_comment default for base dir is the location of the build file  end_comment  begin_if  begin_condition  begin_expr  begin_name base dir  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name set basedir  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get build file parent  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get absolute path  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_comment check whether the user has specified an absolute path  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name file  end_name  begin_argument_list  begin_argument  begin_expr  begin_name base dir  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name is absolute  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name set basedir  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name base dir  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name set base dir  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name file utils  end_name  begin_operator  end_operator  begin_name resolve file  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get build file parent  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name base dir  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_else  end_if  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name add target  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get implicit target  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name set current target  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get implicit target  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment initialisation routine called after handler creation with the element name and attributes the attributes which this handler can deal with are code name code code depends code code if code code unless code code id code and code description code param uri the namespace uri for this element param tag name of the element which caused this handler to be created should not be code null code ignored in this implementation param qname the qualified name for this element param attrs attributes of the element which caused this handler to be created must not be code null code param context the current context exception sax parse exception if an unexpected attribute is encountered or if the code name code attribute is missing end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name on start element  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name uri  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name tag  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name qname  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name attributes  end_name  end_type  begin_name attrs  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ant xml context  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name sax parse exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name depends  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name project  end_name  end_type  begin_name project  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get project  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name target  end_name  end_type  begin_name target  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name target  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name target  end_name  begin_operator  end_operator  begin_name set project  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name project  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name target  end_name  begin_operator  end_operator  begin_name set location  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name location  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get locator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name add target  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name attrs  end_name  begin_operator  end_operator  begin_name get length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name attr uri  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name attrs  end_name  begin_operator  end_operator  begin_name get uri  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name attr uri  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name attr uri  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name attr uri  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name uri  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_continue  end_continue  begin_comment ignore attributes from unknown uris  end_comment  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name key  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name attrs  end_name  begin_operator  end_operator  begin_name get local name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name value  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name attrs  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name key  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name name  end_name  begin_operator  end_operator  begin_name value  end_name  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name build exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name key  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name depends  end_name  begin_operator  end_operator  begin_name value  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name key  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name target  end_name  begin_operator  end_operator  begin_name set if  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name key  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name target  end_name  begin_operator  end_operator  begin_name set unless  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name key  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name value  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get project  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add reference  end_name  begin_argument_list  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name key  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name target  end_name  begin_operator  end_operator  begin_name set description  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name sax parse exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name key  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get locator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_block  end_for  begin_if  begin_condition  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name sax parse exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get locator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_comment check if this target is in the current build file  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get current targets  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name build exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name name  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name target  end_name  begin_operator  end_operator  begin_name get location  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name hashtable  end_name  end_type  begin_name project targets  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name get targets  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name used target  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_comment if the name has not already been defined define it  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name project targets  end_name  begin_operator  end_operator  begin_name contains key  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name log  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name msg verbose  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name target  end_name  begin_operator  end_operator  begin_name set name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get current targets  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name put  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name add or replace target  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name used target  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name depends  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name target  end_name  begin_operator  end_operator  begin_name set depends  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name depends  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name is ignoring project tag  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get current project name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get current project name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name length  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment in an impored file and not completely  end_comment  begin_comment ignoring the project tag  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name new name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get current project name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_name name  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name target  end_name  end_type  begin_name new target  end_name  begin_init  begin_expr  begin_name used target  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name target  end_name  begin_argument_list  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_name target  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name new target  end_name  begin_operator  end_operator  begin_name set name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get current targets  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name put  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name new target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name add or replace target  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name new target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block 
begin_comment initialisation routine called after handler creation with the element name and attributes this configures the element with its attributes and sets it up with its parent container if any nested elements are then added later as the parser encounters them param uri the namespace uri for this element param tag name of the element which caused this handler to be created must not be code null code param qname the qualified name for this element param attrs attributes of the element which caused this handler to be created must not be code null code param context the current context exception sax parse exception in case of error not thrown in this implementation end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name on start element  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name uri  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name tag  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name qname  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name attributes  end_name  end_type  begin_name attrs  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ant xml context  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name sax parse exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name runtime configurable  end_name  end_type  begin_name parent wrapper  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name current wrapper  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name parent  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name parent wrapper  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name parent  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name parent wrapper  end_name  begin_operator  end_operator  begin_name get proxy  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment unknown element is used for tasks and data types with delayed eval  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name unknown element  end_name  end_type  begin_name task  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name unknown element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tag  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name task  end_name  begin_operator  end_operator  begin_name set project  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get project  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name task  end_name  begin_operator  end_operator  begin_name set namespace  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name uri  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name task  end_name  begin_operator  end_operator  begin_name set q name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name qname  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name task  end_name  begin_operator  end_operator  begin_name set task type  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name project helper  end_name  begin_operator  end_operator  begin_name gen component name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name task  end_name  begin_operator  end_operator  begin_name get namespace  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name tag  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name task  end_name  begin_operator  end_operator  begin_name set task name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name qname  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name location  end_name  end_type  begin_name location  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name location  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get locator  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get system id  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get locator  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get line number  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get locator  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get column number  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name task  end_name  begin_operator  end_operator  begin_name set location  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name location  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name task  end_name  begin_operator  end_operator  begin_name set owning target  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get current target  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name parent  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment nested element  end_comment  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name unknown element  end_name  begin_operator  end_operator  begin_name parent  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name add child  end_name  begin_argument_list  begin_argument  begin_expr  begin_name task  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_comment task included in a target including the default one  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get current target  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add task  end_name  begin_argument_list  begin_argument  begin_expr  begin_name task  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name configure id  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name task  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name attrs  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment container add task task  end_comment  begin_comment this is a nop in ue task init  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name runtime configurable  end_name  end_type  begin_name wrapper  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name runtime configurable  end_name  begin_argument_list  begin_argument  begin_expr  begin_name task  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name task  end_name  begin_operator  end_operator  begin_name get task name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name attrs  end_name  begin_operator  end_operator  begin_name get length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name attrs  end_name  begin_operator  end_operator  begin_name get local name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name attr uri  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name attrs  end_name  begin_operator  end_operator  begin_name get uri  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name attr uri  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name attr uri  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name attr uri  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name uri  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name name  end_name  begin_operator  end_operator  begin_name attr uri  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name attrs  end_name  begin_operator  end_operator  begin_name get q name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name value  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name attrs  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment pr hack for ant type value  end_comment  begin_comment an ant type is a component name which can  end_comment  begin_comment be namespaced need to extract the name  end_comment  begin_comment and convert from qualified name to uri name  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name ant type  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name ant core uri  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name attr uri  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name ant type  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name attrs  end_name  begin_operator  end_operator  begin_name get local name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name name  end_name  begin_operator  end_operator  begin_name ant type  end_name  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name index  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name index of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name index  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name prefix  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name mapped uri  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get prefix mapping  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name prefix  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name mapped uri  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name build exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name prefix  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name value  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name project helper  end_name  begin_operator  end_operator  begin_name gen component name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name mapped uri  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name index  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name wrapper  end_name  begin_operator  end_operator  begin_name set attribute  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_if  begin_condition  begin_expr  begin_name parent wrapper  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name parent wrapper  end_name  begin_operator  end_operator  begin_name add child  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name wrapper  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name push wrapper  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name wrapper  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment temporary until we figure a better api end_commentbegin_comment experimental will change end_commentbegin_comment public hashtable get processed files end_commentbegin_comment return processed files end_commentbegin_comment  end_commentbegin_comment experimental will change import stack used to keep track of imported files error reporting should display the import path return the stack of import source objects end_comment begin_type  begin_specifier  end_specifier  begin_name vector  end_name  end_type  begin_name get import stack  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  begin_name import stack  end_name  end_expr  end_return  end_block 
begin_comment get a property if all hooks return null the default tables will be used param ns namespace of the sought property param name name of the sought property param user true if this is a user property return the property if returned by a hook or null if none end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get property hook  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name ns  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name user  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name get next  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o  end_name  begin_init  begin_expr  begin_call  begin_name get next  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get property hook  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ns  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name user  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name o  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name o  end_name  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  begin_comment experimental testing will be removed  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name starts with  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name length  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name v  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name get reference  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_operator  end_operator  begin_name v  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name v  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_return  begin_expr  end_expr  end_return  end_block 
begin_comment print the definition for a given element end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name print element decl  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name print writer  end_name  end_type  begin_name out  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name project  end_name  end_type  begin_name p  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name class  end_name  end_type  begin_name element  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name visited  end_name  begin_operator  end_operator  begin_name contains key  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name visited  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name introspection helper  end_name  end_type  begin_name ih  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_name ih  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name introspection helper  end_name  begin_operator  end_operator  begin_name get helper  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name p  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name throwable  end_name  end_type  begin_name t  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment xxx failed to load the class properly should we print a warning here  end_comment  begin_return  end_return  end_block  end_catch  end_try  begin_decl_stmt  begin_decl  begin_type  begin_name string buffer  end_name  end_type  begin_name sb  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name string buffer  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name append  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name apache  end_name  begin_operator  end_operator  begin_name tools  end_name  begin_operator  end_operator  begin_name ant  end_name  begin_operator  end_operator  begin_name types  end_name  begin_operator  end_operator  begin_name reference  end_name  begin_operator  end_operator  begin_name  begin_name class  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name append  end_name  begin_argument_list  begin_argument  begin_expr  begin_name line sep  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name append  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name line sep  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name append  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name line sep  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name append  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name append  end_name  begin_argument_list  begin_argument  begin_expr  begin_name line sep  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name out  end_name  begin_operator  end_operator  begin_name println  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name sb  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name vector  end_name  end_type  begin_name v  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name vector  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name ih  end_name  begin_operator  end_operator  begin_name supports characters  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name v  end_name  begin_operator  end_operator  begin_name add element  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name task container  end_name  begin_operator  end_operator  begin_name  begin_name class  end_name  begin_operator  end_operator  begin_name is assignable from  end_name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name v  end_name  begin_operator  end_operator  begin_name add element  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tasks  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name enumeration  end_name  end_type  begin_name e  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ih  end_name  begin_operator  end_operator  begin_name get nested elements  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name has more elements  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name v  end_name  begin_operator  end_operator  begin_name add element  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name next element  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_while  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name v  end_name  begin_operator  end_operator  begin_name is empty  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name count  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name v  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name count  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_if  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name v  end_name  begin_operator  end_operator  begin_name element at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name count  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name v  end_name  begin_operator  end_operator  begin_name element at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name out  end_name  begin_operator  end_operator  begin_name println  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name sb  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name sb  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name string buffer  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name line sep  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name append  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name e  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ih  end_name  begin_operator  end_operator  begin_name get attributes  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name has more elements  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name attr name  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name string  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name next element  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name attr name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_continue  end_continue  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name line sep  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name append  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name append  end_name  begin_argument_list  begin_argument  begin_expr  begin_name attr name  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name append  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name class  end_name  end_type  begin_name type  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ih  end_name  begin_operator  end_operator  begin_name get attribute type  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name attr name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name java  end_name  begin_operator  end_operator  begin_name lang  end_name  begin_operator  end_operator  begin_name boolean  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name java  end_name  begin_operator  end_operator  begin_name lang  end_name  begin_operator  end_operator  begin_name boolean  end_name  begin_operator  end_operator  begin_name type  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name boolean  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name append  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name reference  end_name  begin_operator  end_operator  begin_name  begin_name class  end_name  begin_operator  end_operator  begin_name is assignable from  end_name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name type  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name enumerated attribute  end_name  begin_operator  end_operator  begin_name  begin_name class  end_name  begin_operator  end_operator  begin_name is assignable from  end_name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name type  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_try  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name enumerated attribute  end_name  end_type  begin_name ea  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name enumerated attribute  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name new instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  begin_index  end_index  end_type  begin_name values  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ea  end_name  begin_operator  end_operator  begin_name get values  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name values  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name values  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name are nmtokens  end_name  begin_argument_list  begin_argument  begin_expr  begin_name values  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name  begin_name values  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_if  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name values  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name instantiation exception  end_name  end_type  begin_name ie  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name illegal access exception  end_name  end_type  begin_name ie  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  end_try  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name get superclass  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name get superclass  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_try  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  begin_index  end_index  end_type  begin_name values  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name object  end_name  begin_index  end_index  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name get method  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name class  end_name  begin_index  end_index  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name invoke  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name object  end_name  begin_index  end_index  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name  begin_name values  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name  begin_name values  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_if  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name get method  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name class  end_name  begin_index  end_index  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name invoke  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name values  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name object  end_name  begin_index  end_index  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name exception  end_name  end_type  begin_name x  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  end_try  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_while  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name append  end_name  begin_argument_list  begin_argument  begin_expr  begin_name line sep  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name out  end_name  begin_operator  end_operator  begin_name println  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name sb  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name count  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name v  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name count  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name nested name  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name string  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name v  end_name  begin_operator  end_operator  begin_name element at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name nested name  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name tasks  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name nested name  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name types  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name nested name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name print element decl  end_name  begin_argument_list  begin_argument  begin_expr  begin_name out  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name p  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name nested name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name ih  end_name  begin_operator  end_operator  begin_name get element type  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name nested name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  end_block 
begin_comment does this string match the xml nmtoken production param s the string to test return true if the string matches the xml nmtoken end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is nmtoken  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name s  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name length  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name length  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name char  end_name  end_type  begin_name c  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name char at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment xxx we are committing combining char and extender here  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name character  end_name  begin_operator  end_operator  begin_name is letter or digit  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_name c  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name c  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name c  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name c  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  end_block  end_for  begin_return  begin_expr  end_expr  end_return  end_block 
begin_comment does this string match the xml nmtoken production param s the string to test return true if the string matches the xml nmtoken end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is nmtoken  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name s  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name dtd printer  end_name  begin_operator  end_operator  begin_name is nmtoken  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment do the classloader manipulation end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name execute  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_try  begin_block  begin_comment gump friendly don t mess with the core loader if only classpath  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get project  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get property  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_name name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name system loader ref  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name log  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name msg warn  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name loader name  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name system loader ref  end_name  begin_operator  end_operator  begin_name name  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name obj  end_name  begin_init  begin_expr  begin_call  begin_name get project  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get reference  end_name  begin_argument_list  begin_argument  begin_expr  begin_name loader name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name reset  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment are any other references held can we close the loader  end_comment  begin_comment so it removes the locks on jars  end_comment  begin_expr_stmt  begin_expr  begin_name obj  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_comment a new one will be created  end_comment  end_block  end_then  end_if  begin_comment xxx maybe use reflection to add path element other patterns  end_comment  begin_if  begin_condition  begin_expr  begin_name obj  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name obj  end_name  begin_operator  end_operator  begin_name ant class loader  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name log  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name msg err  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name ant class loader  end_name  end_type  begin_name acl  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name ant class loader  end_name  begin_operator  end_operator  begin_name obj  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name acl  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment construct a new class loader  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name parent  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name parent name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name parent  end_name  begin_operator  end_operator  begin_call  begin_name get project  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get reference  end_name  begin_argument_list  begin_argument  begin_expr  begin_name parent name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name parent  end_name  begin_operator  end_operator  begin_name class loader  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name parent  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  begin_comment todo allow user to request the system or no parent  end_comment  begin_if  begin_condition  begin_expr  begin_name parent  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name parent  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name get class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get class loader  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment the core loader must be reverse  end_comment  begin_comment reverse true  end_comment  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name get project  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name log  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name parent  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name parent first  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name msg debug  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment the param is parent first  end_comment  begin_expr_stmt  begin_expr  begin_name acl  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name ant class loader  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name class loader  end_name  begin_operator  end_operator  begin_name parent  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get project  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name classpath  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name parent first  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get project  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add reference  end_name  begin_argument_list  begin_argument  begin_expr  begin_name loader name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name acl  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment this allows the core loader to load optional tasks  end_comment  begin_comment without delegating  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name acl  end_name  begin_operator  end_operator  begin_name add loader package root  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get project  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set core loader  end_name  begin_argument_list  begin_argument  begin_expr  begin_name acl  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name classpath  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  begin_index  end_index  end_type  begin_name list  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name classpath  end_name  begin_operator  end_operator  begin_name list  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name  begin_name list  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name f  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name file  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name list  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name f  end_name  begin_operator  end_operator  begin_name exists  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name acl  end_name  begin_operator  end_operator  begin_name add path element  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name f  end_name  begin_operator  end_operator  begin_name get absolute path  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name log  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name acl  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name f  end_name  begin_operator  end_operator  begin_name get absolute path  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name msg debug  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  end_block  end_then  end_if  begin_comment xxx add exceptions  end_comment  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name exception  end_name  end_type  begin_name ex  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ex  end_name  begin_operator  end_operator  begin_name print stack trace  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  end_try  end_block 
begin_comment performs a compile using the jikes compiler from ibm mostly of this code is identical to do classic compile however it does not support all options like extdirs deprecation and so on because there is no option in jikes and i don t understand what they should do it has been successfully tested with jikes gt 1 10 return true if the compilation succeeded throws build exception on error end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name execute  end_name  begin_parameter_list  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name build exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name attributes  end_name  begin_operator  end_operator  begin_name log  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name msg verbose  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name commandline  end_name  end_type  begin_name cmd  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name commandline  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment for sourcepath use the sourcepath value if present  end_comment  begin_comment otherwise default to the srcdir value  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name path  end_name  end_type  begin_name sourcepath  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name compile sourcepath  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name sourcepath  end_name  begin_operator  end_operator  begin_name compile sourcepath  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name sourcepath  end_name  begin_operator  end_operator  begin_name src  end_name  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_comment if the buildfile specifies sourcepath then don t  end_comment  begin_comment output any sourcepath  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name sourcepath  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name create argument  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set value  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name create argument  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set path  end_name  begin_argument_list  begin_argument  begin_expr  begin_name sourcepath  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name path  end_name  end_type  begin_name classpath  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name path  end_name  begin_argument_list  begin_argument  begin_expr  begin_name project  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name bootclasspath  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name bootclasspath  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment no bootclasspath therefore get one from the java runtime  end_comment  begin_expr_stmt  begin_expr  begin_name include java runtime  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_comment there is a bootclasspath stated by default the  end_comment  begin_comment include java runtime is false if the user has stated a  end_comment  begin_comment bootclasspath and said to include the java runtime it s on  end_comment  begin_comment their head  end_comment  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name classpath  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get compile classpath  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment if the user has set jikespath we should add the contents as well  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name jikes path  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name get property  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name jikes path  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name classpath  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name path  end_name  begin_argument_list  begin_argument  begin_expr  begin_name project  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name jikes path  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name extdirs  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name extdirs  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name create argument  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set value  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name create argument  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set path  end_name  begin_argument_list  begin_argument  begin_expr  begin_name extdirs  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name exec  end_name  begin_init  begin_expr  begin_call  begin_name get javac  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get executable  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name set executable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name exec  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name exec  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name deprecation  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name create argument  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set value  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name dest dir  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name create argument  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set value  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name create argument  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set file  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dest dir  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name create argument  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set value  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name create argument  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set path  end_name  begin_argument_list  begin_argument  begin_expr  begin_name classpath  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name encoding  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name create argument  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set value  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name create argument  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name encoding  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name debug  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name debug level  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name attributes  end_name  begin_operator  end_operator  begin_name get debug level  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name debug level  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name create argument  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set value  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name debug level  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name create argument  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set value  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name create argument  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set value  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_if  begin_condition  begin_expr  begin_name optimize  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name create argument  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set value  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name verbose  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name create argument  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set value  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name depend  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name create argument  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set value  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name target  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name create argument  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set value  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name create argument  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment xxx perhaps we shouldn t use properties for these three options emacs mode warnings and pedantic but include it in the javac directive  end_comment  begin_comment jikes has the nice feature to print error messages in a form readable by emacs so that emacs can directly set the cursor to the place where the error occurred  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name emacs property  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name get property  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name emacs property  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name to boolean  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name emacs property  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name create argument  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set value  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment jikes issues more warnings that javac for example when you have files in your classpath that don t exist as this is often the case these warning can be pretty annoying  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name warnings property  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name get property  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name warnings property  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name attributes  end_name  begin_operator  end_operator  begin_name log  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name msg warn  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name attributes  end_name  begin_operator  end_operator  begin_name log  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name msg warn  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name to boolean  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name warnings property  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name create argument  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set value  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name attributes  end_name  begin_operator  end_operator  begin_name get nowarn  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name create argument  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set value  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment jikes can issue pedantic warnings  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name pedantic property  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name get property  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name pedantic property  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name to boolean  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name pedantic property  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name create argument  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set value  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment jikes supports something it calls full dependency checking see the jikes documentation for differences between depend and f  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name full depend property  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name get property  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name full depend property  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name to boolean  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name full depend property  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name create argument  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set value  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name attributes  end_name  begin_operator  end_operator  begin_name get source  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name create argument  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set value  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name source  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name attributes  end_name  begin_operator  end_operator  begin_name get source  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name source  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name source  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment support for source 1 1 and source 1 2 has been  end_comment  begin_comment added with jdk 1 4 2 jikes doesn t like it  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name attributes  end_name  begin_operator  end_operator  begin_name log  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name source  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name create argument  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set value  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name create argument  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name source  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name add current compiler args  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cmd  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name first file name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name path  end_name  end_type  begin_name boot  end_name  begin_init  begin_expr  begin_call  begin_name get boot class path  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name boot  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name create argument  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set value  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name create argument  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set path  end_name  begin_argument_list  begin_argument  begin_expr  begin_name boot  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name log and add files to compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cmd  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_call  begin_name execute external compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name get commandline  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name first file name  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_return  end_block 
begin_comment set the number of milliseconds leeway to give before deciding a target is out of date todo this is not yet used param granularity the granularity used to decide if a target is out of date end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set granularity  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name long  end_name  end_type  begin_name granularity  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name granularity  end_name  end_name  begin_operator  end_operator  begin_name granularity  end_name  end_expr  end_expr_stmt  end_block 
begin_comment execute the java class against the specified ant project param project the project to use throws build exception on error end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name execute  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name project  end_name  end_type  begin_name project  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name build exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name classname  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name java command  end_name  begin_operator  end_operator  begin_name get executable  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name ant class loader  end_name  end_type  begin_name loader  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_if  begin_condition  begin_expr  begin_name sys properties  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sys properties  end_name  begin_operator  end_operator  begin_name set system  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name class  end_name  end_type  begin_name target  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_if  begin_condition  begin_expr  begin_name classpath  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name target  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name class  end_name  begin_operator  end_operator  begin_name for name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name classname  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name loader  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name create class loader  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name classpath  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name loader  end_name  begin_operator  end_operator  begin_name set parent  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name get core loader  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name loader  end_name  begin_operator  end_operator  begin_name set parent first  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name loader  end_name  begin_operator  end_operator  begin_name add java libraries  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name loader  end_name  begin_operator  end_operator  begin_name set isolated  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name loader  end_name  begin_operator  end_operator  begin_name set thread context loader  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name loader  end_name  begin_operator  end_operator  begin_name force load class  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name classname  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name target  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name class  end_name  begin_operator  end_operator  begin_name for name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name classname  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name loader  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name class not found exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name build exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name classname  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  begin_expr_stmt  begin_expr  begin_name main  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name target  end_name  begin_operator  end_operator  begin_name get method  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name class  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_name  begin_name string  end_name  begin_index  end_index  end_name  begin_operator  end_operator  end_expr  end_block  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name main  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name build exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name classname  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name main  end_name  begin_operator  end_operator  begin_name get modifiers  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name  begin_name modifier  end_name  begin_operator  end_operator  begin_name static  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name build exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name classname  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name timeout  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name run  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name thread  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name thread  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name task  end_name  end_type  begin_name current thread task  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name get thread task  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name thread  end_name  begin_operator  end_operator  begin_name current thread  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment xxx is the following really necessary it is in the same thread group  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name register thread task  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name thread  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name current thread task  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment if we run into a timeout the run away thread shall not  end_comment  begin_comment make the vm run forever if no timeout occurs ant s  end_comment  begin_comment main thread will still be there to let the new thread  end_comment  begin_comment finish  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name thread  end_name  begin_operator  end_operator  begin_name set daemon  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name watchdog  end_name  end_type  begin_name w  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name watchdog  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name timeout  end_name  begin_operator  end_operator  begin_name long value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name w  end_name  begin_operator  end_operator  begin_name add timeout observer  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_synchronized  begin_expr  begin_name this  end_name  end_expr  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name thread  end_name  begin_operator  end_operator  begin_name start  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name w  end_name  begin_operator  end_operator  begin_name start  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name wait  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name interrupted exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment ignore  end_comment  end_block  end_catch  end_try  begin_if  begin_condition  begin_expr  begin_name timed out  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name log  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name msg warn  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name thread  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name w  end_name  begin_operator  end_operator  begin_name stop  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_synchronized  end_block  end_else  end_if  begin_if  begin_condition  begin_expr  begin_name caught  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_name caught  end_name  end_expr  end_throw  end_block  end_then  end_if  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name build exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_name e  end_name  end_expr  end_throw  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name security exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_name e  end_name  end_expr  end_throw  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread death  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment xxx could perhaps also call thread stop not sure if anyone cares  end_comment  begin_throw  begin_expr  begin_name e  end_name  end_expr  end_throw  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name throwable  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name build exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_finally  begin_block  begin_if  begin_condition  begin_expr  begin_name loader  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name loader  end_name  begin_operator  end_operator  begin_name reset thread context loader  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name loader  end_name  begin_operator  end_operator  begin_name cleanup  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name loader  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name sys properties  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sys properties  end_name  begin_operator  end_operator  begin_name restore system  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_finally  end_try  end_block 
 begin_type  begin_specifier  end_specifier  begin_name manifest  end_name  end_type  begin_name get manifest  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name manifest file  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name manifest  end_name  end_type  begin_name new manifest  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name file input stream  end_name  end_type  begin_name fis  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name input stream reader  end_name  end_type  begin_name isr  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_name fis  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name file input stream  end_name  begin_argument_list  begin_argument  begin_expr  begin_name manifest file  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name manifest encoding  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name isr  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name input stream reader  end_name  begin_argument_list  begin_argument  begin_expr  begin_name fis  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name isr  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name input stream reader  end_name  begin_argument_list  begin_argument  begin_expr  begin_name fis  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name manifest encoding  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_name new manifest  end_name  begin_operator  end_operator  begin_call  begin_name get manifest  end_name  begin_argument_list  begin_argument  begin_expr  begin_name isr  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name unsupported encoding exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name build exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name get message  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name io exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name build exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name manifest file  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name get message  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_finally  begin_block  begin_if  begin_condition  begin_expr  begin_name isr  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name isr  end_name  begin_operator  end_operator  begin_name close  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name io exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment do nothing  end_comment  end_block  end_catch  end_try  end_block  end_then  end_if  end_block  end_finally  end_try  begin_return  begin_expr  begin_name new manifest  end_name  end_expr  end_return  end_block 
begin_comment return null if jar file doesn t contain a manifest the manifest otherwise since ant 1 5 2 end_comment begin_type  begin_specifier  end_specifier  begin_name manifest  end_name  end_type  begin_name get manifest from jar  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name jar file  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name io exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name zip file  end_name  end_type  begin_name zf  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_name zf  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name zip file  end_name  begin_argument_list  begin_argument  begin_expr  begin_name jar file  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment must not use get entry as well behaving applications  end_comment  begin_comment must accept the manifest in any capitalization  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name enumeration  end_name  end_type  begin_name e  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name zf  end_name  begin_operator  end_operator  begin_name entries  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name has more elements  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name zip entry  end_name  end_type  begin_name ze  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name zip entry  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name next element  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name ze  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals ignore case  end_name  begin_argument_list  begin_argument  begin_expr  begin_name manifest name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name input stream reader  end_name  end_type  begin_name isr  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name input stream reader  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name zf  end_name  begin_operator  end_operator  begin_name get input stream  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ze  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_call  begin_name get manifest  end_name  begin_argument_list  begin_argument  begin_expr  begin_name isr  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_while  begin_return  begin_expr  end_expr  end_return  end_block  begin_finally  begin_block  begin_if  begin_condition  begin_expr  begin_name zf  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name zf  end_name  begin_operator  end_operator  begin_name close  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name io exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment xxx log an error throw an exception  end_comment  end_block  end_catch  end_try  end_block  end_then  end_if  end_block  end_finally  end_try  end_block 
begin_comment xxx log an error throw an exception end_comment begin_type  begin_specifier  end_specifier  begin_name manifest  end_name  end_type  begin_name get manifest  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name reader  end_name  end_type  begin_name r  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name manifest  end_name  end_type  begin_name new manifest  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_name new manifest  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name manifest  end_name  begin_argument_list  begin_argument  begin_expr  begin_name r  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name manifest exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name log  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name get message  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name msg err  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name build exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name manifest file  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get location  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name io exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name build exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name get message  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  begin_return  begin_expr  begin_name new manifest  end_name  end_expr  end_return  end_block 
begin_comment write spi information to jar end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name write services  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name zip output stream  end_name  end_type  begin_name z out  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name io exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name service iterator  end_name  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name service  end_name  end_type  begin_name service  end_name  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name service iterator  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name service list  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name service iterator  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_expr_stmt  begin_expr  begin_name service  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name service  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name service iterator  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment stolen from write manifest  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name zip file  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name service  end_name  begin_operator  end_operator  begin_name get as stream  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name z out  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name service  end_name  begin_operator  end_operator  begin_name get type  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name current time millis  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name zip file set  end_name  begin_operator  end_operator  begin_name default file mode  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_while  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name parse emacs output  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name buffered reader  end_name  end_type  begin_name reader  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name io exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_comment this may change if we add advanced parsing capabilities  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name parse standard output  end_name  begin_argument_list  begin_argument  begin_expr  begin_name reader  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment verify the produced jar file by invoking the borland verify tool param source jar java io file representing the produced jar file end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name verify borland jar v 4  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name source jar  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name apache  end_name  begin_operator  end_operator  begin_name tools  end_name  begin_operator  end_operator  begin_name ant  end_name  begin_operator  end_operator  begin_name taskdefs  end_name  begin_operator  end_operator  begin_name java  end_name  end_name  end_type  begin_name java task  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name log  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name source jar  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name msg info  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_try  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name args  end_name  begin_init  begin_expr  begin_name verify args  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name args  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name source jar  end_name  begin_operator  end_operator  begin_name get path  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name java task  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name java  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get task  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name java task  end_name  begin_operator  end_operator  begin_name set task name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name java task  end_name  begin_operator  end_operator  begin_name set classname  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name verify  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name commandline  end_name  begin_operator  end_operator  begin_name argument  end_name  end_name  end_type  begin_name arguments  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name java task  end_name  begin_operator  end_operator  begin_name create arg  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name arguments  end_name  begin_operator  end_operator  begin_name set line  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name path  end_name  end_type  begin_name classpath  end_name  begin_init  begin_expr  begin_call  begin_name get combined classpath  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name classpath  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name java task  end_name  begin_operator  end_operator  begin_name set classpath  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name classpath  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name java task  end_name  begin_operator  end_operator  begin_name set fork  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name log  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name verify  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name source jar  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name msg verbose  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name java task  end_name  begin_operator  end_operator  begin_name execute  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment to do delete the file if it is not a valid file  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name msg  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name verify  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name build exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name msg  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  end_block 
begin_comment generate the client jar corresponding to the jar file passed as parameter the method uses the borland generate client task param source jar java io file representing the produced jar file end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name generate client  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name source jar  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get task  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get project  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add task definition  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name apache  end_name  begin_operator  end_operator  begin_name tools  end_name  begin_operator  end_operator  begin_name ant  end_name  begin_operator  end_operator  begin_name taskdefs  end_name  begin_operator  end_operator  begin_name optional  end_name  begin_operator  end_operator  begin_name ejb  end_name  begin_operator  end_operator  begin_name borland generate client  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name apache  end_name  begin_operator  end_operator  begin_name tools  end_name  begin_operator  end_operator  begin_name ant  end_name  begin_operator  end_operator  begin_name taskdefs  end_name  begin_operator  end_operator  begin_name optional  end_name  begin_operator  end_operator  begin_name ejb  end_name  begin_operator  end_operator  begin_name borland generate client  end_name  end_name  end_type  begin_name gentask  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name log  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name source jar  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name msg info  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_try  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name project  end_name  end_type  begin_name project  end_name  begin_init  begin_expr  begin_call  begin_name get task  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get project  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name gentask  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name borland generate client  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name create task  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name gentask  end_name  begin_operator  end_operator  begin_name set ejbjar  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name source jar  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name gentask  end_name  begin_operator  end_operator  begin_name set debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name java 2 iiopdebug  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name path  end_name  end_type  begin_name classpath  end_name  begin_init  begin_expr  begin_call  begin_name get combined classpath  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name classpath  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name gentask  end_name  begin_operator  end_operator  begin_name set classpath  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name classpath  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name gentask  end_name  begin_operator  end_operator  begin_name set version  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name version  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name gentask  end_name  begin_operator  end_operator  begin_name set task name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name gentask  end_name  begin_operator  end_operator  begin_name execute  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment to do delete the file if it is not a valid file  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name msg  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name verify  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name build exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name msg  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  end_block 
begin_comment this method checks the timestamp on each file listed in the code ejb files code and compares them to the timestamp on the code jar file code if the code jar file code s timestamp is more recent than each ejb file code true code is returned otherwise code false code is returned todo find a way to check the manifest file that is found by naming convention param ejb files hashtable of ejb classes and other files that will be added to the completed jar file param jar file jar file which will contain all of the ejb classes and other files return boolean indicating whether or not the code jar file code is up to date end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name need to rebuild  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name hashtable  end_name  end_type  begin_name ejb files  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name jar file  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name jar file  end_name  begin_operator  end_operator  begin_name exists  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name long  end_name  end_type  begin_name last build  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name jar file  end_name  begin_operator  end_operator  begin_name last modified  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name file iter  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ejb files  end_name  begin_operator  end_operator  begin_name values  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name iterator  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment loop through the files seeing if any has been touched  end_comment  begin_comment more recently than the destination jar  end_comment  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name file iter  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name current file  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name file  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name file iter  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name last build  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name current file  end_name  begin_operator  end_operator  begin_name last modified  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name log  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name current file  end_name  begin_operator  end_operator  begin_name get path  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name msg verbose  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  end_block  end_while  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_return  begin_expr  end_expr  end_return  end_block 
begin_comment method used to encapsulate the writing of the jar file iterates over the filenames java io files in the hashtable stored on the instance variable ejb files param base name the base name to use param jarfile the jar file to write to param files the files to write to the jar param public id the id to use throws build exception if there is a problem end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name write jar  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name base name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name jarfile  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name hashtable  end_name  end_type  begin_name files  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name public id  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name build exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name jar output stream  end_name  end_type  begin_name jar stream  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_comment clean the addedfiles set  end_comment  begin_if  begin_condition  begin_expr  begin_name addedfiles  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name addedfiles  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name hash set  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name addedfiles  end_name  begin_operator  end_operator  begin_name clear  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_comment if the jarfile already exists then whack it and recreate it should probably think of a more elegant way to handle this so that in case of errors we don t leave people worse off than when we started  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name jarfile  end_name  begin_operator  end_operator  begin_name exists  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name jarfile  end_name  begin_operator  end_operator  begin_name delete  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name jarfile  end_name  begin_operator  end_operator  begin_name get parent file  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name mkdirs  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name jarfile  end_name  begin_operator  end_operator  begin_name create new file  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name input stream  end_name  end_type  begin_name in  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name manifest  end_name  end_type  begin_name manifest  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name manifest file  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name file  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name files  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name manifest  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name manifest file  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name manifest file  end_name  begin_operator  end_operator  begin_name exists  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name in  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name file input stream  end_name  begin_argument_list  begin_argument  begin_expr  begin_name manifest file  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name default manifest  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name in  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name get class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get resource as stream  end_name  begin_argument_list  begin_argument  begin_expr  begin_name default manifest  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name in  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name build exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name default manifest  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_name manifest  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name manifest  end_name  begin_argument_list  begin_argument  begin_expr  begin_name in  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name io exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name build exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get location  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_finally  begin_block  begin_if  begin_condition  begin_expr  begin_name in  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name in  end_name  begin_operator  end_operator  begin_name close  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_finally  end_try  begin_comment create the streams necessary to write the jarfile  end_comment  begin_expr_stmt  begin_expr  begin_name jar stream  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name jar output stream  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name file output stream  end_name  begin_argument_list  begin_argument  begin_expr  begin_name jarfile  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name manifest  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name jar stream  end_name  begin_operator  end_operator  begin_name set method  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name jar output stream  end_name  begin_operator  end_operator  begin_name deflated  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment loop through all the class files found and add them to the jar  end_comment  begin_for  begin_init  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name entry iterator  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name files  end_name  begin_operator  end_operator  begin_name key set  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name iterator  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_call  begin_name  begin_name entry iterator  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_incr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name entry name  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name string  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name entry iterator  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name entry name  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name manifest  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_continue  end_continue  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name entry file  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name file  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name files  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name entry name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name log  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name entry name  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name msg verbose  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add file to jar  end_name  begin_argument_list  begin_argument  begin_expr  begin_name jar stream  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name entry file  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name entry name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment see if there are any inner classes for this class and add them in if there are  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name inner class filename filter  end_name  end_type  begin_name flt  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name inner class filename filter  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name entry file  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name entry dir  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name entry file  end_name  begin_operator  end_operator  begin_name get parent file  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  begin_index  end_index  end_type  begin_name innerfiles  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name entry dir  end_name  begin_operator  end_operator  begin_name list  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name flt  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name innerfiles  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  begin_operator  end_operator  begin_name n  end_name  begin_init  begin_expr  begin_name  begin_name innerfiles  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name n  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_comment get and clean up innerclass name  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name entry index  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name entry name  end_name  begin_operator  end_operator  begin_name last index of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name entry file  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name entry index  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name entry name  end_name  begin_operator  end_operator  begin_name  begin_name innerfiles  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name entry name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name entry name  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name entry index  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name separator char  end_name  end_name  begin_operator  end_operator  begin_name  begin_name innerfiles  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_comment link the file  end_comment  begin_expr_stmt  begin_expr  begin_name entry file  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name file  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name config  end_name  begin_operator  end_operator  begin_name src dir  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name entry name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name log  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name entry name  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name msg verbose  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add file to jar  end_name  begin_argument_list  begin_argument  begin_expr  begin_name jar stream  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name entry file  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name entry name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  end_block  end_then  end_if  end_block  end_for  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name io exception  end_name  end_type  begin_name ioe  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name msg  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name jarfile  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name ioe  end_name  begin_operator  end_operator  begin_name get message  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name build exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name msg  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name ioe  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_finally  begin_block  begin_if  begin_condition  begin_expr  begin_name jar stream  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name jar stream  end_name  begin_operator  end_operator  begin_name close  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name io exception  end_name  end_type  begin_name close exception  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment ignore  end_comment  end_block  end_catch  end_try  end_block  end_then  end_if  end_block  end_finally  end_try  end_block 
begin_comment execute the task by forking a new jvm the command will block until it finishes to know if the process was destroyed or not use the tt killed process tt method of the watchdog class param commandline the commandline for forked jvm param watchdog the watchdog in charge of cancelling the test if it exceeds a certain amount of time can be tt null tt return the result of running the jdepend throws build exception in case of error end_commentbegin_comment jl comment extracted from j unit task and slightly modified end_comment begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name execute as forked  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name commandline java  end_name  end_type  begin_name commandline  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name execute watchdog  end_name  end_type  begin_name watchdog  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name build exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_expr_stmt  begin_expr  begin_name runtime classes  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name path  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get project  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add classpath entry  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment if not set auto create the class path from the project  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name create classpath  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment not sure whether this test is needed but cost nothing to put  end_comment  begin_comment hope it will be reviewed by anybody competent  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name get classpath  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to string  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name length  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name create jvmarg  end_name  begin_argument_list  begin_argument  begin_expr  begin_name commandline  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set value  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name create jvmarg  end_name  begin_argument_list  begin_argument  begin_expr  begin_name commandline  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set value  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get classpath  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to string  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name include runtime  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name vector  end_name  end_type  begin_name v  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name execute  end_name  begin_operator  end_operator  begin_name get proc environment  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name enumeration  end_name  end_type  begin_name e  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name v  end_name  begin_operator  end_operator  begin_name elements  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name has more elements  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name s  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name string  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name next element  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name starts with  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name commandline  end_name  begin_operator  end_operator  begin_name create classpath  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get project  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create path  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name append  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name path  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get project  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name length  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_while  begin_expr_stmt  begin_expr  begin_call  begin_name log  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name runtime classes  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name msg verbose  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name commandline  end_name  begin_operator  end_operator  begin_name create classpath  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get project  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create path  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name append  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime classes  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name get output file  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment having a space between the file and its path causes commandline  end_comment  begin_comment to add quotes around the argument thus making j depend not taking  end_comment  begin_comment it into account thus we split it in two  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name commandline  end_name  begin_operator  end_operator  begin_name create argument  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set value  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name commandline  end_name  begin_operator  end_operator  begin_name create argument  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set value  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name output file  end_name  begin_operator  end_operator  begin_name get path  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment we have to find a cleaner way to put this output  end_comment  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name get sourcespath  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment this is deprecated use classespath in the future  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  begin_index  end_index  end_type  begin_name s p  end_name  begin_init  begin_expr  begin_call  begin_name get sourcespath  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name  begin_name s p  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name f  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name file  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name s p  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment not necessary as j depend would fail but why loose  end_comment  begin_comment some time  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name f  end_name  begin_operator  end_operator  begin_name exists  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name f  end_name  begin_operator  end_operator  begin_name is directory  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name build exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name f  end_name  begin_operator  end_operator  begin_name get path  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name commandline  end_name  begin_operator  end_operator  begin_name create argument  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set value  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name f  end_name  begin_operator  end_operator  begin_name get path  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name get classespath  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment this is the new way use classespath code is the  end_comment  begin_comment same for now  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  begin_index  end_index  end_type  begin_name c p  end_name  begin_init  begin_expr  begin_call  begin_name get classespath  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name  begin_name c p  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name f  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name file  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name c p  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment not necessary as j depend would fail but why loose  end_comment  begin_comment some time  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name f  end_name  begin_operator  end_operator  begin_name exists  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name build exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name f  end_name  begin_operator  end_operator  begin_name get path  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name commandline  end_name  begin_operator  end_operator  begin_name create argument  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set value  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name f  end_name  begin_operator  end_operator  begin_name get path  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name execute  end_name  end_type  begin_name execute  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name execute  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name log stream handler  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name msg info  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name msg warn  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name watchdog  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name execute  end_name  begin_operator  end_operator  begin_name set commandline  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name commandline  end_name  begin_operator  end_operator  begin_name get commandline  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name get dir  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name execute  end_name  begin_operator  end_operator  begin_name set working directory  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get dir  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name execute  end_name  begin_operator  end_operator  begin_name set ant run  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get project  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name get output file  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name log  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name get output file  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get path  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name log  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name commandline  end_name  begin_operator  end_operator  begin_name describe command  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name msg verbose  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_try  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name execute  end_name  begin_operator  end_operator  begin_name execute  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name io exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name build exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get location  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  end_block 
begin_comment our execute method return true if successful throws build exception on error end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name execute  end_name  begin_parameter_list  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name build exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get jspc  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name log  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name msg verbose  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name commandline java  end_name  end_type  begin_name cmd  end_name  begin_init  begin_expr  begin_call  begin_name setup jasper command  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_comment create an instance of the compiler redirecting output to  end_comment  begin_comment the project log  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name java  end_name  end_type  begin_name java  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name java  end_name  begin_argument_list  begin_argument  begin_expr  begin_name owner  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name path  end_name  end_type  begin_name p  end_name  begin_init  begin_expr  begin_call  begin_name get classpath  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name get jspc  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get classpath  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get project  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name log  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name p  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name msg debug  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get project  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name log  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name p  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name msg debug  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name java  end_name  begin_operator  end_operator  begin_name set classpath  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name p  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name java  end_name  begin_operator  end_operator  begin_name set dir  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get project  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get base dir  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name java  end_name  begin_operator  end_operator  begin_name set classname  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment this is really irritating we need a way to set stuff  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  begin_index  end_index  end_type  begin_name args  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name get java command  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get arguments  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name java  end_name  begin_operator  end_operator  begin_name create arg  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name java  end_name  begin_operator  end_operator  begin_name set failonerror  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get jspc  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get failonerror  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment we are forking here to be sure that if jsp c calls  end_comment  begin_comment system exit it doesn t halt the build  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name java  end_name  begin_operator  end_operator  begin_name set fork  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name java  end_name  begin_operator  end_operator  begin_name set task name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name java  end_name  begin_operator  end_operator  begin_name execute  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  end_expr  end_return  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name exception  end_name  end_type  begin_name ex  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name ex  end_name  begin_operator  end_operator  begin_name build exception  end_name  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_name build exception  end_name  begin_operator  end_operator  begin_name ex  end_name  end_expr  end_throw  end_block  end_then  begin_else  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name build exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name ex  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get jspc  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get location  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_else  end_if  end_block  end_catch  begin_finally  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get jspc  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete empty java files  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_finally  end_try  end_block 
begin_comment map from a jsp file to a base name does not deal with extensions param jsp file jsp file file return exensionless potentially remapped name end_comment begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name map jsp to base name  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name jsp file  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name class name  end_name  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name class name  end_name  begin_operator  end_operator  begin_call  begin_name strip extension  end_name  begin_argument_list  begin_argument  begin_expr  begin_name jsp file  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment since we don t mangle extensions like the servlet does  end_comment  begin_comment we need to check for keywords as class names  end_comment  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name  begin_name keywords  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_operator  end_operator  begin_name i  end_name  end_expr  end_incr  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name class name  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name keywords  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name class name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_then  end_if  end_block  end_for  begin_comment fix for invalid characters if you think of more add to the list  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string buffer  end_name  end_type  begin_name modified class name  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name string buffer  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name class name  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment first char is more restrictive than the rest  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name char  end_name  end_type  begin_name first char  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name class name  end_name  begin_operator  end_operator  begin_name char at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name character  end_name  begin_operator  end_operator  begin_name is java identifier start  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name first char  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name modified class name  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name first char  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name modified class name  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name mangle char  end_name  begin_argument_list  begin_argument  begin_expr  begin_name first char  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_comment this is the rest  end_comment  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name class name  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name char  end_name  end_type  begin_name sub char  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name class name  end_name  begin_operator  end_operator  begin_name char at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name character  end_name  begin_operator  end_operator  begin_name is java identifier part  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name sub char  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name modified class name  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name sub char  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name modified class name  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name mangle char  end_name  begin_argument_list  begin_argument  begin_expr  begin_name sub char  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_for  begin_return  begin_expr  begin_call  begin_name  begin_name modified class name  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment run the task throws build exception if there is an error end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name execute  end_name  begin_parameter_list  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name build exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name destination directory  end_name  begin_operator  end_operator  begin_name is directory  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name build exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name destination directory  end_name  begin_operator  end_operator  begin_name get path  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name source directory  end_name  begin_operator  end_operator  begin_name is directory  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name build exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name source directory  end_name  begin_operator  end_operator  begin_name get path  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name destination package  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name build exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get location  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name path to package  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name destination package  end_name  begin_operator  end_operator  begin_name replace  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name separator char  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment get all the files in the source directory  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name directory scanner  end_name  end_type  begin_name ds  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name get directory scanner  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name source directory  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment use the systemclasspath as well to include the ant jar  end_comment  begin_if  begin_condition  begin_expr  begin_name compile classpath  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name compile classpath  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name path  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get project  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name compile classpath  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name compile classpath  end_name  begin_operator  end_operator  begin_name concat system classpath  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  begin_index  end_index  end_type  begin_name files  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ds  end_name  begin_operator  end_operator  begin_name get included files  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment weblogic jspc calls system exit have to fork  end_comment  begin_comment therefore takes loads of time  end_comment  begin_comment can pass directories at a time jsp but easily runs out of  end_comment  begin_comment memory on hefty dirs even on a sun  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name java  end_name  end_type  begin_name helper task  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name java  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name helper task  end_name  begin_operator  end_operator  begin_name set fork  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name helper task  end_name  begin_operator  end_operator  begin_name set classname  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name helper task  end_name  begin_operator  end_operator  begin_name set task name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get task name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  begin_index  end_index  end_type  begin_name args  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name string  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name jsp file  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name parents  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name j  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_comment xxx this array stuff is a remnant of prev trials gotta remove  end_comment  begin_expr_stmt  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_name j  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_name j  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name destination directory  end_name  begin_operator  end_operator  begin_name get absolute path  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name trim  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_name j  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_name j  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name source directory  end_name  begin_operator  end_operator  begin_name get absolute path  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name trim  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_name j  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_comment todo parameterise  end_comment  begin_comment call compiler as class dont want to fork again  end_comment  begin_comment use classic compiler can be parameterised  end_comment  begin_expr_stmt  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_name j  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_name j  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_comment weblogic jspc does not seem to work unless u explicitly set this  end_comment  begin_comment does not take the classpath from the env  end_comment  begin_comment am i missing something about the java task  end_comment  begin_expr_stmt  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_name j  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_name j  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name compile classpath  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name scan dir  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name files  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name log  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name files to do  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name files to do  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_comment xxx  end_comment  begin_comment all this to get package according to weblogic standards  end_comment  begin_comment can be written better this is too hacky  end_comment  begin_comment careful similar code in scan dir but slightly different  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name filename  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name string  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name files to do  end_name  begin_operator  end_operator  begin_name element at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name jsp file  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name file  end_name  begin_argument_list  begin_argument  begin_expr  begin_name filename  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_name j  end_name  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name parents  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name jsp file  end_name  begin_operator  end_operator  begin_name get parent  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name parents  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name parents  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name parents  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name replace string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name parents  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name separator  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_name j  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_name destination package  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name parents  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_name j  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_name destination package  end_name  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_name j  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_name source directory  end_name  begin_operator  end_operator  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name separator  end_name  end_name  begin_operator  end_operator  begin_name filename  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name helper task  end_name  begin_operator  end_operator  begin_name clear args  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name x  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name x  end_name  begin_operator  end_operator  begin_name j  end_name  begin_operator  end_operator  end_expr  end_condition  begin_incr  begin_expr  begin_name x  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name helper task  end_name  begin_operator  end_operator  begin_name create arg  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_name x  end_name  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name helper task  end_name  begin_operator  end_operator  begin_name set classpath  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name compile classpath  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name helper task  end_name  begin_operator  end_operator  begin_name execute java  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name log  end_name  begin_argument_list  begin_argument  begin_expr  begin_name filename  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name msg warn  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  end_block 
begin_comment simple tree walker that will clone recursively a node this is to avoid using parser specific api such as sun s tt change node owner tt when we are dealing with dom l 1 implementations since tt clone node boolean tt will not change the owner document tt change node owner tt is much faster and avoid the costly cloning process tt import node tt is in the dom l 2 interface param parent the node parent to which we should do the import to param child the node to clone recursively its clone will be appended to tt parent tt return the cloned node that is appended to tt parent tt end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name node  end_name  end_type  begin_name import node  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name parent  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name child  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name copy  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name document  end_name  end_type  begin_name doc  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name parent  end_name  begin_operator  end_operator  begin_name get owner document  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_switch  begin_condition  begin_expr  begin_call  begin_name  begin_name child  end_name  begin_operator  end_operator  begin_name get node type  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_case  begin_expr  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name cdata section node  end_name  end_name  end_expr  begin_expr_stmt  begin_expr  begin_name copy  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name doc  end_name  begin_operator  end_operator  begin_name create cdata section  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name cdata section  end_name  begin_operator  end_operator  begin_name child  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get data  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name comment node  end_name  end_name  end_expr  begin_expr_stmt  begin_expr  begin_name copy  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name doc  end_name  begin_operator  end_operator  begin_name create comment  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name comment  end_name  begin_operator  end_operator  begin_name child  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get data  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name document fragment node  end_name  end_name  end_expr  begin_expr_stmt  begin_expr  begin_name copy  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name doc  end_name  begin_operator  end_operator  begin_name create document fragment  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name element node  end_name  end_name  end_expr  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name element  end_name  end_type  begin_name elem  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name doc  end_name  begin_operator  end_operator  begin_name create element  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name element  end_name  begin_operator  end_operator  begin_name child  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get tag name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name copy  end_name  begin_operator  end_operator  begin_name elem  end_name  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name named node map  end_name  end_type  begin_name attributes  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name child  end_name  begin_operator  end_operator  begin_name get attributes  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name attributes  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name size  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name attributes  end_name  begin_operator  end_operator  begin_name get length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name size  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name attr  end_name  end_type  begin_name attr  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name attr  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name attributes  end_name  begin_operator  end_operator  begin_name item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name elem  end_name  begin_operator  end_operator  begin_name set attribute  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name attr  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name attr  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  end_block  end_then  end_if  begin_break  end_break  end_case  begin_case  begin_expr  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name entity reference node  end_name  end_name  end_expr  begin_expr_stmt  begin_expr  begin_name copy  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name doc  end_name  begin_operator  end_operator  begin_name create entity reference  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name child  end_name  begin_operator  end_operator  begin_name get node name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name processing instruction node  end_name  end_name  end_expr  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name processing instruction  end_name  end_type  begin_name pi  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name processing instruction  end_name  begin_operator  end_operator  begin_name child  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name copy  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name doc  end_name  begin_operator  end_operator  begin_name create processing instruction  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name pi  end_name  begin_operator  end_operator  begin_name get target  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name pi  end_name  begin_operator  end_operator  begin_name get data  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name text node  end_name  end_name  end_expr  begin_expr_stmt  begin_expr  begin_name copy  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name doc  end_name  begin_operator  end_operator  begin_name create text node  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name text  end_name  begin_operator  end_operator  begin_name child  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get data  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_default  begin_comment this should never happen  end_comment  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal state exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name child  end_name  begin_operator  end_operator  begin_name get node type  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_default  end_block  end_switch  begin_comment okay we have a copy of the child now the child becomes the parent  end_comment  begin_comment and we are iterating recursively over its children  end_comment  begin_try  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name node list  end_name  end_type  begin_name children  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name child  end_name  begin_operator  end_operator  begin_name get child nodes  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name children  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name size  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name children  end_name  begin_operator  end_operator  begin_name get length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name size  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name node  end_name  end_type  begin_name new child  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name children  end_name  begin_operator  end_operator  begin_name item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name new child  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name import node  end_name  begin_argument_list  begin_argument  begin_expr  begin_name copy  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name new child  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  end_block  end_then  end_if  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name dom exception  end_name  end_type  begin_name ignored  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment ignore  end_comment  end_block  end_catch  end_try  begin_comment bingo append it this should normally not be done here  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name parent  end_name  begin_operator  end_operator  begin_name append child  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name copy  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name copy  end_name  end_expr  end_return  end_block 
begin_comment sends a single file to the remote host code filename code may contain a relative path specification when this is the case code send file code will attempt to create any necessary parent directories before sending the file the file will then be sent using the entire relative path spec no attempt is made to change directories it is anticipated that this may eventually cause problems with some ftp servers but it simplifies the coding param ftp ftp client param dir base directory of the file to be sent local param filename relative path of the file to be send locally relative to dir remotely relative to the remotedir attribute throws io exception in unknown circumstances throws build exception in unknown circumstances end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name send file  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ftp client  end_name  end_type  begin_name ftp  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name dir  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name filename  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name io exception  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name build exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name input stream  end_name  end_type  begin_name instream  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_comment xxx why not simply new file dir filename  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name file  end_name  begin_init  begin_expr  begin_call  begin_name get project  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name resolve file  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name file  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dir  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name filename  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get path  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name newer only  end_name  begin_operator  end_operator  begin_call  begin_name is up to date  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ftp  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name file  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name resolve file  end_name  begin_argument_list  begin_argument  begin_expr  begin_name filename  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name verbose  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name log  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name get absolute path  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name instream  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name buffered input stream  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name file input stream  end_name  begin_argument_list  begin_argument  begin_expr  begin_name file  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name create parents  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ftp  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name filename  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ftp  end_name  begin_operator  end_operator  begin_name store file  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name resolve file  end_name  begin_argument_list  begin_argument  begin_expr  begin_name filename  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name instream  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name success  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ftp reply  end_name  begin_operator  end_operator  begin_name is positive completion  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name ftp  end_name  begin_operator  end_operator  begin_name get reply code  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name success  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name s  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name ftp  end_name  begin_operator  end_operator  begin_name get reply string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name skip failed transfers  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name log  end_name  begin_argument_list  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name msg warn  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name skipped  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name build exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_else  end_if  end_block  end_then  begin_else  begin_block  begin_comment see if we should issue a chmod command  end_comment  begin_if  begin_condition  begin_expr  begin_name chmod  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name do site command  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ftp  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name chmod  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name resolve file  end_name  begin_argument_list  begin_argument  begin_expr  begin_name filename  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name log  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name get absolute path  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_name server  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name msg verbose  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name transferred  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  begin_finally  begin_block  begin_if  begin_condition  begin_expr  begin_name instream  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name instream  end_name  begin_operator  end_operator  begin_name close  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name io exception  end_name  end_type  begin_name ex  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment ignore it  end_comment  end_block  end_catch  end_try  end_block  end_then  end_if  end_block  end_finally  end_try  end_block 
begin_comment searches for folders in the given view param s a star team server param p a valid project on the server param v a view name from the specified project param t an item type which is currently always file end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run type  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name server  end_name  end_type  begin_name s  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name com  end_name  begin_operator  end_operator  begin_name starbase  end_name  begin_operator  end_operator  begin_name starteam  end_name  begin_operator  end_operator  begin_name project  end_name  end_name  end_type  begin_name p  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name view  end_name  end_type  begin_name v  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name type  end_name  end_type  begin_name t  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment this is ugly checking for the root folder  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name folder  end_name  end_type  begin_name f  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name v  end_name  begin_operator  end_operator  begin_name get root folder  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name get folder name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name get folder name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get folder name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name set folder name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name f  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name star team finder  end_name  begin_operator  end_operator  begin_name find folder  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name v  end_name  begin_operator  end_operator  begin_name get root folder  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get folder name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name assert true  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name f  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name get project name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name delim  end_name  begin_operator  end_operator  begin_call  begin_name get view name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name delim  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name v  end_name  begin_operator  end_operator  begin_name get root folder  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name delim  end_name  begin_operator  end_operator  begin_call  begin_name get folder name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name delim  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name get verbose  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get folder name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name log  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name get project name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name delim  end_name  begin_operator  end_operator  begin_call  begin_name get view name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name delim  end_name  begin_operator  end_operator  begin_call  begin_name get folder name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name delim  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment for performance reasons it is important to pre fetch all the  end_comment  begin_comment properties we ll need for all the items we ll be searching  end_comment  begin_comment we always display the item id object id and primary descriptor  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name n properties  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_comment we ll need this item type s primary descriptor  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name property  end_name  end_type  begin_name p 1  end_name  begin_init  begin_expr  begin_call  begin_name get primary descriptor  end_name  begin_argument_list  begin_argument  begin_expr  begin_name t  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment does this item type have a secondary descriptor  end_comment  begin_comment if so we ll need it  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name property  end_name  end_type  begin_name p 2  end_name  begin_init  begin_expr  begin_call  begin_name get secondary descriptor  end_name  begin_argument_list  begin_argument  begin_expr  begin_name t  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name p 2  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name n properties  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment now build an array of the property names  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  begin_index  end_index  end_type  begin_name str names  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name string  end_name  begin_index  begin_expr  begin_name n properties  end_name  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i property  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name str names  end_name  begin_index  begin_expr  begin_name i property  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name get property names  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name object id  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name str names  end_name  begin_index  begin_expr  begin_name i property  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name p 1  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name p 2  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name  begin_name str names  end_name  begin_index  begin_expr  begin_name i property  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name p 2  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment pre fetch the item properties and cache them  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name f  end_name  begin_operator  end_operator  begin_name populate now  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name t  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name str names  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment now search for items in the selected folder  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name run folder  end_name  begin_argument_list  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name p  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name v  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name t  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name f  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name calc target folder  end_name  begin_argument_list  begin_argument  begin_expr  begin_name v  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name f  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment free up the memory used by the cached items  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name f  end_name  begin_operator  end_operator  begin_name discard items  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name t  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment check out one file if it matches the include filter but not the exclude filter param s a star team server param p a valid project on the server param v a view name from the specified project param t an item type which is currently always file param f the folder the file is localed in param item the file to check out param tgt target folder on local machine end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run item  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name server  end_name  end_type  begin_name s  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name com  end_name  begin_operator  end_operator  begin_name starbase  end_name  begin_operator  end_operator  begin_name starteam  end_name  begin_operator  end_operator  begin_name project  end_name  end_name  end_type  begin_name p  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name view  end_name  end_type  begin_name v  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name type  end_name  end_type  begin_name t  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name folder  end_name  end_type  begin_name f  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name item  end_name  end_type  begin_name item  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name java  end_name  begin_operator  end_operator  begin_name io  end_name  begin_operator  end_operator  begin_name file  end_name  end_name  end_type  begin_name tgt  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment get descriptors for this item type  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name property  end_name  end_type  begin_name p 1  end_name  begin_init  begin_expr  begin_call  begin_name get primary descriptor  end_name  begin_argument_list  begin_argument  begin_expr  begin_name t  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name property  end_name  end_type  begin_name p 2  end_name  begin_init  begin_expr  begin_call  begin_name get secondary descriptor  end_name  begin_argument_list  begin_argument  begin_expr  begin_name t  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name p name  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name string  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name item  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name p 1  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name should checkout  end_name  begin_argument_list  begin_argument  begin_expr  begin_name p name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_comment verbose mode only  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name get verbose  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment show folder only if changed  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name b show header  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name f  end_name  begin_operator  end_operator  begin_name prev folder  end_name  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name b show header  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment we want to display the folder the same way you would  end_comment  begin_comment enter it on the command line so we remove the  end_comment  begin_comment view name which is also the name of the root folder  end_comment  begin_comment and therefore shows up at the start of the path  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name str folder  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name f  end_name  begin_operator  end_operator  begin_name get folder hierarchy  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name str folder  end_name  begin_operator  end_operator  begin_name index of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name delim  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name str folder  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name str folder  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name log  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name str folder  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name prev folder  end_name  begin_operator  end_operator  begin_name f  end_name  end_expr  end_expr_stmt  begin_comment if we displayed the project view item type or folder  end_comment  begin_comment then show the list of relevant item properties  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string buffer  end_name  end_type  begin_name header  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name string buffer  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name header  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name append  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name p 1  end_name  begin_operator  end_operator  begin_name get display name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name p 2  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name header  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name append  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name p 2  end_name  begin_operator  end_operator  begin_name get display name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name log  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name header  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment finally show the item properties  end_comment  begin_comment always show the item id  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string buffer  end_name  end_type  begin_name item line  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name string buffer  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name item line  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name item  end_name  begin_operator  end_operator  begin_name get item id  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment show the primary descriptor  end_comment  begin_comment there should always be one  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name item line  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name append  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name format for display  end_name  begin_argument_list  begin_argument  begin_expr  begin_name p 1  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name item  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name p 1  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment show the secondary descriptor if there is one  end_comment  begin_comment some item types have one some don t  end_comment  begin_if  begin_condition  begin_expr  begin_name p 2  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name item line  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name append  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name format for display  end_name  begin_argument_list  begin_argument  begin_expr  begin_name p 2  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name item  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name p 2  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment show if the file is locked  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name locker  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name item  end_name  begin_operator  end_operator  begin_name get locker  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name locker  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name item line  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name append  end_name  begin_argument_list  begin_argument  begin_expr  begin_name locker  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name item line  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name log  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name item line  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment end verbose only  end_comment  begin_comment check it out also ugly  end_comment  begin_comment change the item to be checked out to a star team file  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name com  end_name  begin_operator  end_operator  begin_name starbase  end_name  begin_operator  end_operator  begin_name starteam  end_name  begin_operator  end_operator  begin_name file  end_name  end_name  end_type  begin_name remote  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name com  end_name  begin_operator  end_operator  begin_name starbase  end_name  begin_operator  end_operator  begin_name starteam  end_name  begin_operator  end_operator  begin_name file  end_name  end_name  begin_operator  end_operator  begin_name item  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_comment the local file name is simply the local target path tgt which has  end_comment  begin_comment been passed recursively down from the top of the tree with the item s name appended  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name java  end_name  begin_operator  end_operator  begin_name io  end_name  begin_operator  end_operator  begin_name file  end_name  end_name  end_type  begin_name local  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name java  end_name  begin_operator  end_operator  begin_name io  end_name  begin_operator  end_operator  begin_name file  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tgt  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name string  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name item  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name p 1  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name remote  end_name  begin_operator  end_operator  begin_name checkout to  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name local  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name item  end_name  begin_operator  end_operator  begin_name lock type  end_name  begin_operator  end_operator  begin_name unchanged  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name checked out  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name build exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name local  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  end_block 
begin_comment why do we do nothing end_commentbegin_comment implement the user info interface noop param message ignored end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name show message  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name message  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment log message project msg debug  end_comment  end_block 
begin_comment transform an input file param infile the file to transform param outfile the result file throws exception on error end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name transform  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name infile  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name outfile  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_if  begin_condition  begin_expr  begin_name transformer  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name create transformer  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name input stream  end_name  end_type  begin_name fis  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name output stream  end_name  end_type  begin_name fos  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_name fis  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name buffered input stream  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name file input stream  end_name  begin_argument_list  begin_argument  begin_expr  begin_name infile  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name fos  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name buffered output stream  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name file output stream  end_name  begin_argument_list  begin_argument  begin_expr  begin_name outfile  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name stream result  end_name  end_type  begin_name res  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name stream result  end_name  begin_argument_list  begin_argument  begin_expr  begin_name fos  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment not sure what could be the need of this  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name res  end_name  begin_operator  end_operator  begin_name set system id  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name jaxp utils  end_name  begin_operator  end_operator  begin_name get system id  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name outfile  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name source  end_name  end_type  begin_name src  end_name  begin_init  begin_expr  begin_call  begin_name get source  end_name  begin_argument_list  begin_argument  begin_expr  begin_name fis  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name infile  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment set parameters on each transformation maybe something has changed  end_comment  begin_comment e g value of file name parameter  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name set transformation parameters  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name transformer  end_name  begin_operator  end_operator  begin_name transform  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name src  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name res  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_finally  begin_block  begin_comment make sure to close all handles otherwise the garbage  end_comment  begin_comment collector will close them whenever possible and  end_comment  begin_comment windows may complain about not being able to delete files  end_comment  begin_try  begin_block  begin_if  begin_condition  begin_expr  begin_name fis  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name fis  end_name  begin_operator  end_operator  begin_name close  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name io exception  end_name  end_type  begin_name ignored  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment ignore  end_comment  end_block  end_catch  end_try  begin_try  begin_block  begin_if  begin_condition  begin_expr  begin_name fos  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name fos  end_name  begin_operator  end_operator  begin_name close  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name io exception  end_name  end_type  begin_name ignored  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment ignore  end_comment  end_block  end_catch  end_try  end_block  end_finally  end_try  end_block 
 begin_type  begin_specifier  end_specifier  begin_name string  end_name  begin_index  end_index  end_type  begin_name map file name  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name ends with  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name ends with  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get stub class suffix  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name ends with  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get skel class suffix  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name ends with  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get tie class suffix  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment not a class file or the one we d generate  end_comment  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_comment we know that name ends with class  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name base  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name classname  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name base  end_name  begin_operator  end_operator  begin_name replace  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name separator char  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name attributes  end_name  begin_operator  end_operator  begin_name get verify  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name attributes  end_name  begin_operator  end_operator  begin_name is valid rmi remote  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name classname  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_comment fallback in case we have trouble loading the class or don t know how to handle it there is no easy way to know what idl mode would generate this is supposed to make ant always recompile the class as a file of that name should not exist  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  begin_index  end_index  end_type  begin_name target  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name string  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_name name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name rand  end_name  begin_operator  end_operator  begin_name next long  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_block  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name attributes  end_name  begin_operator  end_operator  begin_name get iiop  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name attributes  end_name  begin_operator  end_operator  begin_name get idl  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment jrmp with simple naming convention  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name attributes  end_name  begin_operator  end_operator  begin_name get stub version  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name target  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name string  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_name base  end_name  begin_operator  end_operator  begin_call  begin_name get stub class suffix  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_block  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name target  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name string  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_name base  end_name  begin_operator  end_operator  begin_call  begin_name get stub class suffix  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  begin_operator  end_operator  begin_expr  begin_name base  end_name  begin_operator  end_operator  begin_call  begin_name get skel class suffix  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  begin_operator  end_operator  end_block  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name attributes  end_name  begin_operator  end_operator  begin_name get idl  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name last slash  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name base  end_name  begin_operator  end_operator  begin_name last index of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name separator char  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name dirname  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_comment i know this is not necessary but i prefer it explicit sb  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name index  end_name  begin_init  begin_expr  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name last slash  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment no package  end_comment  begin_expr_stmt  begin_expr  begin_name index  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name index  end_name  begin_operator  end_operator  begin_name last slash  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name dirname  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name base  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name filename  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name base  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name class  end_name  end_type  begin_name c  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name attributes  end_name  begin_operator  end_operator  begin_name get loader  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name load class  end_name  begin_argument_list  begin_argument  begin_expr  begin_name classname  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name is interface  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment only stub no tie  end_comment  begin_expr_stmt  begin_expr  begin_name target  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name string  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_name dirname  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name filename  end_name  begin_operator  end_operator  begin_call  begin_name get stub class suffix  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_block  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_comment stub is derived from implementation tie from interface name  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name class  end_name  end_type  begin_name interf  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name attributes  end_name  begin_operator  end_operator  begin_name get remote interface  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name i name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name interf  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name i dir  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i index  end_name  begin_init  begin_expr  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name last dot  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name i name  end_name  begin_operator  end_operator  begin_name last index of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name last dot  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment no package  end_comment  begin_expr_stmt  begin_expr  begin_name i index  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name i index  end_name  begin_operator  end_operator  begin_name last dot  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name i dir  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name i name  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name i index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name i dir  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name i dir  end_name  begin_operator  end_operator  begin_name replace  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name separator char  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_name target  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name string  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_name dirname  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name filename  end_name  begin_operator  end_operator  begin_call  begin_name get tie class suffix  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  begin_operator  end_operator  begin_expr  begin_name i dir  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name i name  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i index  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get stub class suffix  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_block  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name class not found exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name attributes  end_name  begin_operator  end_operator  begin_name log  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name classname  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name msg warn  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name no class def found error  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name attributes  end_name  begin_operator  end_operator  begin_name log  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name classname  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name msg warn  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name throwable  end_name  end_type  begin_name t  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name attributes  end_name  begin_operator  end_operator  begin_name log  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name classname  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name t  end_name  begin_operator  end_operator  begin_name get message  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name msg warn  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  end_try  end_block  end_then  end_if  end_else  end_if  begin_return  begin_expr  begin_name target  end_name  end_expr  end_return  end_block 
begin_comment collect the resources that are newer than the corresponding entries or missing in the original archive p if we are going to recreate the archive instead of updating it all resources should be considered as new if a single one is because of this subclasses overriding this method must call code super get resources to add code and indicate with the third arg if they already know that the archive is out of date p p this method first delegates to get non file set resource to add and then invokes the file set arg version all this to keep backwards compatibility for subclasses that don t know how to deal with non file set resource collections p param rcs the resource collections to grab resources from param zip file intended archive file may or may not exist param needs update whether we already know that the archive is out of date subclasses overriding this method are supposed to set this value correctly in their call to code super get resources to add code return an array of resources to add for each fileset passed in as well as a flag that indicates whether the archive is uptodate exception build exception if it likes since ant 1 7 end_comment begin_type  begin_specifier  end_specifier  begin_name archive state  end_name  end_type  begin_name get resources to add  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name  begin_name resource collection  end_name  begin_index  end_index  end_name  end_type  begin_name rcs  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name zip file  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name needs update  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name build exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name array list  end_name  end_type  begin_name filesets  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name array list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name array list  end_name  end_type  begin_name rest  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name array list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name  begin_name rcs  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_if  begin_condition  begin_expr  begin_name  begin_name rcs  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_name file set  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name filesets  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name rcs  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name rest  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name rcs  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_for  begin_decl_stmt  begin_decl  begin_type  begin_name resource collection  end_name  begin_index  end_index  end_type  begin_name rc  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name resource collection  end_name  begin_index  end_index  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name rest  end_name  begin_operator  end_operator  begin_name to array  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name resource collection  end_name  begin_index  begin_expr  begin_call  begin_name  begin_name rest  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name archive state  end_name  end_type  begin_name as  end_name  begin_init  begin_expr  begin_call  begin_name get non file set resources to add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name rc  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name zip file  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name needs update  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name file set  end_name  begin_index  end_index  end_type  begin_name fs  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name file set  end_name  begin_index  end_index  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name filesets  end_name  begin_operator  end_operator  begin_name to array  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name file set  end_name  begin_index  begin_expr  begin_call  begin_name  begin_name filesets  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name archive state  end_name  end_type  begin_name as 2  end_name  begin_init  begin_expr  begin_call  begin_name get resources to add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name fs  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name zip file  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name as  end_name  begin_operator  end_operator  begin_name is out of date  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name as  end_name  begin_operator  end_operator  begin_name is out of date  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name as 2  end_name  begin_operator  end_operator  begin_name is out of date  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment bad luck there are resources in the filesets that make the archive out of date but not in the non fileset resources we need to rescan the non file sets to grab all of them now  end_comment  begin_expr_stmt  begin_expr  begin_name as  end_name  begin_operator  end_operator  begin_call  begin_name get non file set resources to add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name rc  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name zip file  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name resource  end_name  begin_index  end_index  begin_index  end_index  end_type  begin_name to add  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name resource  end_name  begin_index  begin_expr  begin_name  begin_name rcs  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_index  begin_index  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name fs index  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name rest index  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name  begin_name rcs  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_if  begin_condition  begin_expr  begin_name  begin_name rcs  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_name file set  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name  begin_name to add  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name as 2  end_name  begin_operator  end_operator  begin_name get resources to add  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_index  begin_expr  begin_name fs index  end_name  begin_operator  end_operator  end_expr  end_index  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name  begin_name to add  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name as  end_name  begin_operator  end_operator  begin_name get resources to add  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_index  begin_expr  begin_name rest index  end_name  begin_operator  end_operator  end_expr  end_index  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_for  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name archive state  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name as 2  end_name  begin_operator  end_operator  begin_name is out of date  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name to add  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment collect the resources that are newer than the corresponding entries or missing in the original archive p if we are going to recreate the archive instead of updating it all resources should be considered as new if a single one is because of this subclasses overriding this method must call code super get resources to add code and indicate with the third arg if they already know that the archive is out of date p param filesets the filesets to grab resources from param zip file intended archive file may or may not exist param needs update whether we already know that the archive is out of date subclasses overriding this method are supposed to set this value correctly in their call to code super get resources to add code return an array of resources to add for each fileset passed in as well as a flag that indicates whether the archive is uptodate exception build exception if it likes end_comment begin_type  begin_specifier  end_specifier  begin_name archive state  end_name  end_type  begin_name get resources to add  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name  begin_name file set  end_name  begin_index  end_index  end_name  end_type  begin_name filesets  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name zip file  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name needs update  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name build exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name resource  end_name  begin_index  end_index  begin_index  end_index  end_type  begin_name initial resources  end_name  begin_init  begin_expr  begin_call  begin_name grab resources  end_name  begin_argument_list  begin_argument  begin_expr  begin_name filesets  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name is empty  end_name  begin_argument_list  begin_argument  begin_expr  begin_name initial resources  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name needs update  end_name  begin_operator  end_operator  begin_name do update  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment this is a rather hairy case one of our subclasses knows that we need to update the archive but at the same time there are no resources known to us that would need to be added only the subclass seems to know what s going on this happens if jar detects that the manifest has changed for example the manifest is not part of any resources because of our support for inline manifest s if we invoke create empty zip like ant 1 5 2 did we ll loose all stuff that has been in the original archive bugzilla report 17780  end_comment  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name archive state  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name initial resources  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name empty behavior  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name do update  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name log  end_name  begin_argument_list  begin_argument  begin_expr  begin_name archive type  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name zip file  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name msg verbose  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name log  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name archive type  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name zip file  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name msg warn  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name empty behavior  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name build exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name archive type  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name zip file  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get location  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  begin_else  begin_block  begin_comment create  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name zip file  end_name  begin_operator  end_operator  begin_name exists  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name needs update  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_else  end_if  end_else  end_if  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name archive state  end_name  begin_argument_list  begin_argument  begin_expr  begin_name needs update  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name initial resources  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_comment initial resources is not empty  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name zip file  end_name  begin_operator  end_operator  begin_name exists  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name archive state  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name initial resources  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name needs update  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name do update  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment we are recreating the archive need all resources  end_comment  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name archive state  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name initial resources  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name resource  end_name  begin_index  end_index  begin_index  end_index  end_type  begin_name newer resources  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name resource  end_name  begin_index  begin_expr  begin_name  begin_name filesets  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_index  begin_index  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name  begin_name filesets  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name fileset  end_name  begin_operator  end_operator  begin_name zip file set  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name zip file set  end_name  begin_operator  end_operator  begin_name fileset  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get src  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get project  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name base  end_name  begin_init  begin_expr  begin_name  begin_name filesets  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name get dir  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get project  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name j  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name j  end_name  begin_operator  end_operator  begin_name  begin_name initial resources  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_name length  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name j  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name resource as file  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name file utils  end_name  begin_operator  end_operator  begin_name resolve file  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name base  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name initial resources  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  begin_index  begin_expr  begin_name j  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name resource as file  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name zip file  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name build exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get location  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  end_block  end_for  end_block  end_then  end_if  end_block  end_for  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name  begin_name filesets  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_if  begin_condition  begin_expr  begin_name  begin_name initial resources  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_name length  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name  begin_name newer resources  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name resource  end_name  begin_index  end_index  end_name  begin_block  end_block  end_expr  end_expr_stmt  begin_continue  end_continue  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name file name mapper  end_name  end_type  begin_name my mapper  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name identity mapper  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name  begin_name filesets  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_name zip file set  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name zip file set  end_name  end_type  begin_name zfs  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name zip file set  end_name  begin_operator  end_operator  begin_name  begin_name filesets  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name zfs  end_name  begin_operator  end_operator  begin_name get fullpath  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get project  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name zfs  end_name  begin_operator  end_operator  begin_name get fullpath  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get project  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment in this case all files from origin map to  end_comment  begin_comment the full path attribute of the zipfileset at  end_comment  begin_comment destination  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name merging mapper  end_name  end_type  begin_name fm  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name merging mapper  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name fm  end_name  begin_operator  end_operator  begin_name set to  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name zfs  end_name  begin_operator  end_operator  begin_name get fullpath  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get project  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name my mapper  end_name  begin_operator  end_operator  begin_name fm  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name zfs  end_name  begin_operator  end_operator  begin_name get prefix  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get project  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name zfs  end_name  begin_operator  end_operator  begin_name get prefix  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get project  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name glob pattern mapper  end_name  end_type  begin_name gm  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name glob pattern mapper  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name gm  end_name  begin_operator  end_operator  begin_name set from  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name prefix  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name zfs  end_name  begin_operator  end_operator  begin_name get prefix  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get project  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name prefix  end_name  begin_operator  end_operator  begin_name ends with  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name prefix  end_name  begin_operator  end_operator  begin_name ends with  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name prefix  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name gm  end_name  begin_operator  end_operator  begin_name set to  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name prefix  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name my mapper  end_name  begin_operator  end_operator  begin_name gm  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name resource  end_name  begin_index  end_index  end_type  begin_name resources  end_name  begin_init  begin_expr  begin_name  begin_name initial resources  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name do filesonly  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name resources  end_name  begin_operator  end_operator  begin_call  begin_name select file resources  end_name  begin_argument_list  begin_argument  begin_expr  begin_name resources  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name  begin_name newer resources  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name resource utils  end_name  begin_operator  end_operator  begin_name select out of date sources  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name resources  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name my mapper  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get zip scanner  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name needs update  end_name  begin_operator  end_operator  begin_name needs update  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name newer resources  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_name length  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name needs update  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name do update  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment we will return initial resources anyway no reason  end_comment  begin_comment to scan further  end_comment  begin_break  end_break  end_block  end_then  end_if  end_block  end_for  begin_if  begin_condition  begin_expr  begin_name needs update  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name do update  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment we are recreating the archive need all resources  end_comment  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name archive state  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name initial resources  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name archive state  end_name  begin_argument_list  begin_argument  begin_expr  begin_name needs update  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name newer resources  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment add a directory to the zip stream param dir the directort to add to the archive param z out the stream to write to param v path the name this entry shall have in the archive param mode the unix permissions to set throws io exception on error since ant 1 5 2 end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name zip dir  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name dir  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name zip output stream  end_name  end_type  begin_name z out  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name v path  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name mode  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name io exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name zip dir  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dir  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name z out  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name v path  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name mode  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment add a directory to the zip stream param dir the directort to add to the archive param z out the stream to write to param v path the name this entry shall have in the archive param mode the unix permissions to set param extra zip extra fields to add throws io exception on error since ant 1 6 3 end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name zip dir  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name dir  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name zip output stream  end_name  end_type  begin_name z out  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name v path  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name mode  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name zip extra field  end_name  begin_index  end_index  end_name  end_type  begin_name extra  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name io exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_if  begin_condition  begin_expr  begin_name do filesonly  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name log  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name v path  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name msg verbose  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name added dirs  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name v path  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment don t add directories we ve already added  end_comment  begin_comment no warning if we try it is harmless in and of itself  end_comment  begin_return  end_return  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name log  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name v path  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name msg verbose  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name added dirs  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name v path  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name v path  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name skip writing  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name zip entry  end_name  end_type  begin_name ze  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name zip entry  end_name  begin_argument_list  begin_argument  begin_expr  begin_name v path  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name dir  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name dir  end_name  begin_operator  end_operator  begin_name exists  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment zi ps store time with a granularity of 2 seconds round up  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ze  end_name  begin_operator  end_operator  begin_name set time  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name dir  end_name  begin_operator  end_operator  begin_name last modified  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_name round up  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_comment zi ps store time with a granularity of 2 seconds round up  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ze  end_name  begin_operator  end_operator  begin_name set time  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name current time millis  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_name round up  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ze  end_name  begin_operator  end_operator  begin_name set size  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ze  end_name  begin_operator  end_operator  begin_name set method  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name zip entry  end_name  begin_operator  end_operator  begin_name stored  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment this is faintly ridiculous  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ze  end_name  begin_operator  end_operator  begin_name set crc  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name empty crc  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ze  end_name  begin_operator  end_operator  begin_name set unix mode  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name mode  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name extra  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ze  end_name  begin_operator  end_operator  begin_name set extra fields  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name extra  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name z out  end_name  begin_operator  end_operator  begin_name put next entry  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ze  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block 
begin_comment get the resources to add return the resources to add end_comment begin_type  begin_specifier  end_specifier  begin_name resource  end_name  begin_index  end_index  begin_index  end_index  end_type  begin_name get resources to add  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  begin_name resources to add  end_name  end_expr  end_return  end_block 
begin_comment get the filters in the filter set return a vector of filter instances end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name vector  end_name  end_type  begin_name get filters  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name is reference  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name get ref  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get filters  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_comment silly hack to avoid stack overflow  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name reading files  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name reading files  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  begin_operator  end_operator  begin_name sz  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name filters files  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name sz  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name read filters from file  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name file  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name filters files  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name filters files  end_name  begin_operator  end_operator  begin_name clear  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name reading files  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_name filters  end_name  end_expr  end_return  end_block 
begin_comment concatenates a class path in the order specified by the build sysclasspath property using the supplied value if build sysclasspath has not been set end_comment begin_type  begin_specifier  end_specifier  begin_name path  end_name  end_type  begin_name concat special path  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name def value  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name path  end_name  end_type  begin_name p  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name path  end_name  end_type  begin_name result  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name path  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get project  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name order  end_name  begin_init  begin_expr  begin_name def value  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name get project  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name o  end_name  begin_init  begin_expr  begin_call  begin_name get project  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get property  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name o  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name order  end_name  begin_operator  end_operator  begin_name o  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name order  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment only the developer knows what s he is doing  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name add existing  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name p  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name order  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment first developer could use a little help  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name add existing  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name p  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name add existing  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name order  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment ignore don t trust anyone  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name add existing  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_comment last don t trust the developer  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name order  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name log  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name order  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name msg warn  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name add existing  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name add existing  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name p  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_else  end_if  end_else  end_if  begin_return  begin_expr  begin_name result  end_name  end_expr  end_return  end_block 
begin_comment this is the operation to get the existing or recalculated properties return the properties for this propertyset end_comment begin_type  begin_specifier  end_specifier  begin_name properties  end_name  end_type  begin_name get properties  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name is reference  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name get ref  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get properties  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name set  end_name  end_type  begin_name names  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name project  end_name  end_type  begin_name prj  end_name  begin_init  begin_expr  begin_call  begin_name get project  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name hashtable  end_name  end_type  begin_name props  end_name  begin_init  begin_expr  begin_name prj  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get all system properties  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name prj  end_name  begin_operator  end_operator  begin_name get properties  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment quick dirty to make nested mapped p sets work  end_comment  begin_for  begin_init  begin_decl  begin_type  begin_name enumeration  end_name  end_type  begin_name e  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name set refs  end_name  begin_operator  end_operator  begin_name elements  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name has more elements  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_incr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name property set  end_name  end_type  begin_name set  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name property set  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name next element  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name props  end_name  begin_operator  end_operator  begin_name put all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name set  end_name  begin_operator  end_operator  begin_name get properties  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_if  begin_condition  begin_expr  begin_call  begin_name get dynamic  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name cached names  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name names  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name hash set  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add property names  end_name  begin_argument_list  begin_argument  begin_expr  begin_name names  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name props  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment add this property set s nested property sets property names  end_comment  begin_for  begin_init  begin_decl  begin_type  begin_name enumeration  end_name  end_type  begin_name e  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name set refs  end_name  begin_operator  end_operator  begin_name elements  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name has more elements  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_incr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name property set  end_name  end_type  begin_name set  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name property set  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name next element  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name names  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name set  end_name  begin_operator  end_operator  begin_name get properties  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name key set  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_if  begin_condition  begin_expr  begin_name negate  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment make a copy  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name hash set  end_name  end_type  begin_name complement  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name hash set  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name props  end_name  begin_operator  end_operator  begin_name key set  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name complement  end_name  begin_operator  end_operator  begin_name remove all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name names  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name names  end_name  begin_operator  end_operator  begin_name complement  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name get dynamic  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name cached names  end_name  begin_operator  end_operator  begin_name names  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name names  end_name  begin_operator  end_operator  begin_name cached names  end_name  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name file name mapper  end_name  end_type  begin_name m  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name mapper  end_name  end_type  begin_name my mapper  end_name  begin_init  begin_expr  begin_call  begin_name get mapper  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name my mapper  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name m  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name my mapper  end_name  begin_operator  end_operator  begin_name get implementation  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name properties  end_name  end_type  begin_name properties  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name properties  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment iterate through the names get the matching values  end_comment  begin_for  begin_init  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name iter  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name names  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_call  begin_name  begin_name iter  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_incr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name string  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name iter  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name value  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name string  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name props  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name value  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment may be null if a system property has been added  end_comment  begin_comment after the project instance has been initialized  end_comment  begin_if  begin_condition  begin_expr  begin_name m  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment map the names  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  begin_index  end_index  end_type  begin_name newname  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name m  end_name  begin_operator  end_operator  begin_name map file name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name newname  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name name  end_name  begin_operator  end_operator  begin_name  begin_name newname  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name properties  end_name  begin_operator  end_operator  begin_name set property  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  begin_return  begin_expr  begin_name properties  end_name  end_expr  end_return  end_block 
begin_comment get an input stream for the resource return an input stream containing this resource s content throws io exception if unable to provide the content of this resource as a stream throws unsupported operation exception if input streams are not supported for this resource type end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name input stream  end_name  end_type  begin_name get input stream  end_name  begin_parameter_list  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name io exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name is reference  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name resource  end_name  begin_operator  end_operator  begin_call  begin_name get checked ref  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get input stream  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_comment i can t get my head around this is encoding treatment needed here  end_comment  begin_return  begin_comment new oata util reader input stream new input stream reader  end_comment  begin_expr  begin_operator  end_operator  begin_call  begin_name byte array input stream  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get content  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get bytes  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  begin_comment encoding encoding  end_comment  end_block 
 begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name get namespace uri  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name n  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name uri  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name n  end_name  begin_operator  end_operator  begin_name get namespace uri  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name uri  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment fixme is no namespace is empty namespace really ok  end_comment  begin_expr_stmt  begin_expr  begin_name uri  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_name uri  end_name  end_expr  end_return  end_block 
begin_comment perform a substitution on the regular expression param input the string to substitute on param argument the string which defines the substitution param options the list of options for the match and replace return the result of the operation throws build exception on error end_comment begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name substitute  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name input  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name argument  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name options  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name build exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_comment translate 1 to 1 so that the perl 5 substitution will work  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string buffer  end_name  end_type  begin_name subst  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name string buffer  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name argument  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name char  end_name  end_type  begin_name c  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name argument  end_name  begin_operator  end_operator  begin_name char at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name c  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name subst  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name subst  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name c  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name i  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name argument  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name c  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name argument  end_name  begin_operator  end_operator  begin_name char at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name value  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name character  end_name  begin_operator  end_operator  begin_name digit  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name value  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name subst  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name append  end_name  begin_argument_list  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name subst  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  begin_else  begin_block  begin_comment xxx should throw an exception instead  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name subst  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name subst  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_else  end_if  end_block  end_for  begin_comment do the substitution  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name substitution  end_name  end_type  begin_name s  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name perl 5 substitution  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name subst  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name perl 5 substitution  end_name  begin_operator  end_operator  begin_name interpolate all  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_call  begin_name  begin_name util  end_name  begin_operator  end_operator  begin_name substitute  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name matcher  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get compiled pattern  end_name  begin_argument_list  begin_argument  begin_expr  begin_name options  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name input  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get subs options  end_name  begin_argument_list  begin_argument  begin_expr  begin_name options  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment perform a substitution on the regular expression param input the string to substitute on param argument the string which defines the substitution param options the list of options for the match and replace return the result of the operation throws build exception on error end_comment begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name substitute  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name input  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name argument  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name options  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name build exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name vector  end_name  end_type  begin_name v  end_name  begin_init  begin_expr  begin_call  begin_name get groups  end_name  begin_argument_list  begin_argument  begin_expr  begin_name input  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name options  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment replace 1 with the corresponding group  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string buffer  end_name  end_type  begin_name result  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name string buffer  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name argument  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name char  end_name  end_type  begin_name c  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name argument  end_name  begin_operator  end_operator  begin_name char at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name c  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name i  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name argument  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name c  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name argument  end_name  begin_operator  end_operator  begin_name char at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name value  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name character  end_name  begin_operator  end_operator  begin_name digit  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name value  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name string  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name v  end_name  begin_operator  end_operator  begin_name element at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  begin_else  begin_block  begin_comment xxx should throw an exception instead  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_for  begin_expr_stmt  begin_expr  begin_name argument  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name re  end_name  end_type  begin_name reg  end_name  begin_init  begin_expr  begin_call  begin_name get compiled pattern  end_name  begin_argument_list  begin_argument  begin_expr  begin_name options  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name s options  end_name  begin_init  begin_expr  begin_call  begin_name get subs options  end_name  begin_argument_list  begin_argument  begin_expr  begin_name options  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_call  begin_name  begin_name reg  end_name  begin_operator  end_operator  begin_name subst  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name input  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name argument  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name s options  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment perform a substitution on the regular expression param input the string to substitute on param argument the string which defines the substitution param options the list of options for the match and replace return the result of the operation throws build exception on error end_comment begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name substitute  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name input  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name argument  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name options  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name build exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_comment translate 1 to 1 so that the matcher will work  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string buffer  end_name  end_type  begin_name subst  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name string buffer  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name argument  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name char  end_name  end_type  begin_name c  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name argument  end_name  begin_operator  end_operator  begin_name char at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name c  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name subst  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name subst  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name c  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name i  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name argument  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name c  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name argument  end_name  begin_operator  end_operator  begin_name char at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name value  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name character  end_name  begin_operator  end_operator  begin_name digit  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name value  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name subst  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name append  end_name  begin_argument_list  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name subst  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  begin_else  begin_block  begin_comment xxx should throw an exception instead  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name subst  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name subst  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_else  end_if  end_block  end_for  begin_expr_stmt  begin_expr  begin_name argument  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name subst  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name s options  end_name  begin_init  begin_expr  begin_call  begin_name get subs options  end_name  begin_argument_list  begin_argument  begin_expr  begin_name options  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name pattern  end_name  end_type  begin_name p  end_name  begin_init  begin_expr  begin_call  begin_name get compiled pattern  end_name  begin_argument_list  begin_argument  begin_expr  begin_name options  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string buffer  end_name  end_type  begin_name sb  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name string buffer  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name matcher  end_name  end_type  begin_name m  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name p  end_name  begin_operator  end_operator  begin_name matcher  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name input  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name regexp util  end_name  begin_operator  end_operator  begin_name has flag  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name s options  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name replace all  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name m  end_name  begin_operator  end_operator  begin_name replace all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name argument  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name res  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name m  end_name  begin_operator  end_operator  begin_name find  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name res  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name m  end_name  begin_operator  end_operator  begin_name append replacement  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name sb  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name argument  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name m  end_name  begin_operator  end_operator  begin_name append tail  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name sb  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name input  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_else  end_if  begin_return  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment replace all backreferences in the to pattern with the matched groups of the source param source the source file name return the translated file name end_comment begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name replace references  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name source  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name vector  end_name  end_type  begin_name v  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name reg  end_name  begin_operator  end_operator  begin_name get groups  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name source  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name regexp options  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name set length  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name  begin_name to  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_if  begin_condition  begin_expr  begin_name  begin_name to  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name i  end_name  begin_operator  end_operator  begin_name  begin_name to  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name value  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name character  end_name  begin_operator  end_operator  begin_name digit  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name to  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name value  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name string  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name v  end_name  begin_operator  end_operator  begin_name element at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name to  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  begin_else  begin_block  begin_comment xxx should throw an exception instead  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name to  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_for  begin_return  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name test 5  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name execute target  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name java  end_name  begin_operator  end_operator  begin_name io  end_name  begin_operator  end_operator  begin_name file  end_name  end_name  end_type  begin_name f  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name java  end_name  begin_operator  end_operator  begin_name io  end_name  begin_operator  end_operator  begin_name file  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get project dir  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name f  end_name  begin_operator  end_operator  begin_name exists  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name f  end_name  begin_operator  end_operator  begin_name is directory  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name fail  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment we keep this so we have something to delete in later tests  end_comment  end_block 
begin_comment we keep this so we have something to delete in later tests end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name test 6  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name expect build exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment borrowed from token filter test end_comment begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name get file string  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name filename  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name io exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name result  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name file reader  end_name  end_type  begin_name reader  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_name reader  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name file reader  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get project  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name resolve file  end_name  begin_argument_list  begin_argument  begin_expr  begin_name filename  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name result  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name file utils  end_name  begin_operator  end_operator  begin_name read fully  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name reader  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name io exception  end_name  end_type  begin_name eye oh ex  end_name  end_decl  end_param  end_parameter_list  begin_block  end_block  end_catch  begin_finally  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name file utils  end_name  begin_operator  end_operator  begin_name close  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name reader  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_finally  end_try  begin_return  begin_expr  begin_name result  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name test manual stop  end_name  begin_parameter_list  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name process  end_name  end_type  begin_name process  end_name  begin_init  begin_expr  begin_call  begin_name get process  end_name  begin_argument_list  begin_argument  begin_expr  begin_name time out  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name watchdog  end_name  begin_operator  end_operator  begin_name start  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name process  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment i assume that starting this takes less than time out 2 ms  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name thread  end_name  end_type  begin_name thread  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name thread  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name process  end_name  begin_operator  end_operator  begin_name wait for  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name interrupted exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not very nice but will do the job  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name fail  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  end_try  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name thread  end_name  begin_operator  end_operator  begin_name start  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment wait for time out 2 there should be about time out 2 ms remaining before timeout  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name thread  end_name  begin_operator  end_operator  begin_name join  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name time out  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment now stop the watchdog  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name watchdog  end_name  begin_operator  end_operator  begin_name stop  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment wait for the thread to die should be the end of the process  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name thread  end_name  begin_operator  end_operator  begin_name join  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment process should be dead and well finished  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name assert equals  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name process  end_name  begin_operator  end_operator  begin_name exit value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name assert true  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name watchdog  end_name  begin_operator  end_operator  begin_name killed process  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name process  end_name  begin_operator  end_operator  begin_name wait for  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name interrupted exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not very nice but will do the job  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name fail  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  end_try  end_block 
begin_comment not used but public so theoretically must remain for bc end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name assert equal content  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name expect  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name result  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name assertion failed error  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name io exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name exists  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name fail  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name result  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name input stream  end_name  end_type  begin_name in expect  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name input stream  end_name  end_type  begin_name in result  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_name in expect  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name buffered input stream  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name file input stream  end_name  begin_argument_list  begin_argument  begin_expr  begin_name expect  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name in result  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name buffered input stream  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name file input stream  end_name  begin_argument_list  begin_argument  begin_expr  begin_name result  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name expected byte  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name in expect  end_name  begin_operator  end_operator  begin_name read  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_name expected byte  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name assert equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name expected byte  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name in result  end_name  begin_operator  end_operator  begin_name read  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name expected byte  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name in expect  end_name  begin_operator  end_operator  begin_name read  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_while  begin_expr_stmt  begin_expr  begin_call  begin_name assert equals  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name in result  end_name  begin_operator  end_operator  begin_name read  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_finally  begin_block  begin_if  begin_condition  begin_expr  begin_name in result  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name in result  end_name  begin_operator  end_operator  begin_name close  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name in expect  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name in expect  end_name  begin_operator  end_operator  begin_name close  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_finally  end_try  end_block 
 begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name get key  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name key  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_name key  end_name  end_expr  end_return  begin_comment xxx what is this for  end_comment  end_block 
begin_comment provide public visibility end_comment begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name resolve file  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name file  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name resolve file  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name file  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment copied from concat test end_commentbegin_comment  end_commentbegin_comment helper methods should be in build file test end_commentbegin_comment  end_comment begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name get file string  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name filename  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name io exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name reader  end_name  end_type  begin_name r  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_name r  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name file reader  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get project  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name resolve file  end_name  begin_argument_list  begin_argument  begin_expr  begin_name filename  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_call  begin_name  begin_name file utils  end_name  begin_operator  end_operator  begin_name read fully  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name r  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  begin_finally  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name file utils  end_name  begin_operator  end_operator  begin_name close  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name r  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_finally  end_try  end_block 
begin_comment make sure every property loaded from the goldfile was also read from the xml property we could try and test the other way but some other properties may get set in the xml property due to generic project task configuration end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name ensure properties  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name msg  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name input file  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name working dir  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name project  end_name  end_type  begin_name p  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name properties  end_name  end_type  begin_name properties  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name hashtable  end_name  end_type  begin_name xmlproperties  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name p  end_name  begin_operator  end_operator  begin_name get properties  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment every key identified by the properties must have been loaded  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name enumeration  end_name  end_type  begin_name property key enum  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name properties  end_name  begin_operator  end_operator  begin_name property names  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name property key enum  end_name  begin_operator  end_operator  begin_name has more elements  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name current key  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name property key enum  end_name  begin_operator  end_operator  begin_name next element  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to string  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name assert msg  end_name  begin_init  begin_expr  begin_name msg  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name input file  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_name current key  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name property value  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name properties  end_name  begin_operator  end_operator  begin_name get property  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name current key  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name xml value  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name string  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name xmlproperties  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name current key  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name property value  end_name  begin_operator  end_operator  begin_name index of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment the property is an id s thing either a property  end_comment  begin_comment or a path we need to make sure  end_comment  begin_comment that the object was created with the given id  end_comment  begin_comment we don t have an adequate way of testing the actual  end_comment  begin_comment value of the path object though  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name id  end_name  begin_init  begin_expr  begin_name current key  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name obj  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name p  end_name  begin_operator  end_operator  begin_name get references  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  begin_name id  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name obj  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name fail  end_name  begin_argument_list  begin_argument  begin_expr  begin_name assert msg  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment what is the property supposed to be  end_comment  begin_expr_stmt  begin_expr  begin_name property value  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name property value  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name property value  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name property value  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name obj  end_name  begin_operator  end_operator  begin_name path  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name fail  end_name  begin_argument_list  begin_argument  begin_expr  begin_name assert msg  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name obj  end_name  begin_operator  end_operator  begin_name get class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name assert equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name assert msg  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name property value  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name obj  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  begin_else  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name property value  end_name  begin_operator  end_operator  begin_name index of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment the property is the name of a file we are testing  end_comment  begin_comment a location attribute so we need to resolve the given  end_comment  begin_comment file name in the provided folder  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name file name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name property value  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name property value  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name f  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name file  end_name  begin_argument_list  begin_argument  begin_expr  begin_name working dir  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name file name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name property value  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name f  end_name  begin_operator  end_operator  begin_name get absolute path  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name assert equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name assert msg  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name property value  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name xml value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_while  end_block 
