begin_comment  end_commentbegin_comment constructor end_commentbegin_comment the constructor end_comment begin_specifier  end_specifier  begin_name abstract argo j panel  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name this  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment the constructor param the title the name as a localized string end_commentbegin_comment todo review all callers to make sure that they localize the title end_comment begin_specifier  end_specifier  begin_name abstract argo j panel  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name the title  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name this  end_name  begin_argument_list  begin_argument  begin_expr  begin_name the title  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment the constructor param the title the name a localized string param t if true remove tab from parent j tabbed pane end_commentbegin_comment todo review all callers to make sure that they localize the title end_commentbegin_comment in process by harold braun 20070912 end_comment begin_specifier  end_specifier  begin_name abstract argo j panel  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name the title  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name t  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name set title  end_name  begin_argument_list  begin_argument  begin_expr  begin_name the title  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name tear  end_name  begin_operator  end_operator  begin_name t  end_name  end_expr  end_expr_stmt  end_block 
begin_comment indicates the end of the range for notation events p todo remove this not used anyway return the last id reserved for events end_comment begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name get event end range  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name get event start range  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_name argo event end  end_name  begin_operator  end_operator  begin_call  begin_name get event start range  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_return  end_block 
begin_comment removes a listener eventtype pair from the listener list todo replace the listener implementation with a event listener list for better performance param event the event to which the listener will not listen any more param listener the listener to be removed end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name do remove listener  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name event  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name argo event listener  end_name  end_type  begin_name listener  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name listeners  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_synchronized  begin_expr  begin_name listeners  end_name  end_expr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name pair  end_name  end_argument  end_argument_list  end_name  end_type  begin_name remove list  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name pair  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name event  end_name  begin_operator  end_operator  begin_name  begin_name argo event types  end_name  begin_operator  end_operator  begin_name any event  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment todo this is a linear search of a list that contain many  end_comment  begin_comment thousands of items one for every fig in the entire project  end_comment  begin_for  begin_init  begin_decl  begin_type  begin_name pair  end_name  end_type  begin_name p  end_name  begin_range  begin_expr  begin_name listeners  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_name  begin_name p  end_name  begin_operator  end_operator  begin_name listener  end_name  end_name  begin_operator  end_operator  begin_name listener  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name remove list  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name p  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  end_block  end_then  begin_else  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name pair  end_name  end_type  begin_name test  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name pair  end_name  begin_argument_list  begin_argument  begin_expr  begin_name event  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name listener  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo this is a linear search of a list that contain many  end_comment  begin_comment thousands of items one for every fig in the entire project  end_comment  begin_for  begin_init  begin_decl  begin_type  begin_name pair  end_name  end_type  begin_name p  end_name  begin_range  begin_expr  begin_name listeners  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name p  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name test  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name remove list  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name p  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name listeners  end_name  begin_operator  end_operator  begin_name remove all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name remove list  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_synchronized  end_block 
begin_comment handle firing a notation event p todo this needs to be managed on a per diagram or per project basis param event the event to be fired param listener the listener end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name handle fire notation event  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name argo notation event  end_name  end_type  begin_name event  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name argo notation event listener  end_name  end_type  begin_name listener  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment notation events are likely to cause gef swing operations so we  end_comment  begin_comment dispatch them on the swing event thread as a convenience so that  end_comment  begin_comment the receiving notation changed methods don t need to deal with it  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name swing utilities  end_name  begin_operator  end_operator  begin_name is event dispatch thread  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name fire notation event internal  end_name  begin_argument_list  begin_argument  begin_expr  begin_name event  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name listener  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name swing utilities  end_name  begin_operator  end_operator  begin_name invoke later  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name runnable  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name fire notation event internal  end_name  begin_argument_list  begin_argument  begin_expr  begin_name event  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name listener  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block 
begin_comment handle firing a diagram appearance event p todo this needs to be managed on a per diagram or per project basis param event the event to be fired param listener the listener end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name handle fire diagram appearance event  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name argo diagram appearance event  end_name  end_type  begin_name event  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name argo diagram appearance event listener  end_name  end_type  begin_name listener  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name swing utilities  end_name  begin_operator  end_operator  begin_name is event dispatch thread  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name fire diagram appearance event internal  end_name  begin_argument_list  begin_argument  begin_expr  begin_name event  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name listener  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name swing utilities  end_name  begin_operator  end_operator  begin_name invoke later  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name runnable  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name fire diagram appearance event internal  end_name  begin_argument_list  begin_argument  begin_expr  begin_name event  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name listener  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block 
begin_comment look up the icon for a key param key the key to find return the found icon end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name image icon  end_name  end_type  begin_name lookup icon  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name key  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name lookup icon resource  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get image binding  end_name  begin_argument_list  begin_argument  begin_expr  begin_name key  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name key  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment find the icon for a given model element return the icon or code null code if there is no icon param value the model element todo this should not use string matching on classnames to do this since this means that we have knowledge about how the model elements are implemented outside of the model component end_comment begin_type  begin_specifier  end_specifier  begin_name icon  end_name  end_type  begin_name lookup icon  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name value  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name value  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name value  end_name  begin_operator  end_operator  begin_name string  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name icon  end_name  end_type  begin_name icon  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name icon cache  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name get class  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a pseudostate  end_name  begin_argument_list  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name kind  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get kind  end_name  begin_argument_list  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name data types helper  end_name  end_type  begin_name helper  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get data types helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name helper  end_name  begin_operator  end_operator  begin_name equals initial kind  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name kind  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name icon  end_name  begin_operator  end_operator  begin_name initial state icon  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name helper  end_name  begin_operator  end_operator  begin_name equals deep history kind  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name kind  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name icon  end_name  begin_operator  end_operator  begin_name deep icon  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name helper  end_name  begin_operator  end_operator  begin_name equals shallow history kind  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name kind  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name icon  end_name  begin_operator  end_operator  begin_name shallow icon  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name helper  end_name  begin_operator  end_operator  begin_name equals fork kind  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name kind  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name icon  end_name  begin_operator  end_operator  begin_name fork icon  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name helper  end_name  begin_operator  end_operator  begin_name equals join kind  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name kind  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name icon  end_name  begin_operator  end_operator  begin_name join icon  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name helper  end_name  begin_operator  end_operator  begin_name equals choice kind  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name kind  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name icon  end_name  begin_operator  end_operator  begin_name branch icon  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name helper  end_name  begin_operator  end_operator  begin_name equals junction kind  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name kind  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name icon  end_name  begin_operator  end_operator  begin_name junction icon  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment if m pseudostate kind final equals kind  end_comment  begin_comment icon final state icon  end_comment  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a abstraction  end_name  begin_argument_list  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name icon  end_name  begin_operator  end_operator  begin_name realize icon  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name icon  end_name  begin_operator  end_operator  begin_name exception icon  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_comment needs more work sending and receiving icons  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a signal  end_name  begin_argument_list  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name icon  end_name  begin_operator  end_operator  begin_name signal icon  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_else  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a comment  end_name  begin_argument_list  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name icon  end_name  begin_operator  end_operator  begin_name comment icon  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name icon  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name c name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name icon  end_name  begin_operator  end_operator  begin_call  begin_name lookup icon resource  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name icon  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name c name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_synchronized  begin_expr  begin_name icon cache  end_name  end_expr  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name icon cache  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name get class  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name icon  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_synchronized  end_block  end_else  end_if  end_block  end_then  end_if  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name invalid element exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  end_expr  end_return  end_block  end_catch  end_try  begin_return  begin_expr  begin_name icon  end_name  end_expr  end_return  end_block 
begin_comment the main entry point of argo uml param args command line parameters end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name main  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name  begin_name string  end_name  begin_index  end_index  end_name  end_type  begin_name args  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name info  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name simple timer  end_name  end_type  begin_name st  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name simple timer  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name mark  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name init preinitialize  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name mark  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name parse command line  end_name  begin_argument_list  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment register our last chance exception handler  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name awt exception handler  end_name  begin_operator  end_operator  begin_name register exception handler  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment get the splash screen up as early as possible  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name mark  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name splash screen  end_name  end_type  begin_name splash  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name batch  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment we have to do this to set the laf for the splash screen  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name mark  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name look and feel mgr  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name initialize look and feel  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name the theme  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name look and feel mgr  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set current theme  end_name  begin_argument_list  begin_argument  begin_expr  begin_name the theme  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name do splash  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name splash  end_name  begin_operator  end_operator  begin_call  begin_name initialize splash  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  begin_comment main initialization happens here  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name project browser  end_name  end_type  begin_name pb  end_name  begin_init  begin_expr  begin_call  begin_name initialize subsystems  end_name  begin_argument_list  begin_argument  begin_expr  begin_name st  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name splash  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment needs to happen after initialization is done modules loaded  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name mark  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name batch  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment todo add an open most recent project command so that  end_comment  begin_comment command state can be decoupled from user settings  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name perform commands internal  end_name  begin_argument_list  begin_argument  begin_expr  begin_name commands  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name commands  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name out  end_name  begin_operator  end_operator  begin_name println  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_call  begin_name action exit  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name do command  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name reload recent  end_name  begin_operator  end_operator  begin_name project name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name project name  end_name  begin_operator  end_operator  begin_call  begin_name get most recent project  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name url  end_name  end_type  begin_name url to open  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name project name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name project name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name persistence manager  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name fix extension  end_name  begin_argument_list  begin_argument  begin_expr  begin_name project name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name url to open  end_name  begin_operator  end_operator  begin_call  begin_name project url  end_name  begin_argument_list  begin_argument  begin_expr  begin_name project name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name url to open  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name open project  end_name  begin_argument_list  begin_argument  begin_expr  begin_name st  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name splash  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name pb  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name url to open  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name mark  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name splash  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name splash  end_name  begin_operator  end_operator  begin_name update progress  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name mark  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name update progress  end_name  begin_argument_list  begin_argument  begin_expr  begin_name splash  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name argo frame  end_name  begin_operator  end_operator  begin_name get frame  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set visible  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name mark  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name splash  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name splash  end_name  begin_operator  end_operator  begin_name set visible  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name splash  end_name  begin_operator  end_operator  begin_name dispose  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name splash  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name perform commands  end_name  begin_argument_list  begin_argument  begin_expr  begin_name commands  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name commands  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name mark  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name runnable  end_name  end_type  begin_name start critics  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name start critics  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name main  end_name  begin_operator  end_operator  begin_name add post load action  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name start critics  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name mark  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name runnable  end_name  end_type  begin_name module loader  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name load modules  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name main  end_name  begin_operator  end_operator  begin_name add post load action  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name module loader  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name post load  end_name  end_type  begin_name pl  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name post load  end_name  begin_argument_list  begin_argument  begin_expr  begin_name post load actions  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name thread  end_name  end_type  begin_name post load thead  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name thread  end_name  begin_argument_list  begin_argument  begin_expr  begin_name pl  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name post load thead  end_name  begin_operator  end_operator  begin_name start  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name info  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name info  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name enumeration  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name result  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_call  begin_name  begin_name i  end_name  begin_operator  end_operator  begin_name has more elements  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_incr  end_incr  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name info  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name i  end_name  begin_operator  end_operator  begin_name next element  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name info  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name info  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name st  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name argo frame  end_name  begin_operator  end_operator  begin_name get frame  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set cursor  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name cursor  end_name  begin_operator  end_operator  begin_name get predefined cursor  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name cursor  end_name  begin_operator  end_operator  begin_name default cursor  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment andreas just temporary a warning dialog for uml 2  end_comment  begin_if  begin_condition  begin_expr  begin_name show uml 2 warning  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get uml version  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name starts with  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name j option pane  end_name  begin_operator  end_operator  begin_name show message dialog  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name argo frame  end_name  begin_operator  end_operator  begin_name get frame  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name j option pane  end_name  begin_operator  end_operator  begin_name warning message  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment tool tip manager shared instance set initial delay 500  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name tool tip manager  end_name  begin_operator  end_operator  begin_name shared instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set dismiss delay  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name throwable  end_name  end_type  begin_name t  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name fatal  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name t  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_finally  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name out  end_name  begin_operator  end_operator  begin_name println  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name t  end_name  begin_operator  end_operator  begin_name print stack trace  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name exit  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_finally  end_try  end_block  end_catch  end_try  end_block 
begin_comment parse command line args the assumption is that all options precede the name of a project file to load sets static fields that can be referenced later param args command line args end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name parse command line  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name  begin_name string  end_name  begin_index  end_index  end_name  end_type  begin_name args  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_name do splash  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name configuration  end_name  begin_operator  end_operator  begin_name get boolean  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name argo  end_name  begin_operator  end_operator  begin_name key splash  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name reload recent  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name configuration  end_name  begin_operator  end_operator  begin_name get boolean  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name argo  end_name  begin_operator  end_operator  begin_name key reload recent project  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name commands  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name the theme  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_if  begin_condition  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name starts with  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name theme name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name look and feel mgr  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get theme class name from arg  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name theme name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name the theme  end_name  begin_operator  end_operator  begin_name theme name  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name equals ignore case  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name equals ignore case  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name equals ignore case  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name equals ignore case  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name print usage  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name exit  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name equals ignore case  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name do splash  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name equals ignore case  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name reload recent  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name equals ignore case  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_name i  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name commands  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name equals ignore case  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_name i  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name set locale  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name equals ignore case  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name batch  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name equals ignore case  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_name i  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name project name  end_name  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_operator  end_operator  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name equals ignore case  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_name i  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment todo huge side effect hoist out of parse tfm  end_comment  begin_comment let s load the project  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name project to be printed  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name persistence manager  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name fix extension  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_operator  end_operator  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name url  end_name  end_type  begin_name url to be printed  end_name  begin_init  begin_expr  begin_call  begin_name project url  end_name  begin_argument_list  begin_argument  begin_expr  begin_name project to be printed  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name project browser  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name load project  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name file  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name url to be printed  end_name  begin_operator  end_operator  begin_name get file  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment now let s print it  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name print manager  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name print  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment nothing else to do  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name exit  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name equals ignore case  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment andreas just temporary for the uml 2 pre alpha versions  end_comment  begin_expr_stmt  begin_expr  begin_name show uml 2 warning  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name err  end_name  begin_operator  end_operator  begin_name println  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_block  end_then  begin_else  begin_block  begin_if  begin_condition  begin_expr  begin_name project name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name out  end_name  begin_operator  end_operator  begin_name println  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name project name  end_name  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_else  end_if  end_block  end_for  end_block 
begin_comment compute which critics should be active i e they can be applied by apply all critics for a given designer p note i am setting global data i e the is enabled bit in each critic based on the needs of one designer i don t really support more than one designer which is why each designer if we would support more than one designer has his own agency todo should loop over simpler list of critics not compound critics param d the designer end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name determine active critics  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name designer  end_name  end_type  begin_name d  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_for  begin_init  begin_decl  begin_type  begin_name critic  end_name  end_type  begin_name c  end_name  begin_range  begin_expr  begin_name critics  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name control mech  end_name  begin_operator  end_operator  begin_name is relevant  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name d  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name be active  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name be inactive  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_for  end_block 
begin_comment return true iff the given to do item is still valid and should be kept in the given designers to do list critics that are not enabled should always return false so that their to do items will be removed subclasses of critic that supply multiple offenders should always override this method p by default this method basically asks the critic to again critique the offending object and then it checks if the resulting to do item is the same as the one already posted this is simple and it works fine for light weight critics critics that expend a lot of computational effort in making feedback that can be easily check to see if it still holds should override this method p todo maybe to do item should carry some data to make this method more efficient inherit doc end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name still valid  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name to do item  end_name  end_type  begin_name i  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name designer  end_name  end_type  begin_name dsgr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name is active  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name warn  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name i  end_name  begin_operator  end_operator  begin_name get offenders  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name size  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name predicate  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name i  end_name  begin_operator  end_operator  begin_name get offenders  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name dsgr  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment now we know that this critic is still valid what we need to  end_comment  begin_comment figure out is if the corresponding to do item is still valid  end_comment  begin_comment the to do item is to be replaced if the name of some offender  end_comment  begin_comment has changed that affects its description or if the contents  end_comment  begin_comment of the list of offenders has changed  end_comment  begin_comment we check that by creating a new to do item and then verifying  end_comment  begin_comment that it looks exactly the same  end_comment  begin_comment this really creates a lot of to do items that goes to waste  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name to do item  end_name  end_type  begin_name item  end_name  begin_init  begin_expr  begin_call  begin_name to do item  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name i  end_name  begin_operator  end_operator  begin_name get offenders  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name dsgr  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name item  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_return  end_block  end_then  end_if  begin_return  begin_expr  end_expr  end_return  end_block 
begin_comment reply true iff this critic is relevant to the goals that the designer is trying to achieve by default all critic s are relevant regardless of the goal model really this is something for a control mech to compute but if a subclass of critic encapsulates some information you may need to override this method p todo i would like a better default action but goals are typed and their values must be interpreted by critics they are not as generic as the decision model param dsgr the designer return true if relevant end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is relevant to goals  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name designer  end_name  end_type  begin_name dsgr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  end_expr  end_return  end_block 
begin_comment  end_commentbegin_comment design feedback end_commentbegin_comment reply the to do item that the designer should see iff predicate returns true by default it just fills in the fields of the to do item from accessor methods of this critic critic subclasses may override this method or the accessor methods to add computed fields to the to do item todo critic s may want to add new fields to a to do item to make still valid more efficent see critic critique param dm the offender param dsgr the designer return to do item end_comment begin_type  begin_specifier  end_specifier  begin_name to do item  end_name  end_type  begin_name to do item  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name dm  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name designer  end_name  end_type  begin_name dsgr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name to do item  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name dm  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name dsgr  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment  end_commentbegin_comment issue resolution end_commentbegin_comment todo not implemented yet the idea is that some problems identified by critic s can be fixed with certain design manipulations or transforms that can be applied automatically to resolve the problem this method replies true iff the given problem can be fixed the fix it method actually does the fix see org argouml cognitive poster can fix it org argouml cognitive to do item also see critic fix it end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name can fix it  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name to do item  end_name  end_type  begin_name item  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  end_expr  end_return  end_block 
begin_comment  end_commentbegin_comment constructor end_commentbegin_comment construct a new critic instance typically only one instance of each critic class is created and stored in a static variable as per the singleton pattern each domain extension should define a static initializer block to make one instance of each critic and call link agency register critic object with that instance end_comment begin_specifier  end_specifier  begin_name critic  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment todo this is a hack a much better way of doing this would be not to start the critic in the first place  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name configuration  end_name  begin_operator  end_operator  begin_name get boolean  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get critic key  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name add control rec  end_name  begin_argument_list  begin_argument  begin_expr  begin_name enabled  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name boolean  end_name  begin_operator  end_operator  begin_name true  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name is active  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name add control rec  end_name  begin_argument_list  begin_argument  begin_expr  begin_name enabled  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name boolean  end_name  begin_operator  end_operator  begin_name false  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name is active  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name add control rec  end_name  begin_argument_list  begin_argument  begin_expr  begin_name snooze order  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name snooze order  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name critic type  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name knowledge types  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name kt correctness  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name decision category  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name more info url  end_name  begin_operator  end_operator  begin_call  begin_name default more info url  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name description  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name headline  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name message format  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name object  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_call  begin_name get class  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_block  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name priority  end_name  begin_operator  end_operator  begin_name  begin_name to do item  end_name  begin_operator  end_operator  begin_name med priority  end_name  end_name  end_expr  end_expr_stmt  end_block 
begin_comment see javax swing event document listener changed update javax swing event document event end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name changed update  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name document event  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get class  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment apparently this method is never called  end_comment  end_block 
begin_comment apparently this method is never called end_commentbegin_comment see java awt event item listener item state changed java awt event item event end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name item state changed  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name item event  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name src  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name get source  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name src  end_name  begin_operator  end_operator  begin_name priority  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name set target priority  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name src  end_name  begin_operator  end_operator  begin_name use clar  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name set target use clarifiers  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name src  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_else  end_if  end_block 
begin_comment todo end_commentbegin_comment todo why is this here who is calling this see java beans vetoable change listener vetoable change java beans property change event end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name vetoable change  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name property change event  end_name  end_type  begin_name pce  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name swing utilities  end_name  begin_operator  end_operator  begin_name invoke later  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name runnable  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name fire table structure changed  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment continuously select and execute critics against this designer s design link spawn critiquer object is used to start a thread that runs this end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_try  begin_block  begin_while  begin_condition  begin_expr  end_expr  end_condition  begin_block  begin_comment local variables what do they do  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name long  end_name  end_type  begin_name critique start time  end_name  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name long  end_name  end_type  begin_name cutoff time  end_name  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name min warm elements  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name size  end_name  end_decl  end_decl_stmt  begin_comment the critiquing thread should wait if disabled  end_comment  begin_synchronized  begin_expr  begin_name this  end_name  end_expr  begin_block  begin_while  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name configuration  end_name  begin_operator  end_operator  begin_name get boolean  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name designer  end_name  begin_operator  end_operator  begin_name auto critique  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name wait  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name interrupted exception  end_name  end_type  begin_name ignore  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name ignore  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  end_try  end_block  end_while  end_block  end_synchronized  begin_comment why  end_comment  begin_if  begin_condition  begin_expr  begin_name critiquing root  end_name  begin_operator  end_operator  begin_comment get auto critique  end_comment  begin_operator  end_operator  begin_name critique lock  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment why  end_comment  begin_synchronized  begin_expr  begin_name this  end_name  end_expr  begin_block  begin_expr_stmt  begin_expr  begin_name critique start time  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name current time millis  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name cutoff time  end_name  begin_operator  end_operator  begin_name critique start time  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name size  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name add queue  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name size  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name hot queue  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name add queue  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name hot reason queue  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name add reason queue  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name add queue  end_name  begin_operator  end_operator  begin_name clear  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name add reason queue  end_name  begin_operator  end_operator  begin_name clear  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name longest hot  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name max  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name longest hot  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name hot queue  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name agency  end_name  begin_operator  end_operator  begin_name determine active critics  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name hot queue  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name dm  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name hot queue  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name long  end_name  end_type  begin_name reason code  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name hot reason queue  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name hot queue  end_name  begin_operator  end_operator  begin_name remove  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name hot reason queue  end_name  begin_operator  end_operator  begin_name remove  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name agency  end_name  begin_operator  end_operator  begin_name apply all critics  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dm  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name the designer  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name reason code  end_name  begin_operator  end_operator  begin_name long value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_while  begin_expr_stmt  begin_expr  begin_name size  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name remove queue  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name size  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name warm queue  end_name  begin_operator  end_operator  begin_name remove  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name remove queue  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name remove queue  end_name  begin_operator  end_operator  begin_name clear  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name warm queue  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name warm queue  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name critiquing root  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name warm queue  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name current time millis  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name cutoff time  end_name  begin_operator  end_operator  begin_name min warm elements  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_block  begin_if  begin_condition  begin_expr  begin_name min warm elements  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name min warm elements  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name dm  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name warm queue  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name warm queue  end_name  begin_operator  end_operator  begin_name remove  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name agency  end_name  begin_operator  end_operator  begin_name apply all critics  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dm  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name the designer  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name java  end_name  begin_operator  end_operator  begin_name util  end_name  begin_operator  end_operator  begin_name enumeration  end_name  end_name  end_type  begin_name sub d ms  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name child generator  end_name  begin_operator  end_operator  begin_name gen  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dm  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name sub d ms  end_name  begin_operator  end_operator  begin_name has more elements  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name next dm  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name sub d ms  end_name  begin_operator  end_operator  begin_name next element  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name warm queue  end_name  begin_operator  end_operator  begin_name contains  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name next dm  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name warm queue  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name next dm  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_while  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name invalid element exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment don t let a transient error kill the thread  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name warn  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name dm  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  end_try  end_block  end_while  end_block  end_synchronized  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name critique start time  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name current time millis  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_name critique duration  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name current time millis  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name critique start time  end_name  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name long  end_name  end_type  begin_name cycle duration  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name critique duration  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name critique cpu percent  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name long  end_name  end_type  begin_name sleep duration  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name min  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cycle duration  end_name  begin_operator  end_operator  begin_name critique duration  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name sleep duration  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name max  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name sleep duration  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name sleep duration  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name thread  end_name  begin_operator  end_operator  begin_name sleep  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name sleep duration  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name interrupted exception  end_name  end_type  begin_name ignore  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name ignore  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  end_try  end_block  end_while  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  end_try  end_block 
begin_comment a modelelement has been changed now we give it priority to be checked by the critics asap todo why is is synchronised todo what about when objects are first created param dm the design material param reason the reason end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name critique asap  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name dm  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name reason  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name long  end_name  end_type  begin_name r code  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name critic  end_name  begin_operator  end_operator  begin_name reason code for  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name reason  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name user working  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_comment todo should we be doing anything on deleted elements  end_comment  begin_comment this throws an exception on remove events skip for now tfm  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name reason  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name dm  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name add queue index  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name add queue  end_name  begin_operator  end_operator  begin_name index of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dm  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name add queue index  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name add queue  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dm  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name long  end_name  end_type  begin_name reason code obj  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name long  end_name  begin_argument_list  begin_argument  begin_expr  begin_name r code  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name add reason queue  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name reason code obj  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name long  end_name  end_type  begin_name reason code obj  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name add reason queue  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name add queue index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name long  end_name  end_type  begin_name rc  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name reason code obj  end_name  begin_operator  end_operator  begin_name long value  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name r code  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name long  end_name  end_type  begin_name new reason code obj  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name long  end_name  begin_argument_list  begin_argument  begin_expr  begin_name rc  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name add reason queue  end_name  begin_operator  end_operator  begin_name set  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name add queue index  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name new reason code obj  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name remove queue  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dm  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name longest add  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name max  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name longest add  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name add queue  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment obtains a string that identifies the type of critic param c a critic throws unresolvable exception not implemented return a identifying name of the critic end_comment begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name get critic string  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name critic  end_name  end_type  begin_name c  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name unresolvable exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_comment todo should throw if the string is not good  end_comment  begin_if  begin_condition  begin_expr  begin_name c  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name unresolvable exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_throw  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name s  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name get class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to string  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_name s  end_name  end_expr  end_return  end_block 
begin_comment check the offenders p this is called from the constructors where the offenders are given todo why do we only care about checking the first 2 offenders above param offs the offenders end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name check offs  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name list set  end_name  end_type  begin_name offs  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name offs  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name offender  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name collection util  end_name  begin_operator  end_operator  begin_name get first item or null  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name offs  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name offender  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name check argument  end_name  begin_argument_list  begin_argument  begin_expr  begin_name offender  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name offs  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name offender  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name offs  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name check argument  end_name  begin_argument_list  begin_argument  begin_expr  begin_name offender  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block 
begin_comment reply a set of design material s that are the subject of this to do item return the offenders todo offenders need to be more strongly typed tfm 20070630 end_comment begin_type  begin_specifier  end_specifier  begin_name list set  end_name  end_type  begin_name get offenders  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment todo should not be using assert here but i don t want to change to  end_comment  begin_comment illegal state exception at lead up to a release as i don t know how  end_comment  begin_comment much testing is done with assert on  end_comment  begin_assert  begin_expr  begin_name the offenders  end_name  begin_operator  end_operator  end_expr  end_assert  begin_return  begin_expr  begin_name the offenders  end_name  end_expr  end_return  end_block 
begin_comment todo this is not done yet eventually this will also feed the rational log end_commentbegin_comment public void resolve object reason end_commentbegin_comment to do list list designer the designer get to do list end_commentbegin_comment list resolve this reason end_commentbegin_comment  end_commentbegin_comment reply true iff this to do item should be kept on the designer s to do list this should return false if the poster has been deactivated or if it can be determined that the problem that raised this issue is no longer present param d the given designer return true if the todoitem is still valid end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name still valid  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name designer  end_name  end_type  begin_name d  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name the poster  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name the wizard  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name the wizard  end_name  begin_operator  end_operator  begin_name is started  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name the wizard  end_name  begin_operator  end_operator  begin_name is finished  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_return  begin_expr  begin_call  begin_name  begin_name the poster  end_name  begin_operator  end_operator  begin_name still valid  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name d  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment return the set of offenders todo the return value needs to be more strongly typed tfm 20070630 end_comment begin_type  begin_specifier  end_specifier  begin_name list set  end_name  end_type  begin_name get offenders  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment extra care to be taken since all offenders can be reset while  end_comment  begin_comment this method is running  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name list set  end_name  end_type  begin_name all  end_name  begin_init  begin_expr  begin_name all offenders  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name all  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name size  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name items  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name all  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name list set  end_name  begin_argument_list  begin_argument  begin_expr  begin_name size  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_synchronized  begin_expr  begin_name items  end_name  end_expr  begin_block  begin_for  begin_init  begin_decl  begin_type  begin_name to do item  end_name  end_type  begin_name item  end_name  begin_range  begin_expr  begin_name items  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name all  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name item  end_name  begin_operator  end_operator  begin_name get offenders  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  end_block  end_synchronized  begin_expr_stmt  begin_expr  begin_name all offenders  end_name  begin_operator  end_operator  begin_name all  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_name all  end_name  end_expr  end_return  end_block 
begin_comment  end_commentbegin_comment tree model implementation end_commentbegin_comment see javax swing tree tree model get child java lang object int end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get child  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name parent  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name index  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo this should only be building list up to index  end_comment  begin_return  begin_expr  begin_call  begin_name get children list  end_name  begin_argument_list  begin_argument  begin_expr  begin_name parent  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  begin_name index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment see org argouml cognitive to do list listener to do items added org argouml cognitive to do list event end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name to do items added  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name to do list event  end_name  end_type  begin_name tde  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  begin_index  end_index  end_type  begin_name path  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name object  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name path  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name designer  end_name  begin_operator  end_operator  begin_name the designer  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get to do list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name goal  end_name  end_type  begin_name g  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name designer  end_name  begin_operator  end_operator  begin_name the designer  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get goal list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_expr_stmt  begin_expr  begin_name  begin_name path  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_name g  end_name  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name n matching items  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name to do item  end_name  end_type  begin_name item  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name tde  end_name  begin_operator  end_operator  begin_name get to do item list  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name item  end_name  begin_operator  end_operator  begin_name supports  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name g  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_continue  end_continue  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name n matching items  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_for  begin_if  begin_condition  begin_expr  begin_name n matching items  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_continue  end_continue  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  begin_index  end_index  end_type  begin_name child indices  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name int  end_name  begin_index  begin_expr  begin_name n matching items  end_name  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  begin_index  end_index  end_type  begin_name children  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name object  end_name  begin_index  begin_expr  begin_name n matching items  end_name  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name n matching items  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_comment todo this shouldn t require two passes through the list tfm  end_comment  begin_for  begin_init  begin_decl  begin_type  begin_name to do item  end_name  end_type  begin_name item  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name tde  end_name  begin_operator  end_operator  begin_name get to do item list  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name item  end_name  begin_operator  end_operator  begin_name supports  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name g  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_continue  end_continue  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name  begin_name child indices  end_name  begin_index  begin_expr  begin_name n matching items  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name get index of child  end_name  begin_argument_list  begin_argument  begin_expr  begin_name g  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name item  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name children  end_name  begin_index  begin_expr  begin_name n matching items  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_name item  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name n matching items  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name fire tree nodes inserted  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name path  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name child indices  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name children  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  end_block 
begin_comment mouse listener implementation end_commentbegin_comment see java awt event mouse listener mouse pressed java awt event mouse event end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name mouse pressed  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name mouse event  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment empty implementation  end_comment  end_block 
begin_comment empty implementation end_commentbegin_comment see java awt event mouse listener mouse released java awt event mouse event end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name mouse released  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name mouse event  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment empty implementation  end_comment  end_block 
begin_comment empty implementation end_commentbegin_comment see java awt event mouse listener mouse entered java awt event mouse event end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name mouse entered  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name mouse event  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment empty implementation  end_comment  end_block 
begin_comment empty implementation end_commentbegin_comment see java awt event mouse listener mouse exited java awt event mouse event end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name mouse exited  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name mouse event  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment empty implementation  end_comment  end_block 
begin_comment empty implementation end_commentbegin_comment see java awt event mouse listener mouse clicked java awt event mouse event end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name mouse clicked  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name mouse event  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name row  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name tree  end_name  begin_operator  end_operator  begin_name get row for location  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name get x  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name get y  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name tree path  end_name  end_type  begin_name path  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name tree  end_name  begin_operator  end_operator  begin_name get path for location  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name get x  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name get y  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name row  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name get click count  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name my double click  end_name  begin_argument_list  begin_argument  begin_expr  begin_name row  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name path  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name my single click  end_name  begin_argument_list  begin_argument  begin_expr  begin_name row  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name path  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name consume  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment set the target anew todo this method is never used what is its intention remove it end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name refresh  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name set target  end_name  begin_argument_list  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment see javax swing event document listener changed update javax swing event document event end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name changed update  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name document event  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment apparently this method is never called  end_comment  end_block 
begin_comment apparently this method is never called end_commentbegin_comment  end_commentbegin_comment target listener implementation end_commentbegin_comment see org argouml ui targetmanager target listener target added org argouml ui targetmanager target event end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name target added  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name target event  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name set target  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name get new target  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment the constructor since this constructor does not set the necessary instructions textfield label and default value it is private end_comment begin_specifier  end_specifier  begin_name wiz step text field  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name instructions  end_name  begin_operator  end_operator  begin_name set editable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name instructions  end_name  begin_operator  end_operator  begin_name set wrap style word  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name instructions  end_name  begin_operator  end_operator  begin_name set border  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name instructions  end_name  begin_operator  end_operator  begin_name set background  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get main panel  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get background  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get main panel  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set border  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name etched border  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name grid bag layout  end_name  end_type  begin_name gb  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name grid bag layout  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get main panel  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set layout  end_name  begin_argument_list  begin_argument  begin_expr  begin_name gb  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name grid bag constraints  end_name  end_type  begin_name c  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name grid bag constraints  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name ipadx  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name ipady  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name weightx  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name weighty  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name anchor  end_name  end_name  begin_operator  end_operator  begin_name  begin_name grid bag constraints  end_name  begin_operator  end_operator  begin_name east  end_name  end_name  end_expr  end_expr_stmt  begin_comment todo should have an image of a wizard or some logo  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name j label  end_name  end_type  begin_name image  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name j label  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment image set margin new insets 0 0 0 0  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name image  end_name  begin_operator  end_operator  begin_name set icon  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get wizard icon  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name image  end_name  begin_operator  end_operator  begin_name set border  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridx  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridheight  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridy  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name gb  end_name  begin_operator  end_operator  begin_name set constraints  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name image  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get main panel  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name image  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name weightx  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridx  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridheight  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridwidth  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridy  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name fill  end_name  end_name  begin_operator  end_operator  begin_name  begin_name grid bag constraints  end_name  begin_operator  end_operator  begin_name horizontal  end_name  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name gb  end_name  begin_operator  end_operator  begin_name set constraints  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name instructions  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get main panel  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name instructions  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridx  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridy  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name weightx  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridwidth  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name fill  end_name  end_name  begin_operator  end_operator  begin_name  begin_name grid bag constraints  end_name  begin_operator  end_operator  begin_name none  end_name  end_name  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name spacer panel  end_name  end_type  begin_name spacer  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name spacer panel  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name gb  end_name  begin_operator  end_operator  begin_name set constraints  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name spacer  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get main panel  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name spacer  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridx  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridy  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name weightx  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridwidth  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name gb  end_name  begin_operator  end_operator  begin_name set constraints  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name label  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get main panel  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name label  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name weightx  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name fill  end_name  end_name  begin_operator  end_operator  begin_name  begin_name grid bag constraints  end_name  begin_operator  end_operator  begin_name horizontal  end_name  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridx  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridy  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name gb  end_name  begin_operator  end_operator  begin_name set constraints  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name field  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get main panel  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name field  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment c gridx 1  end_comment  begin_comment c gridy 3  end_comment  begin_comment c gridheight grid bag constraints remainder  end_comment  begin_comment spacer panel spacer 2 new spacer panel  end_comment  begin_comment gb set constraints spacer 2 c  end_comment  begin_comment main panel add spacer 2  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name field  end_name  begin_operator  end_operator  begin_name get document  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add document listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment the constructor param w the wizard ignored param instr the instructions param lab the label for the textfield param val the initial value for the textfield end_comment begin_specifier  end_specifier  begin_name wiz step text field  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name wizard  end_name  end_type  begin_name w  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name instr  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name lab  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name val  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name this  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment store wizard  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name instructions  end_name  begin_operator  end_operator  begin_name set text  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name instr  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name label  end_name  begin_operator  end_operator  begin_name set text  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name lab  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name field  end_name  begin_operator  end_operator  begin_name set text  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name val  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment returns the customized configuration for the user return a concrete class which extends configuration handler and can be used to access and manipulate the configuration end_comment begin_type  begin_specifier  end_specifier  begin_name configuration handler  end_name  end_type  begin_name get configuration handler  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment todo allow other configuration handlers  end_comment  begin_return  begin_expr  begin_name handler  end_name  end_expr  end_return  end_block 
begin_comment copy a file from source to destination todo perhaps belongs in a utilities class of some sort param source the source file to be copied param dest the destination file return success status flag end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name copy file  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name file  end_name  end_type  begin_name source  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name file  end_name  end_type  begin_name dest  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_try  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name file input stream  end_name  end_type  begin_name fis  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name file input stream  end_name  begin_argument_list  begin_argument  begin_expr  begin_name source  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name file output stream  end_name  end_type  begin_name fos  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name file output stream  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dest  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name byte  end_name  begin_index  end_index  end_type  begin_name buf  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name byte  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_operator  end_operator  begin_name i  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name fis  end_name  begin_operator  end_operator  begin_name read  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name buf  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name fos  end_name  begin_operator  end_operator  begin_name write  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name buf  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_while  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name fis  end_name  begin_operator  end_operator  begin_name close  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name fos  end_name  begin_operator  end_operator  begin_name close  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  end_expr  end_return  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name file not found exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  end_expr  end_return  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name io exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  end_expr  end_return  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name security exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  end_expr  end_return  end_block  end_catch  end_try  end_block 
begin_comment anonymous constructor end_comment begin_name configuration properties  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name super  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name properties  end_name  end_type  begin_name defaults  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name properties  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name defaults  end_name  begin_operator  end_operator  begin_name load  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get class  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get resource as stream  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property location  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name property location  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name exception  end_name  end_type  begin_name ioe  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo what should we do here  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name warn  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name property location  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name ioe  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  end_try  begin_expr_stmt  begin_expr  begin_name property bundle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name properties  end_name  begin_argument_list  begin_argument  begin_expr  begin_name defaults  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment initialize the locale param locale a string with the locale end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name init  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name locale  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment assert initialized gui test action open project fails over this  end_comment  begin_expr_stmt  begin_expr  begin_name initialized  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_comment retain the original one  end_comment  begin_expr_stmt  begin_expr  begin_name system default locale  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name locale  end_name  begin_operator  end_operator  begin_name get default  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name locale  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name locale  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name set locale  end_name  begin_argument_list  begin_argument  begin_expr  begin_name locale  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name set locale  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name locale  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name get property  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name get property  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_comment todo this is using internal knowledge of gef it should handle this itself tfm mvw move into something like main init gef  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name localizer  end_name  begin_operator  end_operator  begin_name add resource  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name localizer  end_name  begin_operator  end_operator  begin_name add resource  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment for locale selection p todo detect the available locales from the available files return locales used in argo uml end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name locale  end_name  begin_index  end_index  end_type  begin_name get locales  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_name  begin_name locale  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_name  begin_name locale  end_name  begin_operator  end_operator  begin_name english  end_name  end_name  end_expr  begin_operator  end_operator  begin_expr  begin_name  begin_name locale  end_name  begin_operator  end_operator  begin_name french  end_name  end_name  end_expr  begin_operator  end_operator  begin_expr  begin_operator  end_operator  begin_call  begin_name locale  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  begin_operator  end_operator  begin_expr  begin_name  begin_name locale  end_name  begin_operator  end_operator  begin_name german  end_name  end_name  end_expr  begin_operator  end_operator  begin_expr  begin_name  begin_name locale  end_name  begin_operator  end_operator  begin_name italian  end_name  end_name  end_expr  begin_operator  end_operator  begin_expr  begin_operator  end_operator  begin_call  begin_name locale  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  begin_operator  end_operator  begin_expr  begin_operator  end_operator  begin_call  begin_name locale  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  begin_operator  end_operator  begin_expr  begin_operator  end_operator  begin_call  begin_name locale  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  begin_operator  end_operator  begin_expr  begin_operator  end_operator  begin_call  begin_name locale  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  begin_operator  end_operator  begin_expr  begin_name  begin_name locale  end_name  begin_operator  end_operator  begin_name simplified chinese  end_name  end_name  end_expr  begin_operator  end_operator  begin_expr  begin_name  begin_name locale  end_name  begin_operator  end_operator  begin_name traditional chinese  end_name  end_name  end_expr  begin_operator  end_operator  begin_expr  begin_name  begin_name locale  end_name  begin_operator  end_operator  begin_name uk  end_name  end_name  end_expr  begin_operator  end_operator  end_block  end_expr  end_return  end_block 
begin_comment in contrast to link get zip name returns the member s name without the prepended name of the project but with the extension p todo this is not used anywhere shall we remove it author steffen zschaler return the member s name without any prefix or suffix end_comment begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name get unique diagram name  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name s  end_name  begin_init  begin_expr  begin_name unique name  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name s  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name ends with  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get zip file extension  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name s  end_name  begin_operator  end_operator  begin_call  begin_name get zip file extension  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  begin_return  begin_expr  begin_name s  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name add command  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name command  end_name  end_type  begin_name command  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo once the default constructor is deleted we only set dirty flag  end_comment  begin_if  begin_condition  begin_expr  begin_name project  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name set dirty  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name project manager  end_name  begin_operator  end_operator  begin_name get manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set save enabled  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_if  begin_condition  begin_expr  begin_name undo max  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name command  end_name  begin_operator  end_operator  begin_name is undoable  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name undo stack  end_name  begin_operator  end_operator  begin_name clear  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name new interaction  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment flag the command as to whether it is first in a chain  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name interaction  end_name  end_type  begin_name macro command  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name new interaction  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name undo stack  end_name  begin_operator  end_operator  begin_name is empty  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name redo stack  end_name  begin_operator  end_operator  begin_name clear  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name new interaction  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name undo stack  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name undo max  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name undo stack  end_name  begin_operator  end_operator  begin_name remove  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name macro command  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name interaction  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new interaction label  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name undo stack  end_name  begin_operator  end_operator  begin_name push  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name macro command  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name macro command  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name undo stack  end_name  begin_operator  end_operator  begin_name peek  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name macro command  end_name  begin_operator  end_operator  begin_name add command  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name command  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name add command  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name command  end_name  end_type  begin_name command  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name commands  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name command  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment todo i 18 n end_comment begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name get undo label  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name is undoable  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_name label  end_name  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_name label  end_name  end_expr  end_return  end_block  end_else  end_if  end_block 
begin_comment todo i 18 n end_comment begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name get redo label  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name is redoable  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_name label  end_name  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_name label  end_name  end_expr  end_return  end_block  end_else  end_if  end_block 
begin_comment finds a type in a model by name fixme duplicated from the method with the same name in org argouml profile internal model utils param s the type name param model the model return the type or code null code if the type has not been found end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name find type in model  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name s  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a namespace  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name s  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name model  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name all classifiers  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get model management helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get all model elements of kind  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get classifier  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  begin_index  end_index  end_type  begin_name classifiers  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name all classifiers  end_name  begin_operator  end_operator  begin_name to array  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name classifier  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name  begin_name classifiers  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_expr_stmt  begin_expr  begin_name classifier  end_name  begin_operator  end_operator  begin_name  begin_name classifiers  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name classifier  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name classifier  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name classifier  end_name  end_expr  end_return  end_block  end_then  end_if  end_block  end_for  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name get name  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment todo maybe separate name  end_comment  begin_if  begin_condition  begin_expr  begin_name uri  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name untitled file  end_name  end_expr  end_return  end_block  end_then  end_if  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name file  end_name  begin_argument_list  begin_argument  begin_expr  begin_name uri  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment param d the diagram end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name add diagram member  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name argo diagram  end_name  end_type  begin_name d  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment check for duplicate name and rename if necessary  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name serial  end_name  begin_init  begin_expr  begin_call  begin_name get diagram count  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name is valid diagram name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name d  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name d  end_name  begin_operator  end_operator  begin_name set name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name d  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_name serial  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name property veto exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_name serial  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_catch  end_try  end_block  end_while  begin_decl_stmt  begin_decl  begin_type  begin_name project member  end_name  end_type  begin_name pm  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name project member diagram  end_name  begin_argument_list  begin_argument  begin_expr  begin_name d  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add diagram  end_name  begin_argument_list  begin_argument  begin_expr  begin_name d  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment if diagram added successfully add the member too  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name members  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name pm  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment removes some object from the project param obj the object to be thrown away end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name trash internal  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name obj  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo this should only be checking for the top level package  end_comment  begin_comment if anything at all  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a model  end_name  begin_argument_list  begin_argument  begin_expr  begin_name obj  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  begin_comment can not delete the model  end_comment  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a profile  end_name  begin_argument_list  begin_argument  begin_expr  begin_name obj  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  begin_comment can not delete the profile  end_comment  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name obj  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name trashcan  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name obj  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is auml element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name obj  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get uml factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete  end_name  begin_argument_list  begin_argument  begin_expr  begin_name obj  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo presumably this is only relevant if  end_comment  begin_comment obj is actually a model or profile  end_comment  begin_comment an added test of is a model obj or is a profile obj would clarify  end_comment  begin_comment what is going on here  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name models  end_name  begin_operator  end_operator  begin_name contains  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name obj  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name models  end_name  begin_operator  end_operator  begin_name remove  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name obj  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name obj  end_name  begin_operator  end_operator  begin_name argo diagram  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name remove project member diagram  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name argo diagram  end_name  begin_operator  end_operator  begin_name obj  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment fire an event some anyone who cares about diagrams being  end_comment  begin_comment removed can listen for it  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name project manager  end_name  begin_operator  end_operator  begin_name get manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name fire property changed  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name obj  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name obj  end_name  begin_operator  end_operator  begin_name fig  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name fig  end_name  begin_operator  end_operator  begin_name obj  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name delete from model  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment if we delete a fig edge  end_comment  begin_comment or fig node we actually call this method with the owner not  end_comment  begin_comment the fig itself however this method  end_comment  begin_comment is called by action delete model elements  end_comment  begin_comment for primitive figs without owner  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name info  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name obj  end_name  begin_operator  end_operator  begin_name get class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name obj  end_name  begin_operator  end_operator  begin_name comment edge  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment todo why is this a special case tfm  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name comment edge  end_name  end_type  begin_name ce  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name comment edge  end_name  begin_operator  end_operator  begin_name obj  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name info  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name ce  end_name  begin_operator  end_operator  begin_name get annotated element  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name ce  end_name  begin_operator  end_operator  begin_name get comment  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ce  end_name  begin_operator  end_operator  begin_name delete  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_block 
 begin_type  begin_annotation  begin_name suppress warnings  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_annotation  begin_annotation  begin_name deprecated  end_name  end_annotation  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set root  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name the root  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name the root  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a model  end_name  begin_argument_list  begin_argument  begin_expr  begin_name the root  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a profile  end_name  begin_argument_list  begin_argument  begin_expr  begin_name the root  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name the root  end_name  begin_operator  end_operator  begin_name get class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name tree root  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get model management factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get root model  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name tree root  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name models  end_name  begin_operator  end_operator  begin_name remove  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tree root  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name root  end_name  begin_operator  end_operator  begin_name the root  end_name  end_expr  end_expr_stmt  begin_comment todo we don t really want to do the following but i m not sure  end_comment  begin_comment what depends on it tfm 20070725  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get model management factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set root model  end_name  begin_argument_list  begin_argument  begin_expr  begin_name the root  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo end up with multiple models here  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name add model internal  end_name  begin_argument_list  begin_argument  begin_expr  begin_name the root  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name roots  end_name  begin_operator  end_operator  begin_name clear  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name roots  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name the root  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment constructor param the project uri uri to read the project from end_comment begin_specifier  end_specifier  begin_name project impl  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name type  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name uri  end_name  end_type  begin_name the project uri  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name this  end_name  begin_argument_list  begin_argument  begin_expr  begin_name uml project  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo why was this next line in the code so long  end_comment  begin_comment uri persistence manager get instance fix uri extension the project uri  end_comment  begin_expr_stmt  begin_expr  begin_name uri  end_name  begin_operator  end_operator  begin_name the project uri  end_name  end_expr  end_expr_stmt  end_block 
begin_comment constructor end_comment begin_specifier  end_specifier  begin_name project impl  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name this  end_name  begin_argument_list  begin_argument  begin_expr  begin_name uml project  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment constructor end_comment begin_specifier  end_specifier  begin_name project impl  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_name project type  end_name  begin_operator  end_operator  begin_name type  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set profile configuration  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name profile configuration  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name project settings  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name project settings  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get model management factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set root model  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name authorname  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name configuration  end_name  begin_operator  end_operator  begin_name get string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name argo  end_name  begin_operator  end_operator  begin_name key user fullname  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name authoremail  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name configuration  end_name  begin_operator  end_operator  begin_name get string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name argo  end_name  begin_operator  end_operator  begin_name key user email  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name description  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_comment this should be moved to a ui action  end_comment  begin_expr_stmt  begin_expr  begin_name version  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name application version  end_name  begin_operator  end_operator  begin_name get version  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name history file  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name info  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add search path  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment remove the project param old project the project to be removed end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name remove project  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name project  end_name  end_type  begin_name old project  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name open projects  end_name  begin_operator  end_operator  begin_name remove  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name old project  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo this code can be removed when get current project is removed  end_comment  begin_if  begin_condition  begin_expr  begin_name current project  end_name  begin_operator  end_operator  begin_name old project  end_name  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name open projects  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name current project  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name open projects  end_name  begin_operator  end_operator  begin_name get last  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name current project  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name old project  end_name  begin_operator  end_operator  begin_name remove  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment send all events required for post load of project p deprecated for 0 27 2 by tfmorris no replacement diagrams figs are now created with the correct initial settings end_comment begin_type  begin_annotation  begin_name deprecated  end_name  end_annotation  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name init  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment since this is hopefully a temporary solution and nobody ever looks at the type of notation event we can simplify from sending every existing event to one event only but since there is no catch all event defined we just make one up rationale reduce the number of total refreshes of the drawing  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name init  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name configuration  end_name  begin_operator  end_operator  begin_name make key  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name dia default  end_name  begin_operator  end_operator  begin_name notify of changed settings  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name init  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name value  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name configuration key  end_name  end_type  begin_name key  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name fire notation event  end_name  begin_argument_list  begin_argument  begin_expr  begin_name key  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment todo is this used in places other than on diagrams if so it needs to stay in project settings as well as being a diagram setting return returns code true code if we show stereotypes in the explorer end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name get show stereotypes value  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  begin_name show explorer stereotypes  end_name  end_expr  end_return  end_block 
begin_comment this does a calculation of where our ext directory is todo we should eventually make sure that this calculation is only present in one place in the code and not several end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compute extension locations  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment use a little trick to find out where argo is being loaded from  end_comment  begin_comment todo use a different resource here argoini is unused and deprecated  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name ext form  end_name  begin_init  begin_expr  begin_call  begin_name get class  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get resource  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name argo  end_name  begin_operator  end_operator  begin_name argoini  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to external form  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name argo root  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ext form  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name ext form  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name argo  end_name  begin_operator  end_operator  begin_name argoini  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment if it s a jar clean it up and make it look like a file url  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name argo root  end_name  begin_operator  end_operator  begin_name starts with  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name jar prefix  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name argo root  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name argo root  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name jar prefix  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name argo root  end_name  begin_operator  end_operator  begin_name ends with  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name argo root  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name argo root  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name argo root  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name argo home  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name argo root  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name info  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name argo root  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name argo root  end_name  begin_operator  end_operator  begin_name starts with  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name file prefix  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name argo home  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name file  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name argo root  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name file prefix  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get absolute file  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get parent  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name argo home  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name file  end_name  begin_argument_list  begin_argument  begin_expr  begin_name argo root  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get absolute file  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get parent  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_name argo home  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name java  end_name  begin_operator  end_operator  begin_name net  end_name  begin_operator  end_operator  begin_name url decoder  end_name  begin_operator  end_operator  begin_name decode  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name argo home  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name argo  end_name  begin_operator  end_operator  begin_name get encoding  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name unsupported encoding exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name warn  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name argo  end_name  begin_operator  end_operator  begin_name get encoding  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  end_try  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name info  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name argo home  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name argo home  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name extdir  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name argo home  end_name  begin_operator  end_operator  begin_name starts with  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name file prefix  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name extdir  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name argo home  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name file prefix  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name separator  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name extdir  end_name  begin_operator  end_operator  begin_name argo home  end_name  begin_operator  end_operator  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name separator  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name extension locations  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name extdir  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name extdir  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name get property  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name extdir  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name extension locations  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name extdir  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block 
begin_comment the constructor todo why does this method not handle all settings end_comment begin_specifier  end_specifier  begin_name notation  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name configuration  end_name  begin_operator  end_operator  begin_name add listener  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name key use guillemots  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name configuration  end_name  begin_operator  end_operator  begin_name add listener  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name key default notation  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name configuration  end_name  begin_operator  end_operator  begin_name add listener  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name key show types  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name configuration  end_name  begin_operator  end_operator  begin_name add listener  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name key show multiplicity  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name configuration  end_name  begin_operator  end_operator  begin_name add listener  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name key show properties  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name configuration  end_name  begin_operator  end_operator  begin_name add listener  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name key show association names  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name configuration  end_name  begin_operator  end_operator  begin_name add listener  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name key show visibility  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name configuration  end_name  begin_operator  end_operator  begin_name add listener  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name key show initial value  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment todo these defaults need to be checked against historical ones end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name notation settings  end_name  end_type  begin_name initialize default settings  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name notation settings  end_name  end_type  begin_name settings  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name notation settings  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name settings  end_name  begin_operator  end_operator  begin_name parent  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name settings  end_name  begin_operator  end_operator  begin_name set notation language  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name notation  end_name  begin_operator  end_operator  begin_name default notation  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name settings  end_name  begin_operator  end_operator  begin_name set fully handle stereotypes  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name settings  end_name  begin_operator  end_operator  begin_name set show association names  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name settings  end_name  begin_operator  end_operator  begin_name set show initial values  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name settings  end_name  begin_operator  end_operator  begin_name set show multiplicities  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name settings  end_name  begin_operator  end_operator  begin_name set show paths  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name settings  end_name  begin_operator  end_operator  begin_name set show properties  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name settings  end_name  begin_operator  end_operator  begin_name set show singular multiplicities  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name settings  end_name  begin_operator  end_operator  begin_name set show types  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name settings  end_name  begin_operator  end_operator  begin_name set show visibilities  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name settings  end_name  begin_operator  end_operator  begin_name set use guillemets  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name settings  end_name  end_expr  end_return  end_block 
begin_comment param new language the notation language return true if the notation is set false if it does not exist end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name set notation language  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name new language  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name notation language  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name notation language  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new language  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_comment todo do we care  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name notation  end_name  begin_operator  end_operator  begin_name find notation  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new language  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment this notation is not available  end_comment  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name old language  end_name  begin_init  begin_expr  begin_name notation language  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name memento  end_name  end_type  begin_name memento  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name memento  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name redo  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_name notation language  end_name  begin_operator  end_operator  begin_name new language  end_name  end_expr  end_expr_stmt  begin_comment todo we can t have a global current language  end_comment  begin_comment notation provider factory 2 set current language new language  end_comment  end_block  end_function  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name undo  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_name notation language  end_name  begin_operator  end_operator  begin_name old language  end_name  end_expr  end_expr_stmt  begin_comment todo we can t have a global current language  end_comment  begin_comment notation provider factory 2 set current language old language  end_comment  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name do undoable  end_name  begin_argument_list  begin_argument  begin_expr  begin_name memento  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name do undoable  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name memento  end_name  end_type  begin_name memento  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo undo should be managed externally or we should be given  end_comment  begin_comment an undo manager to use the project s rather than using a global one  end_comment  begin_comment if diagram undo manager get instance is generate mementos  end_comment  begin_comment diagram undo manager get instance add memento memento  end_comment  begin_comment   end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name memento  end_name  begin_operator  end_operator  begin_name redo  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo mark diagram project as dirty  end_comment  end_block 
begin_comment create a notation settings value object with all default values p todo this class only has partial undo support basically just those members that had it as part of a previous implementation end_comment begin_specifier  end_specifier  begin_name notation settings  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name super  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name parent  end_name  begin_operator  end_operator  begin_call  begin_name get default settings  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment create a notation settings object which uses the given settings as its default values note that there can be multiple levels of settings in the hierarchy end_comment begin_specifier  end_specifier  begin_name notation settings  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name notation settings  end_name  end_type  begin_name parent settings  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name this  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name parent  end_name  begin_operator  end_operator  begin_name parent settings  end_name  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name to string  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name use guillemets  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name visi  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get visibility  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name visibility  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name visi  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name visibility  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name notation utility java  end_name  begin_operator  end_operator  begin_name generate visibility  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name visi  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name visibility  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_comment this is the temporary solution for issue 1011  end_comment  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name stereo string  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name notation utility uml  end_name  begin_operator  end_operator  begin_name generate stereotype  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name use guillemets  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_name stereo string  end_name  begin_operator  end_operator  begin_name visibility  end_name  begin_operator  end_operator  begin_name name  end_name  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name to string  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name notation settings  end_name  end_type  begin_name settings  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name to string  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name settings  end_name  begin_operator  end_operator  begin_name is use guillemets  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name to string  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name uml message  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name show sequence numbers  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name it  end_name  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name uml predecessors  end_name  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name uml action  end_name  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name uml activator  end_name  end_decl  end_decl_stmt  begin_comment this is a message uml object  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name msg ptr  end_name  end_type  begin_name ptr  end_name  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name lpn  end_name  end_decl  end_decl_stmt  begin_comment supported format predecessors number action the 3 parts of the string to generate  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string builder  end_name  end_type  begin_name predecessors  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name string builder  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment includes the  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name number  end_name  end_decl  end_decl_stmt  begin_comment the seq expr from the header javadoc  end_comment  begin_comment the is not included in number it is always present  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name action  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name uml message  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name ptr  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name msg ptr  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name lpn  end_name  begin_operator  end_operator  begin_call  begin_name rec count predecessors  end_name  begin_argument_list  begin_argument  begin_expr  begin_name uml message  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name ptr  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name uml activator  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get activator  end_name  begin_argument_list  begin_argument  begin_expr  begin_name uml message  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name uml predecessors  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get predecessors  end_name  begin_argument_list  begin_argument  begin_expr  begin_name uml message  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name it  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name uml predecessors  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name uml predecessors  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name it  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name it  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name msg ptr  end_name  end_type  begin_name ptr 2  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name msg ptr  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name precnt  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name it  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name msg  end_name  begin_init  begin_comment m message  end_comment  begin_expr  begin_call  begin_name  begin_name it  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name mpn  end_name  begin_init  begin_expr  begin_call  begin_name rec count predecessors  end_name  begin_argument_list  begin_argument  begin_expr  begin_name msg  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name ptr 2  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name mpn  end_name  begin_operator  end_operator  begin_name lpn  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name uml activator  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get activator  end_name  begin_argument_list  begin_argument  begin_expr  begin_name msg  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get predecessors  end_name  begin_argument_list  begin_argument  begin_expr  begin_name msg  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name size  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name ptr 2  end_name  begin_operator  end_operator  begin_name message  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name count successors  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name ptr 2  end_name  begin_operator  end_operator  begin_name message  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_continue  end_continue  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name predecessors  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name predecessors  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name predecessors  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name generate message number  end_name  begin_argument_list  begin_argument  begin_expr  begin_name msg  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name ptr 2  end_name  begin_operator  end_operator  begin_name message  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name mpn  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name precnt  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_while  begin_if  begin_condition  begin_expr  begin_name precnt  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name predecessors  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name number  end_name  begin_operator  end_operator  begin_call  begin_name generate message number  end_name  begin_argument_list  begin_argument  begin_expr  begin_name uml message  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name ptr  end_name  begin_operator  end_operator  begin_name message  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name lpn  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name uml action  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get action  end_name  begin_argument_list  begin_argument  begin_expr  begin_name uml message  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name uml action  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get recurrence  end_name  begin_argument_list  begin_argument  begin_expr  begin_name uml action  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name number  end_name  begin_operator  end_operator  begin_call  begin_name generate recurrence  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get recurrence  end_name  begin_argument_list  begin_argument  begin_expr  begin_name uml action  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_name number  end_name  end_expr  end_expr_stmt  begin_comment todo the recurrence goes in front of the action does this not contradict the header java doc  end_comment  end_block  end_then  end_if  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name action  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name notation utility uml  end_name  begin_operator  end_operator  begin_name generate action sequence  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name uml action  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name action  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name action  end_name  begin_operator  end_operator  begin_name trim  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name starts with  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment if the script of the action is empty or only specifies arguments and no method name then we generate a string based on a different model element  end_comment  begin_expr_stmt  begin_expr  begin_name action  end_name  begin_operator  end_operator  begin_call  begin_name get initiator of action  end_name  begin_argument_list  begin_argument  begin_expr  begin_name uml action  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name action  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment this may return null  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name n  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name uml message  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name n  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name action  end_name  begin_operator  end_operator  begin_name n  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name action  end_name  begin_operator  end_operator  begin_name ends with  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment dirty fix for issue 1758 needs to be amended when we start supporting parameters  end_comment  begin_expr_stmt  begin_expr  begin_name action  end_name  begin_operator  end_operator  begin_name action  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name show sequence numbers  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name action  end_name  end_expr  end_return  end_block  end_then  end_if  begin_return  begin_expr  begin_name predecessors  end_name  begin_operator  end_operator  begin_name number  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name action  end_name  end_expr  end_return  end_block 
begin_comment parse a message textual description p todo this method is too complex lets break it up p param uml message the uml message object to apply any changes to param s the string to parse throws parse exception when it detects an error in the attribute string see also parse error get error offset end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name parse message  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name uml message  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name s  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name parse exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name fname  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_comment the condition or iteration expression recurrence  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string builder  end_name  end_type  begin_name guard  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name param expr  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name token  end_name  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string builder  end_name  end_type  begin_name varname  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name list  end_name  end_argument  end_argument_list  end_name  end_type  begin_name predecessors  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name list  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name integer  end_name  end_argument  end_argument_list  end_name  end_type  begin_name seqno  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name integer  end_name  end_argument  end_argument_list  end_name  end_type  begin_name currentseq  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name integer  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment list string args null  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name must be pre  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name must be seq  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name parallell  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name iterative  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name may delete expr  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name refind operation  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name has predecessors  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_try  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name my tokenizer  end_name  end_type  begin_name st  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name my tokenizer  end_name  begin_argument_list  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name my tokenizer  end_name  begin_operator  end_operator  begin_name paren expr string separator  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name has more tokens  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_expr_stmt  begin_expr  begin_name token  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name next token  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name token  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name token  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name currentseq  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name varname  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name fname  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name varname  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name token  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name token  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name must be pre  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name msg  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name parse exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name msg  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name get token index  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name must be seq  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name guard  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name msg  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name parse exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name msg  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name get token index  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name guard  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name string builder  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_while  begin_condition  begin_expr  end_expr  end_condition  begin_block  begin_expr_stmt  begin_expr  begin_name token  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name next token  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name token  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_break  end_break  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name guard  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name token  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_while  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name token  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name must be pre  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name msg  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name parse exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name msg  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name get token index  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name must be seq  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name currentseq  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name iterative  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name token  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name currentseq  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name msg  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name parse exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name msg  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name get token index  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name token  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name has more tokens  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name t  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name next token  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name t  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name put token  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_continue  end_continue  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name put token  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name t  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name must be pre  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name msg  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name parse exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name msg  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name get token index  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name currentseq  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name remove  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name remove  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name seqno  end_name  begin_operator  end_operator  begin_name currentseq  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name currentseq  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name may delete expr  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name token  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name has more tokens  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name t  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name next token  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name t  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name put token  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_continue  end_continue  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name put token  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name t  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name must be seq  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name msg  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name parse exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name msg  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name get token index  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name must be pre  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name must be seq  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name remove  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name remove  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name predecessors  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name currentseq  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name currentseq  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name integer  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name has predecessors  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name token  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name must be pre  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name msg  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name parse exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name msg  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name get token index  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name must be seq  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name currentseq  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name parallell  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name token  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name currentseq  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name must be seq  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name msg  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name parse exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name msg  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name get token index  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name must be pre  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name remove  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name remove  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name predecessors  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name currentseq  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name currentseq  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name integer  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name has predecessors  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_if  begin_condition  begin_expr  begin_name varname  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name fname  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name varname  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name string builder  end_name  begin_argument_list  begin_argument  begin_expr  begin_name fname  end_name  begin_operator  end_operator  begin_name token  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name fname  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name varname  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name fname  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name varname  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name token  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name msg  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name parse exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name msg  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name get token index  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_else  end_if  end_else  end_if  end_block  end_else  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name token  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name token  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name currentseq  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name varname  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name varname  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name string builder  end_name  begin_argument_list  begin_argument  begin_expr  begin_name fname  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name fname  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name fname  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name currentseq  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name param expr  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name token  end_name  begin_operator  end_operator  begin_name char at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name token  end_name  begin_operator  end_operator  begin_name char at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name token  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name msg  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name parse exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name msg  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name get token index  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name fname  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name fname  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name msg  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name parse exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name msg  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name get token index  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name varname  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name varname  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name string builder  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name param expr  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name token  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name token  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name varname  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name fname  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name varname  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name token  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name fname  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name fname  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name fname  end_name  begin_operator  end_operator  begin_name token  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name msg  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  begin_index  end_index  end_type  begin_name parse exc args  end_name  begin_init  begin_expr  begin_block  begin_expr  begin_name token  end_name  end_expr  end_block  end_expr  end_init  end_decl  end_decl_stmt  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name parse exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name msg  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name parse exc args  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name get token index  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_else  end_if  end_else  end_if  end_else  end_if  end_block  end_then  begin_else  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name has val  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name has ord  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name assigned  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name bp  end_name  begin_init  begin_expr  begin_call  begin_name find msg order break  end_name  begin_argument_list  begin_argument  begin_expr  begin_name token  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name has val  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name assigned  end_name  begin_operator  end_operator  begin_name bp  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name token  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name set  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name integer  end_name  begin_operator  end_operator  begin_name value of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name token  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name assigned  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name number format exception  end_name  end_type  begin_name nfe  end_name  end_decl  end_param  end_parameter_list  begin_block  end_block  end_catch  end_try  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name has ord  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name assigned  end_name  begin_operator  end_operator  begin_name bp  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name set  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name integer  end_name  begin_operator  end_operator  begin_name value of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name parse msg order  end_name  begin_argument_list  begin_argument  begin_expr  begin_name token  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name assigned  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name number format exception  end_name  end_type  begin_name nfe  end_name  end_decl  end_param  end_parameter_list  begin_block  end_block  end_catch  end_try  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name has val  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name has ord  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name assigned  end_name  begin_operator  end_operator  begin_name bp  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name bp  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name token  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name integer  end_name  end_type  begin_name nbr  end_name  end_decl  begin_operator  end_operator  begin_decl  begin_type  end_type  begin_name ord  end_name  end_decl  end_decl_stmt  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_name nbr  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name integer  end_name  begin_operator  end_operator  begin_name value of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name token  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name bp  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name ord  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name integer  end_name  begin_operator  end_operator  begin_name value of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name parse msg order  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name token  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name bp  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name set  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name nbr  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name set  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name currentseq  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name ord  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name assigned  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name number format exception  end_name  end_type  begin_name nfe  end_name  end_decl  end_param  end_parameter_list  begin_block  end_block  end_catch  end_try  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name assigned  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name msg  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  begin_index  end_index  end_type  begin_name parse exc args  end_name  begin_init  begin_expr  begin_block  begin_expr  begin_name token  end_name  end_expr  end_block  end_expr  end_init  end_decl  end_decl_stmt  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name parse exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name msg  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name parse exc args  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name get token index  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  end_block  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_block  end_while  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name no such element exception  end_name  end_type  begin_name nsee  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name msg  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name parse exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name msg  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name parse exception  end_name  end_type  begin_name pre  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_name pre  end_name  end_expr  end_throw  end_block  end_catch  end_try  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  end_type  begin_name args  end_name  begin_init  begin_expr  begin_call  begin_name parse arguments  end_name  begin_argument_list  begin_argument  begin_expr  begin_name param expr  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name may delete expr  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name print debug info  end_name  begin_argument_list  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name fname  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name guard  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name param expr  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name varname  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name predecessors  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name seqno  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name parallell  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name iterative  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment now apply the changes to the model  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name build action  end_name  begin_argument_list  begin_argument  begin_expr  begin_name uml message  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name handle guard  end_name  begin_argument_list  begin_argument  begin_expr  begin_name uml message  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name guard  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name parallell  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name iterative  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name fname  end_name  begin_operator  end_operator  begin_call  begin_name fill blank function name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name uml message  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name fname  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name may delete expr  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name varname  end_name  begin_operator  end_operator  begin_call  begin_name fill blank variable name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name uml message  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name varname  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name may delete expr  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name refind operation  end_name  begin_operator  end_operator  begin_call  begin_name handle function name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name uml message  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name fname  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name varname  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name refind operation  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name refind operation  end_name  begin_operator  end_operator  begin_call  begin_name handle arguments  end_name  begin_argument_list  begin_argument  begin_expr  begin_name uml message  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name refind operation  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name refind operation  end_name  begin_operator  end_operator  begin_call  begin_name handle sequence number  end_name  begin_argument_list  begin_argument  begin_expr  begin_name uml message  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name seqno  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name refind operation  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name handle operation  end_name  begin_argument_list  begin_argument  begin_expr  begin_name uml message  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name fname  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name refind operation  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name handle predecessors  end_name  begin_argument_list  begin_argument  begin_expr  begin_name uml message  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name predecessors  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name has predecessors  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment todo this name of the expression language should be configurable by the user p according to the uml standard the expression language should be the same for all elements in one diagram p uml is not a sensible default usually this is some pseudo language return the name of the expression language end_comment begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name get expression language  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name to string  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name show visibility  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name use guillemets  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo this whole block can be deleted when issue 6266 is resolved  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a connector end  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_comment end of block  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name derived  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name tv  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get tagged value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name facade  end_name  begin_operator  end_operator  begin_name derived tag  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name tv  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name tag  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get value of tag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tv  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals ignore case  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tag  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name derived  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name visibility  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name show visibility  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name visibility  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name notation utility uml  end_name  begin_operator  end_operator  begin_name generate visibility 2  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name visibility  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_comment this is the temporary solution for issue 1011  end_comment  end_block  end_then  end_if  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name stereo string  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name notation utility uml  end_name  begin_operator  end_operator  begin_name generate stereotype  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name use guillemets  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name stereo string  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name stereo string  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_name derived  end_name  begin_operator  end_operator  begin_name stereo string  end_name  begin_operator  end_operator  begin_name visibility  end_name  begin_operator  end_operator  begin_name name  end_name  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name to string  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name notation settings  end_name  end_type  begin_name settings  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name to string  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name settings  end_name  begin_operator  end_operator  begin_name is show visibilities  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name settings  end_name  begin_operator  end_operator  begin_name is use guillemets  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment parse a string representing one ore more separated attributes the case that a string or char contains a e g in an initializer is handled but not other occurrences of param classifier classifier the classifier the attribute s belong to param attribute attribute the attribute on which the editing happened param text the string to parse throws parse exception for invalid input end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name parse attribute fig  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name classifier  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name attribute  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name text  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name parse exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_if  begin_condition  begin_expr  begin_name classifier  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name attribute  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_comment todo we should have all the information that is required in the notation settings object  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name project  end_name  end_type  begin_name project  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name project manager  end_name  begin_operator  end_operator  begin_name get manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get current project  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name parse exception  end_name  end_type  begin_name pex  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name start  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name end  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name notation utility uml  end_name  begin_operator  end_operator  begin_name index of next checked semicolon  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name text  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name start  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name end  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment no text remove attr  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name move to trash  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name attribute  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name s  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name text  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name start  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name end  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name trim  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment no non whitechars in text remove attr  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name move to trash  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name attribute  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name parse attribute  end_name  begin_argument_list  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name attribute  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get features  end_name  begin_argument_list  begin_argument  begin_expr  begin_name classifier  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name index of  end_name  begin_argument_list  begin_argument  begin_expr  begin_name attribute  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment check for more attributes separated  end_comment  begin_expr_stmt  begin_expr  begin_name start  end_name  begin_operator  end_operator  begin_name end  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name end  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name notation utility uml  end_name  begin_operator  end_operator  begin_name index of next checked semicolon  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name text  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name start  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_while  begin_condition  begin_expr  begin_name end  end_name  begin_operator  end_operator  begin_name start  end_name  begin_operator  end_operator  begin_name end  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name text  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_expr_stmt  begin_expr  begin_name s  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name text  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name start  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name end  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name trim  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment yes there are more  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name attr type  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name get default attribute type  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name new attribute  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get uml factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name build node  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get attribute  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set type  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new attribute  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name attr type  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name new attribute  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment we need to set the namespace owner of the new attribute before parsing  end_comment  begin_if  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add feature  end_name  begin_argument_list  begin_argument  begin_expr  begin_name classifier  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name i  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name new attribute  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add feature  end_name  begin_argument_list  begin_argument  begin_expr  begin_name classifier  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name new attribute  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name parse attribute  end_name  begin_argument_list  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name new attribute  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment if the 1 st attribute is static then the new ones too  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set static  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new attribute  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is static  end_name  begin_argument_list  begin_argument  begin_expr  begin_name attribute  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name parse exception  end_name  end_type  begin_name ex  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name pex  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name pex  end_name  begin_operator  end_operator  begin_name ex  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_catch  end_try  end_block  end_then  end_if  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name start  end_name  begin_operator  end_operator  begin_name end  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name end  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name notation utility uml  end_name  begin_operator  end_operator  begin_name index of next checked semicolon  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name text  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name start  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_while  begin_if  begin_condition  begin_expr  begin_name pex  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_name pex  end_name  end_expr  end_throw  end_block  end_then  end_if  end_block 
begin_comment see org argouml notation providers notation provider parse java lang object java lang string end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name parse  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name text  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo this try catch will be needed once the code below is improved  end_comment  begin_comment try  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name parse extension point fig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name text  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment catch parse exception pe  end_comment  begin_comment string msg statusmsg bar error parsing extensionpoint  end_comment  begin_comment object args  end_comment  begin_comment pe get localized message  end_comment  begin_comment integer value of pe get error offset  end_comment  begin_comment   end_comment  begin_comment project browser get instance get status bar show status  end_comment  begin_comment translator message format msg args  end_comment  begin_comment   end_comment  end_block 
begin_comment catch parse exception pe end_commentbegin_comment string msg statusmsg bar error parsing extensionpoint end_commentbegin_comment object args end_commentbegin_comment pe get localized message end_commentbegin_comment integer value of pe get error offset end_commentbegin_comment  end_commentbegin_comment project browser get instance get status bar show status end_commentbegin_comment translator message format msg args end_commentbegin_comment  end_commentbegin_comment parse an extension point p the syntax is name location name location or the fields of the extension point are updated appropriately param ep the extension point concerned param text the text to parse end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name parse extension point fig  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name ep  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name text  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment we can do nothing if we don t have both the use case and extension  end_comment  begin_comment point  end_comment  begin_if  begin_condition  begin_expr  begin_name ep  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name use case  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get use case  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ep  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name use case  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_comment parse the string to creat a new extension point  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name new ep  end_name  begin_init  begin_expr  begin_call  begin_name parse extension point  end_name  begin_argument_list  begin_argument  begin_expr  begin_name text  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment if we got back null we interpret this as meaning delete the  end_comment  begin_comment reference to the extension point from the use case otherwise we set  end_comment  begin_comment the fields of the extension point to the values in new ep  end_comment  begin_if  begin_condition  begin_expr  begin_name new ep  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name project manager  end_name  begin_operator  end_operator  begin_name get manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get current project  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name move to trash  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ep  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ep  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new ep  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get use cases helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set location  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ep  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get location  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new ep  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_comment todo this needs more work we simply throw the new extension point away  end_comment  end_block 
begin_comment todo this needs more work we simply throw the new extension point away end_commentbegin_comment parse a string representing an extension point and return a new extension point p the syntax is name location name location or em note em if either field is blank it will be set to null in the extension point we break up the string into tokens at the we must keep the as a token so we can distinguish between name and location the number of tokens will distinguish our four cases p param text the string to parse return a new extension point with fields set appropriately or code null code if we are given code null code or a blank string em note em the string can be used to set both name and location to null end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name parse extension point  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name text  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment if we are given the null string return immediately  end_comment  begin_comment so that the extensionpoint is removed  end_comment  begin_if  begin_condition  begin_expr  begin_name text  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_comment build a new extension point  end_comment  begin_comment this method has insufficient information to call build extension point  end_comment  begin_comment thus we ll need to create one and pray that whomever called us knows  end_comment  begin_comment what kind of mess they got  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name ep  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get use cases factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create extension point  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string tokenizer  end_name  end_type  begin_name st  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name string tokenizer  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name text  end_name  begin_operator  end_operator  begin_name trim  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name num tokens  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name count tokens  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name ep location  end_name  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name ep name  end_name  end_decl  end_decl_stmt  begin_switch  begin_condition  begin_expr  begin_name num tokens  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  begin_comment the empty string return null  end_comment  begin_expr_stmt  begin_expr  begin_name ep  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_comment a string of the form location this will be confused by the  end_comment  begin_comment string so we pick this out as an instruction to clear both  end_comment  begin_comment name and location  end_comment  begin_expr_stmt  begin_expr  begin_name ep location  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name next token  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name trim  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name ep location  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ep  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get use cases helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set location  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ep  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ep  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get use cases helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set location  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ep  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name ep location  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_comment a string of the form name  end_comment  begin_expr_stmt  begin_expr  begin_name ep name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name next token  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name trim  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ep  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name ep name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get use cases helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set location  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ep  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_comment a string of the form name location discard the middle token  end_comment  begin_comment   end_comment  begin_expr_stmt  begin_expr  begin_name ep name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name next token  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name trim  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name next token  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment read past the colon  end_comment  begin_expr_stmt  begin_expr  begin_name ep location  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name next token  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name trim  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ep  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name ep name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get use cases helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set location  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ep  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name ep location  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  end_block  end_switch  begin_return  begin_expr  begin_name ep  end_name  end_expr  end_return  end_block 
begin_comment make the given uml object derived or not the uml standard defines derived as a tagged value for any model element param uml object the uml model element to be adapted null is not allowed param derived boolean flag for derived according the uml standard end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set derived  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name uml object  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name derived  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment this code was copied from action boolean tagged value  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name tag name  end_name  begin_init  begin_expr  begin_name  begin_name facade  end_name  begin_operator  end_operator  begin_name derived tag  end_name  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name tagged value  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get tagged value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name uml object  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name tag name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name derived  end_name  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name tagged value  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment this automatically pulls in a tag definition from the profile  end_comment  begin_expr_stmt  begin_expr  begin_name tagged value  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get extension mechanisms factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name build tagged value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tag name  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment we need to extend the extension mechanisms factory so that we can replace the above deprecated call with something like this  end_comment  begin_comment model get extension mechanisms factory build tagged value  end_comment  begin_comment tag name new string true model get facade get root uml object  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get extension mechanisms helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add tagged value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name uml object  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name tagged value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_comment the tv existed but maybe it was not true  end_comment  begin_comment todo for uml 2 check if the type of the tv is string  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get extension mechanisms helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set data values  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tagged value  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name string  end_name  begin_index  end_index  end_name  begin_block  begin_expr  end_expr  end_block  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  begin_else  begin_block  begin_if  begin_condition  begin_expr  begin_name tagged value  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment there are 2 possibilities either 1 we follow the traditional notation philosophy and set the tagged value to false or 2 we restore to the pristine situation and delete the tagged value whatever the value was i chose the latter mvw  end_comment  begin_comment this would be solution 1 model get extension mechanisms helper set data values tagged value new string false  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get uml factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tagged value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_else  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name generate kind  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_comment parameter etc  end_comment  begin_name kind  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string buffer  end_name  end_type  begin_name s  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name string buffer  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo i 18 n  end_comment  begin_if  begin_condition  begin_expr  begin_name kind  end_name  begin_operator  end_operator  begin_comment in is the default  end_comment  begin_operator  end_operator  begin_name kind  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get direction kind  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get in parameter  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_comment in  end_comment  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment see issue 3421  end_comment  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name kind  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get direction kind  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get in out parameter  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name kind  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get direction kind  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get return parameter  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment return nothing  end_comment  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name kind  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get direction kind  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get out parameter  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_else  end_if  end_else  end_if  begin_return  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment generate the text of a multiplicity param element a multiplicity or an element which has a multiplicity param show singular multiplicity if false return the empty string for 1 1 multiplicities return a string containing the formatted multiplicity or the empty string end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name generate multiplicity  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name show singular multiplicity  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name multiplicity  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a multiplicity  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name multiplicity  end_name  begin_operator  end_operator  begin_name element  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is auml element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name multiplicity  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get multiplicity  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_else  end_if  end_else  end_if  begin_comment it can still be null if the uml element  end_comment  begin_comment did not have a multiplicity defined  end_comment  begin_if  begin_condition  begin_expr  begin_name multiplicity  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name upper  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get upper  end_name  begin_argument_list  begin_argument  begin_expr  begin_name multiplicity  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name lower  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get lower  end_name  begin_argument_list  begin_argument  begin_expr  begin_name multiplicity  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name lower  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name upper  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name show singular multiplicity  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment todo i 18 n  end_comment  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to string  end_name  begin_argument_list  begin_argument  begin_expr  begin_name multiplicity  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  begin_return  begin_expr  end_expr  end_return  end_block 
begin_comment param uml action the action return the generated text never null end_comment begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name generate action  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name uml action  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name c  end_name  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name it  end_name  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name s  end_name  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string builder  end_name  end_type  begin_name p  end_name  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name first  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name uml action  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name script  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get script  end_name  begin_argument_list  begin_argument  begin_expr  begin_name uml action  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name script  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get body  end_name  begin_argument_list  begin_argument  begin_expr  begin_name script  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name s  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get body  end_name  begin_argument_list  begin_argument  begin_expr  begin_name script  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to string  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name s  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_name p  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name string builder  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name c  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get actual arguments  end_name  begin_argument_list  begin_argument  begin_expr  begin_name uml action  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name c  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name it  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name first  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name it  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name arg  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name it  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name first  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment todo i 18 n  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name p  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name arg  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name p  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name generate expression  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name arg  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name first  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_while  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name p  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_comment if there are no arguments then do not show the this solves issue 1758 arguments are not supported anyhow in the ui yet these brackets are easily confused with the brackets for the operation of a call action  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name p  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name s  end_name  end_expr  end_return  end_block  end_then  end_if  begin_comment todo i 18 n  end_comment  begin_return  begin_expr  begin_name s  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name p  end_name  begin_operator  end_operator  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name string builder  end_name  end_type  begin_name format name list  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name model elements  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name format name list  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model elements  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name list separator  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name string builder  end_name  end_type  begin_name format name list  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name model elements  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name separator  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string builder  end_name  end_type  begin_name result  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name string builder  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  begin_range  begin_expr  begin_name model elements  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo any special handling for null names append will use null  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name append  end_name  begin_argument_list  begin_argument  begin_expr  begin_name separator  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name separator  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name delete  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name separator  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_name result  end_name  end_expr  end_return  end_block 
begin_comment generate an operation according to the uml notation pre stereotype visibility name parameter list return type expression property string pre for the return type expression only the types of the return parameters are shown depending on settings in notation visibility and properties are shown not shown param model element uml operation element param settings notation settings return a formatted text string see org argouml notation notation provider to string java lang object org argouml notation notation settings end_comment begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name to string  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name notation settings  end_name  end_type  begin_name settings  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name to string  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name settings  end_name  begin_operator  end_operator  begin_name is use guillemets  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name settings  end_name  begin_operator  end_operator  begin_name is show visibilities  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name settings  end_name  begin_operator  end_operator  begin_name is show types  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name settings  end_name  begin_operator  end_operator  begin_name is show properties  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment generate an operation according to the uml notation pre stereotype visibility name parameter list return type expression property string pre for the return type expression only the types of the return parameters are shown depending on settings in notation visibility and properties are shown not shown author jaap branderhorst xs 4 all nl end_comment begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name to string  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name use guillemets  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name show visibility  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name show types  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name show properties  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_try  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name stereo str  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name notation utility uml  end_name  begin_operator  end_operator  begin_name generate stereotype  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get stereotypes  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name use guillemets  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name is reception  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a reception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo needs i 18 n  end_comment  begin_if  begin_condition  begin_expr  begin_name is reception  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name stereo str  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name notation utility uml  end_name  begin_operator  end_operator  begin_name generate stereotype  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name reception keyword  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name use guillemets  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_name stereo str  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment unused currently  end_comment  begin_comment string buffer tagged values sb get tagged values model element  end_comment  begin_comment lets concatenate it to the resulting string gen str  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string buffer  end_name  end_type  begin_name gen str  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name string buffer  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name stereo str  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name stereo str  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name gen str  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name stereo str  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name append  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name show visibility  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name vis str  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name notation utility uml  end_name  begin_operator  end_operator  begin_name generate visibility 2  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name vis str  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name gen str  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name vis str  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name str  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name name str  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name name str  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name gen str  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name str  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment the show types defaults to true to stay compatible with older argo uml versions that did not have this setting  end_comment  begin_if  begin_condition  begin_expr  begin_name show types  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment the parameters  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string buffer  end_name  end_type  begin_name parameter str  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name string buffer  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name parameter str  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name append  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get parameter list  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name append  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment the returnparameters  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string buffer  end_name  end_type  begin_name return paras sb  end_name  begin_init  begin_expr  begin_call  begin_name get return parameters  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name is reception  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name gen str  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name parameter str  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name append  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name return paras sb  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name return paras sb  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name gen str  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name return paras sb  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name append  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name gen str  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_if  begin_condition  begin_expr  begin_name show properties  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string buffer  end_name  end_type  begin_name property sb  end_name  begin_init  begin_expr  begin_call  begin_name get properties  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name is reception  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name property sb  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name gen str  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property sb  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  begin_return  begin_expr  begin_call  begin_name  begin_name gen str  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name trim  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name invalid element exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment the model element was deleted while we were working on it  end_comment  begin_return  begin_expr  end_expr  end_return  end_block  end_catch  end_try  end_block 
begin_comment parse user input for state bodies and assign the individual lines to according actions or transitions the user input consists of multiple lines like pre action label action expression pre or the format of a regular transition see parse transition p action label stands for one of entry do and exit the words entry do and exit are case independent param st the state object param s the string to parse throws parse exception when there is a syntax problem e g non matching brackets or end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name parse state body  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name st  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name s  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name parse exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name found entry  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name found exit  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name found do  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_comment generate all the existing internal transitions so that we can compare them as text with the newly entered ones  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name model element info list  end_name  end_type  begin_name internals info  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name model element info list  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get internal transitions  end_name  begin_argument_list  begin_argument  begin_expr  begin_name st  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string tokenizer  end_name  end_type  begin_name lines  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name string tokenizer  end_name  begin_argument_list  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name lines  end_name  begin_operator  end_operator  begin_name has more tokens  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name line  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name lines  end_name  begin_operator  end_operator  begin_name next token  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name trim  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment now let s check if the new line is already present in the old list of internal transitions if it is then mark the old one to be retained i e do not create a new one if it isn t continue with parsing  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name internals info  end_name  begin_operator  end_operator  begin_name check retain  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name line  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name line  end_name  begin_operator  end_operator  begin_name to lower case  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name starts with  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name line  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name trim  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name starts with  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name parse state entry action  end_name  begin_argument_list  begin_argument  begin_expr  begin_name st  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name line  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name found entry  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name line  end_name  begin_operator  end_operator  begin_name to lower case  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name starts with  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name line  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name trim  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name starts with  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name parse state exit action  end_name  begin_argument_list  begin_argument  begin_expr  begin_name st  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name line  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name found exit  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name line  end_name  begin_operator  end_operator  begin_name to lower case  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name starts with  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name line  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name trim  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name starts with  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name parse state do action  end_name  begin_argument_list  begin_argument  begin_expr  begin_name st  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name line  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name found do  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name t  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get state machines factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name build internal transition  end_name  begin_argument_list  begin_argument  begin_expr  begin_name st  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name t  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_continue  end_continue  end_block  end_then  end_if  begin_comment todo if the next line trows an exception then what do we do with the remainder of the parsed to be parsed lines  end_comment  begin_comment todo is this a good way of handling nested notation the following fails the tests new transition notation uml t parse line  end_comment  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_call  begin_name transition notation uml  end_name  begin_argument_list  begin_argument  begin_expr  begin_name t  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name parse transition  end_name  begin_argument_list  begin_argument  begin_expr  begin_name t  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name line  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment add this new one and mark it to be retained  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name internals info  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name t  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_else  end_if  end_else  end_if  end_block  end_then  end_if  end_block  end_while  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name found entry  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name delete  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get entry  end_name  begin_argument_list  begin_argument  begin_expr  begin_name st  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name found exit  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name delete  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get exit  end_name  begin_argument_list  begin_argument  begin_expr  begin_name st  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name found do  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name delete  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get do activity  end_name  begin_argument_list  begin_argument  begin_expr  begin_name st  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment process the final list of internal transitions and hook it to the state  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get state machines helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set internal transitions  end_name  begin_argument_list  begin_argument  begin_expr  begin_name st  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name internals info  end_name  begin_operator  end_operator  begin_name finalised list  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment parse a transition description line of the form pre event signature guard condition action expression pre a is not interpreted as having any special meaning p the event signature may be one of the 4 formats ul li change event when condition li time event after duration li call event a parameter list li signal event any string without ul remark the uml standard does not make a distinction between the syntax of a call event and signal event both may have parameters between for simplicity and user friendliness we chose for this distinction if a user wants parameters for a signal event then he may add them in the properties panels but not on the diagram p an alternative solution would be to create a call event by default and when editing an existing event do not change the type p todo this function fails when the event signature contains a or a see issue 5983 for other cases that were a problem in the past param trans the transition object to which this string applies param s the string to be parsed return the transition object throws parse exception when no matching are found end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name parse transition  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name trans  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name s  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name parse exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_expr_stmt  begin_expr  begin_name s  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name trim  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name a  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name index of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name b  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name index of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name c  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name index of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name a  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name b  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name b  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name a  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name b  end_name  begin_operator  end_operator  begin_name a  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name msg  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name parse exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name msg  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name c  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name c  end_name  begin_operator  end_operator  begin_name b  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name c  end_name  begin_operator  end_operator  begin_name a  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name a  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name msg  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name parse exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name msg  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  begin_index  end_index  end_type  begin_name s 1  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name trim  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name split  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name eg  end_name  begin_init  begin_expr  begin_name  begin_name s 1  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name trim  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  begin_index  end_index  end_type  begin_name s 2  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name eg  end_name  begin_operator  end_operator  begin_name split  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name  begin_name s 2  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name trim  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name length  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name parse trigger  end_name  begin_argument_list  begin_argument  begin_expr  begin_name trans  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name s 2  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name trim  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name  begin_name s 2  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name  begin_name s 2  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name trim  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name ends with  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name g  end_name  begin_init  begin_expr  begin_name  begin_name s 2  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name trim  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name g  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name g  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name g  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name trim  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name g  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name parse guard  end_name  begin_argument_list  begin_argument  begin_expr  begin_name trans  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name g  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name  begin_name s 1  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name  begin_name s 1  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name trim  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name length  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name parse effect  end_name  begin_argument_list  begin_argument  begin_expr  begin_name trans  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name s 1  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name trim  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  begin_return  begin_expr  begin_name trans  end_name  end_expr  end_return  end_block 
begin_comment handle the guard of a transition p we can distinct between 4 cases ol li a guard is given none exists yet li the expression of the guard was present but is altered li a guard is not given none exists yet li the expression of the guard was present but is removed ol the reaction in these cases should be ol li create a new guard set its name language expression and hook it to the transition li change the guard s expression leave the name language untouched see also issue 2742 li nop li unhook and erase the existing guard ol param trans the uml element transition param guard the string that represents the guard expression end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name parse guard  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name trans  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name guard  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name g  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get guard  end_name  begin_argument_list  begin_argument  begin_expr  begin_name trans  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name guard  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name g  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment case 1  end_comment  begin_comment todo in the next line i should use build guard but it doesn t show the guard on the diagram why mvw  end_comment  begin_expr_stmt  begin_expr  begin_name g  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get state machines factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create guard  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name g  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get state machines helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set expression  end_name  begin_argument_list  begin_argument  begin_expr  begin_name g  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get data types factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create boolean expression  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name guard  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name g  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get common behavior helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set transition  end_name  begin_argument_list  begin_argument  begin_expr  begin_name g  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name trans  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment nsuml does this  end_comment  begin_comment model get facade set guard trans g  end_comment  end_block  end_then  end_if  end_block  end_then  begin_else  begin_block  begin_comment case 2  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name expr  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get expression  end_name  begin_argument_list  begin_argument  begin_expr  begin_name g  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name language  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo this does not work mvw model get facade set body expr guard model get facade set expression g expr  end_comment  begin_comment hence a less elegant workaround that works  end_comment  begin_if  begin_condition  begin_expr  begin_name expr  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name language  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get data types helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get language  end_name  begin_argument_list  begin_argument  begin_expr  begin_name expr  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get state machines helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set expression  end_name  begin_argument_list  begin_argument  begin_expr  begin_name g  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get data types factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create boolean expression  end_name  begin_argument_list  begin_argument  begin_expr  begin_name language  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name guard  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo in this case the properties panel is not updated with the changed expression  end_comment  end_block  end_else  end_if  end_block  end_then  begin_else  begin_block  begin_if  begin_condition  begin_expr  begin_name g  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment case 3  end_comment  end_block  end_then  begin_else  begin_block  begin_comment case 4  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name delete  end_name  begin_argument_list  begin_argument  begin_expr  begin_name g  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment erase it  end_comment  end_block  end_else  end_if  end_block  end_else  end_if  end_block 
begin_comment return a context string for the given model element param me the model element for which to create a context string return the context string for the model element end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name get context string  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name me  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo do we want isa uml element here  end_comment  begin_if  begin_condition  begin_expr  begin_name me  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a model element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name me  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name mns context  end_name  begin_init  begin_expr  begin_call  begin_name get inner most enclosing namespace  end_name  begin_argument_list  begin_argument  begin_expr  begin_name me  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a behavioral feature  end_name  begin_argument_list  begin_argument  begin_expr  begin_name me  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string buffer  end_name  end_type  begin_name sb context  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name string buffer  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb context  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name mns context  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb context  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb context  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name me  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb context  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name l params  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get parameters  end_name  begin_argument_list  begin_argument  begin_expr  begin_name me  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name s return type  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name f first param  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name l params  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_call  begin_name  begin_name i  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_incr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name mp  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name i  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment m parameter  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is return  end_name  begin_argument_list  begin_argument  begin_expr  begin_name mp  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name s return type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get type  end_name  begin_argument_list  begin_argument  begin_expr  begin_name mp  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_if  begin_condition  begin_expr  begin_name f first param  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name f first param  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb context  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb context  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get type  end_name  begin_argument_list  begin_argument  begin_expr  begin_name mp  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name append  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb context  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get type  end_name  begin_argument_list  begin_argument  begin_expr  begin_name mp  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb context  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment the ocl toolkit does not like void return types  end_comment  begin_if  begin_condition  begin_expr  begin_name s return type  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name s return type  end_name  begin_operator  end_operator  begin_name equals ignore case  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb context  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name append  end_name  begin_argument_list  begin_argument  begin_expr  begin_name s return type  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_call  begin_name  begin_name sb context  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name mns context  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_else  end_if  end_block 
begin_comment this can be made public to allow others to extend their own persisters end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name register persister  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name class  end_name  end_type  begin_name target  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name tag  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  begin_extends  begin_name member file persister  end_name  end_extends  end_argument  end_argument_list  end_name  end_type  begin_name persister  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name persisters by class  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name persister  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name persisters by tag  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tag  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name persister  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  end_expr  end_return  end_block 
begin_comment get a member file persister based on a given project member param pm the project member return the persister end_comment begin_type  begin_specifier  end_specifier  begin_name member file persister  end_name  end_type  begin_name get member file persister  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name project member  end_name  end_type  begin_name pm  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  begin_extends  begin_name member file persister  end_name  end_extends  end_argument  end_argument_list  end_name  end_type  begin_name persister  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name persisters by class  end_name  begin_operator  end_operator  begin_name contains key  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name pm  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name persister  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name persisters by class  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name pm  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_comment todo not sure we need to do this but just to be safe for now  end_comment  begin_for  begin_init  begin_decl  begin_type  begin_name class  end_name  end_type  begin_name clazz  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name persisters by class  end_name  begin_operator  end_operator  begin_name key set  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name clazz  end_name  begin_operator  end_operator  begin_name is assignable from  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name pm  end_name  begin_operator  end_operator  begin_name get class  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name persister  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name persisters by class  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name clazz  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_then  end_if  end_block  end_for  end_block  end_else  end_if  begin_if  begin_condition  begin_expr  begin_name persister  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name new persister  end_name  begin_argument_list  begin_argument  begin_expr  begin_name persister  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_return  begin_expr  end_expr  end_return  end_block 
begin_comment get a member file persister based on a given tag param tag the tag return the persister end_comment begin_type  begin_specifier  end_specifier  begin_name member file persister  end_name  end_type  begin_name get member file persister  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name tag  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  begin_extends  begin_name member file persister  end_name  end_extends  end_argument  end_argument_list  end_name  end_type  begin_name persister  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name persisters by tag  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tag  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name persister  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name new persister  end_name  begin_argument_list  begin_argument  begin_expr  begin_name persister  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_return  begin_expr  end_expr  end_return  end_block 
begin_comment see org argouml persistence sax parser base handle end element org argouml persistence xml element end_comment begin_type  begin_annotation  begin_name suppress warnings  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name handle end element  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name xml element  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name sax exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_if  begin_condition  begin_expr  begin_name dbg  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_switch  begin_condition  begin_expr  begin_call  begin_name  begin_name tokens  end_name  begin_operator  end_operator  begin_name to token  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_case  begin_expr  begin_name  begin_name argo token table  end_name  begin_operator  end_operator  begin_name token member  end_name  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name handle member  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name  begin_name argo token table  end_name  begin_operator  end_operator  begin_name token authorname  end_name  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name handle author name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name  begin_name argo token table  end_name  begin_operator  end_operator  begin_name token authoremail  end_name  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name handle author email  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name  begin_name argo token table  end_name  begin_operator  end_operator  begin_name token version  end_name  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name handle version  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name  begin_name argo token table  end_name  begin_operator  end_operator  begin_name token description  end_name  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name handle description  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name  begin_name argo token table  end_name  begin_operator  end_operator  begin_name token searchpath  end_name  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name handle searchpath  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name  begin_name argo token table  end_name  begin_operator  end_operator  begin_name token historyfile  end_name  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name handle historyfile  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name  begin_name argo token table  end_name  begin_operator  end_operator  begin_name token notationlanguage  end_name  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name handle notation language  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name  begin_name argo token table  end_name  begin_operator  end_operator  begin_name token showboldnames  end_name  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name handle show bold names  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name  begin_name argo token table  end_name  begin_operator  end_operator  begin_name token useguillemots  end_name  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name handle use guillemots  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name  begin_name argo token table  end_name  begin_operator  end_operator  begin_name token showvisibility  end_name  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name handle show visibility  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name  begin_name argo token table  end_name  begin_operator  end_operator  begin_name token showmultiplicity  end_name  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name handle show multiplicity  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name  begin_name argo token table  end_name  begin_operator  end_operator  begin_name token showinitialvalue  end_name  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name handle show initial value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name  begin_name argo token table  end_name  begin_operator  end_operator  begin_name token showproperties  end_name  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name handle show properties  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name  begin_name argo token table  end_name  begin_operator  end_operator  begin_name token showtypes  end_name  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name handle show types  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name  begin_name argo token table  end_name  begin_operator  end_operator  begin_name token showstereotypes  end_name  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name handle show stereotypes  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name  begin_name argo token table  end_name  begin_operator  end_operator  begin_name token showsingularmultiplicities  end_name  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name handle show singular multiplicities  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name  begin_name argo token table  end_name  begin_operator  end_operator  begin_name token defaultshadowwidth  end_name  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name handle default shadow width  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name  begin_name argo token table  end_name  begin_operator  end_operator  begin_name token fontname  end_name  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name handle font name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name  begin_name argo token table  end_name  begin_operator  end_operator  begin_name token fontsize  end_name  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name handle font size  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name  begin_name argo token table  end_name  begin_operator  end_operator  begin_name token generation output dir  end_name  end_name  end_expr  begin_comment ignored it shouldn t have been in the project in the 1 st place  end_comment  begin_break  end_break  end_case  begin_case  begin_expr  begin_name  begin_name argo token table  end_name  begin_operator  end_operator  begin_name token showassociationnames  end_name  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name handle show association names  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name  begin_name argo token table  end_name  begin_operator  end_operator  begin_name token hidebidirectionalarrows  end_name  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name handle hide bidirectional arrows  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name  begin_name argo token table  end_name  begin_operator  end_operator  begin_name token active diagram  end_name  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name handle active diagram  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_default  begin_if  begin_condition  begin_expr  begin_name dbg  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name warn  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_break  end_break  end_default  end_block  end_switch  end_block 
begin_comment param e the element end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name handle notation language  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name xml element  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name language  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name get text  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name trim  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name success  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ps  end_name  begin_operator  end_operator  begin_name set notation language  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name language  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo here we should e g show the user a message that the loaded project was using a notation that is not currently available and a fall back on the default notation was done maybe this can be implemented in the persistence manager  end_comment  end_block 
begin_comment todo here we should e g show the user a message that the loaded project was using a notation that is not currently available and a fall back on the default notation was done maybe this can be implemented in the persistence manager end_commentbegin_comment param e the element end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name handle show bold names  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name xml element  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name ug  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name get text  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name trim  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name diagram defaults  end_name  begin_operator  end_operator  begin_name set show bold names  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name boolean  end_name  begin_operator  end_operator  begin_name parse boolean  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ug  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name load  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name project  end_name  end_type  begin_name project  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name input stream  end_name  end_type  begin_name input stream  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name open exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name load  end_name  begin_argument_list  begin_argument  begin_expr  begin_name project  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name input source  end_name  begin_argument_list  begin_argument  begin_expr  begin_name input stream  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name input stream  end_name  begin_operator  end_operator  begin_name close  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name io exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name open exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name load  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name project  end_name  end_type  begin_name project  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name input source  end_name  end_type  begin_name input source  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name open exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_comment if the model repository doesn t manage a di model  end_comment  begin_comment then we must generate our figs by inspecting pgml  end_comment  begin_try  begin_block  begin_comment give the parser a map of model elements  end_comment  begin_comment keyed by their uuid this is used to allocate  end_comment  begin_comment figs to their owner using the href attribute  end_comment  begin_comment in pgml  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name diagram settings  end_name  end_type  begin_name default settings  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name get project settings  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get default diagram settings  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo we need the project specific diagram settings here  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name pgml stack parser  end_name  end_type  begin_name parser  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name pgml stack parser  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name get uuid refs  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name default settings  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name info  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name  begin_name map  end_name  begin_operator  end_operator  begin_name  begin_name entry  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  end_name  end_type  begin_name translation  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name class translations  end_name  begin_operator  end_operator  begin_name entry set  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name parser  end_name  begin_operator  end_operator  begin_name add translation  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translation  end_name  begin_operator  end_operator  begin_name get key  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name translation  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_decl_stmt  begin_decl  begin_type  begin_name argo diagram  end_name  end_type  begin_name d  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name parser  end_name  begin_operator  end_operator  begin_name read argo diagram  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name input source  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name add member  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name d  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name e  end_name  begin_operator  end_operator  begin_name open exception  end_name  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_name open exception  end_name  begin_operator  end_operator  begin_name e  end_name  end_expr  end_throw  end_block  end_then  end_if  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name open exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name load  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name project  end_name  end_type  begin_name project  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name url  end_name  end_type  begin_name url  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name open exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name load  end_name  begin_argument_list  begin_argument  begin_expr  begin_name project  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name input source  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name url  end_name  begin_operator  end_operator  begin_name to external form  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name save  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name project member  end_name  end_type  begin_name member  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name output stream  end_name  end_type  begin_name out stream  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name save exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name project member diagram  end_name  end_type  begin_name diagram member  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name project member diagram  end_name  begin_operator  end_operator  begin_name member  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name ocl expander  end_name  end_type  begin_name expander  end_name  end_decl  end_decl_stmt  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_name expander  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name ocl expander  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name template reader  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name read  end_name  begin_argument_list  begin_argument  begin_expr  begin_name pgml tee  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name expansion exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name save exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  begin_decl_stmt  begin_decl  begin_type  begin_name output stream writer  end_name  end_type  begin_name output writer  end_name  end_decl  end_decl_stmt  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_name output writer  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name output stream writer  end_name  begin_argument_list  begin_argument  begin_expr  begin_name out stream  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name argo  end_name  begin_operator  end_operator  begin_name get encoding  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name unsupported encoding exception  end_name  end_type  begin_name e 1  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name save exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name e 1  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  begin_try  begin_block  begin_comment warning the output stream version of this doesn t work tfm  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name expander  end_name  begin_operator  end_operator  begin_name expand  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name output writer  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name diagram member  end_name  begin_operator  end_operator  begin_name get diagram  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name expansion exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name save exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_finally  begin_block  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name output writer  end_name  begin_operator  end_operator  begin_name flush  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name io exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name save exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  end_block  end_finally  end_try  end_block 
begin_comment loads a model xmi only from a url be advised this method has a side effect it sets uuidrefs to the model p if there is a problem with the xmi file an error is set in the get last load status field this needs to be examined by the calling function p end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name load  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name project  end_name  end_type  begin_name project  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name url  end_name  end_type  begin_name url  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name open exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name load  end_name  begin_argument_list  begin_argument  begin_expr  begin_name project  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name input source  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name url  end_name  begin_operator  end_operator  begin_name to external form  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment loads a model xmi only from an input stream be advised this method has a side effect it sets uuidrefs to the model p if there is a problem with the xmi file an error is set in the get last load status field this needs to be examined by the calling function p see org argouml persistence member file persister load org argouml kernel project java io input stream end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name load  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name project  end_name  end_type  begin_name project  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name input stream  end_name  end_type  begin_name input stream  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name open exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name load  end_name  begin_argument_list  begin_argument  begin_expr  begin_name project  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name input source  end_name  begin_argument_list  begin_argument  begin_expr  begin_name input stream  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name load  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name project  end_name  end_type  begin_name project  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name input source  end_name  end_type  begin_name source  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name open exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name mmodel  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_comment 2002 07 18  end_comment  begin_comment jaap branderhorst  end_comment  begin_comment changed the loading of the projectfiles to solve hanging  end_comment  begin_comment of argouml if a project is corrupted issue 913  end_comment  begin_comment created xmireader with method get errors to check if parsing went well  end_comment  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name source  end_name  begin_operator  end_operator  begin_name set encoding  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name argo  end_name  begin_operator  end_operator  begin_name get encoding  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name read models  end_name  begin_argument_list  begin_argument  begin_expr  begin_name source  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name mmodel  end_name  begin_operator  end_operator  begin_call  begin_name get cur model  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name open exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_throw  begin_expr  begin_name e  end_name  end_expr  end_throw  end_block  end_catch  end_try  begin_comment this should probably be inside xmi reader parse  end_comment  begin_comment but there is another place in this source  end_comment  begin_comment where xmi reader is used but it appears to be  end_comment  begin_comment the nsuml xmi reader when argo xmi reader is used  end_comment  begin_comment consistently it can be responsible for loading  end_comment  begin_comment the listener until then do it here  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get uml helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add listeners to model  end_name  begin_argument_list  begin_argument  begin_expr  begin_name mmodel  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo add all top level packages  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name add member  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name mmodel  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name set uuid refs  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name hash map  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get uuid refs  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment  end_commentbegin_comment main parsing methods end_commentbegin_comment read an xmi file from the given url param url the url param xmi extension parser the xmi extension parser throws open exception when there is an io error end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name read models  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name url  end_name  end_type  begin_name url  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name xmi extension parser  end_name  end_type  begin_name xmi extension parser  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name open exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name info  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name info  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name url  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_try  begin_block  begin_comment todo what progress mgr is to be used here where does  end_comment  begin_comment it come from  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name input source  end_name  end_type  begin_name source  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name input source  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name xmi input stream  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name url  end_name  begin_operator  end_operator  begin_name open stream  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name xmi extension parser  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name source  end_name  begin_operator  end_operator  begin_name set system id  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name url  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name read models  end_name  begin_argument_list  begin_argument  begin_expr  begin_name source  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name io exception  end_name  end_type  begin_name ex  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name open exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ex  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  end_block 
begin_comment read a xmi file from the given inputsource param source the input source the system id of the input source should be set so that it can be used to resolve external references throws open exception if an error occur while reading the source end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name read models  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name input source  end_name  end_type  begin_name source  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name open exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name xmi reader  end_name  end_type  begin_name reader  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_name reader  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get xmi reader  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name configuration  end_name  begin_operator  end_operator  begin_name get boolean  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name argo  end_name  begin_operator  end_operator  begin_name key xmi strip diagrams  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment todo not implemented by e uml  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name reader  end_name  begin_operator  end_operator  begin_name set ignored elements  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name string  end_name  begin_index  end_index  end_name  begin_block  begin_expr  end_expr  end_block  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name reader  end_name  begin_operator  end_operator  begin_name set ignored elements  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  end_type  begin_name search path  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name reader  end_name  begin_operator  end_operator  begin_name get search path  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name path list  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name get property  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name path list  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  begin_index  end_index  end_type  begin_name paths  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name path list  end_name  begin_operator  end_operator  begin_name split  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name path  end_name  begin_range  begin_expr  begin_name paths  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name search path  end_name  begin_operator  end_operator  begin_name contains  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name path  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name reader  end_name  begin_operator  end_operator  begin_name add search path  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name path  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name reader  end_name  begin_operator  end_operator  begin_name add search path  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name source  end_name  begin_operator  end_operator  begin_name get system id  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name cur model  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name elements read  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name reader  end_name  begin_operator  end_operator  begin_name parse  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name source  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name elements read  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name elements read  end_name  begin_operator  end_operator  begin_name is empty  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name facade  end_name  end_type  begin_name facade  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name current  end_name  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name elements  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name elements read  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name elements  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_expr_stmt  begin_expr  begin_name current  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name elements  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name facade  end_name  begin_operator  end_operator  begin_name is a model  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name current  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name info  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name facade  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name current  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name cur model  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name cur model  end_name  begin_operator  end_operator  begin_name current  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name facade  end_name  begin_operator  end_operator  begin_name is a profile  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name current  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name info  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name facade  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name current  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name cur model  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name cur model  end_name  begin_operator  end_operator  begin_name current  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  end_else  end_if  begin_comment todo add stereotype application e core any type  end_comment  end_block  end_while  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name u uid refs  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name hash map  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name reader  end_name  begin_operator  end_operator  begin_name get xmiuuid to object map  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name xmi exception  end_name  end_type  begin_name ex  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name xmi format exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ex  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name uml exception  end_name  end_type  begin_name ex  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment could this be some other type of internal error that we want  end_comment  begin_comment to handle differently don t think so tfm  end_comment  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name xmi format exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ex  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name info  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment create and register diagrams for activity and statemachines in the model s of the project if no other diagrams are created a default class diagram will be created argo uml currently requires at least one diagram for proper operation todo move to xmi file persister protected param project the project end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name register diagrams  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name project  end_name  end_type  begin_name project  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name register diagrams internal  end_name  begin_argument_list  begin_argument  begin_expr  begin_name project  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name elements read  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment see org tigris gef persistence pgml pgml stack parser set attrs org tigris gef presentation fig org xml sax attributes end_comment begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set attrs  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name fig  end_name  end_type  begin_name f  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name attributes  end_name  end_type  begin_name attr list  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name sax exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_if  begin_condition  begin_expr  begin_name f  end_name  begin_operator  end_operator  begin_name fig group  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name fig group  end_name  end_type  begin_name group  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name fig group  end_name  begin_operator  end_operator  begin_name f  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name cls name bounds  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name attr list  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name cls name bounds  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string tokenizer  end_name  end_type  begin_name st  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name string tokenizer  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cls name bounds  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment discard class name x y w h  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name has more elements  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name next token  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name has more elements  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name next token  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name has more elements  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name next token  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name has more elements  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name next token  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name has more elements  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name next token  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name map  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  end_type  begin_name attribute map  end_name  begin_init  begin_expr  begin_call  begin_name interpret style  end_name  begin_argument_list  begin_argument  begin_expr  begin_name st  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set style attributes  end_name  begin_argument_list  begin_argument  begin_expr  begin_name group  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name attribute map  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  begin_comment todo attempt to move the following code to gef  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name attr list  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name register fig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name f  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name set common attrs  end_name  begin_argument_list  begin_argument  begin_expr  begin_name f  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name attr list  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name href  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name attr list  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name href  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name href  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  begin_init  begin_expr  begin_call  begin_name find owner  end_name  begin_argument_list  begin_argument  begin_expr  begin_name href  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name model element  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name href  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name sax exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name href  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_comment the owner should always have already been set in the constructor  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name f  end_name  begin_operator  end_operator  begin_name get owner  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name model element  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment assign nodes immediately but edges later see issue 4310  end_comment  begin_if  begin_condition  begin_expr  begin_name f  end_name  begin_operator  end_operator  begin_name fig edge  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model elements by fig edge  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name fig edge  end_name  begin_operator  end_operator  begin_name f  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name f  end_name  begin_operator  end_operator  begin_name set owner  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name f  end_name  begin_operator  end_operator  begin_name get class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  end_if  end_block 
begin_comment set the fig style attributes p todo this should move into the render factories as described in issue 859 param fig the fig to style param attribute map a map of name value pairs end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set style attributes  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name fig  end_name  end_type  begin_name fig  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name map  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  end_type  begin_name attribute map  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_for  begin_init  begin_decl  begin_type  begin_name  begin_name map  end_name  begin_operator  end_operator  begin_name  begin_name entry  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  end_name  end_type  begin_name entry  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name attribute map  end_name  begin_operator  end_operator  begin_name entry set  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name entry  end_name  begin_operator  end_operator  begin_name get key  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name value  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name entry  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name fig  end_name  begin_operator  end_operator  begin_name fig compartment box  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name fig compartment box  end_name  end_type  begin_name fcb  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name fig compartment box  end_name  begin_operator  end_operator  begin_name fig  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name fcb  end_name  begin_operator  end_operator  begin_name show compartment  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get operation  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name equals ignore case  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name fcb  end_name  begin_operator  end_operator  begin_name show compartment  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get attribute  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name equals ignore case  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name fcb  end_name  begin_operator  end_operator  begin_name show compartment  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get enumeration literal  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name equals ignore case  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name fcb  end_name  begin_operator  end_operator  begin_name show compartment  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get extension point  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name equals ignore case  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name stereotype container  end_name  begin_operator  end_operator  begin_name fig  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name set stereotype visible  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name equals ignore case  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name visibility container  end_name  begin_operator  end_operator  begin_name fig  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name set visibility visible  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name equals ignore case  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name path container  end_name  begin_operator  end_operator  begin_name fig  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name set path visible  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name equals ignore case  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_else  end_if  end_block  end_for  end_block 
begin_comment todo move to gef end_commentbegin_comment store data of a fig edge together with the id s of nodes to connect to param fig edge the fig edge param source port fig id the id of the source port param dest port fig id the id of the destination port param source fig node id the id of the source node param dest fig node id the id of the destination node end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name add fig edge  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name fig edge  end_name  end_type  begin_name fig edge  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name source port fig id  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name dest port fig id  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name source fig node id  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name dest fig node id  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name fig edges  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name edge data  end_name  begin_argument_list  begin_argument  begin_expr  begin_name fig edge  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name source port fig id  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name dest port fig id  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name source fig node id  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name dest fig node id  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment todo move to gef end_commentbegin_comment get the fig node that the fig id represents param fig id in the form figx y z return the fig node with the given id throws illegal state exception if the fig id supplied is not of a fig node end_comment begin_type  begin_specifier  end_specifier  begin_name fig node  end_name  end_type  begin_name get fig node  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name fig id  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name illegal state exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name fig id  end_name  begin_operator  end_operator  begin_name contains  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment if the id does not look like a top level fig then we can assume  end_comment  begin_comment that this is an id of a fig edge port inside some fig edge  end_comment  begin_comment so extract the fig edge port from the fig edge and return that as  end_comment  begin_comment the fig node  end_comment  begin_expr_stmt  begin_expr  begin_name fig id  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name fig id  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name fig id  end_name  begin_operator  end_operator  begin_name index of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name fig edge model element  end_name  end_type  begin_name edge  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name fig edge model element  end_name  begin_operator  end_operator  begin_call  begin_name find fig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name fig id  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name edge  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal state exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name fig id  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name edge  end_name  begin_operator  end_operator  begin_name make edge port  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_call  begin_name  begin_name edge  end_name  begin_operator  end_operator  begin_name get edge port  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_comment if there is no dot then this must be a top level fig and can be  end_comment  begin_comment assumed to be a fig node  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name fig  end_name  end_type  begin_name f  end_name  begin_init  begin_expr  begin_call  begin_name find fig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name fig id  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name f  end_name  begin_operator  end_operator  begin_name fig node  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_name fig node  end_name  begin_operator  end_operator  begin_name f  end_name  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name fig id  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  end_expr  end_return  end_block  end_else  end_if  end_block  end_else  end_if  end_block 
begin_comment todo move to gef end_commentbegin_comment get the fig from the fig node that is the port param fig node the fig node return the fig that is the port on the given fig node end_comment begin_type  begin_specifier  end_specifier  begin_name fig  end_name  end_type  begin_name get port fig  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name fig node  end_name  end_type  begin_name fig node  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name fig node  end_name  begin_operator  end_operator  begin_name fig edge port  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment todo can we just do this every time no need for else bob  end_comment  begin_return  begin_expr  begin_name fig node  end_name  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_name fig  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name fig node  end_name  begin_operator  end_operator  begin_name get port figs  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_else  end_if  end_block 
begin_comment save the newly created diagram for use by the parser we take the opportunity to attach our default diagram settings to it so we ll have them if needed when constructing figs p diagrams are created in gef s pgml handler init diagram which is private and can t be overridden initialization sequence is ul li load diagram class using name in pgml file li instantiate using 0 arg constructor li invoke this method set diagram new diagram instance li invoke diagram s initialize object owner method li diagram set name li diagram set scale li diagram set show single multiplicity why does gef care about multiplicity ul param diagram the new diagram see org tigris gef persistence pgml pgml stack parser set diagram org tigris gef base diagram end_comment begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set diagram  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name diagram  end_name  end_type  begin_name diagram  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo we could generalize this to initialize more stuff if needed  end_comment  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name argo diagram  end_name  begin_operator  end_operator  begin_name diagram  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name set diagram settings  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get diagram settings  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name set diagram  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name diagram  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment translate the visibility flag of a fig to the pgml visibility attribute value the pgml values are 0 hidden and 1 shown if not specified then 1 is the default so we return null for this to prevent redundent data being written to pgml todo remove on gef release after 0 11 9 as it will be provided there param f the fig return 0 hidden null shown end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name get visibility  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name fig  end_name  end_type  begin_name f  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name f  end_name  begin_operator  end_operator  begin_name is visible  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name print model xmi  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name print writer  end_name  end_type  begin_name w  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name profile models  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name uml exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_comment todo why is this not executed remove if not needed tfm  end_comment  begin_if  begin_condition  begin_expr  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name string writer  end_name  end_type  begin_name my writer  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name string writer  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model  end_name  begin_range  begin_expr  begin_name profile models  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name xmi writer  end_name  end_type  begin_name xmi writer  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get xmi writer  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name output stream  end_name  begin_operator  end_operator  end_expr  end_argument  begin_comment my writer  end_comment  begin_argument  begin_expr  begin_call  begin_name  begin_name application version  end_name  begin_operator  end_operator  begin_name get version  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name uml file persister  end_name  begin_operator  end_operator  begin_name persistence version  end_name  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name xmi writer  end_name  begin_operator  end_operator  begin_name write  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name my writer  end_name  begin_operator  end_operator  begin_name flush  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name w  end_name  begin_operator  end_operator  begin_name println  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name my writer  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment gets the offender vector of this critic where each offender is wrapped in an offender xml helper return a vector of offender xml helpers or null if there are no offenders see offender xml helper note used by todo tee end_comment begin_type  begin_specifier  end_specifier  begin_name  begin_name vector  end_name  begin_argument_list  begin_argument  begin_name offender xml helper  end_name  end_argument  end_argument_list  end_name  end_type  begin_name get offender list  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  end_type  begin_name in  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name item  end_name  begin_operator  end_operator  begin_name get offender list  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name vector  end_name  begin_argument_list  begin_argument  begin_name offender xml helper  end_name  end_argument  end_argument_list  end_name  end_type  begin_name out  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name in  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name out  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name vector  end_name  begin_argument_list  begin_argument  begin_name offender xml helper  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name elem  end_name  begin_range  begin_expr  begin_name in  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_try  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name offender xml helper  end_name  end_type  begin_name helper  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name offender xml helper  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name out  end_name  begin_operator  end_operator  begin_name add element  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name helper  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name class cast exception  end_name  end_type  begin_name cce  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo shouldn t we do something here  end_comment  end_block  end_catch  end_try  end_block  end_for  begin_return  begin_expr  begin_name out  end_name  end_expr  end_return  end_block 
begin_comment utility method to decode a string filtering out any noise that an xml framework might have seen fit to add and thus regaining the original unmodified string param str the string to decode return a copy of the original string end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name decode  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name str  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name str  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name string buffer  end_name  end_type  begin_name sb  end_name  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i 1  end_name  end_decl  begin_operator  end_operator  begin_decl  begin_type  end_type  begin_name i 2  end_name  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name char  end_name  end_type  begin_name c  end_name  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name sb  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name string buffer  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_for  begin_init  begin_expr  begin_name i 1  end_name  begin_operator  end_operator  end_expr  begin_operator  end_operator  begin_expr  begin_name i 2  end_name  begin_operator  end_operator  end_expr  end_init  begin_condition  begin_expr  begin_name i 2  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name str  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_incr  begin_expr  begin_name i 2  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_expr_stmt  begin_expr  begin_name c  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name str  end_name  begin_operator  end_operator  begin_name char at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i 2  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name c  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name i 2  end_name  begin_operator  end_operator  begin_name i 1  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name str  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i 1  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name i 2  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_for  begin_init  begin_expr  begin_name i 1  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name i 2  end_name  end_expr  end_init  begin_condition  begin_expr  begin_name i 2  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name str  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_incr  begin_expr  begin_name i 2  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name str  end_name  begin_operator  end_operator  begin_name char at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i 2  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_break  end_break  end_block  end_then  end_if  end_block  end_for  begin_if  begin_condition  begin_expr  begin_name i 2  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name str  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name i 1  end_name  begin_operator  end_operator  begin_name i 2  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name i 2  end_name  begin_operator  end_operator  begin_name i 1  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name ent  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name str  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i 1  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name i 2  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ent  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name char  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name integer  end_name  begin_operator  end_operator  begin_name parse int  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ent  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name number format exception  end_name  end_type  begin_name nfe  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo handle parse error  end_comment  end_block  end_catch  end_try  end_block  end_else  end_if  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name i 1  end_name  begin_operator  end_operator  begin_name i 2  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  begin_if  begin_condition  begin_expr  begin_name i 2  end_name  begin_operator  end_operator  begin_name i 1  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name str  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i 1  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name i 2  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment utility method to encode a string in a way that allows it to be saved properly in an xml file and regained filtering out any noice that an xml framework might have seen fit to add todo why are we doing this ourselves surely encoding information for xml serialization is a well known task tfm i have never understood why this is being done i think we should remove any usage bob param str the string to encode return the encoded string end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name encode  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name str  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string buffer  end_name  end_type  begin_name sb  end_name  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i 1  end_name  end_decl  begin_operator  end_operator  begin_decl  begin_type  end_type  begin_name i 2  end_name  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name char  end_name  end_type  begin_name c  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name str  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name sb  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name string buffer  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_for  begin_init  begin_expr  begin_name i 1  end_name  begin_operator  end_operator  end_expr  begin_operator  end_operator  begin_expr  begin_name i 2  end_name  begin_operator  end_operator  end_expr  end_init  begin_condition  begin_expr  begin_name i 2  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name str  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_incr  begin_expr  begin_name i 2  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_expr_stmt  begin_expr  begin_name c  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name str  end_name  begin_operator  end_operator  begin_name char at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i 2  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name c  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name i 2  end_name  begin_operator  end_operator  begin_name i 1  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name str  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i 1  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name i 2  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name i 1  end_name  begin_operator  end_operator  begin_name i 2  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name c  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name c  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name c  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name c  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name c  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name c  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name c  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name c  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name c  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name i 2  end_name  begin_operator  end_operator  begin_name i 1  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name str  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i 1  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name i 2  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name integer  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name i 1  end_name  begin_operator  end_operator  begin_name i 2  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_block  end_for  begin_if  begin_condition  begin_expr  begin_name i 2  end_name  begin_operator  end_operator  begin_name i 1  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name str  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i 1  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name i 2  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment cat debug encode n str n sb to string  end_comment  begin_return  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name write  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name  begin_name byte  end_name  begin_index  end_index  end_name  end_type  begin_name b  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name off  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name len  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name io exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name off  end_name  begin_operator  end_operator  begin_name len  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name b  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name len  end_name  begin_operator  end_operator  begin_name off  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name off  end_name  begin_operator  end_operator  begin_name len  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name index out of bounds exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name header processed  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name out  end_name  begin_operator  end_operator  begin_name write  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name b  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name off  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name len  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_comment todo make this more efficient for large i os  end_comment  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name len  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name write  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name b  end_name  begin_index  begin_expr  begin_name off  end_name  begin_operator  end_operator  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  end_block  end_else  end_if  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name write  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name b  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name io exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_if  begin_condition  begin_expr  begin_name header processed  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name out  end_name  begin_operator  end_operator  begin_name write  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name b  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name out bb  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name byte  end_name  begin_operator  end_operator  begin_name b  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name in bb  end_name  begin_operator  end_operator  begin_name limit  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name out bb  end_name  begin_operator  end_operator  begin_name position  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment convert from bytes back to characters  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name coder result  end_name  end_type  begin_name result  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name decoder  end_name  begin_operator  end_operator  begin_name decode  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name in bb  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name out cb  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name is error  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name runtime exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_comment this will have problems if the smallest possible  end_comment  begin_comment data segment is smaller than the size of the buffer  end_comment  begin_comment needed for regex matching  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name out cb  end_name  begin_operator  end_operator  begin_name position  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name out cb  end_name  begin_operator  end_operator  begin_name limit  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name process header  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_else  end_if  end_block 
begin_comment this method creates a project from the specified url unlike the constructor which forces an argo extension this method will attempt to load a raw xmi file this method can fail in several different ways either by throwing an exception or by having the argo parser singleton get last load status set to not true param file the file to load the project from return the newly loaded project throws open exception if the file can not be opened throws interrupted exception if the thread is interrupted see org argouml persistence project file persister do load java io file end_comment begin_type  begin_specifier  end_specifier  begin_name project  end_name  end_type  begin_name do load  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name file  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name open exception  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name interrupted exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name info  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_try  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name project  end_name  end_type  begin_name p  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name project factory  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create project  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name long  end_name  end_type  begin_name length  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name long  end_name  end_type  begin_name phase space  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name phases  end_name  begin_init  begin_expr  begin_call  begin_name int  end_name  begin_argument_list  begin_argument  begin_expr  begin_name length  end_name  begin_operator  end_operator  begin_name phase space  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name phases  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name phase space  end_name  begin_operator  end_operator  begin_name length  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name phases  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name info  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name length  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name phase space  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name phases  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name progress mgr  end_name  end_type  begin_name progress mgr  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name progress mgr  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name progress mgr  end_name  begin_operator  end_operator  begin_name set number of phases  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name phases  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name thread utils  end_name  begin_operator  end_operator  begin_name check if interrupted  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name input source  end_name  end_type  begin_name source  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name input source  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name xmi input stream  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name to uri  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to url  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name open stream  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name phase space  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name progress mgr  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name source  end_name  begin_operator  end_operator  begin_name set system id  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name to uri  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to url  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to string  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name model member file persister  end_name  end_type  begin_name model persister  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name model member file persister  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model persister  end_name  begin_operator  end_operator  begin_name read models  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name source  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model persister  end_name  begin_operator  end_operator  begin_name get cur model  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name progress mgr  end_name  begin_operator  end_operator  begin_name next phase  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get uml helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add listeners to model  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name p  end_name  begin_operator  end_operator  begin_name set uuid refs  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model persister  end_name  begin_operator  end_operator  begin_name get uuid refs  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo handle multiple top level packages  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name p  end_name  begin_operator  end_operator  begin_name add member  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name parse xmi extensions  end_name  begin_argument_list  begin_argument  begin_expr  begin_name p  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model persister  end_name  begin_operator  end_operator  begin_name register diagrams  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name p  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name p  end_name  begin_operator  end_operator  begin_name set root  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name p  end_name  begin_operator  end_operator  begin_name set roots  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model persister  end_name  begin_operator  end_operator  begin_name get elements read  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name p  end_name  begin_operator  end_operator  begin_name update roots  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name default project file  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name file  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name get path  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment make sure the file doesn t exist so the user will  end_comment  begin_comment get prompted to choose a new name  end_comment  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name default project file  end_name  begin_operator  end_operator  begin_name exists  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_break  end_break  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name default project file  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name file  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name get path  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_name i  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name persistence manager  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set project uri  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name default project file  end_name  begin_operator  end_operator  begin_name to uri  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name p  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name progress mgr  end_name  begin_operator  end_operator  begin_name next phase  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name project manager  end_name  begin_operator  end_operator  begin_name get manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set save enabled  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name p  end_name  end_expr  end_return  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name io exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name open exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  end_block 
begin_comment parse all the extensions that were found when reading xmi param project exception open exception end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name parse xmi extensions  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name project  end_name  end_type  begin_name project  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name open exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_if  begin_condition  begin_expr  begin_name argo string  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name info  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name argo string  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string reader  end_name  end_type  begin_name input stream  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name string reader  end_name  begin_argument_list  begin_argument  begin_expr  begin_name argo string  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name argo parser  end_name  end_type  begin_name parser  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name argo parser  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name parser  end_name  begin_operator  end_operator  begin_name read project  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name project  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name input stream  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name open exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name add member  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name project member todo list  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name project  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_for  begin_init  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name pgml  end_name  begin_range  begin_expr  begin_name pgml strings  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name info  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name pgml  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name input stream  end_name  end_type  begin_name input stream  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name byte array input stream  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name pgml  end_name  begin_operator  end_operator  begin_name get bytes  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name member file persister  end_name  end_type  begin_name persister  end_name  begin_init  begin_comment todo cyclic dependency between persistance manager and here  end_comment  begin_expr  begin_call  begin_name  begin_name persistence manager  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get diagram member file persister  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment possibly use the following instead  end_comment  begin_comment member file persister persister new diagram member file persister  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name persister  end_name  begin_operator  end_operator  begin_name load  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name project  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name input stream  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_if  begin_condition  begin_expr  begin_name todo string  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name info  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name todo string  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name input stream  end_name  end_type  begin_name input stream  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name byte array input stream  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name todo string  end_name  begin_operator  end_operator  begin_name get bytes  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name member file persister  end_name  end_type  begin_name persister  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name persister  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name todo list member file persister  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name persister  end_name  begin_operator  end_operator  begin_name load  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name project  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name input stream  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name add member  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name project member todo list  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name project  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block 
begin_comment see org argouml persistence project file persister do load java io file end_comment begin_type  begin_specifier  end_specifier  begin_name project  end_name  end_type  begin_name do load  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name file  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name open exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name info  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_try  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name project  end_name  end_type  begin_name p  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name project factory  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create project  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name file name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name extension  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name file name  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name file name  end_name  begin_operator  end_operator  begin_name index of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name file name  end_name  begin_operator  end_operator  begin_name last index of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name input stream  end_name  end_type  begin_name stream  end_name  begin_init  begin_expr  begin_call  begin_name open zip stream at  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name to uri  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to url  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name extension  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo what progress mgr is to be used here where does  end_comment  begin_comment it come from  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name input source  end_name  end_type  begin_name is  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name input source  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name xmi input stream  end_name  begin_argument_list  begin_argument  begin_expr  begin_name stream  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name is  end_name  begin_operator  end_operator  begin_name set system id  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name to uri  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to url  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to external form  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name model member file persister  end_name  end_type  begin_name model persister  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name model member file persister  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model persister  end_name  begin_operator  end_operator  begin_name read models  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name is  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo handle multiple top level packages  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model persister  end_name  begin_operator  end_operator  begin_name get cur model  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get uml helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add listeners to model  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name p  end_name  begin_operator  end_operator  begin_name set uuid refs  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model persister  end_name  begin_operator  end_operator  begin_name get uuid refs  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name p  end_name  begin_operator  end_operator  begin_name add member  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name parse xmi extensions  end_name  begin_argument_list  begin_argument  begin_expr  begin_name p  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model persister  end_name  begin_operator  end_operator  begin_name register diagrams  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name p  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name p  end_name  begin_operator  end_operator  begin_name set root  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name p  end_name  begin_operator  end_operator  begin_name set roots  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model persister  end_name  begin_operator  end_operator  begin_name get elements read  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name project manager  end_name  begin_operator  end_operator  begin_name get manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set save enabled  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name p  end_name  end_expr  end_return  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name io exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name open exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  end_block 
begin_comment sets the directory name where the profiles can be found initially uml 14 is used todo intermediate solution for uml 2 x support please implement a better solution param dir name of the directory for the profiles end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set profile directory  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name dir  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_name profiles resource path  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name dir  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name profiles base url  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name dir  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block 
begin_comment creates a new ocl critic param ocl constraint ocl expression param headline headline param description description param more info url the info url param knowledge types the knowledge types param supported decisions the decisions param priority the priority throws invalid ocl exception if the ocl is not valid todo do these need to be lists or can they be simple collections end_comment begin_specifier  end_specifier  begin_name cr ocl  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name ocl constraint  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name headline  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name description  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name integer  end_name  end_type  begin_name priority  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name decision  end_name  end_argument  end_argument_list  end_name  end_type  begin_name supported decisions  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  end_type  begin_name knowledge types  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name more info url  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name invalid ocl exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_expr_stmt  begin_expr  begin_name interpreter  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name ocl interpreter  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ocl constraint  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name uml 14 model interpreter  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name ocl  end_name  end_name  begin_operator  end_operator  begin_name ocl constraint  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add supported decision  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name uml decision  end_name  begin_operator  end_operator  begin_name planned extensions  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set priority  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name to do item  end_name  begin_operator  end_operator  begin_name high priority  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  end_type  begin_name triggers  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name interpreter  end_name  begin_operator  end_operator  begin_name get triggers  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name design materials  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name interpreter  end_name  begin_operator  end_operator  begin_name get criticized design materials  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name string  end_name  begin_range  begin_expr  begin_name triggers  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name add trigger  end_name  begin_argument_list  begin_argument  begin_expr  begin_name string  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_if  begin_condition  begin_expr  begin_name headline  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name set headline  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name set headline  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name headline  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_if  begin_condition  begin_expr  begin_name description  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name set description  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name set description  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name description  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_if  begin_condition  begin_expr  begin_name priority  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name set priority  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name to do item  end_name  begin_operator  end_operator  begin_name high priority  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name set priority  end_name  begin_argument_list  begin_argument  begin_expr  begin_name priority  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_if  begin_condition  begin_expr  begin_name supported decisions  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_for  begin_init  begin_decl  begin_type  begin_name decision  end_name  end_type  begin_name d  end_name  begin_range  begin_expr  begin_name supported decisions  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name add supported decision  end_name  begin_argument_list  begin_argument  begin_expr  begin_name d  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name knowledge types  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_for  begin_init  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name k  end_name  begin_range  begin_expr  begin_name knowledge types  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name add knowledge type  end_name  begin_argument_list  begin_argument  begin_expr  begin_name k  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name more info url  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name set more info url  end_name  begin_argument_list  begin_argument  begin_expr  begin_name more info url  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block 
begin_comment see org argouml profile internal ocl ocl expression evaluator evaluate java util hash map org argouml profile internal ocl model interpreter java lang string end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name evaluate  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name  begin_name map  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  end_type  begin_name vt  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name model interpreter  end_name  end_type  begin_name mi  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name ocl  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name invalid ocl exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_comment xxx this seems to be a bug of the parser  end_comment  begin_comment it always requires a context  end_comment  begin_comment log debug ocl ocl  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name ocl  end_name  begin_operator  end_operator  begin_name contains  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment todo convert this to some sensible logging  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name out  end_name  begin_operator  end_operator  begin_name println  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name lexer  end_name  end_type  begin_name lexer  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name lexer  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name pushback reader  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name string reader  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name ocl  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name ocl parser  end_name  end_type  begin_name parser  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name ocl parser  end_name  begin_argument_list  begin_argument  begin_expr  begin_name lexer  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name start  end_name  end_type  begin_name tree  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_name tree  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name parser  end_name  begin_operator  end_operator  begin_name parse  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name invalid ocl exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ocl  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  begin_decl_stmt  begin_decl  begin_type  begin_name evaluate expression  end_name  end_type  begin_name ee  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name evaluate expression  end_name  begin_argument_list  begin_argument  begin_expr  begin_name vt  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name mi  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name tree  end_name  begin_operator  end_operator  begin_name apply  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ee  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_call  begin_name  begin_name ee  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment see tudresden ocl parser analysis depth first adapter case a feature primary expression tudresden ocl parser node a feature primary expression end_comment begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name case a feature primary expression  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name a feature primary expression  end_name  end_type  begin_name node  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name subject  end_name  begin_init  begin_expr  begin_name val  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name feature  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name list  end_name  end_type  begin_name parameters  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name in a feature primary expression  end_name  begin_argument_list  begin_argument  begin_expr  begin_name node  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get path name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment todo support other name kinds  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get path name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name apply  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name feature  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get path name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to string  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name trim  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get time expression  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment hypotheses no time expression only invariants  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get time expression  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name apply  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get qualifiers  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment xxx hypotheses no qualifiers i don t know  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get qualifiers  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name apply  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get feature call parameters  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name val  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get feature call parameters  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name apply  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name parameters  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name list  end_name  begin_operator  end_operator  begin_name val  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name subject  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name val  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name vt  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name feature  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name val  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name val  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name interp  end_name  begin_operator  end_operator  begin_name get built in symbol  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name trim  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name val  end_name  begin_operator  end_operator  begin_call  begin_name run feature call  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name feature  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name fwd  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name parameters  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name out a feature primary expression  end_name  begin_argument_list  begin_argument  begin_expr  begin_name node  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment param node see tudresden ocl parser analysis depth first adapter case a standard declarator tudresden ocl parser node a standard declarator end_comment begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name case a standard declarator  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name a standard declarator  end_name  end_type  begin_name node  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name in a standard declarator  end_name  begin_argument_list  begin_argument  begin_expr  begin_name node  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  end_type  begin_name vars  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name apply  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name vars  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to string  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name trim  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name  begin_name temp  end_name  begin_index  end_index  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get declarator tail  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to array  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name  begin_name temp  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name p declarator tail  end_name  begin_operator  end_operator  begin_name  begin_name temp  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name apply  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name vars  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name a declarator tail  end_name  begin_operator  end_operator  begin_name  begin_name temp  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to string  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name trim  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_name val  end_name  begin_operator  end_operator  begin_name vars  end_name  end_expr  end_expr_stmt  end_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get declarator type declaration  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment todo check types  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get declarator type declaration  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name apply  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get bar  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get bar  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name apply  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name out a standard declarator  end_name  begin_argument_list  begin_argument  begin_expr  begin_name node  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name out a iterate declarator  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name a iterate declarator  end_name  end_type  begin_name node  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo support iterate declarator  end_comment  begin_expr_stmt  begin_expr  begin_name val  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name default out  end_name  begin_argument_list  begin_argument  begin_expr  begin_name node  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment see tudresden ocl parser analysis depth first adapter case a let expression tudresden ocl parser node a let expression end_comment begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name case a let expression  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name a let expression  end_name  end_type  begin_name node  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo support nested let expressions  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name name  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name value  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name in a let expression  end_name  begin_argument_list  begin_argument  begin_expr  begin_name node  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get t let  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get t let  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name apply  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name apply  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to string  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name trim  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get let expression type declaration  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment todo check type  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get let expression type declaration  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name apply  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get equal  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get equal  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name apply  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get expression  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get expression  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name apply  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name value  end_name  begin_operator  end_operator  begin_name val  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get t in  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get t in  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name apply  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name vt  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name trim  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name val  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name out a let expression  end_name  begin_argument_list  begin_argument  begin_expr  begin_name node  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment see tudresden ocl parser analysis depth first adapter out a real literal tudresden ocl parser node a real literal end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name out a real literal  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name a real literal  end_name  end_type  begin_name node  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo support real types  end_comment  begin_expr_stmt  begin_expr  begin_name val  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name int  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name double  end_name  begin_operator  end_operator  begin_name parse double  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get real  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get text  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name default out  end_name  begin_argument_list  begin_argument  begin_expr  begin_name node  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment see tudresden ocl parser analysis depth first adapter case a list expression list or range tail tudresden ocl parser node a list expression list or range tail end_comment begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name case a list expression list or range tail  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name a list expression list or range tail  end_name  end_type  begin_name node  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo support other kinds of tail  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name in a list expression list or range tail  end_name  begin_argument_list  begin_argument  begin_expr  begin_name node  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name list  end_name  end_type  begin_name ret  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name array list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name  begin_name temp  end_name  begin_index  end_index  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get expression list tail  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to array  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name  begin_name temp  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_expr_stmt  begin_expr  begin_name val  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name p expression list tail  end_name  begin_operator  end_operator  begin_name  begin_name temp  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name apply  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ret  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name val  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_name val  end_name  begin_operator  end_operator  begin_name ret  end_name  end_expr  end_expr_stmt  end_block  begin_expr_stmt  begin_expr  begin_call  begin_name out a list expression list or range tail  end_name  begin_argument_list  begin_argument  begin_expr  begin_name node  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment see tudresden ocl parser analysis depth first adapter case a feature call tudresden ocl parser node a feature call end_comment begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name case a feature call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name a feature call  end_name  end_type  begin_name node  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name subject  end_name  begin_init  begin_expr  begin_name val  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name feature  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name type  end_name  begin_init  begin_expr  begin_name fwd  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name list  end_name  end_type  begin_name parameters  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name in a feature call  end_name  begin_argument_list  begin_argument  begin_expr  begin_name node  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get path name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment todo support other name kinds  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get path name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name apply  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name feature  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get path name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to string  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name trim  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get time expression  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment xxx hypothesis no time expression inv  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get time expression  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name apply  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get qualifiers  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment todo understand qualifiers  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get qualifiers  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name apply  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get feature call parameters  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name val  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get feature call parameters  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name apply  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name parameters  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name list  end_name  begin_operator  end_operator  begin_name val  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name parameters  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name array list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_name val  end_name  begin_operator  end_operator  begin_call  begin_name run feature call  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name feature  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name type  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name parameters  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name out a feature call  end_name  begin_argument_list  begin_argument  begin_expr  begin_name node  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment error handling end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name error not type  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name type  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name dft  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name val  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name val  end_name  begin_operator  end_operator  begin_name dft  end_name  end_expr  end_expr_stmt  begin_comment todo we need a specific exception type here  end_comment  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name runtime exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name error  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name node  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name val  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name val  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_comment todo we need a specific exception type here  end_comment  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name runtime exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block 
begin_comment see org argouml profile internal ocl model interpreter invoke feature java util hash map java lang object java lang string java lang string java lang object end_comment begin_type  begin_annotation  begin_name suppress warnings  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name invoke feature  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name  begin_name map  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  end_type  begin_name vt  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name subject  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name feature  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name type  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name object  end_name  begin_index  end_index  end_name  end_type  begin_name parameters  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name subject  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name subject  end_name  begin_operator  end_operator  begin_name collection  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name set  end_name  end_type  begin_name ns  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name hash set  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ns  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name subject  end_name  begin_operator  end_operator  begin_name ns  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name subject  end_name  begin_operator  end_operator  begin_name collection  end_name  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name trim  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  end_type  begin_name vars  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  begin_operator  end_operator  begin_name  begin_name parameters  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name exp  end_name  begin_init  begin_expr  begin_name  begin_name parameters  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name lambda evaluator  end_name  end_type  begin_name eval  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name lambda evaluator  end_name  begin_operator  end_operator  begin_name  begin_name parameters  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name col  end_name  begin_init  begin_expr  begin_call  begin_name clone collection  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name collection  end_name  begin_operator  end_operator  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name list  end_name  end_type  begin_name remove  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name array list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo is it possible to use more than one variable  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name var name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name vars  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name old val  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name vt  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name var name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name object  end_name  begin_range  begin_expr  begin_name col  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name vt  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name var name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name object  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name res  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name eval  end_name  begin_operator  end_operator  begin_name evaluate  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name vt  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name exp  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name res  end_name  begin_operator  end_operator  begin_name boolean  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name boolean  end_name  begin_operator  end_operator  begin_name res  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment do nothing  end_comment  end_block  end_then  begin_else  begin_block  begin_comment if test fails this element should not  end_comment  begin_comment be in the result set  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name remove  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name object  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name col  end_name  begin_operator  end_operator  begin_name remove all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name remove  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name vt  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name var name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name old val  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name col  end_name  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name trim  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  end_type  begin_name vars  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  begin_operator  end_operator  begin_name  begin_name parameters  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name exp  end_name  begin_init  begin_expr  begin_name  begin_name parameters  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name lambda evaluator  end_name  end_type  begin_name eval  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name lambda evaluator  end_name  begin_operator  end_operator  begin_name  begin_name parameters  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name col  end_name  begin_init  begin_expr  begin_call  begin_name clone collection  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name collection  end_name  begin_operator  end_operator  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name list  end_name  end_type  begin_name remove  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name array list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo is it possible to use more than one variable  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name var name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name vars  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name old val  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name vt  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name var name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name object  end_name  begin_range  begin_expr  begin_name col  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name vt  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name var name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name object  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name res  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name eval  end_name  begin_operator  end_operator  begin_name evaluate  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name vt  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name exp  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name res  end_name  begin_operator  end_operator  begin_name boolean  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name boolean  end_name  begin_operator  end_operator  begin_name res  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment if test is ok this element should not  end_comment  begin_comment be in the result set  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name remove  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name object  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name col  end_name  begin_operator  end_operator  begin_name remove all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name remove  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name vt  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name var name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name old val  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name col  end_name  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name trim  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  end_type  begin_name vars  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  begin_operator  end_operator  begin_name  begin_name parameters  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name exp  end_name  begin_init  begin_expr  begin_name  begin_name parameters  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name lambda evaluator  end_name  end_type  begin_name eval  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name lambda evaluator  end_name  begin_operator  end_operator  begin_name  begin_name parameters  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_call  begin_name do for all  end_name  begin_argument_list  begin_argument  begin_expr  begin_name vt  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name collection  end_name  begin_operator  end_operator  begin_name subject  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name vars  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name exp  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name eval  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name trim  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  end_type  begin_name vars  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  begin_operator  end_operator  begin_name  begin_name parameters  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name exp  end_name  begin_init  begin_expr  begin_name  begin_name parameters  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name lambda evaluator  end_name  end_type  begin_name eval  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name lambda evaluator  end_name  begin_operator  end_operator  begin_name  begin_name parameters  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name col  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name collection  end_name  begin_operator  end_operator  begin_name subject  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name bag  end_name  end_type  begin_name res  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name hash bag  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo is it possible to use more than one variable  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name var name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name vars  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name old val  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name vt  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name var name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name object  end_name  begin_range  begin_expr  begin_name col  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name vt  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name var name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name object  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name val  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name eval  end_name  begin_operator  end_operator  begin_name evaluate  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name vt  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name exp  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name res  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name val  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name vt  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name var name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name old val  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name res  end_name  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name trim  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  end_type  begin_name vars  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  begin_operator  end_operator  begin_name  begin_name parameters  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name exp  end_name  begin_init  begin_expr  begin_name  begin_name parameters  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name lambda evaluator  end_name  end_type  begin_name eval  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name lambda evaluator  end_name  begin_operator  end_operator  begin_name  begin_name parameters  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name col  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name collection  end_name  begin_operator  end_operator  begin_name subject  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo is it possible to use more than one variable  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name var name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name vars  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name old val  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name vt  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name var name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name object  end_name  begin_range  begin_expr  begin_name col  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name vt  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name var name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name object  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name val  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name eval  end_name  begin_operator  end_operator  begin_name evaluate  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name vt  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name exp  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name val  end_name  begin_operator  end_operator  begin_name boolean  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name boolean  end_name  begin_operator  end_operator  begin_name val  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name vt  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name var name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name old val  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name trim  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  end_type  begin_name vars  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  begin_operator  end_operator  begin_name  begin_name parameters  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name exp  end_name  begin_init  begin_expr  begin_name  begin_name parameters  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name lambda evaluator  end_name  end_type  begin_name eval  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name lambda evaluator  end_name  begin_operator  end_operator  begin_name  begin_name parameters  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name col  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name collection  end_name  begin_operator  end_operator  begin_name subject  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name bag  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  end_type  begin_name res  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name hash bag  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo is it possible to use more than one variable  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name var name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name vars  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name old val  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name vt  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name var name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name object  end_name  begin_range  begin_expr  begin_name col  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name vt  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name var name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name object  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name val  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name eval  end_name  begin_operator  end_operator  begin_name evaluate  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name vt  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name exp  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name res  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name val  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name res  end_name  begin_operator  end_operator  begin_name count  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name val  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name vt  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name var name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name old val  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name trim  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment todo this code is cloned over and over again tfm  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  end_type  begin_name vars  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  begin_operator  end_operator  begin_name  begin_name parameters  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name exp  end_name  begin_init  begin_expr  begin_name  begin_name parameters  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name lambda evaluator  end_name  end_type  begin_name eval  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name lambda evaluator  end_name  begin_operator  end_operator  begin_name  begin_name parameters  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name col  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name collection  end_name  begin_operator  end_operator  begin_name subject  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo is it possible to use more than one variable  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name var name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name vars  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name old val  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name vt  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name var name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name found  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name object  end_name  begin_range  begin_expr  begin_name col  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name vt  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name var name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name object  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name val  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name eval  end_name  begin_operator  end_operator  begin_name evaluate  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name vt  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name exp  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name val  end_name  begin_operator  end_operator  begin_name boolean  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name boolean  end_name  begin_operator  end_operator  begin_name val  end_name  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name found  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name found  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_else  end_if  end_block  end_then  end_if  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name vt  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name var name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name old val  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name found  end_name  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name trim  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  end_type  begin_name vars  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  begin_operator  end_operator  begin_name  begin_name parameters  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name exp  end_name  begin_init  begin_expr  begin_name  begin_name parameters  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name lambda evaluator  end_name  end_type  begin_name eval  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name lambda evaluator  end_name  begin_operator  end_operator  begin_name  begin_name parameters  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name col  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name collection  end_name  begin_operator  end_operator  begin_name subject  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo is it possible to use more than one variable  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name var name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name vars  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name old val  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name vt  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name var name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name object  end_name  begin_range  begin_expr  begin_name col  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name vt  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name var name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name object  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name val  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name eval  end_name  begin_operator  end_operator  begin_name evaluate  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name vt  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name exp  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name val  end_name  begin_operator  end_operator  begin_name boolean  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name boolean  end_name  begin_operator  end_operator  begin_name val  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name object  end_name  end_expr  end_return  end_block  end_then  end_if  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name vt  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name var name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name old val  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  begin_comment todo implement iterate  end_comment  begin_comment todo implement sorted by  end_comment  begin_comment todo implement sub sequence  end_comment  end_block  end_then  end_if  end_block  end_then  end_if  begin_comment these operations are ok for lists too  end_comment  begin_if  begin_condition  begin_expr  begin_name subject  end_name  begin_operator  end_operator  begin_name collection  end_name  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name collection  end_name  begin_operator  end_operator  begin_name subject  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name size  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name collection  end_name  begin_operator  end_operator  begin_name subject  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name parameters  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name collection  end_name  begin_operator  end_operator  begin_name subject  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name parameters  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name hash bag  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name collection  end_name  begin_operator  end_operator  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name count  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name parameters  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name col  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name collection  end_name  begin_operator  end_operator  begin_name  begin_name parameters  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name object  end_name  begin_range  begin_expr  begin_name col  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name collection  end_name  begin_operator  end_operator  begin_name subject  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name object  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  end_block  end_for  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name col  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name collection  end_name  begin_operator  end_operator  begin_name  begin_name parameters  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name object  end_name  begin_range  begin_expr  begin_name col  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name collection  end_name  begin_operator  end_operator  begin_name subject  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name object  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  end_block  end_for  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name collection  end_name  begin_operator  end_operator  begin_name subject  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name is empty  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name collection  end_name  begin_operator  end_operator  begin_name subject  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name is empty  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name collection  end_name  begin_operator  end_operator  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name hash bag  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name collection  end_name  begin_operator  end_operator  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name hash set  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name collection  end_name  begin_operator  end_operator  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_comment todo support real numbers  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name integer  end_name  end_type  begin_name sum  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name col  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name collection  end_name  begin_operator  end_operator  begin_name subject  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name object  end_name  begin_range  begin_expr  begin_name col  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_expr_stmt  begin_expr  begin_name sum  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name integer  end_name  begin_operator  end_operator  begin_name object  end_name  end_expr  end_expr_stmt  end_block  end_for  begin_return  begin_expr  begin_name sum  end_name  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name copy  end_name  begin_init  begin_expr  begin_call  begin_name clone collection  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name collection  end_name  begin_operator  end_operator  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name copy  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name collection  end_name  begin_operator  end_operator  begin_name  begin_name parameters  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name copy  end_name  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name copy  end_name  begin_init  begin_expr  begin_call  begin_name clone collection  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name collection  end_name  begin_operator  end_operator  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name copy  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name parameters  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name copy  end_name  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name copy  end_name  begin_init  begin_expr  begin_call  begin_name clone collection  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name collection  end_name  begin_operator  end_operator  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name copy  end_name  begin_operator  end_operator  begin_name list  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name list  end_name  begin_operator  end_operator  begin_name copy  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name parameters  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name copy  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name parameters  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_return  begin_expr  begin_name copy  end_name  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name subject  end_name  begin_operator  end_operator  begin_name list  end_name  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name list  end_name  begin_operator  end_operator  begin_name subject  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name integer  end_name  begin_operator  end_operator  begin_name  begin_name parameters  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name list  end_name  begin_operator  end_operator  begin_name subject  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name list  end_name  begin_operator  end_operator  begin_name subject  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name list  end_name  begin_operator  end_operator  begin_name subject  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name size  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  end_if  begin_comment these operations are ok for bags too  end_comment  begin_if  begin_condition  begin_expr  begin_name subject  end_name  begin_operator  end_operator  begin_name set  end_name  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name set  end_name  end_type  begin_name c 1  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name set  end_name  begin_operator  end_operator  begin_name subject  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name set  end_name  end_type  begin_name c 2  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name set  end_name  begin_operator  end_operator  begin_name  begin_name parameters  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name set  end_name  end_type  begin_name r  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name hash set  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o  end_name  begin_range  begin_expr  begin_name c 1  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name c 2  end_name  begin_operator  end_operator  begin_name contains  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name r  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o  end_name  begin_range  begin_expr  begin_name c 2  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name c 1  end_name  begin_operator  end_operator  begin_name contains  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name r  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  begin_return  begin_expr  begin_name r  end_name  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name set  end_name  end_type  begin_name copy  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name set  end_name  begin_operator  end_operator  begin_call  begin_name clone collection  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name set  end_name  begin_operator  end_operator  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name copy  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name parameters  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name copy  end_name  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name set  end_name  end_type  begin_name copy  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name set  end_name  begin_operator  end_operator  begin_call  begin_name clone collection  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name set  end_name  begin_operator  end_operator  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name copy  end_name  begin_operator  end_operator  begin_name remove  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name parameters  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name copy  end_name  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name set  end_name  end_type  begin_name c 1  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name set  end_name  begin_operator  end_operator  begin_name subject  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name set  end_name  end_type  begin_name c 2  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name set  end_name  begin_operator  end_operator  begin_name  begin_name parameters  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name set  end_name  end_type  begin_name r  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name hash set  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o  end_name  begin_range  begin_expr  begin_name c 1  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name c 2  end_name  begin_operator  end_operator  begin_name contains  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name r  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o  end_name  begin_range  begin_expr  begin_name c 2  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name c 1  end_name  begin_operator  end_operator  begin_name contains  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name r  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  begin_return  begin_expr  begin_name r  end_name  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name subject  end_name  begin_operator  end_operator  begin_name bag  end_name  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name bag  end_name  begin_operator  end_operator  begin_name subject  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name count  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name parameters  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  end_if  begin_return  begin_expr  end_expr  end_return  end_block 
begin_comment see org argouml profile internal ocl model interpreter invoke feature java util map java lang object java lang string java lang string java lang object end_comment begin_type  begin_annotation  begin_name suppress warnings  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name invoke feature  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name  begin_name map  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  end_type  begin_name vt  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name subject  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name feature  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name type  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name object  end_name  begin_index  end_index  end_name  end_type  begin_name parameters  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo this is an absurdly long method break it up  end_comment  begin_if  begin_condition  begin_expr  begin_name subject  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name subject  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name vt  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment 4 5 2 1 abstraction  end_comment  begin_comment todo investigate abstraction mapping is not in the model subsystem  end_comment  begin_comment 4 5 2 3 association  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a association  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get connections  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_comment additional operation 4 5 3 1 1  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name hash set  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get connections  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  end_if  begin_comment 4 5 2 5 association end  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a association end  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get aggregation 1  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get changeability  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get ordering  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is navigable  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get multiplicity  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_comment todo is static in uml 2 x  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get target scope  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get visibility  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get qualifiers  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get specification  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get classifier  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_comment todo investigate the unnamed opposite end  end_comment  begin_comment additional operation 4 5 3 3 1  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get upper  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  end_if  begin_comment 4 5 2 6 attribute  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a attribute  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get initial value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get association ends  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  end_if  begin_comment 4 5 2 7 behavioral feature  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a behavioral feature  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is query  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get parameters  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  begin_comment todo implement additional operations in 4 5 3 5  end_comment  end_block  end_then  end_if  begin_comment 4 5 2 8 binding  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a binding  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get arguments  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  end_if  begin_comment 4 5 2 9 class  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a class  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is active  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  end_if  begin_comment 4 5 2 10 classifier  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a classifier  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get features  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get features  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get association ends  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name hash set  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get powertype ranges  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_comment todo specified end  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get features  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_comment additional operations in 4 5 3 8  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name internal ocl  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name vt  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name internal ocl  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name vt  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name internal ocl  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name vt  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name internal ocl  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name vt  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name internal ocl  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name vt  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name internal ocl  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name vt  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name internal ocl  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name vt  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name internal ocl  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name vt  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name internal ocl  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name vt  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name internal ocl  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name vt  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name internal ocl  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name vt  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  end_if  begin_comment 4 5 2 11 comment  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a comment  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get body  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name hash set  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get annotated elements  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  end_if  begin_comment 4 5 2 12 component  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a component  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name hash set  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get deployment locations  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment todo check this  end_comment  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name hash set  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get residents  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_comment todo implementation  end_comment  begin_comment additional operation in 4 5 3 9  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name internal ocl  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name vt  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  end_if  begin_comment 4 5 2 13 constraint  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a constraint  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get body  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment todo check this  end_comment  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get constrained elements  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  end_if  begin_comment 4 5 2 14 dependency  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a dependency  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name hash set  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get clients  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name hash set  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get suppliers  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  end_if  begin_comment todo element ownership is not in model subsys  end_comment  begin_comment 4 5 2 18 element ownership  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a element residence  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get visibility  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  end_if  begin_comment 4 5 2 19 enumeration  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a enumeration  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get enumeration literals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  end_if  begin_comment 4 5 2 20 enumeration literal  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a enumeration literal  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get enumeration  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  end_if  begin_comment 4 5 2 21 feature  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a feature  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is static  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get visibility  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get owner  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  end_if  begin_comment 4 5 2 23 generalizable element  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a generalizable element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is abstract  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is leaf  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is root  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name hash set  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get generalizations  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name hash set  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get specializations  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_comment additional operation in 4 5 3 20  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name internal ocl  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name vt  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name internal ocl  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name vt  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  end_if  begin_comment 4 5 2 24 generalization  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a generalization  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get discriminator  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get specific  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get general  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get powertype  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name hash set  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get specializations  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  end_if  begin_comment 4 5 2 26 method  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get body  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get specification  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  end_if  begin_comment 4 5 2 27 model element  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a model element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment todo check conformancy to specification  end_comment  begin_comment avoiding null names  end_comment  begin_expr_stmt  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_name name  end_name  end_expr  end_return  end_block  end_then  end_if  begin_comment todo as argument  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name hash set  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get client dependencies  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name hash set  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get constraints  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_comment todo implementation location  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get namespace  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_comment todo presentation  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name hash set  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get supplier dependencies  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get template parameters  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_comment as extended by 4 6 2 2  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get stereotypes  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get tagged values collection  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get constraints  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_comment additional operations in 4 5 3 25  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name internal ocl  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name vt  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name internal ocl  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name vt  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name internal ocl  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name vt  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get template parameters  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is empty  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name internal ocl  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name vt  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name internal ocl  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name vt  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  end_if  begin_comment 4 5 2 28 namespace  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a namespace  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name hash set  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get owned elements  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_comment additional operations in 4 5 3 26  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment todo investigate typo in spec  end_comment  begin_return  begin_expr  begin_call  begin_name internal ocl  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name vt  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name internal ocl  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name vt  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name internal ocl  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name vt  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name internal ocl  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name vt  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  end_if  begin_comment 4 5 2 29 node  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a node  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name hash set  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get deployed components  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  end_if  begin_comment 4 5 2 30 operation  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a operation  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get concurrency  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is abstract  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is leaf  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is root  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  end_if  begin_comment 4 5 2 31 parameter  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a parameter  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get default value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get kind  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  end_if  begin_comment 4 5 2 35 programming language data type  end_comment  begin_comment gone from uml 2 x so unsupported here  end_comment  begin_comment if model get facade is a programming language data type subject  end_comment  begin_comment if type equals  end_comment  begin_comment if feature equals expression  end_comment  begin_comment return model get facade get expression subject  end_comment  begin_comment   end_comment  begin_comment   end_comment  begin_comment   end_comment  begin_comment 4 5 2 37 structural feature  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a structural feature  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get changeability  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get multiplicity  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get ordering  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_comment todo removed from uml 2 x  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get target scope  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get type  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  end_if  begin_comment 4 5 2 38 template argument  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a template argument  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get binding  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get model element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  end_if  begin_comment 4 5 2 39 template parameter  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a template parameter  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get default element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  end_if  begin_comment 4 11 3 5 use case  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a use case  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment the operation specification path results in a set containing all surrounding namespaces that are not instances of package specification path set namespace specification path self all surrounding namespaces select n n ocl is kind of subsystem or n ocl is kind of class  end_comment  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get use cases helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get specification path  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name c  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get all supertypes  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name result  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name array list  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get extension points  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name uc  end_name  begin_range  begin_expr  begin_name c  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get extension points  end_name  begin_argument_list  begin_argument  begin_expr  begin_name uc  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_return  begin_expr  begin_name result  end_name  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  end_if  begin_comment 4 5 3 2 association class  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a association class  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment the operation all connections results in the set of all association ends of the association class including all connections defined by its parent transitive closure  end_comment  begin_return  begin_expr  begin_call  begin_name internal ocl  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name vt  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  end_if  begin_comment 4 6 2 3 stereotype  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a stereotype  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name hash set  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get base classes  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name hash set  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get extended elements  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name hash set  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get tag definitions  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_comment stereotype constraint  end_comment  end_block  end_then  end_if  end_block  end_then  end_if  begin_comment 4 6 2 4 tag definition  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a tag definition  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get multiplicity  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get type  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name hash set  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get typed values  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get owner  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  end_if  begin_comment 4 6 2 5 tagged value  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a tagged value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get data value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get type  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name hash set  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get reference value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  end_if  begin_return  begin_expr  end_expr  end_return  end_block 
begin_comment see org argouml profile internal ocl model interpreter invoke feature java util map java lang object java lang string java lang string java lang object end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name invoke feature  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name  begin_name map  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  end_type  begin_name vt  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name subject  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name feature  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name type  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name object  end_name  begin_index  end_index  end_name  end_type  begin_name parameters  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment todo implement the difference between ocl is kind of and ocl is type of  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name trim  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name trim  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name type name  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name ocl type  end_name  begin_operator  end_operator  begin_name  begin_name parameters  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name type name  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a  end_name  begin_argument_list  begin_argument  begin_expr  begin_name type name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name subject  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_else  end_if  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name trim  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name subject  end_name  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name subject  end_name  begin_operator  end_operator  begin_name ocl type  end_name  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name trim  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name ocl type  end_name  begin_operator  end_operator  begin_name subject  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name subject  end_name  begin_operator  end_operator  begin_name string  end_name  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name trim  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name string  end_name  begin_operator  end_operator  begin_name subject  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name length  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name trim  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name string  end_name  begin_operator  end_operator  begin_name subject  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name concat  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name string  end_name  begin_operator  end_operator  begin_name  begin_name parameters  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name trim  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name string  end_name  begin_operator  end_operator  begin_name subject  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name to lower case  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name trim  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name string  end_name  begin_operator  end_operator  begin_name subject  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name to upper case  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name trim  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name string  end_name  begin_operator  end_operator  begin_name subject  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name substring  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name integer  end_name  begin_operator  end_operator  begin_name  begin_name parameters  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name integer  end_name  begin_operator  end_operator  begin_name  begin_name parameters  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  end_if  begin_return  begin_expr  end_expr  end_return  end_block 
begin_comment see org argouml profile internal ocl model interpreter get built in symbol java lang string end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get built in symbol  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name sym  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name sym  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name ocl type  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  begin_comment todo implement ocl expression  end_comment  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name sym  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name ocl type  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_else  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name sym  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name ocl type  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_return  begin_expr  end_expr  end_return  end_block 
begin_comment see java lang object hash code end_comment begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name hash code  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment todo how to implement this method properly  end_comment  begin_return  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name hash code  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment param p the profile to register return true if there should be an attempt to load the default profiles from the configuration end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name register profile internal  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name profile  end_name  end_type  begin_name p  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_try  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name load default profiles from configuration  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name p  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name profiles  end_name  begin_operator  end_operator  begin_name contains  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name p  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name p  end_name  begin_operator  end_operator  begin_name user defined profile  end_name  begin_operator  end_operator  begin_call  begin_name get profile for class  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name p  end_name  begin_operator  end_operator  begin_name get class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name load default profiles from configuration  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name profiles  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name p  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name critic  end_name  end_type  begin_name critic  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name p  end_name  begin_operator  end_operator  begin_name get critics  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name meta  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name critic  end_name  begin_operator  end_operator  begin_name get criticized design materials  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name agency  end_name  begin_operator  end_operator  begin_name register  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name critic  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name meta  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name critic  end_name  begin_operator  end_operator  begin_name set enabled  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  end_block  end_then  end_if  end_block  end_then  end_if  begin_return  begin_expr  begin_name load default profiles from configuration  end_name  end_expr  end_return  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name runtime exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo better if we wrap in a profile exception and throw that  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name p  end_name  begin_operator  end_operator  begin_name get display name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_throw  begin_expr  begin_name e  end_name  end_expr  end_throw  end_block  end_catch  end_try  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name refresh registered profiles  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name file  end_name  end_argument  end_argument_list  end_name  end_type  begin_name dirs  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name file  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name dir name  end_name  begin_range  begin_expr  begin_name search directories  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name dir  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name file  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dir name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name dir  end_name  begin_operator  end_operator  begin_name exists  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name dirs  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dir  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name dirs  end_name  begin_operator  end_operator  begin_name is empty  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment todo allow zargo as profile as well  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name file  end_name  end_argument  end_argument_list  end_name  end_type  begin_name profile files  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name user defined profile helper  end_name  begin_operator  end_operator  begin_name get file list  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name dirs  end_name  begin_operator  end_operator  begin_name to array  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name file  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name load profiles  end_name  begin_argument_list  begin_argument  begin_expr  begin_name profile files  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block 
begin_comment constructor includes initialization of built in default profiles end_comment begin_specifier  end_specifier  begin_name profile manager impl  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_name disable configuration update  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name profile uml  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name profile uml  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name profile good practices  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name profile good practices  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name profile code generation  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name profile code generation  end_name  begin_argument_list  begin_argument  begin_expr  begin_name profile good practices  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name register profile internal  end_name  begin_argument_list  begin_argument  begin_expr  begin_name profile uml  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add to default profiles  end_name  begin_argument_list  begin_argument  begin_expr  begin_name profile uml  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment the uml profile is always present and default  end_comment  begin_comment register the built in profiles  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name register profile internal  end_name  begin_argument_list  begin_argument  begin_expr  begin_name profile good practices  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name register profile internal  end_name  begin_argument_list  begin_argument  begin_expr  begin_name profile code generation  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name register profile internal  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name profile meta  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name profile exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo why is this throwing a generic runtime exception  end_comment  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name runtime exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_finally  begin_block  begin_expr_stmt  begin_expr  begin_name disable configuration update  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_finally  end_try  begin_expr_stmt  begin_expr  begin_call  begin_name create user defined profiles dependency resolver  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name load directories from configuration  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name refresh registered profiles  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name load default profilesfrom configuration  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment construct a profile for uml modeling throws profile exception end_comment begin_annotation  begin_name suppress warnings  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_annotation  begin_name profile uml  end_name  begin_parameter_list  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name profile exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_expr_stmt  begin_expr  begin_name formating strategy  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name formating strategy uml  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_try  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get uml version  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name char at  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name profile reference  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name core profile reference  end_name  begin_argument_list  begin_argument  begin_expr  begin_name profile uml 14 file  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_comment todo this profile isn t used anymore see get model  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name core profile reference  end_name  begin_operator  end_operator  begin_name set profile directory  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name profile reference  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name core profile reference  end_name  begin_argument_list  begin_argument  begin_expr  begin_name profile uml 22 file  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name malformed url exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name profile exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name load dependent profiles  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name obj  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get uml version  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name char at  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name load dependent profiles uml 1  end_name  begin_argument_list  begin_argument  begin_expr  begin_name obj  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment todo profile dependencies for uml 2  end_comment  end_block 
begin_comment todo profile dependencies for uml 2 end_commentbegin_comment for argo uml uml 1 4 profiles dependencies are encoded as a list of profile names in the tagged value named dependency on the profile pkg param pkg profile package end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name load dependent profiles uml 1  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name pkg  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment load profile dependencies  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name dependency list str  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get tagged value value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name pkg  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string tokenizer  end_name  end_type  begin_name st  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name string tokenizer  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dependency list str  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name dependency name  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name has more tokens  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_expr_stmt  begin_expr  begin_name dependency name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name next token  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name dependency name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name dependency name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name profile  end_name  end_type  begin_name profile  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name profile manager  end_name  begin_operator  end_operator  begin_name look for registered profile  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dependency name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name profile  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name add profile dependency  end_name  begin_argument_list  begin_argument  begin_expr  begin_name profile  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name warn  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name display name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name dependency name  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  end_if  end_block  end_while  end_block 
begin_comment todo is this critics embedded in comments actually used by anyone end_comment begin_type  begin_specifier  end_specifier  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name cr ocl  end_name  end_argument  end_argument_list  end_name  end_type  begin_name get all critiques in model  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name cr ocl  end_name  end_argument  end_argument_list  end_name  end_type  begin_name ret  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name cr ocl  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  end_type  begin_name comments  end_name  begin_init  begin_expr  begin_call  begin_name get all comments in model  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get profile packages  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name comment  end_name  begin_range  begin_expr  begin_name comments  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get extension mechanisms helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name has stereotype  end_name  begin_argument_list  begin_argument  begin_expr  begin_name comment  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name cr ocl  end_name  end_type  begin_name cr  end_name  begin_init  begin_expr  begin_call  begin_name generate critic from comment  end_name  begin_argument_list  begin_argument  begin_expr  begin_name comment  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name cr  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ret  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cr  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_for  begin_return  begin_expr  begin_name ret  end_name  end_expr  end_return  end_block 
begin_comment open a zip input stream to the first file found with a given extension todo remove since this is a duplicate of zip file persister method when we have refactored the persister subsystem param url the url of the zip file param ext the required extension return the zip stream positioned at the required location throws io exception if there is a problem opening the file end_comment begin_type  begin_specifier  end_specifier  begin_name zip input stream  end_name  end_type  begin_name open zip stream at  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name url  end_name  end_type  begin_name url  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name ext  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name io exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name zip input stream  end_name  end_type  begin_name zis  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name zip input stream  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name url  end_name  begin_operator  end_operator  begin_name open stream  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name zip entry  end_name  end_type  begin_name entry  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name zis  end_name  begin_operator  end_operator  begin_name get next entry  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_name entry  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name entry  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name ends with  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ext  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_expr_stmt  begin_expr  begin_name entry  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name zis  end_name  begin_operator  end_operator  begin_name get next entry  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_while  begin_return  begin_expr  begin_name zis  end_name  end_expr  end_return  end_block 
begin_comment build the menu tools end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name init menu tools  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_name tools  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name j menu  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name menu localize  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set mnemonic  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tools  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo add empty placeholder here  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tools  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment adds the entry to the mru list param filename of the project todo this should listen for file save events rather than being called directly tfm end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name add file saved  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name filename  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mru list  end_name  begin_operator  end_operator  begin_name add entry  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name filename  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment assign a shortcut to the given j menu item param menu item the menu item param shortcut key the shortcut key end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name assign accelerator  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name j menu item  end_name  end_type  begin_name menu item  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name shortcut key  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name action wrapper  end_name  end_type  begin_name shortcut  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name shortcut hash  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name shortcut key  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name shortcut  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name key stroke  end_name  end_type  begin_name key stroke  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name shortcut  end_name  begin_operator  end_operator  begin_name get current shortcut  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name key stroke  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name menu item  end_name  begin_operator  end_operator  begin_name set accelerator  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name key stroke  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name key stroke  end_name  end_type  begin_name alternative key stroke  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name duplicate  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name key stroke  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name alternative key stroke  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name action name  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name string  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name menu item  end_name  begin_operator  end_operator  begin_name get action  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name abstract action  end_name  begin_operator  end_operator  begin_name name  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name menu item  end_name  begin_operator  end_operator  begin_name get input map  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name j component  end_name  begin_operator  end_operator  begin_name when in focused window  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name put  end_name  begin_argument_list  begin_argument  begin_expr  begin_name alternative key stroke  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name action name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name menu item  end_name  begin_operator  end_operator  begin_name get action map  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name put  end_name  begin_argument_list  begin_argument  begin_expr  begin_name action name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name menu item  end_name  begin_operator  end_operator  begin_name get action  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  end_block 
begin_comment assign a shortcut to the given j panel only when focused param panel the panel param shortcut key the shortcut key end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name assign accelerator  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name j panel  end_name  end_type  begin_name panel  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name shortcut key  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name action wrapper  end_name  end_type  begin_name shortcut  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name shortcut hash  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name shortcut key  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name shortcut  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name key stroke  end_name  end_type  begin_name key stroke  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name shortcut  end_name  begin_operator  end_operator  begin_name get current shortcut  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name key stroke  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment todo this method is obsolete use get input map etc as below  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name panel  end_name  begin_operator  end_operator  begin_name register keyboard action  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name shortcut  end_name  begin_operator  end_operator  begin_name get action instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name key stroke  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name j component  end_name  begin_operator  end_operator  begin_name when focused  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name key stroke  end_name  end_type  begin_name alternative key stroke  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name duplicate  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name key stroke  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name alternative key stroke  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name action name  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name string  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name shortcut  end_name  begin_operator  end_operator  begin_name get action instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name abstract action  end_name  begin_operator  end_operator  begin_name name  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name panel  end_name  begin_operator  end_operator  begin_name get input map  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name j component  end_name  begin_operator  end_operator  begin_name when focused  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name put  end_name  begin_argument_list  begin_argument  begin_expr  begin_name alternative key stroke  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name action name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name panel  end_name  begin_operator  end_operator  begin_name get action map  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name put  end_name  begin_argument_list  begin_argument  begin_expr  begin_name action name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name shortcut  end_name  begin_operator  end_operator  begin_name get action instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  end_block 
begin_comment todo some parts of argo uml have preliminary support for multiple details panels but we currently only support the default south bottom panel end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name load tabs  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name direction  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name position  end_name  begin_operator  end_operator  begin_name south  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals ignore case  end_name  begin_argument_list  begin_argument  begin_expr  begin_name direction  end_name  end_expr  end_argument  end_argument_list  end_call  begin_comment special case for backward compatibility  end_comment  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name equals ignore case  end_name  begin_argument_list  begin_argument  begin_expr  begin_name direction  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment the south panel always has tabs but they are added later elsewhere  end_comment  begin_expr_stmt  begin_expr  begin_name has tabs  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name action performed  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name action event  end_name  end_type  begin_name arg 0  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_try  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name collection  end_name  end_type  begin_name profile packages  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name selected profile  end_name  begin_operator  end_operator  begin_name get profile packages  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name model  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name profile packages  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name next  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name model  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name destiny  end_name  begin_init  begin_expr  begin_call  begin_name get target file  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name destiny  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name save model  end_name  begin_argument_list  begin_argument  begin_expr  begin_name destiny  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name profile exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo we should be giving the user more direct feedback  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name io exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name uml exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  end_try  end_block 
begin_comment the drag gesture listener is notified of drag gestures by a recognizer the typical response is to initiate a drag by invoking drag source start drag p todo find a way to show a different image when multiple elements are dragged param drag gesture event the drag gesture event describing the gesture that has just occurred see java awt dnd drag gesture listener drag gesture recognized java awt dnd drag gesture event end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name drag gesture recognized  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name drag gesture event  end_name  end_type  begin_name drag gesture event  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment get the selected targets uml model elements from the target manager  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name targets  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name target manager  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get model targets  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name targets  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name is debug enabled  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name targets  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name transferable model elements  end_name  end_type  begin_name tf  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name transferable model elements  end_name  begin_argument_list  begin_argument  begin_expr  begin_name targets  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name point  end_name  end_type  begin_name pt drag origin  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name drag gesture event  end_name  begin_operator  end_operator  begin_name get drag origin  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name tree path  end_name  end_type  begin_name path  end_name  begin_init  begin_expr  begin_call  begin_name get path for location  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name pt drag origin  end_name  begin_operator  end_operator  begin_name x  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name pt drag origin  end_name  begin_operator  end_operator  begin_name y  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name path  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name rectangle  end_name  end_type  begin_name ra path  end_name  begin_init  begin_expr  begin_call  begin_name get path bounds  end_name  begin_argument_list  begin_argument  begin_expr  begin_name path  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name click offset  end_name  begin_operator  end_operator  begin_name set location  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name pt drag origin  end_name  begin_operator  end_operator  begin_name x  end_name  end_name  begin_operator  end_operator  begin_name  begin_name ra path  end_name  begin_operator  end_operator  begin_name x  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name pt drag origin  end_name  begin_operator  end_operator  begin_name y  end_name  end_name  begin_operator  end_operator  begin_name  begin_name ra path  end_name  begin_operator  end_operator  begin_name y  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment get the cell renderer which is a j label for the path being dragged  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name j label  end_name  end_type  begin_name lbl  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name j label  end_name  begin_operator  end_operator  begin_call  begin_name get cell renderer  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get tree cell renderer component  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_comment tree  end_comment  begin_argument  begin_expr  begin_call  begin_name  begin_name path  end_name  begin_operator  end_operator  begin_name get last path component  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_comment value  end_comment  begin_argument  begin_expr  end_expr  end_argument  begin_comment is selected dont want a colored background  end_comment  begin_argument  begin_expr  begin_call  begin_name is expanded  end_name  begin_argument_list  begin_argument  begin_expr  begin_name path  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_comment is expanded  end_comment  begin_argument  begin_expr  begin_call  begin_name get model  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is leaf  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name path  end_name  begin_operator  end_operator  begin_name get last path component  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_comment is leaf  end_comment  begin_argument  begin_expr  end_expr  end_argument  begin_comment row not important for rendering  end_comment  begin_argument  begin_expr  end_expr  end_argument  begin_comment has focus dont want a focus rectangle  end_comment  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment the layout manager would normally do this  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name lbl  end_name  begin_operator  end_operator  begin_name set size  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name int  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ra path  end_name  begin_operator  end_operator  begin_name get width  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name int  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ra path  end_name  begin_operator  end_operator  begin_name get height  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment get a buffered image of the selection for dragging a ghost image  end_comment  begin_expr_stmt  begin_expr  begin_name ghost image  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name buffered image  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name int  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ra path  end_name  begin_operator  end_operator  begin_name get width  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name int  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ra path  end_name  begin_operator  end_operator  begin_name get height  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name buffered image  end_name  begin_operator  end_operator  begin_name type int argb pre  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name graphics 2 d  end_name  end_type  begin_name g 2  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ghost image  end_name  begin_operator  end_operator  begin_name create graphics  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment ask the cell renderer to paint itself into the buffered image make the image ghostlike  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name g 2  end_name  begin_operator  end_operator  begin_name set composite  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name alpha composite  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name alpha composite  end_name  begin_operator  end_operator  begin_name src  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name lbl  end_name  begin_operator  end_operator  begin_name paint  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name g 2  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment now paint a gradient under the ghosted j label text but not under the icon if any  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name icon  end_name  end_type  begin_name icon  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name lbl  end_name  begin_operator  end_operator  begin_name get icon  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name n start of text  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name icon  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name icon  end_name  begin_operator  end_operator  begin_name get icon width  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name lbl  end_name  begin_operator  end_operator  begin_name get icon text gap  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment make the gradient ghostlike  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name g 2  end_name  begin_operator  end_operator  begin_name set composite  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name alpha composite  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name alpha composite  end_name  begin_operator  end_operator  begin_name dst over  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name g 2  end_name  begin_operator  end_operator  begin_name set paint  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name gradient paint  end_name  begin_argument_list  begin_argument  begin_expr  begin_name n start of text  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name system color  end_name  begin_operator  end_operator  begin_name control shadow  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get width  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name color  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name g 2  end_name  begin_operator  end_operator  begin_name fill rect  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name n start of text  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get width  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name ghost image  end_name  begin_operator  end_operator  begin_name get height  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name g 2  end_name  begin_operator  end_operator  begin_name dispose  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment remember the path being dragged because if it is being moved we will have to delete it later  end_comment  begin_expr_stmt  begin_expr  begin_name source path  end_name  begin_operator  end_operator  begin_name path  end_name  end_expr  end_expr_stmt  begin_comment we pass our drag image just in case it is supported by the platform  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name drag gesture event  end_name  begin_operator  end_operator  begin_name start drag  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name ghost image  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name point  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name tf  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is valid drag  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name tree path  end_name  end_type  begin_name destination path  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name transferable  end_name  end_type  begin_name tf  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name destination path  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name selected tree path  end_name  begin_operator  end_operator  begin_name is descendant  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name destination path  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name tf  end_name  begin_operator  end_operator  begin_name is data flavor supported  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name transferable model elements  end_name  begin_operator  end_operator  begin_name uml collection flavor  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name dest  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name default mutable tree node  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name destination path  end_name  begin_operator  end_operator  begin_name get last path component  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get user object  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo support other types of drag here you set the owner by dragging into a namespace an alternative could be to drag states into composite states  end_comment  begin_comment if the destination is not a name space then abort  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a namespace  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dest  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_comment we are sure dest is a namespace now  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get model management helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is read only  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dest  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_comment if the destination is a data type then abort  end_comment  begin_comment todo any namespace can contain other elements why don t we allow  end_comment  begin_comment this tfm  end_comment  begin_comment mvw these are the wf rs for data type 1 a data type can only contain operations which all must be queries self all features for all f f ocl is kind of operation and f ocl as type operation is query 2 a data type cannot contain any other model elements self all contents is empty imho we should enforce these wf rs here so it is still possible to copy or move query operations hence we should allow this  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a data type  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dest  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_comment let s check all dragged elements if one of these may be dropped then the drag is valid the others will be ignored when dropping  end_comment  begin_try  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name transfers  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name collection  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name tf  end_name  begin_operator  end_operator  begin_name get transfer data  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name transferable model elements  end_name  begin_operator  end_operator  begin_name uml collection flavor  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  begin_range  begin_expr  begin_name transfers  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is auml element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get model management helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is read only  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a model element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dest  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a namespace  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is valid namespace  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name dest  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name dest  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a feature  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a classifier  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dest  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name element  end_name  begin_operator  end_operator  begin_name relocatable  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name relocatable  end_name  end_type  begin_name d  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name relocatable  end_name  begin_operator  end_operator  begin_name element  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name d  end_name  begin_operator  end_operator  begin_name is relocation allowed  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dest  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name dest  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_for  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name unsupported flavor exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name io exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  end_try  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  end_expr  end_return  end_block 
begin_comment see java awt dnd drag source listener drag enter java awt dnd drag source drag event end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name drag enter  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name drag source drag event  end_name  end_type  begin_name drag source drag event  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment empty implementation not used  end_comment  end_block 
begin_comment empty implementation not used end_commentbegin_comment see java awt dnd drag source listener drag exit java awt dnd drag source event end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name drag exit  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name drag source event  end_name  end_type  begin_name drag source event  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment empty implementation not used  end_comment  end_block 
begin_comment empty implementation not used end_commentbegin_comment this is not the correct location to set the cursor the commented out code illustrates the calculation of coordinates see java awt dnd drag source listener drag over java awt dnd drag source drag event end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name drag over  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name drag source drag event  end_name  end_type  begin_name drag source drag event  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment transferable tf  end_comment  begin_comment drag source drag event get drag source context get transferable  end_comment  begin_comment this is the mouse location on the screen  end_comment  begin_comment point drag loc drag source drag event get location  end_comment  begin_comment this is the j tree location on the screen  end_comment  begin_comment point tree loc get location on screen  end_comment  begin_comment now substract to find the location within the j tree  end_comment  begin_comment drag loc translate tree loc x tree loc y  end_comment  begin_comment tree path destination path  end_comment  begin_comment get path for location drag loc x drag loc y  end_comment  begin_comment if is valid drag destination path tf  end_comment  begin_comment drag source drag event get drag source context  end_comment  begin_comment set cursor drag source default move drop  end_comment  begin_comment else  end_comment  begin_comment drag source drag event get drag source context  end_comment  begin_comment set cursor drag source default copy no drop  end_comment  begin_comment   end_comment  end_block 
begin_comment transferable tf end_commentbegin_comment drag source drag event get drag source context get transferable end_commentbegin_comment this is the mouse location on the screen end_commentbegin_comment point drag loc drag source drag event get location end_commentbegin_comment this is the j tree location on the screen end_commentbegin_comment point tree loc get location on screen end_commentbegin_comment now substract to find the location within the j tree end_commentbegin_comment drag loc translate tree loc x tree loc y end_commentbegin_comment tree path destination path end_commentbegin_comment get path for location drag loc x drag loc y end_commentbegin_comment if is valid drag destination path tf end_commentbegin_comment drag source drag event get drag source context end_commentbegin_comment set cursor drag source default move drop end_commentbegin_comment else end_commentbegin_comment drag source drag event get drag source context end_commentbegin_comment set cursor drag source default copy no drop end_commentbegin_comment  end_commentbegin_comment see java awt dnd drag source listener drop action changed java awt dnd drag source drag event end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name drop action changed  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name drag source drag event  end_name  end_type  begin_name drag source drag event  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment empty implementation not used  end_comment  end_block 
begin_comment set timer to one shot mode end_commentbegin_comment see java awt dnd drop target listener drag enter java awt dnd drop target drag event end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name drag enter  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name drop target drag event  end_name  end_type  begin_name drop target drag event  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name is drag acceptable  end_name  begin_argument_list  begin_argument  begin_expr  begin_name drop target drag event  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name drop target drag event  end_name  begin_operator  end_operator  begin_name reject drag  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name drop target drag event  end_name  begin_operator  end_operator  begin_name accept drag  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name drop target drag event  end_name  begin_operator  end_operator  begin_name get drop action  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block 
begin_comment see java awt dnd drop target listener drag exit java awt dnd drop target event end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name drag exit  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name drop target event  end_name  end_type  begin_name drop target event  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name drag source  end_name  begin_operator  end_operator  begin_name is drag image supported  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name repaint  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name ghost rectangle  end_name  begin_operator  end_operator  begin_name get bounds  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block 
begin_comment called when a drag operation is ongoing while the mouse pointer is still over the operable part of the drop site for the code drop target code registered with this listener see java awt dnd drop target listener drag over java awt dnd drop target drag event end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name drag over  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name drop target drag event  end_name  end_type  begin_name drop target drag event  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name point  end_name  end_type  begin_name pt  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name drop target drag event  end_name  begin_operator  end_operator  begin_name get location  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name pt  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name last mouse location  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_comment many many of these events this slows things down  end_comment  begin_comment log debug drag over  end_comment  begin_expr_stmt  begin_expr  begin_name last mouse location  end_name  begin_operator  end_operator  begin_name pt  end_name  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name graphics 2 d  end_name  end_type  begin_name g 2  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name graphics 2 d  end_name  begin_operator  end_operator  begin_call  begin_name get graphics  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment the next condition becomes false when dragging in something from another application  end_comment  begin_if  begin_condition  begin_expr  begin_name ghost image  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment if a drag image is not supported by the platform then draw my own drag image  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name drag source  end_name  begin_operator  end_operator  begin_name is drag image supported  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment rub out the last ghost image and cue line  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name paint immediately  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name ghost rectangle  end_name  begin_operator  end_operator  begin_name get bounds  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment and remember where we are about to draw the new ghost image  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ghost rectangle  end_name  begin_operator  end_operator  begin_name set rect  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name pt  end_name  begin_operator  end_operator  begin_name x  end_name  end_name  begin_operator  end_operator  begin_name  begin_name click offset  end_name  begin_operator  end_operator  begin_name x  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name pt  end_name  begin_operator  end_operator  begin_name y  end_name  end_name  begin_operator  end_operator  begin_name  begin_name click offset  end_name  begin_operator  end_operator  begin_name y  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name ghost image  end_name  begin_operator  end_operator  begin_name get width  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name ghost image  end_name  begin_operator  end_operator  begin_name get height  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name g 2  end_name  begin_operator  end_operator  begin_name draw image  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ghost image  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name affine transform  end_name  begin_operator  end_operator  begin_name get translate instance  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name ghost rectangle  end_name  begin_operator  end_operator  begin_name get x  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name ghost rectangle  end_name  begin_operator  end_operator  begin_name get y  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_comment just rub out the last cue line  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name paint immediately  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name cue line  end_name  begin_operator  end_operator  begin_name get bounds  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name tree path  end_name  end_type  begin_name path  end_name  begin_init  begin_expr  begin_call  begin_name get path for location  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name pt  end_name  begin_operator  end_operator  begin_name x  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name pt  end_name  begin_operator  end_operator  begin_name y  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name path  end_name  begin_operator  end_operator  begin_name last path  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name last path  end_name  begin_operator  end_operator  begin_name path  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name hover timer  end_name  begin_operator  end_operator  begin_name restart  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment in any case draw over the ghost image if necessary a cue line indicating where a drop will occur  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name rectangle  end_name  end_type  begin_name ra path  end_name  begin_init  begin_expr  begin_call  begin_name get path bounds  end_name  begin_argument_list  begin_argument  begin_expr  begin_name path  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name ra path  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cue line  end_name  begin_operator  end_operator  begin_name set rect  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name ra path  end_name  begin_operator  end_operator  begin_name y  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name int  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ra path  end_name  begin_operator  end_operator  begin_name get height  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get width  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name g 2  end_name  begin_operator  end_operator  begin_name set color  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cue line color  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name g 2  end_name  begin_operator  end_operator  begin_name fill  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cue line  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment and include the cue line in the area to be rubbed out next time  end_comment  begin_expr_stmt  begin_expr  begin_name ghost rectangle  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ghost rectangle  end_name  begin_operator  end_operator  begin_name create union  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cue line  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment testcase drag something from another application into argo uml and the explorer shows the drop icon instead of the no drop  end_comment  begin_try  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name drop target drag event  end_name  begin_operator  end_operator  begin_name is data flavor supported  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name transferable model elements  end_name  begin_operator  end_operator  begin_name uml collection flavor  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name drop target drag event  end_name  begin_operator  end_operator  begin_name reject drag  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_then  end_if  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name null pointer exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name drop target drag event  end_name  begin_operator  end_operator  begin_name reject drag  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_catch  end_try  begin_if  begin_condition  begin_expr  begin_name path  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name drop target drag event  end_name  begin_operator  end_operator  begin_name reject drag  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_then  end_if  begin_comment to prohibit dropping onto the drag source  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name path  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name source path  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name drop target drag event  end_name  begin_operator  end_operator  begin_name reject drag  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name selected tree path  end_name  begin_operator  end_operator  begin_name is descendant  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name path  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name drop target drag event  end_name  begin_operator  end_operator  begin_name reject drag  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name dest  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name default mutable tree node  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name path  end_name  begin_operator  end_operator  begin_name get last path component  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get user object  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment if the destination is not a name space then reject  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a namespace  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dest  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name is debug enabled  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is auml element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dest  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dest  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name dest  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name dest  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is auml element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dest  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_name name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name drop target drag event  end_name  begin_operator  end_operator  begin_name reject drag  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_then  end_if  begin_comment we are sure dest is a namespace now  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get model management helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is read only  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dest  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_then  end_if  begin_comment if the destination is a data type then reject  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a data type  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dest  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name drop target drag event  end_name  begin_operator  end_operator  begin_name reject drag  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name drop target drag event  end_name  begin_operator  end_operator  begin_name accept drag  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name drop target drag event  end_name  begin_operator  end_operator  begin_name get drop action  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment the drop what is done when the mousebutton is released see java awt dnd drop target listener drop java awt dnd drop target drop event end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name drop  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name drop target drop event  end_name  end_type  begin_name drop target drop event  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment prevent hover timer from doing an unwanted expand path or collapse path  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name hover timer  end_name  begin_operator  end_operator  begin_name stop  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment clear the ghost image  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name repaint  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name ghost rectangle  end_name  begin_operator  end_operator  begin_name get bounds  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name is drop acceptable  end_name  begin_argument_list  begin_argument  begin_expr  begin_name drop target drop event  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name drop target drop event  end_name  begin_operator  end_operator  begin_name reject drop  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_then  end_if  begin_try  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name transferable  end_name  end_type  begin_name tr  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name drop target drop event  end_name  begin_operator  end_operator  begin_name get transferable  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment get new parent node  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name point  end_name  end_type  begin_name loc  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name drop target drop event  end_name  begin_operator  end_operator  begin_name get location  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name tree path  end_name  end_type  begin_name destination path  end_name  begin_init  begin_expr  begin_call  begin_name get path for location  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name loc  end_name  begin_operator  end_operator  begin_name x  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name loc  end_name  begin_operator  end_operator  begin_name y  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name is debug enabled  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name loc  end_name  begin_operator  end_operator  begin_name x  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name loc  end_name  begin_operator  end_operator  begin_name y  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name is valid drag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name destination path  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name tr  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name drop target drop event  end_name  begin_operator  end_operator  begin_name reject drop  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_then  end_if  begin_comment get the model elements that are being transfered  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name model elements  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name collection  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name tr  end_name  begin_operator  end_operator  begin_name get transfer data  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name transferable model elements  end_name  begin_operator  end_operator  begin_name uml collection flavor  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name is debug enabled  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name model elements  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name dest  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name default mutable tree node  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name destination path  end_name  begin_operator  end_operator  begin_name get last path component  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get user object  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name src  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name default mutable tree node  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name source path  end_name  begin_operator  end_operator  begin_name get last path component  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get user object  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name action  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name drop target drop event  end_name  begin_operator  end_operator  begin_name get drop action  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment the user drop actions are ctrl shift action link ctrl action copy shift action move none action move  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name copy action  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name action  end_name  begin_operator  end_operator  begin_name  begin_name dn d constants  end_name  begin_operator  end_operator  begin_name action copy  end_name  end_name  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name move action  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name action  end_name  begin_operator  end_operator  begin_name  begin_name dn d constants  end_name  begin_operator  end_operator  begin_name action move  end_name  end_name  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name move action  end_name  begin_operator  end_operator  begin_name copy action  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name drop target drop event  end_name  begin_operator  end_operator  begin_name reject drop  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is auml element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dest  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get model management helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is read only  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dest  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name drop target drop event  end_name  begin_operator  end_operator  begin_name reject drop  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_then  end_if  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is auml element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name src  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get model management helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is read only  end_name  begin_argument_list  begin_argument  begin_expr  begin_name src  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name drop target drop event  end_name  begin_operator  end_operator  begin_name reject drop  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_then  end_if  end_block  end_then  end_if  begin_comment todo really should be element model element but we don t  end_comment  begin_comment have a type which is portable for this  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  end_type  begin_name new targets  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name drop target drop event  end_name  begin_operator  end_operator  begin_name accept drop  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name action  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name me  end_name  begin_range  begin_expr  begin_name model elements  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is auml element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name me  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get model management helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is read only  end_name  begin_argument_list  begin_argument  begin_expr  begin_name me  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_continue  end_continue  end_block  end_then  end_if  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name is debug enabled  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name move action  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name me  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is valid namespace  end_name  begin_argument_list  begin_argument  begin_expr  begin_name me  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name dest  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name move action  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set namespace  end_name  begin_argument_list  begin_argument  begin_expr  begin_name me  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name dest  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name new targets  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name me  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name copy action  end_name  end_expr  end_condition  begin_then  begin_block  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name new targets  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get copy helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name copy  end_name  begin_argument_list  begin_argument  begin_expr  begin_name me  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name dest  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name runtime exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo the copy function is not yet completely implemented so we will have some exceptions here and there  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  end_try  end_block  end_then  end_if  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name me  end_name  begin_operator  end_operator  begin_name relocatable  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name relocatable  end_name  end_type  begin_name d  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name relocatable  end_name  begin_operator  end_operator  begin_name me  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name d  end_name  begin_operator  end_operator  begin_name is relocation allowed  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dest  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name d  end_name  begin_operator  end_operator  begin_name relocate  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dest  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name explorer event adaptor  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name model element changed  end_name  begin_argument_list  begin_argument  begin_expr  begin_name src  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name explorer event adaptor  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name model element changed  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dest  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo make the tree refresh and expand really work in all cases  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name make visible  end_name  begin_argument_list  begin_argument  begin_expr  begin_name destination path  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name expand path  end_name  begin_argument_list  begin_argument  begin_expr  begin_name destination path  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name new targets  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name me  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a feature  end_name  begin_argument_list  begin_argument  begin_expr  begin_name me  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a classifier  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dest  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name move action  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name remove feature  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get owner  end_name  begin_argument_list  begin_argument  begin_expr  begin_name me  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name me  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add feature  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dest  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name me  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name new targets  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name me  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name copy action  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name new targets  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get copy helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name copy  end_name  begin_argument_list  begin_argument  begin_expr  begin_name me  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name dest  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name drop target drop event  end_name  begin_operator  end_operator  begin_name get drop target context  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name drop complete  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name target manager  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set targets  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new targets  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name  begin_name java  end_name  begin_operator  end_operator  begin_name lang  end_name  begin_operator  end_operator  begin_name illegal state exception  end_name  end_name  end_type  begin_name ils  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name drop target drop event  end_name  begin_operator  end_operator  begin_name reject drop  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  end_try  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name drop target drop event  end_name  begin_operator  end_operator  begin_name get drop target context  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name drop complete  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name io exception  end_name  end_type  begin_name io  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name drop target drop event  end_name  begin_operator  end_operator  begin_name reject drop  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name unsupported flavor exception  end_name  end_type  begin_name ufe  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name drop target drop event  end_name  begin_operator  end_operator  begin_name reject drop  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  end_try  end_block 
begin_comment see java awt dnd drop target listener drop action changed java awt dnd drop target drag event end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name drop action changed  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name drop target drag event  end_name  end_type  begin_name drop target drag event  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name is drag acceptable  end_name  begin_argument_list  begin_argument  begin_expr  begin_name drop target drag event  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name drop target drag event  end_name  begin_operator  end_operator  begin_name reject drag  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name drop target drag event  end_name  begin_operator  end_operator  begin_name accept drag  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name drop target drag event  end_name  begin_operator  end_operator  begin_name get drop action  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block 
begin_comment the tree structure has changed significantly inform the associated tree model todo this shouldn t be public components desiring to inform the explorer of changes should send events deprecated by mvw in v 0 25 4 use events instead end_comment begin_type  begin_annotation  begin_name deprecated  end_name  end_annotation  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name structure changed  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name tree model  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name tree model  end_name  begin_operator  end_operator  begin_name structure changed  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment forwards this event to the tree model param element the modelelement to be added todo this shouldn t be public components desiring to inform the explorer of changes should send events end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name model element added  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name tree model  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name tree model  end_name  begin_operator  end_operator  begin_name model element added  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment forwards this event to the tree model param element the modelelement to be changed todo this shouldn t be public components desiring to inform the explorer of changes should send events end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name model element changed  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name tree model  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name tree model  end_name  begin_operator  end_operator  begin_name model element changed  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment creates a new instance of explorer popup param selected item is the item that we are pointing at param me is the event end_comment begin_specifier  end_specifier  begin_name explorer popup  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name selected item  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name mouse event  end_name  end_type  begin_name me  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name super  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment check if multiple items are selected  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name multi select  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name target manager  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get targets  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name size  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name mutable model elements only  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name target manager  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get targets  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is auml element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get model management helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is read only  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name mutable model elements only  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_then  end_if  end_block  end_for  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name argo diagram  end_name  end_type  begin_name active diagram  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name diagram utils  end_name  begin_operator  end_operator  begin_name get active diagram  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo i ve made some attempt to rationalize the conditions here  end_comment  begin_comment and make them more readable however i d suggest that the  end_comment  begin_comment conditions should move to each diagram  end_comment  begin_comment break up one complex method into a few simple ones and  end_comment  begin_comment give the diagrams more knowledge of themselves  end_comment  begin_comment although the diagrams may in fact delegate this in  end_comment  begin_comment turn to the model component  end_comment  begin_comment bob tarling 31 jan 2004  end_comment  begin_comment eg the code here should be something like  end_comment  begin_comment if active diagram can add selected item  end_comment  begin_comment uml action action  end_comment  begin_comment new action add existing node  end_comment  begin_comment menu localize menu popup add to diagram  end_comment  begin_comment selected item  end_comment  begin_comment action set enabled action should be enabled  end_comment  begin_comment this add action  end_comment  begin_comment   end_comment  begin_comment profile section dealing with profiles in different states  end_comment  begin_comment 1 a noneditable applied profile  end_comment  begin_try  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name multi select  end_name  begin_operator  end_operator  begin_name selected item  end_name  begin_operator  end_operator  begin_name profile  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name profile  end_name  begin_operator  end_operator  begin_name selected item  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get profile packages  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is empty  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name action export profile xmi  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name profile  end_name  begin_operator  end_operator  begin_name selected item  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment just no item added in this case  end_comment  end_block  end_catch  end_try  begin_comment 2 the profile configuration holding noneditable applied profiles  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name multi select  end_name  begin_operator  end_operator  begin_name selected item  end_name  begin_operator  end_operator  begin_name profile configuration  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name action manage profiles  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment 3 the editable unapplied profile  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a profile  end_name  begin_argument_list  begin_argument  begin_expr  begin_name selected item  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name action deploy profile  end_name  begin_argument_list  begin_argument  begin_expr  begin_name selected item  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment end of profile section  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name multi select  end_name  begin_operator  end_operator  begin_name mutable model elements only  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name init menu create diagrams  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name create diagrams  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name init menu create module actions  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name mutable model elements only  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name init menu create model elements  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name model element selected  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is auml element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name selected item  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name model element selected  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name n ary association selected  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a nary association  end_name  begin_argument_list  begin_argument  begin_expr  begin_name selected item  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name classifier selected  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a classifier  end_name  begin_argument_list  begin_argument  begin_expr  begin_name selected item  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name package selected  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a package  end_name  begin_argument_list  begin_argument  begin_expr  begin_name selected item  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name comment selected  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a comment  end_name  begin_argument_list  begin_argument  begin_expr  begin_name selected item  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name state vertex selected  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a state vertex  end_name  begin_argument_list  begin_argument  begin_expr  begin_name selected item  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name instance selected  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a instance  end_name  begin_argument_list  begin_argument  begin_expr  begin_name selected item  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name data value selected  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a data value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name selected item  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name relationship selected  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a relationship  end_name  begin_argument_list  begin_argument  begin_expr  begin_name selected item  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name flow selected  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a flow  end_name  begin_argument_list  begin_argument  begin_expr  begin_name selected item  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name link selected  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a link  end_name  begin_argument_list  begin_argument  begin_expr  begin_name selected item  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name transition selected  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a transition  end_name  begin_argument_list  begin_argument  begin_expr  begin_name selected item  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name activity diagram active  end_name  begin_init  begin_expr  begin_name active diagram  end_name  begin_operator  end_operator  begin_name uml activity diagram  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name sequence diagram active  end_name  begin_init  begin_expr  begin_name active diagram  end_name  begin_operator  end_operator  begin_name sequence diagram  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name state diagram active  end_name  begin_init  begin_expr  begin_name active diagram  end_name  begin_operator  end_operator  begin_name uml state diagram  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name selected state machine  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name state vertex selected  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get state machines helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get state machine  end_name  begin_argument_list  begin_argument  begin_expr  begin_name selected item  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name diagram state machine  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name state diagram active  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name uml state diagram  end_name  begin_operator  end_operator  begin_name active diagram  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get state machine  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name diagram activity  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name activity diagram active  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name uml activity diagram  end_name  begin_operator  end_operator  begin_name active diagram  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get state machine  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name project models  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name project manager  end_name  begin_operator  end_operator  begin_name get manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get current project  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get models  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name multi select  end_name  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name classifier selected  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name relationship selected  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name package selected  end_name  begin_comment todo allow adding models to a diagram issue 4172  end_comment  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name project models  end_name  begin_operator  end_operator  begin_name contains  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name selected item  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name state vertex selected  end_name  begin_operator  end_operator  begin_name activity diagram active  end_name  begin_operator  end_operator  begin_name diagram activity  end_name  begin_operator  end_operator  begin_name selected state machine  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name state vertex selected  end_name  begin_operator  end_operator  begin_name state diagram active  end_name  begin_operator  end_operator  begin_name diagram state machine  end_name  begin_operator  end_operator  begin_name selected state machine  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name instance selected  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name data value selected  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name sequence diagram active  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name n ary association selected  end_name  begin_operator  end_operator  begin_name comment selected  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment todo why can t we use action add existing nodes here bob  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name action  end_name  end_type  begin_name action  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name action add existing node  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name menu localize  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name selected item  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name action  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name relationship selected  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name flow selected  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name n ary association selected  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name link selected  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name sequence diagram active  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name transition selected  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name action  end_name  end_type  begin_name action  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name action add existing edge  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name menu localize  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name selected item  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name action  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add menu item for both ends of  end_name  begin_argument_list  begin_argument  begin_expr  begin_name selected item  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name classifier selected  end_name  begin_operator  end_operator  begin_name package selected  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name action set source path  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name mutable model elements only  end_name  begin_comment can t delete last top level model  end_comment  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name project models  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name project models  end_name  begin_operator  end_operator  begin_name contains  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name selected item  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment todo shouldn t be creating a new instance here we should  end_comment  begin_comment hold the delete action in some central place  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name action delete model elements  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  begin_comment todo make sure this shouldn t go into a previous  end_comment  begin_comment condition tml  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name multi select  end_name  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name selected item  end_name  begin_operator  end_operator  begin_name uml class diagram  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name action  end_name  end_type  begin_name action  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name action add all classes from model  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name menu localize  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name selected item  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name action  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name multi select  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  end_type  begin_name classifiers  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name target manager  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get targets  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_comment todo should be anything allowed by current diagram  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a classifier  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a relationship  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name classifiers  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name classifiers  end_name  begin_operator  end_operator  begin_name is empty  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name action  end_name  end_type  begin_name action  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name action add existing nodes  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name menu localize  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name classifiers  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name action  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment determine if only diagrams are in the target list  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name have at least one diagram  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name only diagram  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name target manager  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get targets  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_name element  end_name  begin_operator  end_operator  begin_name diagram  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name have at least one diagram  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name only diagram  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_for  begin_expr_stmt  begin_expr  begin_name only diagram  end_name  begin_operator  end_operator  begin_name only diagram  end_name  begin_operator  end_operator  begin_name have at least one diagram  end_name  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name only diagram  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name action delete model elements  end_name  end_type  begin_name ad  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name action delete model elements  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ad  end_name  begin_operator  end_operator  begin_name set enabled  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name ad  end_name  begin_operator  end_operator  begin_name should be enabled  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ad  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name selected item  end_name  begin_operator  end_operator  begin_name diagram  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name action save diagram to clipboard  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo delete should be available on any combination of model  end_comment  begin_comment elements and diagrams  end_comment  begin_comment todo shouldn t be creating a new instance here we should  end_comment  begin_comment hold the delete action in some central place  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name action delete model elements  end_name  end_type  begin_name ad  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name action delete model elements  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ad  end_name  begin_operator  end_operator  begin_name set enabled  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name ad  end_name  begin_operator  end_operator  begin_name should be enabled  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ad  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_block 
begin_comment unimplemented we only care about expanding end_commentbegin_comment updates stereotype setting adds all children per treemodel build on demand design see javax swing event tree will expand listener tree will expand javax swing event tree expansion event end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name tree will expand  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name tree expansion event  end_name  end_type  begin_name tee  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo this should not need to know about project settings tfm  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name project  end_name  end_type  begin_name p  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name project manager  end_name  begin_operator  end_operator  begin_name get manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get current project  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name project settings  end_name  end_type  begin_name ps  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name p  end_name  begin_operator  end_operator  begin_name get project settings  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set show stereotype  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name ps  end_name  begin_operator  end_operator  begin_name get show stereotypes value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name get model  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name explorer tree model  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name explorer tree model  end_name  begin_operator  end_operator  begin_call  begin_name get model  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name update children  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name tee  end_name  begin_operator  end_operator  begin_name get path  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name add targets internal  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name  begin_name object  end_name  begin_index  end_index  end_name  end_type  begin_name added targets  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name  begin_name added targets  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name set  end_name  end_type  begin_name targets  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name hash set  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name t  end_name  begin_range  begin_expr  begin_name added targets  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_name t  end_name  begin_operator  end_operator  begin_name fig  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name targets  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name fig  end_name  begin_operator  end_operator  begin_name t  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get owner  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name targets  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name t  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_comment todo the following can be removed if select all gets fixed  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name select visible  end_name  begin_argument_list  begin_argument  begin_expr  begin_name t  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_comment todo this doesn t perform well enough with large models to have  end_comment  begin_comment it enabled by default if the performance can t be improved  end_comment  begin_comment perhaps we can introduce a manual find in explorer tree action  end_comment  begin_comment select all targets  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  begin_index  end_index  end_type  begin_name selected rows  end_name  begin_init  begin_expr  begin_call  begin_name get selection rows  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name selected rows  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name selected rows  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment todo this only works if the item is visible  end_comment  begin_comment all its parents are expanded  end_comment  begin_comment get expanded descendants make visible  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name make visible  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get path for row  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name selected rows  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name scroll row to visible  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name selected rows  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block 
begin_comment updates the explorer for new perspectives orderings inherit doc end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name item state changed  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name item event  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name get source  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name perspective combo box  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name rules  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name explorer perspective  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name get item  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_comment it is the combo for order  end_comment  begin_expr_stmt  begin_expr  begin_name order  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name comparator  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name get item  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name structure changed  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo temporary let tree expand implicitly tfm  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name tree  end_name  begin_operator  end_operator  begin_name expand path  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name tree  end_name  begin_operator  end_operator  begin_name get path for row  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment see java beans property change listener property change java beans property change event end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name property change  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name property change event  end_name  end_type  begin_name evt  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name evt  end_name  begin_operator  end_operator  begin_name get source  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name diagram  end_name  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name evt  end_name  begin_operator  end_operator  begin_name get property name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment the name of the uml diagram represented by this node has changed  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name node changed  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name evt  end_name  begin_operator  end_operator  begin_name get property name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment todo update the old and new node above this this is issue 5079 the old and new uml namespaces are in the event but how do we know which nodes to refresh and how to refresh not necessarily the namespaces depending on the perspective  end_comment  end_block  end_then  end_if  end_block  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name action performed  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name action event  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name perspective manager  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name remove all perspectives  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name perspective list model  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name explorer perspective  end_name  end_type  begin_name perspective  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name explorer perspective  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name perspective list model  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name perspective manager  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add perspective  end_name  begin_argument_list  begin_argument  begin_expr  begin_name perspective  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name perspective manager  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name save user perspectives  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name action performed  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name action event  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name explorer perspective  end_name  end_argument  end_argument_list  end_name  end_type  begin_name c  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name perspective manager  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get default perspectives  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name perspective list model  end_name  begin_operator  end_operator  begin_name remove all elements  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name explorer perspective  end_name  end_type  begin_name p  end_name  begin_range  begin_expr  begin_name c  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name perspective list model  end_name  begin_operator  end_operator  begin_name add element  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name p  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name update pers label  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name action performed  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name action event  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  begin_index  end_index  end_type  begin_name msg args  end_name  begin_init  begin_expr  begin_block  begin_expr  begin_call  begin_name  begin_name integer  end_name  begin_operator  end_operator  begin_name value of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name perspective list  end_name  begin_operator  end_operator  begin_name get model  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get size  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_block  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name explorer perspective  end_name  end_type  begin_name new pers  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name explorer perspective  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name message format  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name msg args  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name perspective list model  end_name  begin_operator  end_operator  begin_name insert element at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new pers  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name perspective list  end_name  begin_operator  end_operator  begin_name set selected value  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new pers  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name perspective rules list model  end_name  begin_operator  end_operator  begin_name clear  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name update pers label  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name update rule label  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name action performed  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name action event  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name sel  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name perspective list  end_name  begin_operator  end_operator  begin_name get selected value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name perspective list model  end_name  begin_operator  end_operator  begin_name get size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name perspective list model  end_name  begin_operator  end_operator  begin_name remove element  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name sel  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name perspective list  end_name  begin_operator  end_operator  begin_name set selected index  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name perspective list model  end_name  begin_operator  end_operator  begin_name get size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name remove perspective button  end_name  begin_operator  end_operator  begin_name set enabled  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name update pers label  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name action performed  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name action event  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name sel  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name perspective list  end_name  begin_operator  end_operator  begin_name get selected value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name sel  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  begin_index  end_index  end_type  begin_name msg args  end_name  begin_init  begin_expr  begin_block  begin_expr  begin_call  begin_name  begin_name sel  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_block  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name explorer perspective  end_name  end_type  begin_name new pers  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name explorer perspective  end_name  begin_operator  end_operator  begin_name sel  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name make named clone  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name message format  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name msg args  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name perspective list model  end_name  begin_operator  end_operator  begin_name insert element at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new pers  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name perspective list  end_name  begin_operator  end_operator  begin_name set selected value  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new pers  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name update pers label  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name action performed  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name action event  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name src  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name get source  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name perspective list  end_name  begin_operator  end_operator  begin_name get selected value  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name src  end_name  begin_operator  end_operator  begin_name add rule button  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name do add rule  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name src  end_name  begin_operator  end_operator  begin_name remove rule button  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name do remove rule  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_block 
begin_comment see java awt event action listener action performed java awt event action event end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name action performed  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name action event  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name sel  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name perspective list  end_name  begin_operator  end_operator  begin_name get selected index  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name sel  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name sel obj  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name perspective list model  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name sel  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name prev obj  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name perspective list model  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name sel  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name perspective list model  end_name  begin_operator  end_operator  begin_name set  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name sel  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name prev obj  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name perspective list model  end_name  begin_operator  end_operator  begin_name set  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name sel  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name sel obj  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name perspective list  end_name  begin_operator  end_operator  begin_name set selected index  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name sel  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name perspective list  end_name  begin_operator  end_operator  begin_name ensure index is visible  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name sel  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name action performed  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name action event  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name sel  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name perspective list  end_name  begin_operator  end_operator  begin_name get selected index  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name sel  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name perspective list model  end_name  begin_operator  end_operator  begin_name get size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name sel obj  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name perspective list model  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name sel  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name next obj  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name perspective list model  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name sel  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name perspective list model  end_name  begin_operator  end_operator  begin_name set  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name sel  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name next obj  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name perspective list model  end_name  begin_operator  end_operator  begin_name set  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name sel  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name sel obj  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name perspective list  end_name  begin_operator  end_operator  begin_name set selected index  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name sel  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name perspective list  end_name  begin_operator  end_operator  begin_name ensure index is visible  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name sel  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name action performed  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name action event  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name sel  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name perspective list  end_name  begin_operator  end_operator  begin_name get selected index  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name sel pers  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name perspective list  end_name  begin_operator  end_operator  begin_name get selected value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name new name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name rename text field  end_name  begin_operator  end_operator  begin_name get text  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name sel  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name new name  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name explorer perspective  end_name  begin_operator  end_operator  begin_name sel pers  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name set name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name perspective list model  end_name  begin_operator  end_operator  begin_name set  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name sel  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name sel pers  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo replace the functioncall in the next line by request focus in window once we do not support java 1 3 any more  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name perspective list  end_name  begin_operator  end_operator  begin_name request focus  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block 
begin_comment return a collection of default perspectives i e the predefined ones end_comment begin_type  begin_specifier  end_specifier  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name explorer perspective  end_name  end_argument  end_argument_list  end_name  end_type  begin_name get default perspectives  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name explorer perspective  end_name  end_type  begin_name class perspective  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name explorer perspective  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name class perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go project to model  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name class perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go project to profile configuration  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name class perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go profile configuration to profile  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name class perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go profile to model  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name class perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go profile to critics  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name class perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go critics to critic  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name class perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go project to roots  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name class perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go namespace to classifier and package  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name class perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go namespace to diagram  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name class perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go class to summary  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name class perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go summary to association  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name class perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go summary to attribute  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name class perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go summary to operation  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name class perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go summary to inheritance  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name class perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go summary to incoming dependency  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name class perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go summary to outgoing dependency  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name class perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go model element to template parameter  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name explorer perspective  end_name  end_type  begin_name package perspective  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name explorer perspective  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go project to model  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go project to profile configuration  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go profile configuration to profile  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go profile to model  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go profile to critics  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go critics to critic  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go project to roots  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go namespace to owned elements  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go package to element import  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go namespace to diagram  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go use case to extension point  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go classifier to structural feature  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go classifier to behavioral feature  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go enumeration to literals  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go collaboration to interaction  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go interaction to messages  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go message to action  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go signal to reception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go link to stimuli  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go stimulus to action  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go classifier to collaboration  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo we need a factory pattern for go xxx classes that can determine if they are required  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go operation to collaboration  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go operation to sequence diagram  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go model element to comment  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go collaboration to diagram  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go model element to template parameter  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment removed the next one due to issue 2165 package perspective add rule new go operation to collaboration diagram  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go behavioral feature to state machine  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment works for both statediagram as activitygraph  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go statemachine to diagram  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get uml version  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name starts with  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go state machine to state  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go composite state to subvertex  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go state to internal trans  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go state to do activity  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go state to entry  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go state to exit  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go classifier to sequence diagram  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go classifier to instance  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go state to incoming trans  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go state to outgoing trans  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go submachine state to state machine  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go stereotype to tag definition  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go model element to behavior  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go model element to contained lost elements  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name explorer perspective  end_name  end_type  begin_name diagram perspective  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name explorer perspective  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name diagram perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go project to model  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name diagram perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go project to profile configuration  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name diagram perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go profile configuration to profile  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name diagram perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go profile to model  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name diagram perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go profile to critics  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name diagram perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go critics to critic  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name diagram perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go model to diagrams  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name diagram perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go diagram to node  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name diagram perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go diagram to edge  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name diagram perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go use case to extension point  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name diagram perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go classifier to structural feature  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name diagram perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go classifier to behavioral feature  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name explorer perspective  end_name  end_type  begin_name inheritance perspective  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name explorer perspective  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name inheritance perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go project to model  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name inheritance perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go project to profile configuration  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name class perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go profile configuration to profile  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name class perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go profile to model  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name class perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go profile to critics  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name class perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go critics to critic  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name inheritance perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go model to base elements  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name inheritance perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go generalizable element to specialized  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name explorer perspective  end_name  end_type  begin_name associations perspective  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name explorer perspective  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name associations perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go project to model  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name associations perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go project to profile configuration  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name associations perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go profile configuration to profile  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name associations perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go profile to model  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name associations perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go profile to critics  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name associations perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go critics to critic  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name associations perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go namespace to diagram  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name associations perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go package to class  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name associations perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go class to associated class  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name explorer perspective  end_name  end_type  begin_name residence perspective  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name explorer perspective  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name residence perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go project to model  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name residence perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go project to profile configuration  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name residence perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go profile configuration to profile  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name residence perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go profile to model  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name residence perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go profile to critics  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name residence perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go critics to critic  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name residence perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go model to node  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name residence perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go node to resident component  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name residence perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go component to resident model element  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name explorer perspective  end_name  end_type  begin_name state perspective  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name explorer perspective  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name state perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go project to state machine  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name state perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go statemachine to diagram  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name state perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go state machine to state  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name state perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go composite state to subvertex  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name state perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go state to incoming trans  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name state perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go state to outgoing trans  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name state perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go transitionto effect  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name state perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go transition to guard  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name explorer perspective  end_name  end_type  begin_name transitions perspective  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name explorer perspective  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name transitions perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go project to state machine  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name transitions perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go statemachine to diagram  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name transitions perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go state machine to transition  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name transitions perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go transition to source  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name transitions perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go transition to target  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name transitions perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go transitionto effect  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name transitions perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go transition to guard  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name explorer perspective  end_name  end_type  begin_name composition perspective  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name explorer perspective  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name composition perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go project to model  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name composition perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go project to profile configuration  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name composition perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go profile configuration to profile  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name composition perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go profile to model  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name composition perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go profile to critics  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name composition perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go critics to critic  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name composition perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go project to roots  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name composition perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go model element to contents  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name composition perspective  end_name  begin_operator  end_operator  begin_name add rule  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name go model element to contained diagrams  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name explorer perspective  end_name  end_argument  end_argument_list  end_name  end_type  begin_name c  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name explorer perspective  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name package perspective  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name class perspective  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name diagram perspective  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name inheritance perspective  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name associations perspective  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name residence perspective  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name state perspective  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name transitions perspective  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name composition perspective  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name c  end_name  end_expr  end_return  end_block 
begin_comment get the predefined rules p this is a hard coded rules library for now since it is quite a lot of work to get all possible rule names in org argouml ui explorer rules from the classpath which would also not allow adding rules from other locations end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name load rules  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name perspective rule  end_name  begin_index  end_index  end_type  begin_name rule names array  end_name  begin_init  begin_expr  begin_block  begin_expr  begin_operator  end_operator  begin_call  begin_name go assoc role to messages  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go behavioral feature to state diagram  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go behavioral feature to state machine  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go classifier to behavioral feature  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go classifier to collaboration  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go classifier to instance  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go classifier to sequence diagram  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go classifier to state machine  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go classifier to structural feature  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go class to associated class  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go class to navigable class  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go class to summary  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go collaboration to diagram  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go collaboration to interaction  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go component to resident model element  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go diagram to edge  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go diagram to node  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go element to machine  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go enumeration to literals  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go generalizable element to specialized  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go interaction to messages  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go link to stimuli  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go message to action  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go model element to comment  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go model element to behavior  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go model element to template parameter  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go model element to contents  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go model element to contained diagrams  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go model element to contained lost elements  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go model to base elements  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go model to collaboration  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go model to diagrams  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go model to elements  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go model to node  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go namespace to classifier and package  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go namespace to diagram  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go namespace to owned elements  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go node to resident component  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go operation to collaboration  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go operation to collaboration diagram  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go operation to sequence diagram  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go package to class  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go package to element import  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go project to collaboration  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go project to diagram  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go project to model  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go project to state machine  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go project to profile configuration  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go profile configuration to profile  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go profile to model  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go profile to critics  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go critics to critic  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go project to roots  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go signal to reception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go state machine to top  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go statemachine to diagram  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go state machine to transition  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go state to do activity  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go state to downstream  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go state to entry  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go state to exit  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go state to incoming trans  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go state to outgoing trans  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go stereotype to tag definition  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go stimulus to action  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go summary to association  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go summary to attribute  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go summary to incoming dependency  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go summary to inheritance  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go summary to operation  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go summary to outgoing dependency  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go transition to source  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go transition to target  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go transitionto effect  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go transition to guard  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go use case to extension point  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go submachine state to state machine  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go state to internal trans  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_block  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo we need a factory pattern for go xxx classes that can determine if they are required  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name perspective rule  end_name  begin_index  end_index  end_type  begin_name rule names array 14  end_name  begin_init  begin_expr  begin_block  begin_expr  begin_operator  end_operator  begin_call  begin_name go composite state to subvertex  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name go state machine to state  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_block  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name perspective rule  end_name  begin_index  end_index  end_type  begin_name rule names array 2  end_name  begin_init  begin_expr  begin_block  begin_comment enter here go rules only relevant for uml 2  end_comment  begin_comment empty for now  end_comment  end_block  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get uml version  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name char at  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name rule names array  end_name  begin_operator  end_operator  begin_call  begin_name append arrays  end_name  begin_argument_list  begin_argument  begin_expr  begin_name rule names array  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name rule names array 14  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name rule names array  end_name  begin_operator  end_operator  begin_call  begin_name append arrays  end_name  begin_argument_list  begin_argument  begin_expr  begin_name rule names array  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name rule names array 2  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_name rules  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name arrays  end_name  begin_operator  end_operator  begin_name as list  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name rule names array  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment see org argouml ui explorer rules perspective rule get children java lang object end_comment begin_type  begin_specifier  end_specifier  begin_name collection  end_name  end_type  begin_name get children  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name parent  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a class  end_name  begin_argument_list  begin_argument  begin_expr  begin_name parent  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name  begin_name collections  end_name  begin_operator  end_operator  begin_name empty set  end_name  end_name  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name list  end_name  end_type  begin_name child classes  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name array list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name ends  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get association ends  end_name  begin_argument_list  begin_argument  begin_expr  begin_name parent  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name ends  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name  begin_name collections  end_name  begin_operator  end_operator  begin_name empty set  end_name  end_name  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name it  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ends  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name it  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name ae  end_name  begin_init  begin_comment m association end  end_comment  begin_expr  begin_call  begin_name  begin_name it  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name asc  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get association  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ae  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name all ends  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get connections  end_name  begin_argument_list  begin_argument  begin_expr  begin_name asc  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name other end  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name end it  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name all ends  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name end it  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name other end  end_name  begin_operator  end_operator  begin_comment m association end  end_comment  begin_call  begin_name  begin_name end it  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name ae  end_name  begin_operator  end_operator  begin_name other end  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name end it  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name other end  end_name  begin_operator  end_operator  begin_comment m association end  end_comment  begin_call  begin_name  begin_name end it  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name ae  end_name  begin_operator  end_operator  begin_name other end  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name other end  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name other end  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_continue  end_continue  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is navigable  end_name  begin_argument_list  begin_argument  begin_expr  begin_name other end  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_continue  end_continue  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name child classes  end_name  begin_operator  end_operator  begin_name contains  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get type  end_name  begin_argument_list  begin_argument  begin_expr  begin_name other end  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_continue  end_continue  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name child classes  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get type  end_name  begin_argument_list  begin_argument  begin_expr  begin_name other end  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo handle n way associations  end_comment  end_block  end_while  begin_return  begin_expr  begin_name child classes  end_name  end_expr  end_return  end_block 
begin_comment see org argouml ui explorer rules perspective rule get children java lang object end_comment begin_type  begin_specifier  end_specifier  begin_name collection  end_name  end_type  begin_name get children  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name parent  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a state machine  end_name  begin_argument_list  begin_argument  begin_expr  begin_name parent  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get uml version  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name char at  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get top  end_name  begin_argument_list  begin_argument  begin_expr  begin_name parent  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get subvertices  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get top  end_name  begin_argument_list  begin_argument  begin_expr  begin_name parent  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  begin_else  begin_block  begin_comment todo uml 2 what do we do here  end_comment  begin_return  begin_expr  begin_name  begin_name collections  end_name  begin_operator  end_operator  begin_name empty set  end_name  end_name  end_expr  end_return  end_block  end_else  end_if  end_block  end_then  end_if  begin_return  begin_expr  begin_name  begin_name collections  end_name  begin_operator  end_operator  begin_name empty set  end_name  end_name  end_expr  end_return  end_block 
begin_comment initialise the tab name and location end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name init name loc tab  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name element name  end_name  begin_operator  end_operator  begin_name set editable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t use hardcoded colors here tfm  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name element name  end_name  begin_operator  end_operator  begin_name get editor  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get editor component  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set background  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name color  end_name  begin_operator  end_operator  begin_name white  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name diagram name  end_name  begin_operator  end_operator  begin_name set editable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name diagram name  end_name  begin_operator  end_operator  begin_name get editor  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get editor component  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set background  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name color  end_name  begin_operator  end_operator  begin_name white  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name element name  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name diagram name  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo add recent patterns  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name grid bag layout  end_name  end_type  begin_name gb  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name grid bag layout  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name name loc tab  end_name  begin_operator  end_operator  begin_name set layout  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name gb  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name j label  end_name  end_type  begin_name element name label  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name j label  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name j label  end_name  end_type  begin_name diagram name label  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name j label  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name j label  end_name  end_type  begin_name type label  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name j label  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name j label  end_name  end_type  begin_name loc label  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name j label  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name location  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name init types  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type details  end_name  begin_operator  end_operator  begin_name set minimum size  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name dimension  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type details  end_name  begin_operator  end_operator  begin_name set preferred size  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name dimension  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type details  end_name  begin_operator  end_operator  begin_name set size  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name dimension  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name grid bag constraints  end_name  end_type  begin_name c  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name grid bag constraints  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name fill  end_name  end_name  begin_operator  end_operator  begin_name  begin_name grid bag constraints  end_name  begin_operator  end_operator  begin_name both  end_name  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name ipadx  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name ipady  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridwidth  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridx  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridy  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name weightx  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name gb  end_name  begin_operator  end_operator  begin_name set constraints  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element name label  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name name loc tab  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element name label  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridx  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridy  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name weightx  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name gb  end_name  begin_operator  end_operator  begin_name set constraints  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name name loc tab  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridx  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridy  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name weightx  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name gb  end_name  begin_operator  end_operator  begin_name set constraints  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name diagram name label  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name name loc tab  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name diagram name label  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridx  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridy  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name weightx  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name gb  end_name  begin_operator  end_operator  begin_name set constraints  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name diagram name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name name loc tab  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name diagram name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment open space at gridy 2  end_comment  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridx  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridy  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name weightx  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name gb  end_name  begin_operator  end_operator  begin_name set constraints  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name loc label  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name name loc tab  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name loc label  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridx  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridy  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name weightx  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name gb  end_name  begin_operator  end_operator  begin_name set constraints  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name location  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name name loc tab  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name location  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name spacer panel  end_name  end_type  begin_name spacer  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name spacer panel  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridx  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridy  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name weightx  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name gb  end_name  begin_operator  end_operator  begin_name set constraints  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name spacer  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name name loc tab  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name spacer  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridx  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridy  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name weightx  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name gb  end_name  begin_operator  end_operator  begin_name set constraints  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name type label  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name name loc tab  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name type label  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridx  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridy  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name weightx  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name gb  end_name  begin_operator  end_operator  begin_name set constraints  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name type  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name name loc tab  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name type  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridx  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridy  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridwidth  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridheight  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name gb  end_name  begin_operator  end_operator  begin_name set constraints  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name type details  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name name loc tab  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name type details  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name j panel  end_name  end_type  begin_name search panel  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name j panel  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name search panel  end_name  begin_operator  end_operator  begin_name set layout  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name grid layout  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name search panel  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name clear tabs  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name search panel  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name search  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name search panel  end_name  begin_operator  end_operator  begin_name set border  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name empty border  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridx  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridy  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name weightx  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name weighty  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridwidth  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridheight  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name gb  end_name  begin_operator  end_operator  begin_name set constraints  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name search panel  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name name loc tab  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name search panel  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment init the modelelement types that we can look for end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name init types  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment any type  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get uml class  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get interface  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get action  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment not in uml 2 x or metatypes  end_comment  begin_comment type add item predicate m type create  end_comment  begin_comment model get meta types get activity graph  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get actor  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get association  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get association class  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get association end role  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get association role  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get artifact  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get attribute  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get classifier  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get classifier role  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get collaboration  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get comment  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get component  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get composite state  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get constraint  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get data type  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get dependency  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get element import  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get enumeration  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get enumeration literal  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get extend  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get extension point  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get guard  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get generalization  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get include  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get uml version  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name starts with  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get instance  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get interaction  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get interface  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get link  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get message  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get model  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get node  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get package  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get parameter  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get partition  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get pseudostate  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get operation  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get signal  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get state  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get state machine  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get state vertex  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get stereotype  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get tag definition  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get template argument  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get template parameter  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get transition  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get use case  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo can we move this knowledge behind model facade rather than have a condition here  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get uml version  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name char at  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get simple state  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name predicate m type  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get tagged value  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block 
begin_comment construct a graphical jvm heap monitor component end_comment begin_specifier  end_specifier  begin_name heap monitor  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name super  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name dimension  end_name  end_type  begin_name size  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name dimension  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set preferred size  end_name  begin_argument_list  begin_argument  begin_expr  begin_name size  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo add a button to force garbage collection  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name update stats  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name timer  end_name  end_type  begin_name timer  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name timer  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name timer  end_name  begin_operator  end_operator  begin_name start  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment constructs the multi editor pane this is the pane in which the tabs with the diagrams are drawn in argo uml the multi editor pane is a j tabbed pane that holds 0 j panels that can show several editors but only show one editor at the moment argouml version 0 13 3 with this editor diagrams can be edited end_comment begin_specifier  end_specifier  begin_name multi editor pane  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name info  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set layout  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name border layout  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tabs  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name border layout  end_name  begin_operator  end_operator  begin_name center  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name tab panels  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name title  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name j panel  end_name  end_type  begin_name t  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name tab panels  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name t  end_name  begin_operator  end_operator  begin_name abstract argo j panel  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name title  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name abstract argo j panel  end_name  begin_operator  end_operator  begin_name t  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get title  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment todo i 18 n  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name tabs  end_name  begin_operator  end_operator  begin_name add tab  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name title  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name t  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name tabs  end_name  begin_operator  end_operator  begin_name set enabled at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name t  end_name  begin_operator  end_operator  begin_name target listener  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name target manager  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add target listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name target listener  end_name  begin_operator  end_operator  begin_name t  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name tabs  end_name  begin_operator  end_operator  begin_name add change listener  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name tabs  end_name  begin_operator  end_operator  begin_name add mouse listener  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set target  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_specifier  end_specifier  begin_name perspective support  end_name  begin_parameter_list  end_parameter_list  begin_block  end_block 
begin_comment creates a new instance of perspective support param n the name to be localized end_comment begin_specifier  end_specifier  begin_name perspective support  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name n  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_name name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name n  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name go rules  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name tree model  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment the constructor p todo is this constructor used what is the purpose with it param n the name to be localized param subs the go rules end_comment begin_specifier  end_specifier  begin_name perspective support  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name n  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name tree model  end_name  end_argument  end_argument_list  end_name  end_type  begin_name subs  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name this  end_name  begin_argument_list  begin_argument  begin_expr  begin_name n  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name go rules  end_name  begin_operator  end_operator  begin_name subs  end_name  end_expr  end_expr_stmt  end_block 
begin_comment display the diagram which contains the given list of targets and scroll to make them visible param targets collection of targets to show end_commentbegin_comment todo move to different class end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name jump to diagram showing  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name list  end_name  end_type  begin_name targets  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name targets  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name targets  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name first  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name targets  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name first  end_name  begin_operator  end_operator  begin_name argo diagram  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name targets  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name set target  end_name  begin_argument_list  begin_argument  begin_expr  begin_name first  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set target  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name targets  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name first  end_name  begin_operator  end_operator  begin_name argo diagram  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name targets  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name set target  end_name  begin_argument_list  begin_argument  begin_expr  begin_name first  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_then  end_if  begin_comment todo this should get the containing project from the list of  end_comment  begin_comment targets not from some global  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name project  end_name  end_type  begin_name project  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name project manager  end_name  begin_operator  end_operator  begin_name get manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get current project  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name project  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name argo diagram  end_name  end_argument  end_argument_list  end_name  end_type  begin_name diagrams  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name get diagram list  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name target  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name target manager  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get target  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name target  end_name  begin_operator  end_operator  begin_name argo diagram  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name argo diagram  end_name  begin_operator  end_operator  begin_name target  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name count contained  end_name  begin_argument_list  begin_argument  begin_expr  begin_name targets  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name targets  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name set target  end_name  begin_argument_list  begin_argument  begin_expr  begin_name first  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name argo diagram  end_name  end_type  begin_name best diagram  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name best num contained  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name argo diagram  end_name  end_type  begin_name d  end_name  begin_range  begin_expr  begin_name diagrams  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name nc  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name d  end_name  begin_operator  end_operator  begin_name count contained  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name targets  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name nc  end_name  begin_operator  end_operator  begin_name best num contained  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name best num contained  end_name  begin_operator  end_operator  begin_name nc  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name best diagram  end_name  begin_operator  end_operator  begin_name d  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name nc  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name targets  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_break  end_break  end_block  end_then  end_if  end_block  end_for  begin_if  begin_condition  begin_expr  begin_name best diagram  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name diagram utils  end_name  begin_operator  end_operator  begin_name get active diagram  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name best diagram  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name set target  end_name  begin_argument_list  begin_argument  begin_expr  begin_name best diagram  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name set target  end_name  begin_argument_list  begin_argument  begin_expr  begin_name first  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment making it possible to jump to the modelroots  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name get roots  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name first  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name set target  end_name  begin_argument_list  begin_argument  begin_expr  begin_name first  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment and finally adjust the scrollbars to show the fig  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name f  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name target manager  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get fig target  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name f  end_name  begin_operator  end_operator  begin_name fig  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name globals  end_name  begin_operator  end_operator  begin_name cur editor  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name scroll to show  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name fig  end_name  begin_operator  end_operator  begin_name f  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block 
begin_comment see java beans property change listener property change java beans property change event end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name property change  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name property change event  end_name  end_type  begin_name evt  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name evt  end_name  begin_operator  end_operator  begin_name get property name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name evt  end_name  begin_operator  end_operator  begin_name get new value  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_comment we get many many events why so let s filter  end_comment  begin_operator  end_operator  begin_operator  end_operator  begin_name obj  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name evt  end_name  begin_operator  end_operator  begin_name get new value  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name obj  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name evt  end_name  begin_operator  end_operator  begin_name get new value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo bob says  end_comment  begin_comment we re looking at focus change to  end_comment  begin_comment flag the start of an interaction this  end_comment  begin_comment is to detect when focus is gained in a prop  end_comment  begin_comment panel field on the assumption editing of that  end_comment  begin_comment field is about to start  end_comment  begin_comment not a good assumption we need to see if we can get  end_comment  begin_comment rid of this  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name project  end_name  end_type  begin_name p  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name project manager  end_name  begin_operator  end_operator  begin_name get manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get current project  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name p  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name p  end_name  begin_operator  end_operator  begin_name get undo manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name start interaction  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment this next line is ideal for debugging the taborder focus traversal see e g issue 1849  end_comment  begin_comment system out println focus changed obj  end_comment  end_block  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name component  end_name  end_type  begin_name assemble panels  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name add panel  end_name  begin_argument_list  begin_argument  begin_expr  begin_name editor pane  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name position  end_name  begin_operator  end_operator  begin_name center  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add panel  end_name  begin_argument_list  begin_argument  begin_expr  begin_name explorer pane  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name position  end_name  begin_operator  end_operator  begin_name west  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add panel  end_name  begin_argument_list  begin_argument  begin_expr  begin_name todo pane  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name position  end_name  begin_operator  end_operator  begin_name south west  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment there are various details panes all of which could hold  end_comment  begin_comment different tabs pages according to users settings  end_comment  begin_comment place each pane in the required border area  end_comment  begin_for  begin_init  begin_decl  begin_type  begin_name  begin_name map  end_name  begin_operator  end_operator  begin_name  begin_name entry  end_name  begin_argument_list  begin_argument  begin_name position  end_name  end_argument  begin_argument  begin_name details pane  end_name  end_argument  end_argument_list  end_name  end_name  end_type  begin_name entry  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name details panes by compass point  end_name  begin_operator  end_operator  begin_name entry set  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name position  end_name  end_type  begin_name position  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name entry  end_name  begin_operator  end_operator  begin_name get key  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add panel  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name entry  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name position  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_comment toolbar boundary is the area between the menu and the status  end_comment  begin_comment bar it contains the workarea at centre and the toolbar  end_comment  begin_comment position north south east or west  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name j panel  end_name  end_type  begin_name toolbar boundary  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name j panel  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name toolbar boundary  end_name  begin_operator  end_operator  begin_name set layout  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name dock border layout  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo should save and restore the last positions of the toolbars  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name toolbar position  end_name  begin_init  begin_expr  begin_name  begin_name border layout  end_name  begin_operator  end_operator  begin_name north  end_name  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name toolbar boundary  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name menu bar  end_name  begin_operator  end_operator  begin_name get file toolbar  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name toolbar position  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name toolbar boundary  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name menu bar  end_name  begin_operator  end_operator  begin_name get edit toolbar  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name toolbar position  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name toolbar boundary  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name menu bar  end_name  begin_operator  end_operator  begin_name get view toolbar  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name toolbar position  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name toolbar boundary  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name menu bar  end_name  begin_operator  end_operator  begin_name get create diagram toolbar  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name toolbar position  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name toolbar boundary  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name work area pane  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name border layout  end_name  begin_operator  end_operator  begin_name center  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment registers all toolbars and enables north panel hiding when all toolbars are hidden  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name argo toolbar manager  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name register toolbar  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name menu bar  end_name  begin_operator  end_operator  begin_name get file toolbar  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name menu bar  end_name  begin_operator  end_operator  begin_name get file toolbar  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name argo toolbar manager  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name register toolbar  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name menu bar  end_name  begin_operator  end_operator  begin_name get edit toolbar  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name menu bar  end_name  begin_operator  end_operator  begin_name get edit toolbar  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name argo toolbar manager  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name register toolbar  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name menu bar  end_name  begin_operator  end_operator  begin_name get view toolbar  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name menu bar  end_name  begin_operator  end_operator  begin_name get view toolbar  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name argo toolbar manager  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name register toolbar  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name menu bar  end_name  begin_operator  end_operator  begin_name get create diagram toolbar  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name menu bar  end_name  begin_operator  end_operator  begin_name get create diagram toolbar  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name j tool bar  end_name  begin_index  end_index  end_type  begin_name toolbars  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name j tool bar  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_call  begin_name  begin_name menu bar  end_name  begin_operator  end_operator  begin_name get file toolbar  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_call  begin_name  begin_name menu bar  end_name  begin_operator  end_operator  begin_name get edit toolbar  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_call  begin_name  begin_name menu bar  end_name  begin_operator  end_operator  begin_name get view toolbar  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_expr  begin_call  begin_name  begin_name menu bar  end_name  begin_operator  end_operator  begin_name get create diagram toolbar  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_block  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name j tool bar  end_name  end_type  begin_name toolbar  end_name  begin_range  begin_expr  begin_name toolbars  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name toolbar  end_name  begin_operator  end_operator  begin_name add component listener  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name component adapter  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name component hidden  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name component event  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name all hidden  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name j tool bar  end_name  end_type  begin_name bar  end_name  begin_range  begin_expr  begin_name toolbars  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name bar  end_name  begin_operator  end_operator  begin_name is visible  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name all hidden  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_then  end_if  end_block  end_for  begin_if  begin_condition  begin_expr  begin_name all hidden  end_name  end_expr  end_condition  begin_then  begin_block  begin_for  begin_init  begin_decl  begin_type  begin_name j tool bar  end_name  end_type  begin_name bar  end_name  begin_range  begin_expr  begin_name toolbars  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name toolbar boundary  end_name  begin_operator  end_operator  begin_name get layout  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name remove layout component  end_name  begin_argument_list  begin_argument  begin_expr  begin_name bar  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name toolbar boundary  end_name  begin_operator  end_operator  begin_name get layout  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name layout container  end_name  begin_argument_list  begin_argument  begin_expr  begin_name toolbar boundary  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_function  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name component shown  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name component event  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name j tool bar  end_name  end_type  begin_name one visible  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name j tool bar  end_name  end_type  begin_name bar  end_name  begin_range  begin_expr  begin_name toolbars  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name bar  end_name  begin_operator  end_operator  begin_name is visible  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name one visible  end_name  begin_operator  end_operator  begin_name bar  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_then  end_if  end_block  end_for  begin_if  begin_condition  begin_expr  begin_name one visible  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name toolbar boundary  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name one visible  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name toolbar position  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name toolbar boundary  end_name  begin_operator  end_operator  begin_name get layout  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name layout container  end_name  begin_argument_list  begin_argument  begin_expr  begin_name toolbar boundary  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_function  end_block  end_class  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_comment end registering toolbar  end_comment  begin_return  begin_expr  begin_name toolbar boundary  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name create details panes  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment work in progress here to allow multiple details panes with different contents bob tarling  end_comment  begin_expr_stmt  begin_expr  begin_name east pane  end_name  begin_operator  end_operator  begin_call  begin_name make details pane  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name border split pane  end_name  begin_operator  end_operator  begin_name east  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name vertical  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name south pane  end_name  begin_operator  end_operator  begin_call  begin_name make details pane  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name border split pane  end_name  begin_operator  end_operator  begin_name south  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name horizontal  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name south east pane  end_name  begin_operator  end_operator  begin_call  begin_name make details pane  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name border split pane  end_name  begin_operator  end_operator  begin_name southeast  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name horizontal  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name north west pane  end_name  begin_operator  end_operator  begin_call  begin_name make details pane  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name border split pane  end_name  begin_operator  end_operator  begin_name northwest  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name horizontal  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name north pane  end_name  begin_operator  end_operator  begin_call  begin_name make details pane  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name border split pane  end_name  begin_operator  end_operator  begin_name north  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name horizontal  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name north east pane  end_name  begin_operator  end_operator  begin_call  begin_name make details pane  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name border split pane  end_name  begin_operator  end_operator  begin_name northeast  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name horizontal  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name south pane  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name details panes by compass point  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name position  end_name  begin_operator  end_operator  begin_name south  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name south pane  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name south east pane  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name details panes by compass point  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name position  end_name  begin_operator  end_operator  begin_name south east  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name south east pane  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name east pane  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name details panes by compass point  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name position  end_name  begin_operator  end_operator  begin_name east  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name east pane  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name north west pane  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name details panes by compass point  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name position  end_name  begin_operator  end_operator  begin_name north west  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name north west pane  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name north pane  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name details panes by compass point  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name position  end_name  begin_operator  end_operator  begin_name north  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name north pane  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name north east pane  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name details panes by compass point  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name position  end_name  begin_operator  end_operator  begin_name north east  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name north east pane  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment add target listeners for details panes  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name it  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name details panes by compass point  end_name  begin_operator  end_operator  begin_name entry set  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name iterator  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name it  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name target manager  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add target listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name details pane  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name map  end_name  begin_operator  end_operator  begin_name entry  end_name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name it  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get value  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_while  end_block 
begin_comment create a title for the main window s title param project file name the project file name param active diagram the new current diagram end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name build title  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name project file name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name argo diagram  end_name  end_type  begin_name active diagram  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name project file name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name project file name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name project manager  end_name  begin_operator  end_operator  begin_name get manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get current project  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name project file name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name project manager  end_name  begin_operator  end_operator  begin_name get manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get current project  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  begin_comment todo why would this be null  end_comment  begin_if  begin_condition  begin_expr  begin_name active diagram  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name active diagram  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name diagram utils  end_name  begin_operator  end_operator  begin_name get active diagram  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name change indicator  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name save action  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name save action  end_name  begin_operator  end_operator  begin_name is enabled  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name change indicator  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name active diagram  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name monitored diagram  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name monitored diagram  end_name  begin_operator  end_operator  begin_name remove property change listener  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name active diagram  end_name  begin_operator  end_operator  begin_name add property change listener  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name monitored diagram  end_name  begin_operator  end_operator  begin_name active diagram  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set title internal  end_name  begin_argument_list  begin_argument  begin_expr  begin_name project file name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name active diagram  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get app name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name change indicator  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name set title internal  end_name  begin_argument_list  begin_argument  begin_expr  begin_name project file name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get app name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name change indicator  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block 
begin_comment see java beans property change listener property change java beans property change event end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name property change  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name property change event  end_name  end_type  begin_name evt  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name evt  end_name  begin_operator  end_operator  begin_name get property name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name evt  end_name  begin_operator  end_operator  begin_name get source  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name argo diagram  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name build title  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name project manager  end_name  begin_operator  end_operator  begin_name get manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get current project  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name argo diagram  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name evt  end_name  begin_operator  end_operator  begin_name get source  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block 
begin_comment end class window closer end_commentbegin_comment see java beans property change listener property change java beans property change event end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name property change  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name property change event  end_name  end_type  begin_name evt  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment the project changed  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name evt  end_name  begin_operator  end_operator  begin_name get property name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name project manager  end_name  begin_operator  end_operator  begin_name current project property name  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name project  end_name  end_type  begin_name p  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name project  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name evt  end_name  begin_operator  end_operator  begin_name get new value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name p  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name title handler  end_name  begin_operator  end_operator  begin_name build title  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name p  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment designer the designer get to do list remove all elements  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name designer  end_name  begin_operator  end_operator  begin_name set critiquing root  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name p  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment update all panes  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name target manager  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set target  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name p  end_name  begin_operator  end_operator  begin_name get initial target  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment todo do we want to use the project here instead of just its name  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name argo event pump  end_name  begin_operator  end_operator  begin_name fire event  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name argo status event  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name argo event types  end_name  begin_operator  end_operator  begin_name status project loaded  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name p  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block 
begin_comment try to save the project possibly not creating a new file param overwrite if true then we overwrite without asking end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name try save  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name overwrite  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name try save  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name overwrite  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment try to save the project param overwrite if true then we overwrite without asking param save new file if true we ll ask for a new file even if the current project already had one end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name try save  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name overwrite  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name save new file  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name try save  end_name  begin_argument_list  begin_argument  begin_expr  begin_name overwrite  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name save new file  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment try to save the project param overwrite if true then we overwrite without asking param save new file if true we ll ask for a new file even if the current project already had one param exit after save the application will exit when the save has completed successfully end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name try save  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name overwrite  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name save new file  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name exit after save  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name uri  end_name  end_type  begin_name uri  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name project manager  end_name  begin_operator  end_operator  begin_name get manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get current project  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get uri  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name file  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_comment this method is invoked from several places so we have to check  end_comment  begin_comment whether if the project uri is set or not  end_comment  begin_if  begin_condition  begin_expr  begin_name uri  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name save new file  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name file  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name file  end_name  begin_argument_list  begin_argument  begin_expr  begin_name uri  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment does the file really exists  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name exists  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment project file doesn t exist let s pop up a message dialog  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name response  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name j option pane  end_name  begin_operator  end_operator  begin_name show confirm dialog  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name j option pane  end_name  begin_operator  end_operator  begin_name yes no option  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment and let s ask the user whether he wants to save the actual  end_comment  begin_comment project into a new file or not  end_comment  begin_if  begin_condition  begin_expr  begin_name response  end_name  begin_operator  end_operator  begin_name  begin_name j option pane  end_name  begin_operator  end_operator  begin_name yes option  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name save new file  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_comment save action has been cancelled  end_comment  begin_return  end_return  end_block  end_else  end_if  end_block  end_then  end_if  end_block  end_then  begin_else  begin_block  begin_comment attempt to save this project under a new name  end_comment  begin_expr_stmt  begin_expr  begin_name save new file  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_comment prompt the user for the new name  end_comment  begin_if  begin_condition  begin_expr  begin_name save new file  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name file  end_name  begin_operator  end_operator  begin_call  begin_name get new file  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment if the user cancelled the operation  end_comment  begin_comment we don t have to save anything  end_comment  begin_if  begin_condition  begin_expr  begin_name file  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  end_block  end_then  end_if  begin_comment let s call the real save method  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name try save with progress monitor  end_name  begin_argument_list  begin_argument  begin_expr  begin_name overwrite  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name file  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name exit after save  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment try to save the project param overwrite if true then we overwrite without asking param file the file to save to param pmw the progress monitor to be updated return true if successful todo separate this into a swing specific class tfm deprecated in 0 29 1 by bob tarling use try save with progress monitor end_comment begin_type  begin_annotation  begin_name deprecated  end_name  end_annotation  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name try save  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name overwrite  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name file  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name progress monitor  end_name  end_type  begin_name pmw  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name info  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name persistence manager  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name confirm overwrite  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name argo frame  end_name  begin_operator  end_operator  begin_name get frame  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name overwrite  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name file  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name is file readonly  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name file  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name j option pane  end_name  begin_operator  end_operator  begin_name show message dialog  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name j option pane  end_name  begin_operator  end_operator  begin_name information message  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name project  end_name  end_type  begin_name project  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name project manager  end_name  begin_operator  end_operator  begin_name get manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get current project  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_call  begin_name try save  end_name  begin_argument_list  begin_argument  begin_expr  begin_name file  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name pmw  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name project  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment save the project param file the file to save to param pmw the progress monitor to be updated return true if successful todo separate this into a swing specific class tfm end_comment begin_type  begin_name boolean  end_name  end_type  begin_name try save  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name file  end_name  end_type  begin_name file  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name progress monitor  end_name  end_type  begin_name pmw  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name project  end_name  end_type  begin_name project  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name info  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name persistence manager  end_name  end_type  begin_name pm  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name persistence manager  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name project file persister  end_name  end_type  begin_name persister  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name s status  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name message format  end_name  begin_operator  end_operator  begin_name format  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name object  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_name file  end_name  end_expr  end_block  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name update status  end_name  begin_argument_list  begin_argument  begin_expr  begin_name s status  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name persister  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name pm  end_name  begin_operator  end_operator  begin_name get save persister  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name pm  end_name  begin_operator  end_operator  begin_name set save persister  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name persister  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name persister  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name pm  end_name  begin_operator  end_operator  begin_name get persister from file name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name persister  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal state exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name test simulate errors  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment repair any errors in the project  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name report  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name repair  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name report  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment todo i 18 n  end_comment  begin_expr_stmt  begin_expr  begin_name report  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name report  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name report error  end_name  begin_argument_list  begin_argument  begin_expr  begin_name pmw  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_name report  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name pmw  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name pmw  end_name  begin_operator  end_operator  begin_name update progress  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name persister  end_name  begin_operator  end_operator  begin_name add progress listener  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name pmw  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name pre save  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name persister  end_name  begin_operator  end_operator  begin_name save  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name project  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name file  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name post save  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name argo event pump  end_name  begin_operator  end_operator  begin_name fire event  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name argo status event  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name argo event types  end_name  begin_operator  end_operator  begin_name status project saved  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name get absolute path  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name get canonical path  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment notification of menu bar  end_comment  begin_if  begin_condition  begin_expr  begin_name save action  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment bob says not sure how save action could be null here but  end_comment  begin_comment npe has been reported see issue 6233 as tom comments  end_comment  begin_comment elsewhere we should be listening for file save events  end_comment  begin_comment that would allow us to have a final save action instance  end_comment  begin_comment that can never be null  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name save action  end_name  begin_operator  end_operator  begin_name set enabled  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name add file saved  end_name  begin_argument_list  begin_argument  begin_expr  begin_name file  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name configuration  end_name  begin_operator  end_operator  begin_name set string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name argo  end_name  begin_operator  end_operator  begin_name key most recent project file  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name get canonical path  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  end_expr  end_return  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name exception  end_name  end_type  begin_name ex  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name s message  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name message format  end_name  begin_operator  end_operator  begin_name format  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name object  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_call  begin_name  begin_name ex  end_name  begin_operator  end_operator  begin_name get message  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_block  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name j option pane  end_name  begin_operator  end_operator  begin_name show message dialog  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name s message  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name j option pane  end_name  begin_operator  end_operator  begin_name error message  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name report error  end_name  begin_argument_list  begin_argument  begin_expr  begin_name pmw  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name object  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_call  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_block  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name ex  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name s message  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name ex  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  end_try  begin_return  begin_expr  end_expr  end_return  end_block 
begin_comment register a new file saved param file the file throws io exception if we cannot get the file name from the file end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name add file saved  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name file  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name io exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_comment todo this should listen for file save events tfm  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name generic argo menu bar  end_name  end_type  begin_name menu  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name generic argo menu bar  end_name  begin_operator  end_operator  begin_call  begin_name get j menu bar  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name menu  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name menu  end_name  begin_operator  end_operator  begin_name add file saved  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name get canonical path  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block 
begin_comment loads a project displaying a nice progress monitor param file the project to be opened param show ui whether to show the gui or not todo this needs to be refactored to be gui independent tfm end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name load project with progress monitor  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name file  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name show ui  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name load swing worker  end_name  end_type  begin_name worker  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name load swing worker  end_name  begin_argument_list  begin_argument  begin_expr  begin_name file  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name show ui  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name worker  end_name  begin_operator  end_operator  begin_name start  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment loads the project file and opens all kinds of error message windows if it doesn t work for some reason in those cases it preserves the old project param file the file to open param show ui true if an error message may be shown to the user false if run in commandline mode param pmw the progress monitor to be updated if not needed use null return true if the file was successfully opened todo separate this into a swing specific class tfm end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name load project  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name file  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name show ui  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name progress monitor  end_name  end_type  begin_name pmw  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name load project 2  end_name  begin_argument_list  begin_argument  begin_expr  begin_name file  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name show ui  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name pmw  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_return  end_block 
begin_comment loads the project file and opens all kinds of error message windows if it doesn t work for some reason in those cases it preserves the old project param file the file to open param show ui true if an error message may be shown to the user false if run in commandline mode param pmw the progress monitor to be updated if not needed use null return true if the file was successfully opened todo separate this into a swing specific class tfm end_comment begin_type  begin_specifier  end_specifier  begin_name project  end_name  end_type  begin_name load project 2  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name file  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name show ui  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name progress monitor  end_name  end_type  begin_name pmw  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name info  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name persistence manager  end_name  end_type  begin_name pm  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name persistence manager  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name project  end_name  end_type  begin_name old project  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name project manager  end_name  begin_operator  end_operator  begin_name get manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get current project  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name old project  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment remove the old project first it s wasteful to create a temp  end_comment  begin_comment empty project but too much of argo uml depends on having a  end_comment  begin_comment current project  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name project  end_name  end_type  begin_name p  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name project manager  end_name  begin_operator  end_operator  begin_name get manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name make empty project  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name project manager  end_name  begin_operator  end_operator  begin_name get manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set current project  end_name  begin_argument_list  begin_argument  begin_expr  begin_name p  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name project manager  end_name  begin_operator  end_operator  begin_name get manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name remove project  end_name  begin_argument_list  begin_argument  begin_expr  begin_name old project  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name old project  end_name  begin_operator  end_operator  begin_name p  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name success  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo  end_comment  begin_comment this is actually a hack some diagram types  end_comment  begin_comment like the statechart diagrams access the current  end_comment  begin_comment diagram to get some info this might cause  end_comment  begin_comment problems if there s another statechart diagram  end_comment  begin_comment active so i remove the current project before  end_comment  begin_comment loading the new one  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name designer  end_name  begin_operator  end_operator  begin_name disable critiquing  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name designer  end_name  begin_operator  end_operator  begin_name clear critiquing  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name clear dialogs  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name project  end_name  end_type  begin_name project  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name can read  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name report error  end_name  begin_argument_list  begin_argument  begin_expr  begin_name pmw  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name file  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name show ui  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name designer  end_name  begin_operator  end_operator  begin_name enable critiquing  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name success  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_comment hide save action during load otherwise we get the  end_comment  begin_comment appearing in title bar and the save enabling as models are  end_comment  begin_comment updated  end_comment  begin_comment todo do we still need this now the save enablement is improved  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name abstract action  end_name  end_type  begin_name remembered save action  end_name  begin_init  begin_expr  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name save action  end_name  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name save action  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name project manager  end_name  begin_operator  end_operator  begin_name get manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set save action  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_try  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name project file persister  end_name  end_type  begin_name persister  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name pm  end_name  begin_operator  end_operator  begin_name get persister from file name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name persister  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal state exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name pmw  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name persister  end_name  begin_operator  end_operator  begin_name add progress listener  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name pmw  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name project  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name persister  end_name  begin_operator  end_operator  begin_name do load  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name file  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name pmw  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name persister  end_name  begin_operator  end_operator  begin_name remove progress listener  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name pmw  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name thread utils  end_name  begin_operator  end_operator  begin_name check if interrupted  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment if model get diagram interchange model null  end_comment  begin_comment todo this assumes no more than one project at a time  end_comment  begin_comment will be loaded if it is ever reinstituted this needs to  end_comment  begin_comment be fixed  end_comment  begin_comment collection diagrams  end_comment  begin_comment diagram factory get instance get diagram  end_comment  begin_comment iterator diag diagrams iterator  end_comment  begin_comment while diag has next  end_comment  begin_comment project add member diag next  end_comment  begin_comment   end_comment  begin_comment if diagrams is empty  end_comment  begin_comment project set active diagram  end_comment  begin_comment argo diagram diagrams iterator next  end_comment  begin_comment   end_comment  begin_comment   end_comment  begin_comment let s save this project in the mru list  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name add file saved  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name file  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment let s save this project as the last used one  end_comment  begin_comment in the configuration file  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name configuration  end_name  begin_operator  end_operator  begin_name set string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name argo  end_name  begin_operator  end_operator  begin_name key most recent project file  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name get canonical path  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name update status  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name object  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_call  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_operator  end_operator  end_block  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name success  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name version exception  end_name  end_type  begin_name ex  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name report error  end_name  begin_argument_list  begin_argument  begin_expr  begin_name pmw  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name object  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_call  begin_name  begin_name ex  end_name  begin_operator  end_operator  begin_name get message  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_block  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name show ui  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name out of memory error  end_name  end_type  begin_name ex  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name ex  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name report error  end_name  begin_argument_list  begin_argument  begin_expr  begin_name pmw  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name show ui  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name  begin_name java  end_name  begin_operator  end_operator  begin_name lang  end_name  begin_operator  end_operator  begin_name interrupted exception  end_name  end_name  end_type  begin_name ex  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name uml version exception  end_name  end_type  begin_name ex  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name report error  end_name  begin_argument_list  begin_argument  begin_expr  begin_name pmw  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name object  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_call  begin_name  begin_name ex  end_name  begin_operator  end_operator  begin_name get message  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_block  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name show ui  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name ex  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name xmi format exception  end_name  end_type  begin_name ex  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name ex  end_name  begin_operator  end_operator  begin_name get cause  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name xmi reference exception  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment an error that can be corrected by the user so no stack  end_comment  begin_comment trace but instead an explanation and a hint how to fix  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name reference  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name xmi reference exception  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ex  end_name  begin_operator  end_operator  begin_name get cause  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get reference  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name report error  end_name  begin_argument_list  begin_argument  begin_expr  begin_name pmw  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name object  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_name reference  end_name  end_expr  begin_operator  end_operator  begin_expr  begin_call  begin_name  begin_name ex  end_name  begin_operator  end_operator  begin_name get message  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_block  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name ex  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name show ui  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name report error  end_name  begin_argument_list  begin_argument  begin_expr  begin_name pmw  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name object  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_call  begin_name  begin_name ex  end_name  begin_operator  end_operator  begin_name get message  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_block  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name show ui  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name ex  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name io exception  end_name  end_type  begin_name ex  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name ex  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name report error  end_name  begin_argument_list  begin_argument  begin_expr  begin_name pmw  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name object  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_call  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_block  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name show ui  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name ex  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name open exception  end_name  end_type  begin_name ex  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name ex  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name report error  end_name  begin_argument_list  begin_argument  begin_expr  begin_name pmw  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name object  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_call  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_block  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name show ui  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name ex  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name xmi reference runtime exception  end_name  end_type  begin_name ex  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment an error that can be corrected by the user so no stack  end_comment  begin_comment trace but instead an explanation and a hint how to fix  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name report error  end_name  begin_argument_list  begin_argument  begin_expr  begin_name pmw  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name object  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_call  begin_name  begin_name ex  end_name  begin_operator  end_operator  begin_name get reference  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_operator  end_operator  begin_expr  begin_call  begin_name  begin_name ex  end_name  begin_operator  end_operator  begin_name get message  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_block  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name ex  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name show ui  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name runtime exception  end_name  end_type  begin_name ex  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name ex  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name report error  end_name  begin_argument_list  begin_argument  begin_expr  begin_name pmw  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name object  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_call  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_block  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name show ui  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name ex  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  begin_finally  begin_block  begin_try  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name success  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name project  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name project manager  end_name  begin_operator  end_operator  begin_name get manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name make empty project  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name project manager  end_name  begin_operator  end_operator  begin_name get manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set current project  end_name  begin_argument_list  begin_argument  begin_expr  begin_name project  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name old project  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name project manager  end_name  begin_operator  end_operator  begin_name get manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name remove project  end_name  begin_argument_list  begin_argument  begin_expr  begin_name old project  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name get project settings  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name init  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name command  end_name  end_type  begin_name cmd  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name non undoable command  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name execute  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment this is temporary load project  end_comment  begin_comment should create a new project  end_comment  begin_comment with its own undo manager and so  end_comment  begin_comment there should be no command  end_comment  begin_return  begin_expr  end_expr  end_return  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name get undo manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add command  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cmd  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name info  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name get diagram list  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name size  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name designer  end_name  begin_operator  end_operator  begin_name enable critiquing  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_finally  begin_block  begin_comment make sure save action is always reinstated  end_comment  begin_expr_stmt  begin_expr  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name save action  end_name  end_name  begin_operator  end_operator  begin_name remembered save action  end_name  end_expr  end_expr_stmt  begin_comment we clear the save required flag on the swing event thread  end_comment  begin_comment in the hopes that it gets done after any other background  end_comment  begin_comment work listener updates that is being done there  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name swing utilities  end_name  begin_operator  end_operator  begin_name invoke later  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name runnable  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name project manager  end_name  begin_operator  end_operator  begin_name get manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set save action  end_name  begin_argument_list  begin_argument  begin_expr  begin_name remembered save action  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name remembered save action  end_name  begin_operator  end_operator  begin_name set enabled  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_finally  end_try  end_block  end_finally  end_try  end_block  end_else  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name success  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_return  begin_expr  begin_name project  end_name  end_expr  end_return  end_block 
begin_comment for testing purposes in tests this constructor can be called so the instance is filled end_comment begin_specifier  end_specifier  begin_name project browser  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name this  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment the constructor param application name the title of the frame param splash the splash screen to show at startup param main application flag indicating whether we are the top level application false if we are providing components to another top level app param left bottom pane the panel to fit in the left bottom corner end_comment begin_specifier  end_specifier  begin_name project browser  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name application name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name splash screen  end_name  end_type  begin_name splash  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name main application  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name j panel  end_name  end_type  begin_name left bottom pane  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name super  end_name  begin_argument_list  begin_argument  begin_expr  begin_name application name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name the instance  end_name  begin_operator  end_operator  begin_name this  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name is main application  end_name  begin_operator  end_operator  begin_name main application  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get content pane  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set font  end_name  begin_argument_list  begin_argument  begin_expr  begin_name default font  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo this causes a cyclic depencency with action save project  end_comment  begin_expr_stmt  begin_expr  begin_name save action  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name action save project  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name project manager  end_name  begin_operator  end_operator  begin_name get manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set save action  end_name  begin_argument_list  begin_argument  begin_expr  begin_name save action  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name create panels  end_name  begin_argument_list  begin_argument  begin_expr  begin_name splash  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name left bottom pane  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name is main application  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name menu bar  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name menu bar factory  end_name  begin_operator  end_operator  begin_name create application menu bar  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get content pane  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set layout  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name border layout  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name set j menu bar  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name menu bar  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment get content pane add menu bar border layout north  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name get content pane  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name assemble panels  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name border layout  end_name  begin_operator  end_operator  begin_name center  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name j panel  end_name  end_type  begin_name bottom  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name j panel  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name bottom  end_name  begin_operator  end_operator  begin_name set layout  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name border layout  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name bottom  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name status bar  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name border layout  end_name  begin_operator  end_operator  begin_name center  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name bottom  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name heap monitor  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name border layout  end_name  begin_operator  end_operator  begin_name east  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get content pane  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name bottom  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name border layout  end_name  begin_operator  end_operator  begin_name south  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set app name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name application name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment allows me to ask do you want to save first  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name set default close operation  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name project browser  end_name  begin_operator  end_operator  begin_name do nothing on close  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add window listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name window closer  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set application icon  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment add listener for project changes  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name project manager  end_name  begin_operator  end_operator  begin_name get manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add property change listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment add listener to get notified when active diagram changes  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name target manager  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add target listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment add a listener to focus changes  end_comment  begin_comment rationale reset the undo manager to start a new chain  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name add keyboard focus listener  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block 
begin_comment overrides the finished method of the swing worker class to update the gui end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name finished  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name finished  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name result  end_name  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name exit after save  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name project browser  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name exit  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name project browser  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name build title with current project name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo why isn t this done in save  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name undo manager  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name empty  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  end_if  end_block 
begin_comment constructor to build new settings dialog end_comment begin_name settings dialog  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name super  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name argo dialog  end_name  begin_operator  end_operator  begin_name ok cancel option  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name tabs  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name j tabbed pane  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name apply button  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name j button  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name mnemonic  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name mnemonic  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name mnemonic  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name apply button  end_name  begin_operator  end_operator  begin_name set mnemonic  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name mnemonic  end_name  begin_operator  end_operator  begin_name char at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name apply button  end_name  begin_operator  end_operator  begin_name add action listener  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name action listener  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name action performed  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name action event  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name handle save  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add button  end_name  begin_argument_list  begin_argument  begin_expr  begin_name apply button  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment add settings from the settings registry  end_comment  begin_expr_stmt  begin_expr  begin_name settings tabs  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name gui  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get settings tabs  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name gui settings tab interface  end_name  end_type  begin_name stp  end_name  begin_range  begin_expr  begin_name settings tabs  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_comment todo only fetch names and defer fetching panels until needed  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name tabs  end_name  begin_operator  end_operator  begin_name add tab  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name stp  end_name  begin_operator  end_operator  begin_name get tab key  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name stp  end_name  begin_operator  end_operator  begin_name get tab panel  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_comment increase width to accommodate all tabs on one row  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name minimum width  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name tabs  end_name  begin_operator  end_operator  begin_name set preferred size  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name dimension  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name max  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name tabs  end_name  begin_operator  end_operator  begin_name get preferred size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name width  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name minimum width  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name tabs  end_name  begin_operator  end_operator  begin_name get preferred size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name height  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name tabs  end_name  begin_operator  end_operator  begin_name set tab placement  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name swing constants  end_name  begin_operator  end_operator  begin_name left  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set content  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tabs  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add window listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment todo bob says this is a really nasty horrible hack shadow fig should not extend fig node model element instead we require a base class fig node with common behaviour of all nodes in argo uml shadow fig should extend that and fig node model element should extend that same base class adding common functionality for fig node that represent model element see org argouml uml diagram ui fig node model element set shadow size int end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set shadow size  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name size  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name set shadow size friend  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name size  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment handle a refresh of the style panel after the fig has moved p em warning em there is a circular trap here editing the boundary box will also trigger a refresh and so we reset the boundary box which causes funny behaviour the cursor keeps jumping to the end of the text the solution is to not reset the boundary box field if the boundaries have not changed p end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name refresh  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name target manager  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get targets  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name size  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment see issue 6109 if we have multiple targets this method  end_comment  begin_comment can result in a feedback problem where selecting a target  end_comment  begin_comment changes the selection colour in the combo and as a result  end_comment  begin_comment that trigger a change of colour of all selected figs  end_comment  begin_return  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name fig  end_name  end_type  begin_name target  end_name  begin_init  begin_expr  begin_call  begin_name get panel target  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo how about fig association class  end_comment  begin_if  begin_condition  begin_expr  begin_name target  end_name  begin_operator  end_operator  begin_name fig edge model element  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name has editable bounding box  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name has editable bounding box  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_if  begin_condition  begin_expr  begin_name target  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_comment the boundary box as held in the target fig and as listed in  end_comment  begin_comment the  end_comment  begin_comment boundary box style field null if we don t have anything  end_comment  begin_comment valid  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name rectangle  end_name  end_type  begin_name fig bounds  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name target  end_name  begin_operator  end_operator  begin_name get bounds  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name rectangle  end_name  end_type  begin_name style bounds  end_name  begin_init  begin_expr  begin_call  begin_name parse b box  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment only reset the text if the two are not the same i e the fig  end_comment  begin_comment has  end_comment  begin_comment moved rather than we ve just edited the text when  end_comment  begin_comment set target b box  end_comment  begin_comment will have made them the same note that style bounds could  end_comment  begin_comment be null  end_comment  begin_comment so we do the test this way round  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name fig bounds  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name style bounds  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name bbox field  end_name  begin_operator  end_operator  begin_name set text  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name fig bounds  end_name  begin_operator  end_operator  begin_name x  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name fig bounds  end_name  begin_operator  end_operator  begin_name y  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name fig bounds  end_name  begin_operator  end_operator  begin_name width  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name fig bounds  end_name  begin_operator  end_operator  begin_name height  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment change the fill colour  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name target  end_name  begin_operator  end_operator  begin_name is filled  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name color  end_name  end_type  begin_name c  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name target  end_name  begin_operator  end_operator  begin_name get fill color  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name fill field  end_name  begin_operator  end_operator  begin_name set selected item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name c  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name fill field  end_name  begin_operator  end_operator  begin_name get selected item  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name fill field  end_name  begin_operator  end_operator  begin_name insert item at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name fill field  end_name  begin_operator  end_operator  begin_name get item count  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name fill field  end_name  begin_operator  end_operator  begin_name set selected item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name fill field  end_name  begin_operator  end_operator  begin_name set selected index  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_comment change the line colour  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name target  end_name  begin_operator  end_operator  begin_name get line width  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name color  end_name  end_type  begin_name c  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name target  end_name  begin_operator  end_operator  begin_name get line color  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo this is going to cause the color to be reset on a refresh  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name line field  end_name  begin_operator  end_operator  begin_name set selected item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name c  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name line field  end_name  begin_operator  end_operator  begin_name get selected item  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name line field  end_name  begin_operator  end_operator  begin_name insert item at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name line field  end_name  begin_operator  end_operator  begin_name get item count  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name line field  end_name  begin_operator  end_operator  begin_name set selected item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name line field  end_name  begin_operator  end_operator  begin_name set selected index  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name stereo field  end_name  begin_operator  end_operator  begin_name set enabled  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name target  end_name  begin_operator  end_operator  begin_name stereotype styled  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name stereo label  end_name  begin_operator  end_operator  begin_name set enabled  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name target  end_name  begin_operator  end_operator  begin_name stereotype styled  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name target  end_name  begin_operator  end_operator  begin_name stereotype styled  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name stereotype styled  end_name  end_type  begin_name fig  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name stereotype styled  end_name  begin_operator  end_operator  begin_name target  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name stereo field  end_name  begin_operator  end_operator  begin_name set selected index  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name fig  end_name  begin_operator  end_operator  begin_name get stereotype style  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name ordinal  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block 
begin_comment see org argouml ui tab target refresh end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name refresh  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name target manager  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get targets  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name size  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment see issue 6109 if we have multiple targets this method  end_comment  begin_comment can result in a feedback problem where selecting a target  end_comment  begin_comment changes the selection colour in the combo and as a result  end_comment  begin_comment that trigger a change of colour of all selected figs  end_comment  begin_return  end_return  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name refresh transaction  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_comment let the parent do its refresh  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name refresh  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name target  end_name  begin_init  begin_expr  begin_call  begin_name get panel target  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo why is this code even getting called for a fig generalization  end_comment  begin_if  begin_condition  begin_expr  begin_name target  end_name  begin_operator  end_operator  begin_name path container  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name path container  end_name  end_type  begin_name pc  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name path container  end_name  begin_operator  end_operator  begin_call  begin_name get panel target  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name path check box  end_name  begin_operator  end_operator  begin_name set selected  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name pc  end_name  begin_operator  end_operator  begin_name is path visible  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name refresh transaction  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_comment lets redraw the box  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name set target b box  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment this method calls the construct return the value to be returned by the code get code method end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name do construct  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name activate glass pane  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name pmw  end_name  begin_operator  end_operator  begin_call  begin_name init progress monitor window  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name argo frame  end_name  begin_operator  end_operator  begin_name get frame  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set cursor  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name cursor  end_name  begin_operator  end_operator  begin_name get predefined cursor  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name cursor  end_name  begin_operator  end_operator  begin_name wait cursor  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name ret val  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_comment create a timer  end_comment  begin_expr_stmt  begin_expr  begin_name timer  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name timer  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name timer listener  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name timer  end_name  begin_operator  end_operator  begin_name start  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_name ret val  end_name  begin_operator  end_operator  begin_call  begin_name construct  end_name  begin_argument_list  begin_argument  begin_expr  begin_name pmw  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name exception  end_name  end_type  begin_name exc  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo this error needs to be reported  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name exc  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  begin_finally  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name pmw  end_name  begin_operator  end_operator  begin_name close  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_finally  end_try  begin_return  begin_expr  begin_name ret val  end_name  end_expr  end_return  end_block 
begin_comment see java awt datatransfer transferable get transfer data java awt datatransfer data flavor end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get transfer data  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name data flavor  end_name  end_type  begin_name data flavor  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name unsupported flavor exception  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name io exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name data flavor  end_name  begin_operator  end_operator  begin_name match  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name uml collection flavor  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name the model elements  end_name  end_expr  end_return  end_block  end_then  end_if  begin_comment todo we could also support other flavors here e g image then you can drag modelelements directly into your wordprocessor to be inserted as an image  end_comment  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name unsupported flavor exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name data flavor  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block 
begin_comment see javax swing tree tree model value for path changed javax swing tree tree path java lang object end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name value for path changed  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name tree path  end_name  end_type  begin_name path  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name new value  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment empty implementation not used  end_comment  end_block 
begin_comment empty implementation not used end_commentbegin_comment param r the root of the model end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set root  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name r  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_name root  end_name  begin_operator  end_operator  begin_name r  end_name  end_expr  end_expr_stmt  end_block 
begin_comment see org argouml cognitive checklist check item expand java lang string java lang object end_comment begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name expand  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name res  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name dm  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name search pos  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name match pos  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name res  end_name  begin_operator  end_operator  begin_name index of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name ocl evaluator  end_name  begin_operator  end_operator  begin_name ocl start  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name search pos  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment replace all occurances of offender with the name of the  end_comment  begin_comment first offender  end_comment  begin_while  begin_condition  begin_expr  begin_name match pos  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name end expr  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name res  end_name  begin_operator  end_operator  begin_name index of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name ocl evaluator  end_name  begin_operator  end_operator  begin_name ocl end  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name match pos  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name expr  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name res  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name match pos  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ocl evaluator  end_name  begin_operator  end_operator  begin_name ocl start  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name end expr  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name eval str  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_name eval str  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name critic ocl evaluator  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name eval to string  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dm  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name expr  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name expansion exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment really ought to have a critic exception to throw here  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name invalid element exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment the modelelement must have been deleted ignore this it will pass  end_comment  begin_expr_stmt  begin_expr  begin_name eval str  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  end_try  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name expr  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name eval str  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name res  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name res  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name match pos  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_name eval str  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name res  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name end expr  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ocl evaluator  end_name  begin_operator  end_operator  begin_name ocl end  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name search pos  end_name  begin_operator  end_operator  begin_name end expr  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name match pos  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name res  end_name  begin_operator  end_operator  begin_name index of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name ocl evaluator  end_name  begin_operator  end_operator  begin_name ocl start  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name search pos  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_while  begin_return  begin_expr  begin_name res  end_name  end_expr  end_return  end_block 
begin_comment set the threshold todo should this be protected param threshold the threshold to compare to end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set threshold  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name threshold  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_name critic threshold  end_name  begin_operator  end_operator  begin_name threshold  end_name  end_expr  end_expr_stmt  end_block 
begin_comment gets the current threshold todo should this be protected return the current threshold end_comment begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name get threshold  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  begin_name critic threshold  end_name  end_expr  end_return  end_block 
begin_comment return an iterator of the children of the given object param o object to return the children of return an iterator over the children of the given object see org tigris gef util child generator gen java lang object end_comment begin_type  begin_specifier  end_specifier  begin_name iterator  end_name  end_type  begin_name gen 2  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name is debug enabled  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name o  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_comment log debug finding children for o get class  end_comment  end_block  end_else  end_if  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_name project  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name project  end_name  end_type  begin_name p  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name project  end_name  begin_operator  end_operator  begin_name o  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name result  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name array list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name p  end_name  begin_operator  end_operator  begin_name get user defined model list  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name p  end_name  begin_operator  end_operator  begin_name get diagram list  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_name diagram  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name figs  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name diagram  end_name  begin_operator  end_operator  begin_name o  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get layer  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get contents  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name figs  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name figs  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  begin_comment argument can be an instanceof a fig which we ignore  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a package  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name owned elements  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get owned elements  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name owned elements  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name owned elements  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a element import  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name me  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get model element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name me  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name single element iterator  end_name  begin_argument_list  begin_argument  begin_expr  begin_name me  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  begin_comment todo associationclasses fit both of the next 2 cases  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a classifier  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name result  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name array list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get features  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name sms  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get behaviors  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment object sm null  end_comment  begin_comment if sms null sms size 0  end_comment  begin_comment sm sms element at 0  end_comment  begin_comment if sm null res add sub new enumeration single sm  end_comment  begin_if  begin_condition  begin_expr  begin_name sms  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name sms  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a association  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name list  end_name  end_type  begin_name assoc ends  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name list  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get connections  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name assoc ends  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name assoc ends  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_comment todo association role  end_comment  end_block  end_then  end_if  begin_comment needed  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a state machine  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name result  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name array list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name top  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get state machines helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get top  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name top  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name top  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get transitions  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_comment needed  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a composite state  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name substates  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get subvertices  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name substates  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name substates  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a operation  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name params  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get parameters  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name params  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name params  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a model element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name behavior  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get behaviors  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name behavior  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name behavior  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  begin_comment todo we can probably use this instead of all of the above  end_comment  begin_comment legacy uml 1 3 code tfm 20070915  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is auml element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name result  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get model element contents  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_return  begin_expr  begin_call  begin_name  begin_name collections  end_name  begin_operator  end_operator  begin_name empty set  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name iterator  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment see org argouml uml cognitive critics cr uml predicate 2 java lang object org argouml cognitive designer end_comment begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name predicate 2  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name dm  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name designer  end_name  end_type  begin_name dsgr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a state  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dm  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name no problem  end_name  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name my name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dm  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo should define a compound critic  end_comment  begin_if  begin_condition  begin_expr  begin_name my name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name my name  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name no problem  end_name  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name my name string  end_name  begin_init  begin_expr  begin_name my name  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name my name string  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name no problem  end_name  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name pkgs  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get element imports 2  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dm  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name pkgs  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name no problem  end_name  end_expr  end_return  end_block  end_then  end_if  begin_for  begin_init  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name iter  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name pkgs  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_call  begin_name  begin_name iter  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_incr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name imp  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name iter  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name ns  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get package  end_name  begin_argument_list  begin_argument  begin_expr  begin_name imp  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name ns  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name no problem  end_name  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name oes  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get owned elements  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ns  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name oes  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name no problem  end_name  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name elems  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name oes  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name elems  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name eo  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name elems  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name me  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get model element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name eo  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a classifier  end_name  begin_argument_list  begin_argument  begin_expr  begin_name me  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_continue  end_continue  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name me  end_name  begin_operator  end_operator  begin_name dm  end_name  end_expr  end_condition  begin_then  begin_block  begin_continue  end_continue  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name me name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name me  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name me name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name me name  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_continue  end_continue  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name me name  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name my name string  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name problem found  end_name  end_expr  end_return  end_block  end_then  end_if  end_block  end_while  end_block  end_for  begin_return  begin_expr  begin_name no problem  end_name  end_expr  end_return  end_block 
begin_comment see org argouml uml cognitive critics cr uml predicate 2 java lang object org argouml cognitive designer end_comment begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name predicate 2  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name dm  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name designer  end_name  end_type  begin_name dsgr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a class  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dm  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name no problem  end_name  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name cls  end_name  begin_init  begin_expr  begin_name dm  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name ends  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get association ends  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cls  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name ends  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name ends  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name no problem  end_name  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name my end  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ends  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name next  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name asc  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get association  end_name  begin_argument_list  begin_argument  begin_expr  begin_name my end  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name list  end_name  end_type  begin_name conns  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name array list  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get connections  end_name  begin_argument_list  begin_argument  begin_expr  begin_name asc  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment do we have 2 connection ends  end_comment  begin_if  begin_condition  begin_expr  begin_name conns  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name conns  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name no problem  end_name  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name ae 0  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name conns  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name ae 1  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name conns  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment both ends must be classes otherwise there is nothing to merge  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a class  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get type  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ae 0  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a class  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get type  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ae 1  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name no problem  end_name  end_expr  end_return  end_block  end_then  end_if  begin_comment both ends must be navigable otherwise there is nothing to merge  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is navigable  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ae 0  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is navigable  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ae 1  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name no problem  end_name  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get lower  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ae 0  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get upper  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ae 0  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get lower  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ae 1  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get upper  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ae 1  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name problem found  end_name  end_expr  end_return  end_block  end_then  end_if  begin_return  begin_expr  begin_name no problem  end_name  end_expr  end_return  end_block 
begin_comment param dm the object to check return the set of offenders end_comment begin_type  begin_specifier  end_specifier  begin_name list set  end_name  end_type  begin_name compute offenders  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name dm  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name list set  end_name  end_type  begin_name offender result  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name list set  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a namespace  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dm  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name hash map  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  end_type  begin_name names  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name hash map  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name name 1 object  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get owned elements  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dm  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a named element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name 1 object  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_continue  end_continue  end_block  end_then  end_if  begin_comment todo do we need this generalization is not a named element  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a generalization  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name 1 object  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_continue  end_continue  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name 1 object  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_continue  end_continue  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_continue  end_continue  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name names  end_name  begin_operator  end_operator  begin_name contains key  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name offender  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name names  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name offender result  end_name  begin_operator  end_operator  begin_name contains  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name offender  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name offender result  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name offender  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name offender result  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name 1 object  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name names  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name name 1 object  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  end_block  end_then  end_if  begin_return  begin_expr  begin_name offender result  end_name  end_expr  end_return  end_block 
begin_comment see org argouml uml cognitive critics cr uml predicate 2 java lang object org argouml cognitive designer end_comment begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name predicate 2  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name dm  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name designer  end_name  end_type  begin_name dsgr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo not implemented  end_comment  begin_return  begin_expr  begin_name no problem  end_name  end_expr  end_return  end_block 
begin_comment param d the diagram return the set of offenders end_comment begin_type  begin_specifier  end_specifier  begin_name list set  end_name  end_type  begin_name compute offenders  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name diagram  end_name  end_type  begin_name d  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo algorithm is n 2 in number of nodes  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name list  end_name  end_type  begin_name figs  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name d  end_name  begin_operator  end_operator  begin_name get layer  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get contents  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name num figs  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name figs  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name list set  end_name  end_type  begin_name offs  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name num figs  end_name  begin_operator  end_operator  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name oi  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name figs  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name oi  end_name  begin_operator  end_operator  begin_name fig node  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_continue  end_continue  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name fig node  end_name  end_type  begin_name fni  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name fig node  end_name  begin_operator  end_operator  begin_name oi  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name rectangle  end_name  end_type  begin_name boundsi  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name fni  end_name  begin_operator  end_operator  begin_name get bounds  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name j  end_name  begin_init  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name j  end_name  begin_operator  end_operator  begin_name num figs  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name j  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name oj  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name figs  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name j  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name oj  end_name  begin_operator  end_operator  begin_name fig node  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_continue  end_continue  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name fig node  end_name  end_type  begin_name fnj  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name fig node  end_name  begin_operator  end_operator  begin_name oj  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name fnj  end_name  begin_operator  end_operator  begin_name intersects  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name boundsi  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name d  end_name  begin_operator  end_operator  begin_name uml deployment diagram  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name fni  end_name  begin_operator  end_operator  begin_name fig node model element  end_name  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name fig node model element  end_name  begin_operator  end_operator  begin_name fni  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get enclosing fig  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name fnj  end_name  end_expr  end_condition  begin_then  begin_block  begin_continue  end_continue  end_block  end_then  end_if  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name fnj  end_name  begin_operator  end_operator  begin_name fig node model element  end_name  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name fig node model element  end_name  begin_operator  end_operator  begin_name fnj  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get enclosing fig  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name fni  end_name  end_expr  end_condition  begin_then  begin_block  begin_continue  end_continue  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  begin_comment in deployment diagrams the situation is not the  end_comment  begin_comment same as in other diagrams only classes  end_comment  begin_comment interfaces and objects can intersect each other  end_comment  begin_comment while they are not the enclosing fig so you  end_comment  begin_comment have to prouve only these elements  end_comment  begin_else  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name fni  end_name  begin_operator  end_operator  begin_name fig class  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name fni  end_name  begin_operator  end_operator  begin_name fig interface  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name fni  end_name  begin_operator  end_operator  begin_name fig object  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name fnj  end_name  begin_operator  end_operator  begin_name fig class  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name fnj  end_name  begin_operator  end_operator  begin_name fig interface  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name fnj  end_name  begin_operator  end_operator  begin_name fig object  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_continue  end_continue  end_block  end_then  end_if  end_block  end_else  end_if  begin_if  begin_condition  begin_expr  begin_name offs  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name offs  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name list set  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name offs  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name d  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name offs  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name fni  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name offs  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name fnj  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_then  end_if  end_block  end_for  end_block  end_for  begin_return  begin_expr  begin_name offs  end_name  end_expr  end_return  end_block 
begin_comment the constructor end_comment begin_specifier  end_specifier  begin_name cr nodes overlap  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment todo name is not expanded for diagram objects  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name setup head and desc  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add supported decision  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name uml decision  end_name  begin_operator  end_operator  begin_name class selection  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add supported decision  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name uml decision  end_name  begin_operator  end_operator  begin_name expected usage  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add supported decision  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name uml decision  end_name  begin_operator  end_operator  begin_name state machines  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set knowledge types  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name critic  end_name  begin_operator  end_operator  begin_name kt presentation  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment see org argouml uml cognitive critics cr uml predicate 2 java lang object org argouml cognitive designer end_comment begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name predicate 2  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name dm  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name designer  end_name  end_type  begin_name dsgr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo not implemented  end_comment  begin_return  begin_expr  begin_name no problem  end_name  end_expr  end_return  end_block 
begin_comment see org argouml uml cognitive critics cr uml predicate 2 java lang object org argouml cognitive designer end_comment begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name predicate 2  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name dm  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name designer  end_name  end_type  begin_name dsgr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a classifier  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dm  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name no problem  end_name  end_expr  end_return  end_block  end_then  end_if  begin_comment todo consider inherited attributes  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name features  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get features  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dm  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name features  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name no problem  end_name  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name n  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name iter  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name features  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_call  begin_name  begin_name iter  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_incr  end_incr  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a structural feature  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name iter  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name n  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  begin_if  begin_condition  begin_expr  begin_name n  end_name  begin_operator  end_operator  begin_call  begin_name get threshold  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name no problem  end_name  end_expr  end_return  end_block  end_then  end_if  begin_return  begin_expr  begin_name problem found  end_name  end_expr  end_return  end_block 
begin_comment see org argouml uml cognitive critics cr uml predicate 2 java lang object org argouml cognitive designer end_comment begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name predicate 2  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name dm  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name designer  end_name  end_type  begin_name dsgr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a classifier  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dm  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name no problem  end_name  end_expr  end_return  end_block  end_then  end_if  begin_comment todo consider inherited attributes  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name str  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get features  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dm  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name str  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name no problem  end_name  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name n  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name iter  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name str  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_call  begin_name  begin_name iter  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_incr  end_incr  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a behavioral feature  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name iter  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name n  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  begin_if  begin_condition  begin_expr  begin_name n  end_name  begin_operator  end_operator  begin_call  begin_name get threshold  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name no problem  end_name  end_expr  end_return  end_block  end_then  end_if  begin_return  begin_expr  begin_name problem found  end_name  end_expr  end_return  end_block 
begin_comment see org argouml cognitive critic set headline java lang string set up the locale specific text for the critic headline the one liner that appears in the to do pane and the critic description the detailed explanation that appears in the to do tab of the details pane mvw maybe we can make it part of the constructor cr uml fixme why override if nobody uses end_commentbegin_comment override end_commentbegin_comment public final void set headline string s end_commentbegin_comment setup head and desc end_commentbegin_comment  end_commentbegin_comment set up the locale specific text for the critic headline the one liner that appears in the to do pane and the critic description the detailed explanation that appears in the to do tab of the details pane end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name setup head and desc  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name set resource  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get class simple name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment expand text with ocl brackets in it no recursive expansion return the expanded text param res is the text to expand param offs is the elements to replace end_comment begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name expand  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name res  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name list set  end_name  end_type  begin_name offs  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name offs  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name res  end_name  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name off 1  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name offs  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string buffer  end_name  end_type  begin_name beginning  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name string buffer  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name match pos  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name res  end_name  begin_operator  end_operator  begin_name index of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ocl start  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment replace all occurances of offender with the name of the  end_comment  begin_comment first offender  end_comment  begin_while  begin_condition  begin_expr  begin_name match pos  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name end expr  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name res  end_name  begin_operator  end_operator  begin_name index of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ocl end  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name match pos  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment check if there is no ocl end if so the critic expression  end_comment  begin_comment is not correct and can not be expanded  end_comment  begin_if  begin_condition  begin_expr  begin_name end expr  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_break  end_break  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name match pos  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name beginning  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name res  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name match pos  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name expr  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name res  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name match pos  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ocl start  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name end expr  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name eval str  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_name eval str  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name critic ocl evaluator  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name eval to string  end_name  begin_argument_list  begin_argument  begin_expr  begin_name off 1  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name expr  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name expansion exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment really ought to have a critic exception to throw here  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  end_try  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name expr  end_name  begin_operator  end_operator  begin_name ends with  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name eval str  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name eval str  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name beginning  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name eval str  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name res  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name res  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name end expr  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ocl end  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name match pos  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name res  end_name  begin_operator  end_operator  begin_name index of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ocl start  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_while  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name beginning  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment return original string if no replacements made  end_comment  begin_return  begin_expr  begin_name res  end_name  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name beginning  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name res  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to string  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_else  end_if  end_block 
begin_comment the constructor end_comment begin_specifier  end_specifier  begin_name cr zero length edge  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment todo name is not expanded for diagram objects  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name setup head and desc  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add supported decision  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name uml decision  end_name  begin_operator  end_operator  begin_name relationships  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add supported decision  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name uml decision  end_name  begin_operator  end_operator  begin_name inheritance  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add supported decision  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name uml decision  end_name  begin_operator  end_operator  begin_name state machines  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set knowledge types  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name critic  end_name  begin_operator  end_operator  begin_name kt presentation  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment tries to identify the association that triggered the critic p the first time it is called it will initialise the trigger from the to do item if there it is assumed to be the first trigger of the to do item and to be an association if found the value is stored in the private field link trigger association p on all subsequent calls if a non null value is found in link trigger association that is returned p return the association that triggered the critic or code null code if there was none end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get trigger association  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment if we don t have it find the trigger if this fails it will keep  end_comment  begin_comment its default value of null  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name trigger association  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get to do item  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name trigger association  end_name  begin_operator  end_operator  begin_call  begin_name get model element  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_name trigger association  end_name  end_expr  end_return  end_block 
begin_comment there is a possibility that the next step forward takes another path in this wizard to allow for this we must destroy the path already traveled by p todo i linus would say that this is really a problem with the wizard implementation since i believe it should be possible to explore a path in the wizard and then go back inherit doc end_comment begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name undo action  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name orig step  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name undo action  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name orig step  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name get step  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name remove panel  end_name  begin_argument_list  begin_argument  begin_expr  begin_name orig step  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name orig step  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name oper  end_name  begin_init  begin_expr  begin_call  begin_name get model element  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name added create stereotype  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name remove stereotype  end_name  begin_argument_list  begin_argument  begin_expr  begin_name oper  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name create stereotype  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name project manager  end_name  begin_operator  end_operator  begin_name get manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name update roots  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name fig  end_name  end_type  begin_name create big port fig  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment todo define constants for magic numbers  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name fig rect  end_name  end_type  begin_name fr  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name fig rect  end_name  begin_argument_list  begin_argument  begin_expr  begin_name x 0  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name y 0  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name debug color  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name debug color  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name fr  end_name  begin_operator  end_operator  begin_name set filled  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name fr  end_name  begin_operator  end_operator  begin_name set line width  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name fr  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name init figs  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment todo define constants for magic numbers  end_comment  begin_expr_stmt  begin_expr  begin_name left line  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name fig line  end_name  begin_argument_list  begin_argument  begin_expr  begin_name x 0  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name y 0  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name line color  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name right line  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name fig line  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name y 0  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name line color  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name bottom line  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name fig line  end_name  begin_argument_list  begin_argument  begin_expr  begin_name x 0  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name line color  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name top line  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name fig line  end_name  begin_argument_list  begin_argument  begin_expr  begin_name x 0  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name y 0  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name line color  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get name fig  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set line width  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get name fig  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set bounds  end_name  begin_argument_list  begin_argument  begin_expr  begin_name x 0  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name y 0  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get name fig  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set filled  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name seperator  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name fig line  end_name  begin_argument_list  begin_argument  begin_expr  begin_name x 0  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name y 0  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name line color  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add fig  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get big port  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add fig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name right line  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add fig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name left line  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add fig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name top line  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add fig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name bottom line  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add fig  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get name fig  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add fig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name seperator  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set filled  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set bounds  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get bounds  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name initialize  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name rectangle  end_name  end_type  begin_name r  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo replace the next deprecated call this case is complicated by the use of parameters all other figs work differently  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name set big port  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name fig empty rect  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name r  end_name  begin_operator  end_operator  begin_name x  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name r  end_name  begin_operator  end_operator  begin_name y  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name r  end_name  begin_operator  end_operator  begin_name width  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name r  end_name  begin_operator  end_operator  begin_name height  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get big port  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set filled  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get big port  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set line width  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add fig  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get big port  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set bounds  end_name  begin_argument_list  begin_argument  begin_expr  begin_name r  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment return the statemachine todo if this method is called by any of the figs it will introduce a dependency cycle it would be much better if they could just use link org argouml uml diagram argo diagram get owner which does the same thing end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get state machine  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name graph model  end_name  end_type  begin_name gm  end_name  begin_init  begin_expr  begin_call  begin_name get graph model  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name gm  end_name  begin_operator  end_operator  begin_name state diagram graph model  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name machine  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name state diagram graph model  end_name  begin_operator  end_operator  begin_name gm  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get machine  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get uml factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is removed  end_name  begin_argument_list  begin_argument  begin_expr  begin_name machine  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name machine  end_name  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  begin_return  begin_expr  end_expr  end_return  end_block 
begin_comment the activity graph end_commentbegin_comment see org argouml uml diagram ui uml diagram is relocation allowed java lang object end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is relocation allowed  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name base  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  end_expr  end_return  begin_comment todo we may return the following when the relocate has been implemented  end_comment  begin_comment model get activity graphs helper  end_comment  begin_comment is adding activity graph allowed base  end_comment  end_block 
begin_comment todo we may return the following when the relocate has been implemented end_commentbegin_comment model get activity graphs helper end_commentbegin_comment is adding activity graph allowed base end_comment begin_type  begin_annotation  begin_name suppress warnings  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_name collection  end_name  end_type  begin_name get relocation candidates  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name root  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo we may return something useful when the relocate has been implemented  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name c  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name hash set  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get owner  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name c  end_name  end_expr  end_return  end_block 
begin_comment constructor deprecated for 0 28 by tfmorris use link uml activity diagram string object graph model end_comment begin_annotation  begin_name deprecated  end_name  end_annotation  begin_specifier  end_specifier  begin_name uml activity diagram  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name super  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name set name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get new diagram name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name property veto exception  end_name  end_type  begin_name pve  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment no action required in case of veto on set name  end_comment  end_block  end_catch  end_try  begin_comment todo all super constructors should take a graph model  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name set graph model  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name create graph model  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment constructor param namespace the namespace for the diagram param agraph the activity graph for the diagram deprecated for 0 28 by tfmorris use link uml activity diagram string object graph model end_comment begin_annotation  begin_name deprecated  end_name  end_annotation  begin_specifier  end_specifier  begin_name uml activity diagram  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name namespace  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name agraph  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name this  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name namespace  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name namespace  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get namespace  end_name  begin_argument_list  begin_argument  begin_expr  begin_name agraph  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a namespace  end_name  begin_argument_list  begin_argument  begin_expr  begin_name namespace  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a activity graph  end_name  begin_argument_list  begin_argument  begin_expr  begin_name agraph  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name namespace  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name namespace  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name trim  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name namespace  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get behaviors  end_name  begin_argument_list  begin_argument  begin_expr  begin_name namespace  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name size  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name set name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name property veto exception  end_name  end_type  begin_name pve  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment no action required  end_comment  end_block  end_catch  end_try  end_block  end_then  end_if  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name setup  end_name  begin_argument_list  begin_argument  begin_expr  begin_name namespace  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name agraph  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment todo move to gef end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name remove  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name fig  end_name  end_argument  end_argument_list  end_name  end_type  begin_name contents  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name fig  end_name  end_argument  end_argument_list  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get layer  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get contents  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name size  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name contents  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name size  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_operator  end_operator  begin_name i  end_name  end_expr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name fig  end_name  end_type  begin_name f  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name contents  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name f  end_name  begin_operator  end_operator  begin_name remove from diagram  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name fire property change  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name remove  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment default constructor used by pgml parser when diagram is first created deprecated for 0 27 2 by tfmorris the 0 arg constructor of our sub classes will get called by the pgml parser but this should not get propagated up the hierarchy the gef diagram constructor implementation is going to provide defaults for all missing args anyway so we should always use the fully specified 3 arg constructor end_comment begin_annotation  begin_name deprecated  end_name  end_annotation  begin_specifier  end_specifier  begin_name argo diagram impl  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name super  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo what is this trying to do it s never going to get called tfm  end_comment  begin_comment really dirty hack to remove unwanted listeners  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name get layer  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get graph model  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name remove graph event listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get layer  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name constructor init  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment the constructor param diagram name the name of the diagram deprecated for 0 27 2 by tfmorris use link argo diagram impl string graph model layer perspective end_comment begin_annotation  begin_name deprecated  end_name  end_annotation  begin_specifier  end_specifier  begin_name argo diagram impl  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name diagram name  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment next line patch to issue 596 hopefully  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name super  end_name  begin_argument_list  begin_argument  begin_expr  begin_name diagram name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name set name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name diagram name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name property veto exception  end_name  end_type  begin_name pve  end_name  end_decl  end_param  end_parameter_list  begin_block  end_block  end_catch  end_try  begin_expr_stmt  begin_expr  begin_call  begin_name constructor init  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment construct a new argo uml diagram this is the preferred form of the constructor if you don t know the name yet make one up because that s what the super classes constructors are going to do anyway param name the name of the new diagram param graph model graph model to associate with diagram param layer layer to associate with diagram use new layer perspective name graph model if you need a default end_comment begin_specifier  end_specifier  begin_name argo diagram impl  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name graph model  end_name  end_type  begin_name graph model  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name layer perspective  end_name  end_type  begin_name layer  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name super  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name graph model  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name layer  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo do we really need to do this carried over from old behavior  end_comment  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name set name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name property veto exception  end_name  end_type  begin_name pve  end_name  end_decl  end_param  end_parameter_list  begin_block  end_block  end_catch  end_try  begin_expr_stmt  begin_expr  begin_call  begin_name constructor init  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name update layout  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name uml change event  end_name  end_type  begin_name event  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name update layout  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name event  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name event  end_name  begin_operator  end_operator  begin_name add association event  end_name  begin_operator  end_operator  begin_name event  end_name  begin_operator  end_operator  begin_name attribute change event  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment todo we need to be more specific here about what to build  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name rendering changed  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo is this really needed  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name damage  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name drag handle  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name mx  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name my  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name an x  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name an y  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name handle  end_name  end_type  begin_name hand  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name drag handle  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name mx  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name my  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name an x  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name an y  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name hand  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment the next 4 lines fix the 2 nd half of issue 5638 is there no better way  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name editor  end_name  end_type  begin_name cur editor  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name globals  end_name  begin_operator  end_operator  begin_name cur editor  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name mode manager  end_name  end_type  begin_name mode manager  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name cur editor  end_name  begin_operator  end_operator  begin_name get mode manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name mode  end_name  end_type  begin_name mode  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name mode manager  end_name  begin_operator  end_operator  begin_name top  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mode  end_name  begin_operator  end_operator  begin_name set arg  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment see org argouml uml diagram ui uml diagram is relocation allowed java lang object end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is relocation allowed  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name base  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo we may return the following when the relocate has been implemented  end_comment  begin_comment if model get facade is a operation base  end_comment  begin_comment model get facade is a namespace base  end_comment  begin_comment return model get collaborations helper  end_comment  begin_comment is adding collaboration allowed base  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
begin_comment  end_commentbegin_comment contructors end_commentbegin_comment this constructor is used to build a dummy collaboration diagram so that a project will load properly deprecated for 0 28 by tfmorris use link uml activity diagram string object graph model end_comment begin_annotation  begin_name deprecated  end_name  end_annotation  begin_specifier  end_specifier  begin_name uml collaboration diagram  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name set name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get new diagram name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name property veto exception  end_name  end_type  begin_name pve  end_name  end_decl  end_param  end_parameter_list  begin_block  end_block  end_catch  end_try  begin_comment todo all super constrcutors should take a graph model  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name set graph model  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name create graph model  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment the constructor param collaboration the collaboration aka namespace for the diagram deprecated for 0 28 by tfmorris use link uml activity diagram string object graph model end_comment begin_annotation  begin_name deprecated  end_name  end_annotation  begin_specifier  end_specifier  begin_name uml collaboration diagram  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name collaboration  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name this  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set namespace  end_name  begin_argument_list  begin_argument  begin_expr  begin_name collaboration  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment see java awt event mouse listener mouse clicked java awt event mouse event end_comment begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name mouse clicked  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name mouse event  end_name  end_type  begin_name me  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name mouse clicked  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name me  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo what is this needed for tfm  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name set line color  end_name  begin_argument_list  begin_argument  begin_expr  begin_name line color  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment constructor deprecated for 0 28 by tfmorris use link uml activity diagram string object graph model end_comment begin_annotation  begin_name deprecated  end_name  end_annotation  begin_specifier  end_specifier  begin_name uml deployment diagram  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name set name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get new diagram name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name property veto exception  end_name  end_type  begin_name pve  end_name  end_decl  end_param  end_parameter_list  begin_block  end_block  end_catch  end_try  begin_comment todo all super constrcutors should take a graph model  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name set graph model  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name create graph model  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment param namespace the namespace for the new diagram deprecated for 0 28 by tfmorris use link uml activity diagram string object graph model end_comment begin_annotation  begin_name deprecated  end_name  end_annotation  begin_specifier  end_specifier  begin_name uml deployment diagram  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name namespace  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name this  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set namespace  end_name  begin_argument_list  begin_argument  begin_expr  begin_name namespace  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment called after the diagram font gets changed p todo do we need to do anything here see java beans property change listener property change java beans property change event end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name property change  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name property change event  end_name  end_type  begin_name pce  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name info  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name pce  end_name  begin_operator  end_operator  begin_name get old value  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name pce  end_name  begin_operator  end_operator  begin_name get new value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name argo event pump  end_name  begin_operator  end_operator  begin_name fire event  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name argo diagram appearance event  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name argo event types  end_name  begin_operator  end_operator  begin_name diagram font changed  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name pce  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment gets font name if it doesn t exist in configuration it creates new entries in configuration for appearance todo why create in a getter return the name of the configured font end_comment begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name get configured font name  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name font name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name configuration  end_name  begin_operator  end_operator  begin_name get string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name diagram appearance  end_name  begin_operator  end_operator  begin_name key font name  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name font name  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name font  end_name  end_type  begin_name f  end_name  begin_init  begin_expr  begin_call  begin_name get standard font  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name font name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name f  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name configuration  end_name  begin_operator  end_operator  begin_name set string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name diagram appearance  end_name  begin_operator  end_operator  begin_name key font name  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name f  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name configuration  end_name  begin_operator  end_operator  begin_name set integer  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name diagram appearance  end_name  begin_operator  end_operator  begin_name key font size  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name f  end_name  begin_operator  end_operator  begin_name get size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_name font name  end_name  end_expr  end_return  end_block 
begin_comment the constructor todo why does this method not handle all settings key default shadow width is missing end_comment begin_specifier  end_specifier  begin_name diagram appearance  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name configuration  end_name  begin_operator  end_operator  begin_name add listener  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name diagram appearance  end_name  begin_operator  end_operator  begin_name key font name  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name configuration  end_name  begin_operator  end_operator  begin_name add listener  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name diagram appearance  end_name  begin_operator  end_operator  begin_name key font size  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name configuration  end_name  begin_operator  end_operator  begin_name add listener  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name key show bold names  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name configuration  end_name  begin_operator  end_operator  begin_name add listener  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name key hide bidirectional arrows  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment factory method to create a new instance of an argo diagram param type the class of rendering diagram to create param namespace the namespace that in directly owns the elements on the diagram param machine the state machine for the diagram only statemachine activitygraph return the newly instantiated class diagram deprecated for 0 27 3 by tfmorris use link create diagram type object diagram settings the owner argument should be the machine for a state diagram or activity diagram which can figure out the correct namespace from that and the namespace for all others end_comment begin_type  begin_annotation  begin_name deprecated  end_name  end_annotation  begin_specifier  end_specifier  begin_name argo diagram  end_name  end_type  begin_name create diagram  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name diagram type  end_name  end_type  begin_name type  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name namespace  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name machine  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name diagram settings  end_name  end_type  begin_name settings  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name project manager  end_name  begin_operator  end_operator  begin_name get manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get current project  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get project settings  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get default diagram settings  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_call  begin_name create internal  end_name  begin_argument_list  begin_argument  begin_expr  begin_name type  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name namespace  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name machine  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name settings  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment factory method to create a new instance of an argo diagram param type the class of rendering diagram to create param namespace the namespace that in directly owns the elements on the diagram param machine the state machine for the diagram only statemachine activitygraph return the newly instantiated class diagram deprecated for 0 25 4 by tfmorris use link create diagram type object diagram settings the owner argument should be the machine for a state diagram or activity diagram which can figure out the correct namespace from that and the namespace for all others end_comment begin_type  begin_annotation  begin_name deprecated  end_name  end_annotation  begin_specifier  end_specifier  begin_name argo diagram  end_name  end_type  begin_name create diagram  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name class  end_name  end_type  begin_name type  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name namespace  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name machine  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name argo diagram  end_name  end_type  begin_name diagram  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name class  end_name  end_type  begin_name di type  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo convert all to use standard factory registration  end_comment  begin_if  begin_condition  begin_expr  begin_name type  end_name  begin_operator  end_operator  begin_name  begin_name uml class diagram  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name diagram  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name uml class diagram  end_name  begin_argument_list  begin_argument  begin_expr  begin_name namespace  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name di type  end_name  begin_operator  end_operator  begin_name  begin_name class diagram  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name type  end_name  begin_operator  end_operator  begin_name  begin_name uml use case diagram  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name diagram  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name uml use case diagram  end_name  begin_argument_list  begin_argument  begin_expr  begin_name namespace  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name di type  end_name  begin_operator  end_operator  begin_name  begin_name use case diagram  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name type  end_name  begin_operator  end_operator  begin_name  begin_name uml state diagram  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name diagram  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name uml state diagram  end_name  begin_argument_list  begin_argument  begin_expr  begin_name namespace  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name machine  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name di type  end_name  begin_operator  end_operator  begin_name  begin_name state diagram  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name type  end_name  begin_operator  end_operator  begin_name  begin_name uml deployment diagram  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name diagram  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name uml deployment diagram  end_name  begin_argument_list  begin_argument  begin_expr  begin_name namespace  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name di type  end_name  begin_operator  end_operator  begin_name  begin_name deployment diagram  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name type  end_name  begin_operator  end_operator  begin_name  begin_name uml collaboration diagram  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name diagram  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name uml collaboration diagram  end_name  begin_argument_list  begin_argument  begin_expr  begin_name namespace  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name di type  end_name  begin_operator  end_operator  begin_name  begin_name collaboration diagram  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name type  end_name  begin_operator  end_operator  begin_name  begin_name uml activity diagram  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name diagram  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name uml activity diagram  end_name  begin_argument_list  begin_argument  begin_expr  begin_name namespace  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name machine  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name di type  end_name  begin_operator  end_operator  begin_name  begin_name activity diagram  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  begin_if  begin_condition  begin_expr  begin_name diagram  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get diagram interchange model  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment todo this is never executed as ludos di work was never  end_comment  begin_comment finished  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name diagram  end_name  begin_operator  end_operator  begin_name get graph model  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add graph event listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name graph change adapter  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment the diagram are always owned by the model in this first implementation  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name di diagram  end_name  end_type  begin_name dd  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name graph change adapter  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create diagram  end_name  begin_argument_list  begin_argument  begin_expr  begin_name di type  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name namespace  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name uml mutable graph support  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name diagram  end_name  begin_operator  end_operator  begin_name get graph model  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name set di diagram  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dd  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_name diagram  end_name  end_expr  end_return  end_block 
begin_comment return returns the default stereotype view todo enumeration here end_comment begin_type  begin_specifier  end_specifier  begin_name stereotype style  end_name  end_type  begin_name get default stereotype view  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name default stereotype view  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name parent  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name parent  end_name  begin_operator  end_operator  begin_name get default stereotype view  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_return  begin_expr  begin_name  begin_name stereotype style  end_name  begin_operator  end_operator  begin_name textual  end_name  end_name  end_expr  end_return  end_block  end_else  end_if  end_block  end_then  end_if  begin_return  begin_expr  begin_name default stereotype view  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name do undoable  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name memento  end_name  end_type  begin_name memento  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo undo should be managed externally or we should be given  end_comment  begin_comment an undo manager to use the project s rather than using a global one  end_comment  begin_comment if diagram undo manager get instance is generate mementos  end_comment  begin_comment diagram undo manager get instance add memento memento  end_comment  begin_comment   end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name memento  end_name  begin_operator  end_operator  begin_name redo  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo mark diagram project as dirty  end_comment  end_block 
begin_comment  end_commentbegin_comment cmd api end_commentbegin_comment actually instanciate the net node and fig node objects and set the global next mode to mode place todo should call super reduce code volume see org tigris gef graph graph factory make node end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name make node  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name new node  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name make node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name kind  end_name  begin_init  begin_expr  begin_call  begin_name get arg  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set kind  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new node  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name kind  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name new node  end_name  end_expr  end_return  end_block 
begin_comment to resize only when a new concurrent region is added changing the height todo probably shouldn t exist as this class should be listening for added concurrent regions and call this internally itself param h the new height end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set composite state height  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name h  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name get name fig  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name rectangle  end_name  end_type  begin_name old bounds  end_name  begin_init  begin_expr  begin_call  begin_name get bounds  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name dimension  end_name  end_type  begin_name name dim  end_name  begin_init  begin_expr  begin_call  begin_name get name fig  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get minimum size  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name x  end_name  begin_init  begin_expr  begin_name  begin_name old bounds  end_name  begin_operator  end_operator  begin_name x  end_name  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name y  end_name  begin_init  begin_expr  begin_name  begin_name old bounds  end_name  begin_operator  end_operator  begin_name y  end_name  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name w  end_name  begin_init  begin_expr  begin_name  begin_name old bounds  end_name  begin_operator  end_operator  begin_name width  end_name  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get internal  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set bounds  end_name  begin_argument_list  begin_argument  begin_expr  begin_name x  end_name  begin_operator  end_operator  begin_name margin  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name y  end_name  begin_operator  end_operator  begin_name  begin_name name dim  end_name  begin_operator  end_operator  begin_name height  end_name  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name w  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name margin  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name h  end_name  begin_operator  end_operator  begin_name  begin_name name dim  end_name  begin_operator  end_operator  begin_name height  end_name  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get big port  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set bounds  end_name  begin_argument_list  begin_argument  begin_expr  begin_name x  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name y  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name w  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name h  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cover  end_name  begin_operator  end_operator  begin_name set bounds  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name x  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name y  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name w  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name h  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name calc bounds  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment x x y y w w h h  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name update edges  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name fire prop change  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name old bounds  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get bounds  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name model changed  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name property change event  end_name  end_type  begin_name mee  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name model changed  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name mee  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo do we really need to be listening for both of these events  end_comment  begin_if  begin_condition  begin_expr  begin_name mee  end_name  begin_operator  end_operator  begin_name association change event  end_name  begin_operator  end_operator  begin_name mee  end_name  begin_operator  end_operator  begin_name attribute change event  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment todo we definitely don t want to react to addition and  end_comment  begin_comment removal of transitions can t we be more specific when  end_comment  begin_comment we register ourselves as a listener  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name mee  end_name  begin_operator  end_operator  begin_name get property name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name mee  end_name  begin_operator  end_operator  begin_name get property name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name rendering changed  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name damage  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block 
begin_comment return a list of gravity points around circle which is enclosed in the bounding box convenience method for use by fig initial state and fig final state todo as this method is not required by all sub classes it would seem sensible to extend fig state vertex with fig circle vertex and only have the relevant concrete figs extend that and gain this functionality return a list of points end_comment begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name point  end_name  end_argument  end_argument_list  end_name  end_type  begin_name get circle gravity points  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name point  end_name  end_argument  end_argument_list  end_name  end_type  begin_name ret  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name point  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name cx  end_name  begin_init  begin_expr  begin_call  begin_name get big port  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get center  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name x  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name cy  end_name  begin_init  begin_expr  begin_call  begin_name get big port  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get center  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name y  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name double  end_name  end_type  begin_name radius  end_name  begin_init  begin_expr  begin_call  begin_name get big port  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get width  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name double  end_name  end_type  begin_name pi 2  end_name  begin_init  begin_expr  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name pi  end_name  end_name  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name circle points  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name x  end_name  begin_init  begin_expr  begin_call  begin_name int  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cx  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name cos  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name pi 2  end_name  begin_operator  end_operator  begin_name i  end_name  begin_operator  end_operator  begin_name circle points  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_name radius  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name y  end_name  begin_init  begin_expr  begin_call  begin_name int  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cy  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name sin  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name pi 2  end_name  begin_operator  end_operator  begin_name i  end_name  begin_operator  end_operator  begin_name circle points  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_name radius  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ret  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name point  end_name  begin_argument_list  begin_argument  begin_expr  begin_name x  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name y  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_return  begin_expr  begin_name ret  end_name  end_expr  end_return  end_block 
begin_comment see org argouml uml diagram ui uml diagram is relocation allowed java lang object end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is relocation allowed  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name base  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  end_expr  end_return  begin_comment todo we may return the following when the relocate has been implemented  end_comment  begin_comment model get state machines helper  end_comment  begin_comment is adding statemachine allowed base  end_comment  end_block 
begin_comment todo we may return the following when the relocate has been implemented end_commentbegin_comment model get state machines helper end_commentbegin_comment is adding statemachine allowed base end_comment begin_type  begin_annotation  begin_name suppress warnings  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_name collection  end_name  end_type  begin_name get relocation candidates  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name root  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo we may return something useful when the relocate has been implemented like all state machines that are not activity graphs  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name c  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name hash set  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get owner  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name c  end_name  end_expr  end_return  end_block 
begin_comment reroutes the connection to the old node to be connected to the new node delegates to reroute xxx for each of the 4 possible edges in a class diagram association dependency generalization link todo this should probably be in superclass many figs can be on several diagram types param new node this is the new node that one of the ends is dragged to param old node this is the existing node that is already connected param edge this is the edge that is being dragged rerouted param is source tells us which end is being rerouted end_comment begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name change connected node  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name new node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name old node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name edge  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name is source  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a association  end_name  begin_argument_list  begin_argument  begin_expr  begin_name edge  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name reroute association  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new node  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name old node  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name edge  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name is source  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a generalization  end_name  begin_argument_list  begin_argument  begin_expr  begin_name edge  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name reroute generalization  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new node  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name old node  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name edge  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name is source  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a dependency  end_name  begin_argument_list  begin_argument  begin_expr  begin_name edge  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name reroute dependency  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new node  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name old node  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name edge  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name is source  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a link  end_name  begin_argument_list  begin_argument  begin_expr  begin_name edge  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name reroute link  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new node  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name old node  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name edge  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name is source  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_block 
begin_comment helper method for change connected node todo this should probably be in superclass associations can be on several diagram types end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name reroute association  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name new node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name old node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name edge  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name is source  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment check param types only some connections are legal uml connections  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a classifier  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new node  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a classifier  end_name  begin_argument_list  begin_argument  begin_expr  begin_name old node  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_comment can t have a connection between 2 interfaces  end_comment  begin_comment get the other end type  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name other node  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name is source  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name other node  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get destination  end_name  begin_argument_list  begin_argument  begin_expr  begin_name edge  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name other node  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get source  end_name  begin_argument_list  begin_argument  begin_expr  begin_name edge  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a interface  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new node  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a interface  end_name  begin_argument_list  begin_argument  begin_expr  begin_name other node  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_comment cast the params  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name edge assoc  end_name  begin_init  begin_expr  begin_name edge  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name the end  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name the other end  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name connections  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get connections  end_name  begin_argument_list  begin_argument  begin_expr  begin_name edge assoc  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name iter  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name connections  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name is source  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment rerouting the source  end_comment  begin_expr_stmt  begin_expr  begin_name the end  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name iter  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name the other end  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name iter  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_comment rerouting the destination  end_comment  begin_expr_stmt  begin_expr  begin_name the other end  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name iter  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name the end  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name iter  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_comment set the new end type  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set type  end_name  begin_argument_list  begin_argument  begin_expr  begin_name the end  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name new node  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment add an object to layout param obj represents the object to layout end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name add  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name layouted object  end_name  end_type  begin_name obj  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo check for duplicates is this possible  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name layouted objects  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name obj  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name obj  end_name  begin_operator  end_operator  begin_name classdiagram node  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name layouted class nodes  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name classdiagram node  end_name  begin_operator  end_operator  begin_name obj  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name obj  end_name  begin_operator  end_operator  begin_name classdiagram edge  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name layouted edges  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name classdiagram edge  end_name  begin_operator  end_operator  begin_name obj  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_block 
begin_comment center parents over their children working from bottom to top end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name center parents  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name node rows  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_for  begin_init  begin_decl  begin_type  begin_name classdiagram node  end_name  end_type  begin_name node  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name node rows  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name classdiagram node  end_name  end_argument  end_argument_list  end_name  end_type  begin_name children  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get down nodes  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name children  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name set location  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name point  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name x center  end_name  begin_argument_list  begin_argument  begin_expr  begin_name children  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name width  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get location  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name y  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  begin_comment todo make another pass to deal with overlaps  end_comment  end_block  end_for  end_block 
begin_comment todo make another pass to deal with overlaps end_commentbegin_comment compute the horizontal center of a list of nodes param nodes the list of nodes return the computed x coordinate end_comment begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name x center  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name classdiagram node  end_name  end_argument  end_argument_list  end_name  end_type  begin_name nodes  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name left  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name right  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name classdiagram node  end_name  end_type  begin_name node  end_name  begin_range  begin_expr  begin_name nodes  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name x  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get location  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name x  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name left  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name min  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name left  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name x  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name right  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name max  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name right  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name x  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name width  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_return  begin_expr  begin_operator  end_operator  begin_name right  end_name  begin_operator  end_operator  begin_name left  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_return  end_block 
begin_comment see org argouml uml diagram ui fig node model element rendering changed end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name rendering changed  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name rendering changed  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo we should be able to just call rendering changed on the child  end_comment  begin_comment figs here instead of doing an update operations  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name update compartment  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get operation  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo taken from fig classifier box with attribute to handle events  end_comment  begin_comment on an attribute all this event handling should eventually be moved  end_comment  begin_comment to the compartment fig for attributes  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name is compartment visible  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get attribute  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment todo we shouldn t actually have to do all this work  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name update compartment  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get attribute  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block 
begin_comment we are getting events we don t want filter them out todo can we instruct the model event pump not to send these in the first place see defect 5095 param event the event end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name property change  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name property change event  end_name  end_type  begin_name event  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name event  end_name  begin_operator  end_operator  begin_name get property name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a generalization  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name event  end_name  begin_operator  end_operator  begin_name get old value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name event  end_name  begin_operator  end_operator  begin_name get property name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a association end  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name event  end_name  begin_operator  end_operator  begin_name get old value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name event  end_name  begin_operator  end_operator  begin_name get property name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a usage  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name event  end_name  begin_operator  end_operator  begin_name get old value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name event  end_name  begin_operator  end_operator  begin_name get property name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a abstraction  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name event  end_name  begin_operator  end_operator  begin_name get old value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  end_else  end_if  end_else  end_if  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name property change  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name event  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment updates a compartment box called from update layout if there is a model event effecting the attributes operations and from rendering changed in all cases todo the above statement means that the entire contents of the compartments are being rebuilt whenever an add remove of an attribute operation or a reception is detected it would be better to have compartments listen for add and remove events and make minimum change rather than entirely rebuild remark mvw this is a bit exaggerated since the populate method is already heavily optimized end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name update compartment  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name meta type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name fig compartment  end_name  end_type  begin_name fc  end_name  begin_init  begin_expr  begin_call  begin_name get compartment  end_name  begin_argument_list  begin_argument  begin_expr  begin_name meta type  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name fc  end_name  begin_operator  end_operator  begin_name is visible  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name fc  end_name  begin_operator  end_operator  begin_name populate  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo make set bounds calc bounds and update bounds consistent  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name set bounds  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get bounds  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment get the default text for this figure return the default text for this figure end_comment begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name place string  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name place string  end_name  begin_init  begin_expr  begin_call  begin_name retrieve body  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name place string  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment todo i 18 n  end_comment  begin_expr_stmt  begin_expr  begin_name place string  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_name place string  end_name  end_expr  end_return  end_block 
begin_comment todo this is the same as in parent remove see org argouml uml diagram ui fig node model element update bounds end_comment begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name update bounds  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name rectangle  end_name  end_type  begin_name bbox  end_name  begin_init  begin_expr  begin_call  begin_name get bounds  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name dimension  end_name  end_type  begin_name min size  end_name  begin_init  begin_expr  begin_call  begin_name get minimum size  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name bbox  end_name  begin_operator  end_operator  begin_name width  end_name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name max  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name bbox  end_name  begin_operator  end_operator  begin_name width  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name min size  end_name  begin_operator  end_operator  begin_name width  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name bbox  end_name  begin_operator  end_operator  begin_name height  end_name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name max  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name bbox  end_name  begin_operator  end_operator  begin_name height  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name min size  end_name  begin_operator  end_operator  begin_name height  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set bounds  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name bbox  end_name  begin_operator  end_operator  begin_name x  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name bbox  end_name  begin_operator  end_operator  begin_name y  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name bbox  end_name  begin_operator  end_operator  begin_name width  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name bbox  end_name  begin_operator  end_operator  begin_name height  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment see org argouml uml diagram ui fig single line text property change java beans property change event end_comment begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name property change  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name property change event  end_name  end_type  begin_name pce  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name property change  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name pce  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name event name  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name pce  end_name  begin_operator  end_operator  begin_name get property name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment todo this needs to be modified for uml 2 x  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name update owner scope  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get scope kind  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get classifier  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name pce  end_name  begin_operator  end_operator  begin_name get new value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block 
begin_comment used by pgml tee return the class name and bounds together with compartment visibility todo is this not duplicate with the parent end_comment begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name class name and bounds  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name class name and bounds  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name is compartment visible  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get operation  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment todo mvw would it not be better if this code would go in start text editor not overruling mouse clicked but we made this fig not editable to stop it from reacting on key presses anyhow this is a hack abusing a fig text gef does not really support double clicking on a fig to trigger some action end_comment begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name mouse clicked  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name mouse event  end_name  end_type  begin_name me  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name ls default name  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo this code appears to be designed to jump to the diagram  end_comment  begin_comment containing the contents of the package that was double clicked  end_comment  begin_comment but it looks like it s always searching for the name main  end_comment  begin_comment instead of the package name  end_comment  begin_comment todo but in any case it should be delegating this work to  end_comment  begin_comment to something that knows about the diagrams and they contents tfm  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name me  end_name  begin_operator  end_operator  begin_name get click count  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name l pkg  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name fig package  end_name  begin_operator  end_operator  begin_name this  end_name  begin_operator  end_operator  begin_name get owner  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name l pkg  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name l ns  end_name  begin_init  begin_expr  begin_name l pkg  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name project  end_name  end_type  begin_name l p  end_name  begin_init  begin_expr  begin_call  begin_name get project  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name argo diagram  end_name  end_argument  end_argument_list  end_name  end_type  begin_name diags  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name l p  end_name  begin_operator  end_operator  begin_name get diagram list  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name argo diagram  end_name  end_type  begin_name l first  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name argo diagram  end_name  end_type  begin_name l diagram  end_name  begin_range  begin_expr  begin_name diags  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name l diagram ns  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name l diagram  end_name  begin_operator  end_operator  begin_name get namespace  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name l ns  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name l diagram ns  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name l ns  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name l diagram ns  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment save first  end_comment  begin_if  begin_condition  begin_expr  begin_name l first  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name l first  end_name  begin_operator  end_operator  begin_name l diagram  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name l diagram  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name l diagram  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name starts with  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ls default name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name me  end_name  begin_operator  end_operator  begin_name consume  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name mouse clicked  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name me  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name target manager  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set target  end_name  begin_argument_list  begin_argument  begin_expr  begin_name l diagram  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_for  begin_comment while  end_comment  begin_comment if we get here then we didn t get the default diagram  end_comment  begin_if  begin_condition  begin_expr  begin_name l first  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name me  end_name  begin_operator  end_operator  begin_name consume  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name mouse clicked  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name me  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name target manager  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set target  end_name  begin_argument_list  begin_argument  begin_expr  begin_name l first  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_then  end_if  begin_comment try to create a new class diagram  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name me  end_name  begin_operator  end_operator  begin_name consume  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name mouse clicked  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name me  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name create class diagram  end_name  begin_argument_list  begin_argument  begin_expr  begin_name l ns  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name ls default name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name l p  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name exception  end_name  end_type  begin_name ex  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ex  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  end_try  begin_return  end_return  end_block  end_then  end_if  begin_comment if package  end_comment  end_block  end_then  end_if  begin_comment if doubleclicks  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name mouse clicked  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name me  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name vector  end_name  end_type  begin_name get pop up actions  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name mouse event  end_name  end_type  begin_name me  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name vector  end_name  end_type  begin_name pop up actions  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name get pop up actions  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name me  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo do we have anything to add here  end_comment  begin_return  begin_expr  begin_name pop up actions  end_name  end_expr  end_return  end_block 
begin_comment see java awt event action listener action performed java awt event action event end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name action performed  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name action event  end_name  end_type  begin_name ae  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name action performed  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ae  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_try  begin_block  begin_comment here the actions to divide a region  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name fig  end_name  end_type  begin_name f  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name target manager  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get fig target  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a concurrent region  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name f  end_name  begin_operator  end_operator  begin_name get owner  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name f  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name f  end_name  begin_operator  end_operator  begin_name get enclosing fig  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name fig composite state  end_name  end_type  begin_name fig composite state  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name fig composite state  end_name  begin_operator  end_operator  begin_name f  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name fig concurrent region  end_name  end_argument  end_argument_list  end_name  end_type  begin_name region figs  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name fig concurrent region  end_name  end_argument  end_argument_list  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name f  end_name  begin_operator  end_operator  begin_name get enclosed figs  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name clone  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name uml composite state  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name fig composite state  end_name  begin_operator  end_operator  begin_name get owner  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name editor  end_name  end_type  begin_name editor  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name globals  end_name  begin_operator  end_operator  begin_name cur editor  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name graph model  end_name  end_type  begin_name gm  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name editor  end_name  begin_operator  end_operator  begin_name get graph model  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name layer diagram  end_name  end_type  begin_name lay  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name layer diagram  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name editor  end_name  begin_operator  end_operator  begin_name get layer manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get active layer  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name rectangle  end_name  end_type  begin_name r name  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name fig node model element  end_name  begin_operator  end_operator  begin_name f  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get name fig  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get bounds  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name rectangle  end_name  end_type  begin_name r fig  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name f  end_name  begin_operator  end_operator  begin_name get bounds  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name gm  end_name  begin_operator  end_operator  begin_name mutable graph model  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name state diagram graph model  end_name  end_type  begin_name mgm  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name state diagram graph model  end_name  begin_operator  end_operator  begin_name gm  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name state machines factory  end_name  end_type  begin_name factory  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get state machines factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is concurrent  end_name  begin_argument_list  begin_argument  begin_expr  begin_name uml composite state  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name uml region 1  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name factory  end_name  begin_operator  end_operator  begin_name build composite state  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name uml composite state  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name rectangle  end_name  end_type  begin_name bounds  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name rectangle  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name f  end_name  begin_operator  end_operator  begin_name get x  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name  begin_name fig concurrent region  end_name  begin_operator  end_operator  begin_name inset horz  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name f  end_name  begin_operator  end_operator  begin_name get y  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name  begin_name r name  end_name  begin_operator  end_operator  begin_name height  end_name  end_name  begin_operator  end_operator  begin_name  begin_name fig concurrent region  end_name  begin_operator  end_operator  begin_name inset vert  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name r fig  end_name  begin_operator  end_operator  begin_name width  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name fig concurrent region  end_name  begin_operator  end_operator  begin_name inset horz  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name r fig  end_name  begin_operator  end_operator  begin_name height  end_name  end_name  begin_operator  end_operator  begin_name  begin_name r name  end_name  begin_operator  end_operator  begin_name height  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name fig concurrent region  end_name  begin_operator  end_operator  begin_name inset vert  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name diagram settings  end_name  end_type  begin_name settings  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name fig composite state  end_name  begin_operator  end_operator  begin_name get settings  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name fig concurrent region  end_name  end_type  begin_name first region fig  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name fig concurrent region  end_name  begin_argument_list  begin_argument  begin_expr  begin_name uml region 1  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name bounds  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name settings  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment the 1 st region has an invisible divider line the box is always invisible  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name first region fig  end_name  begin_operator  end_operator  begin_name set line color  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name argo fig  end_name  begin_operator  end_operator  begin_name invisible line color  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name first region fig  end_name  begin_operator  end_operator  begin_name set enclosing fig  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name fig composite state  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name first region fig  end_name  begin_operator  end_operator  begin_name set layer  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name lay  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name lay  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name first region fig  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name mgm  end_name  begin_operator  end_operator  begin_name can add node  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name uml region 1  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mgm  end_name  begin_operator  end_operator  begin_name get nodes  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name uml region 1  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mgm  end_name  begin_operator  end_operator  begin_name fire node added  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name uml region 1  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment throw out any previous elements that were enclosed but are not a concurrent region let s move them onto the first region  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name region figs  end_name  begin_operator  end_operator  begin_name is empty  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name region figs  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name fig state vertex  end_name  end_type  begin_name cur fig  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name region figs  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cur fig  end_name  begin_operator  end_operator  begin_name set enclosing fig  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name first region fig  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name first region fig  end_name  begin_operator  end_operator  begin_name add enclosed fig  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cur fig  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cur fig  end_name  begin_operator  end_operator  begin_name redraw enclosed figs  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  end_block  end_then  end_if  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name uml region 2  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name factory  end_name  begin_operator  end_operator  begin_name build composite state  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name uml composite state  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo what are these magic numbers  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name rectangle  end_name  end_type  begin_name bounds  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name rectangle  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name f  end_name  begin_operator  end_operator  begin_name get x  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name  begin_name fig concurrent region  end_name  begin_operator  end_operator  begin_name inset horz  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name f  end_name  begin_operator  end_operator  begin_name get y  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name  begin_name r fig  end_name  begin_operator  end_operator  begin_name height  end_name  end_name  begin_operator  end_operator  end_expr  end_argument  begin_comment linewidth  end_comment  begin_argument  begin_expr  begin_name  begin_name r fig  end_name  begin_operator  end_operator  begin_name width  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name fig concurrent region  end_name  begin_operator  end_operator  begin_name inset horz  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name diagram settings  end_name  end_type  begin_name settings  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name fig composite state  end_name  begin_operator  end_operator  begin_name get settings  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name fig concurrent region  end_name  end_type  begin_name new region fig  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name fig concurrent region  end_name  begin_argument_list  begin_argument  begin_expr  begin_name uml region 2  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name bounds  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name settings  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment the divider line should be visible so no need to change its color  end_comment  begin_comment make the composite state 1 region higher  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name fig composite state  end_name  begin_operator  end_operator  begin_name set composite state height  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name r fig  end_name  begin_operator  end_operator  begin_name height  end_name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name new region fig  end_name  begin_operator  end_operator  begin_name get initial height  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name new region fig  end_name  begin_operator  end_operator  begin_name set enclosing fig  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name fig composite state  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name fig composite state  end_name  begin_operator  end_operator  begin_name add enclosed fig  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new region fig  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name new region fig  end_name  begin_operator  end_operator  begin_name set layer  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name lay  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name lay  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new region fig  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name editor  end_name  begin_operator  end_operator  begin_name get selection manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name select  end_name  begin_argument_list  begin_argument  begin_expr  begin_name f  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name mgm  end_name  begin_operator  end_operator  begin_name can add node  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name uml region 2  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mgm  end_name  begin_operator  end_operator  begin_name get nodes  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name uml region 2  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mgm  end_name  begin_operator  end_operator  begin_name fire node added  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name uml region 2  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment todo verify this iiuc then this triggers the compount state fig to draw itself correctly hence there was a reason to wait this long to make the state concurrent  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get state machines helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set concurrent  end_name  begin_argument_list  begin_argument  begin_expr  begin_name uml composite state  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name exception  end_name  end_type  begin_name ex  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name ex  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  end_try  end_block 
begin_comment calculate the position of the comment based on the 1 st target only param diagram the diagram that we are working in param first target the object element of the first found comment param note fig the fig for the comment return the position where it should be placed end_comment begin_type  begin_specifier  end_specifier  begin_name point  end_name  end_type  begin_name calculate location  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name argo diagram  end_name  end_type  begin_name diagram  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name first target  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name fig  end_name  end_type  begin_name note fig  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name point  end_name  end_type  begin_name point  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name point  end_name  begin_argument_list  begin_argument  begin_expr  begin_name default pos  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name default pos  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name first target  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name point  end_name  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name fig  end_name  end_type  begin_name elem fig  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name diagram  end_name  begin_operator  end_operator  begin_name presentation for  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name first target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name elem fig  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name point  end_name  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name elem fig  end_name  begin_operator  end_operator  begin_name fig edge model element  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name elem fig  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name fig edge model element  end_name  begin_operator  end_operator  begin_name elem fig  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get edge port  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name elem fig  end_name  begin_operator  end_operator  begin_name fig node  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment todo we need a better algorithm  end_comment  begin_expr_stmt  begin_expr  begin_name  begin_name point  end_name  begin_operator  end_operator  begin_name x  end_name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name elem fig  end_name  begin_operator  end_operator  begin_name get x  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name elem fig  end_name  begin_operator  end_operator  begin_name get width  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name distance  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name point  end_name  begin_operator  end_operator  begin_name y  end_name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name elem fig  end_name  begin_operator  end_operator  begin_name get y  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo this can t depend on project browser alternate below  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name rectangle  end_name  end_type  begin_name drawing area  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name project browser  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get editor pane  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get bounds  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment perhaps something like the following would work instead  end_comment  begin_comment rectangle drawing area  end_comment  begin_comment globals cur editor get j component get visible rect  end_comment  begin_if  begin_condition  begin_expr  begin_name  begin_name point  end_name  begin_operator  end_operator  begin_name x  end_name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name note fig  end_name  begin_operator  end_operator  begin_name get width  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name drawing area  end_name  begin_operator  end_operator  begin_name get x  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name  begin_name point  end_name  begin_operator  end_operator  begin_name x  end_name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name elem fig  end_name  begin_operator  end_operator  begin_name get x  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name note fig  end_name  begin_operator  end_operator  begin_name get width  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name distance  end_name  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name  begin_name point  end_name  begin_operator  end_operator  begin_name x  end_name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name point  end_name  end_expr  end_return  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name  begin_name point  end_name  begin_operator  end_operator  begin_name x  end_name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name elem fig  end_name  begin_operator  end_operator  begin_name get x  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name point  end_name  begin_operator  end_operator  begin_name y  end_name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name elem fig  end_name  begin_operator  end_operator  begin_name get y  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name note fig  end_name  begin_operator  end_operator  begin_name get height  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name distance  end_name  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name  begin_name point  end_name  begin_operator  end_operator  begin_name y  end_name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name point  end_name  end_expr  end_return  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name  begin_name point  end_name  begin_operator  end_operator  begin_name y  end_name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name elem fig  end_name  begin_operator  end_operator  begin_name get y  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name elem fig  end_name  begin_operator  end_operator  begin_name get height  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name distance  end_name  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name  begin_name point  end_name  begin_operator  end_operator  begin_name y  end_name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name note fig  end_name  begin_operator  end_operator  begin_name get height  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name drawing area  end_name  begin_operator  end_operator  begin_name get height  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name point  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  end_if  begin_return  begin_expr  begin_name point  end_name  end_expr  end_return  end_block 
begin_comment see java awt datatransfer transferable is data flavor supported java awt datatransfer data flavor end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is data flavor supported  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name data flavor  end_name  end_type  begin_name par flavor  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment hack in order to be able to compile in java 1 3  end_comment  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name par flavor  end_name  begin_operator  end_operator  begin_name get mime type  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name data flavor  end_name  begin_operator  end_operator  begin_name image flavor  end_name  begin_operator  end_operator  begin_name get mime type  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name par flavor  end_name  begin_operator  end_operator  begin_name get human presentable name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name data flavor  end_name  begin_operator  end_operator  begin_name image flavor  end_name  begin_operator  end_operator  begin_name get human presentable name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_return  end_block 
begin_comment the constructor param args arguments end_comment begin_specifier  end_specifier  begin_name action set mode  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name properties  end_name  end_type  begin_name args  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name super  end_name  begin_argument_list  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment the constructor param mode class the next global editor mode end_comment begin_specifier  end_specifier  begin_name action set mode  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name class  end_name  end_type  begin_name mode class  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name super  end_name  begin_argument_list  begin_argument  begin_expr  begin_name mode class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment the constructor param mode class the next global editor mode param name the name of the icon end_comment begin_specifier  end_specifier  begin_name action set mode  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name class  end_name  end_type  begin_name mode class  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name super  end_name  begin_argument_list  begin_argument  begin_expr  begin_name mode class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name put tool tip  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name put icon  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment the constructor param mode class the next global editor mode param name the icon name param tooltipkey the key for the tooltip text end_comment begin_specifier  end_specifier  begin_name action set mode  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name class  end_name  end_type  begin_name mode class  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name tooltipkey  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name super  end_name  begin_argument_list  begin_argument  begin_expr  begin_name mode class  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name put tool tip  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tooltipkey  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name put icon  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment the constructor param mode class the next global editor mode param sticky the global sticky mode boolean allows the user to place several nodes rapidly in succession end_comment begin_specifier  end_specifier  begin_name action set mode  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name class  end_name  end_type  begin_name mode class  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name sticky  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name super  end_name  begin_argument_list  begin_argument  begin_expr  begin_name mode class  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name sticky  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment the constructor param mode class the next global editor mode param mode args arguments for the new mode end_comment begin_specifier  end_specifier  begin_name action set mode  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name class  end_name  end_type  begin_name mode class  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name hashtable  end_name  end_type  begin_name mode args  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name super  end_name  begin_argument_list  begin_argument  begin_expr  begin_name mode class  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name mode args  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment the constructor todo the name parameter is used for the icon and for the tooltip this makes i 18 n of the tooltip impossible param mode class the next global editor mode param mode args arguments for the new mode param name the name of the command that is the tooltip text end_comment begin_specifier  end_specifier  begin_name action set mode  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name class  end_name  end_type  begin_name mode class  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name hashtable  end_name  end_type  begin_name mode args  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name super  end_name  begin_argument_list  begin_argument  begin_expr  begin_name mode class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name mode args  end_name  end_name  begin_operator  end_operator  begin_name mode args  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name put tool tip  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name put icon  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment the constructor param mode class the next global editor mode param arg the name of a new argument for the new mode param value the value of a new argument for the new mode end_comment begin_specifier  end_specifier  begin_name action set mode  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name class  end_name  end_type  begin_name mode class  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name arg  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name value  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name super  end_name  begin_argument_list  begin_argument  begin_expr  begin_name mode class  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment the constructor todo the name parameter is used for the icon and for the tooltip this makes i 18 n of the tooltip impossible param mode class the next global editor mode param arg the name of a new argument for the new mode param value the value of a new argument for the new mode param name the name of the command that is the tooltip text end_comment begin_specifier  end_specifier  begin_name action set mode  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name class  end_name  end_type  begin_name mode class  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name arg  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name value  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name super  end_name  begin_argument_list  begin_argument  begin_expr  begin_name mode class  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name put tool tip  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name put icon  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment the constructor param mode class the next global editor mode param arg the name of a new argument for the new mode param value the value of a new argument for the new mode param name the name of the command that is the tooltip text param icon the small icon for the action end_comment begin_specifier  end_specifier  begin_name action set mode  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name class  end_name  end_type  begin_name mode class  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name arg  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name value  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name image icon  end_name  end_type  begin_name icon  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name super  end_name  begin_argument_list  begin_argument  begin_expr  begin_name mode class  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name icon  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name put tool tip  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment see org tigris gef base command execute end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name execute  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name editor  end_name  end_type  begin_name ce  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name globals  end_name  begin_operator  end_operator  begin_name cur editor  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name graph model  end_name  end_type  begin_name gm  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ce  end_name  begin_operator  end_operator  begin_name get graph model  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name gm  end_name  begin_operator  end_operator  begin_name mutable graph model  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name instructions  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name mode place  end_name  end_type  begin_name place mode  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name object  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name argo diagram  end_name  end_type  begin_name active diagram  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name diagram utils  end_name  begin_operator  end_operator  begin_name get active diagram  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name active diagram  end_name  begin_operator  end_operator  begin_name uml diagram  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name uml diagram  end_name  begin_operator  end_operator  begin_name active diagram  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name does accept  end_name  begin_argument_list  begin_argument  begin_expr  begin_name object  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name instructions  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name uml diagram  end_name  begin_operator  end_operator  begin_name active diagram  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get instructions  end_name  begin_argument_list  begin_argument  begin_expr  begin_name object  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name place mode  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name uml diagram  end_name  begin_operator  end_operator  begin_name active diagram  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get mode place  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name instructions  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name place mode  end_name  begin_operator  end_operator  begin_name set add related edges  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_comment todo work here  end_comment  begin_expr_stmt  begin_expr  begin_name instructions  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name object  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to string  end_name  begin_argument_list  begin_argument  begin_expr  begin_name object  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  begin_operator  end_operator  end_block  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name place mode  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name mode place  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name instructions  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name place mode  end_name  begin_operator  end_operator  begin_name set add related edges  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name globals  end_name  begin_operator  end_operator  begin_name show status  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name instructions  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name location  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name globals  end_name  begin_operator  end_operator  begin_name mode  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name place mode  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_comment calculate the drop location and place every n th element at an offset proportional to n  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name point  end_name  end_type  begin_name p  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name point  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name location  end_name  begin_operator  end_operator  begin_name x  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name count  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name location  end_name  begin_operator  end_operator  begin_name y  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment take canvas scrolling into account the implementation below does place the element correctly when the canvas has been scrolled  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name rectangle  end_name  end_type  begin_name r  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ce  end_name  begin_operator  end_operator  begin_name get j component  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get visible rect  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name p  end_name  begin_operator  end_operator  begin_name translate  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name r  end_name  begin_operator  end_operator  begin_name x  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name r  end_name  begin_operator  end_operator  begin_name y  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment simulate a press of the mouse above the calculated point  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name mouse event  end_name  end_type  begin_name me  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name mouse event  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name ce  end_name  begin_operator  end_operator  begin_name get j component  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name p  end_name  begin_operator  end_operator  begin_name x  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name p  end_name  begin_operator  end_operator  begin_name y  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name place mode  end_name  begin_operator  end_operator  begin_name mouse pressed  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name me  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment simulate a release of the mouse  end_comment  begin_expr_stmt  begin_expr  begin_name me  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name mouse event  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name ce  end_name  begin_operator  end_operator  begin_name get j component  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name p  end_name  begin_operator  end_operator  begin_name x  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name p  end_name  begin_operator  end_operator  begin_name y  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name place mode  end_name  begin_operator  end_operator  begin_name mouse released  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name me  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment set the size of the object s fig to minimum see issue 3410 this binds the use of this command to the current diagram of the current project  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name argo diagram  end_name  end_type  begin_name diagram  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name diagram utils  end_name  begin_operator  end_operator  begin_name get active diagram  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name fig  end_name  end_type  begin_name a fig  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name diagram  end_name  begin_operator  end_operator  begin_name presentation for  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name object  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name a fig  end_name  begin_operator  end_operator  begin_name set size  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name a fig  end_name  begin_operator  end_operator  begin_name get preferred size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block 
begin_comment construct a text fig owned by the given uml element p even if there is no owner then you still have to use this constructor setting the owner parameter to null is acceptable param owner owning model element or null param bounds rectangle describing bounds of figure param render settings render settings param expand only true if fig should never shrink end_comment begin_specifier  end_specifier  begin_name argo fig text  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name owner  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name rectangle  end_name  end_type  begin_name bounds  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name diagram settings  end_name  end_type  begin_name render settings  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expand only  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name super  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name bounds  end_name  begin_operator  end_operator  begin_name x  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name bounds  end_name  begin_operator  end_operator  begin_name y  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name bounds  end_name  begin_operator  end_operator  begin_name width  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name bounds  end_name  begin_operator  end_operator  begin_name height  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name expand only  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment set font family dialog todo is this needed  end_comment  begin_comment todo we don t currently have any settings that can change on a  end_comment  begin_comment per fig basis so we can just use the project diagram defaults  end_comment  begin_comment settings new diagram settings render settings  end_comment  begin_expr_stmt  begin_expr  begin_name settings  end_name  begin_operator  end_operator  begin_name render settings  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name set font family  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name settings  end_name  begin_operator  end_operator  begin_name get font name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name set font size  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name settings  end_name  begin_operator  end_operator  begin_name get font size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name set filled  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name set fill color  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name set text filled  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name set text fill color  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name set text color  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name text color  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment this makes the text not touch the text border line  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name set top margin  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name set bot margin  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name set left margin  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name set right margin  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment certain types of fixed text e g a fig stereotype with a keyword  end_comment  begin_comment may not have an owner  end_comment  begin_if  begin_condition  begin_expr  begin_name owner  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name set owner  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name owner  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get pump  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add model event listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name owner  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block 
begin_comment find the project that contains a given figure because we don t have a single reliable way to do this we try a bunch of different approaches param fig the fig to return the project of return the project containing the given fig end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name project  end_name  end_type  begin_name get project  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name argo fig  end_name  end_type  begin_name fig  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name fig  end_name  begin_operator  end_operator  begin_name fig  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name fig  end_name  end_type  begin_name f  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name fig  end_name  begin_operator  end_operator  begin_name fig  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name layer perspective  end_name  end_type  begin_name layer  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name layer perspective  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name f  end_name  begin_operator  end_operator  begin_name get layer  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name layer  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment todo without this we fail to draw e g a class but is this a good solution why is the layer not set in the constructor  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name editor  end_name  end_type  begin_name editor  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name globals  end_name  begin_operator  end_operator  begin_name cur editor  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name editor  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment todo the above doesn t work reliably in a constructor  end_comment  begin_comment we need a better way of getting default fig settings  end_comment  begin_comment for the owning project rather than using the  end_comment  begin_comment project manager singleton tfm  end_comment  begin_return  begin_expr  begin_call  begin_name  begin_name project manager  end_name  begin_operator  end_operator  begin_name get manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get current project  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name layer  end_name  end_type  begin_name lay  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name editor  end_name  begin_operator  end_operator  begin_name get layer manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get active layer  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name lay  end_name  begin_operator  end_operator  begin_name layer perspective  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name layer  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name layer perspective  end_name  begin_operator  end_operator  begin_name lay  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name layer  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name project manager  end_name  begin_operator  end_operator  begin_name get manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get current project  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name graph model  end_name  end_type  begin_name gm  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name layer  end_name  begin_operator  end_operator  begin_name get graph model  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name gm  end_name  begin_operator  end_operator  begin_name uml mutable graph support  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name project  end_name  end_type  begin_name project  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name uml mutable graph support  end_name  begin_operator  end_operator  begin_name gm  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get project  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name project  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name project  end_name  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  begin_return  begin_expr  begin_call  begin_name  begin_name project manager  end_name  begin_operator  end_operator  begin_name get manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get current project  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_return  begin_expr  end_expr  end_return  end_block 
begin_comment called by the constructor to create the figs at each end of the association todo this is temporary during refactoring process we should override set dest fig node and set source fig node and create the ends there that will allow the same pattern to work for uml 2 where we cannot assume the connection order param source association end param dest association end param settings end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name create end figs  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name source association end  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name dest association end  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name diagram settings  end_name  end_type  begin_name settings  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name displacement angle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_name src end  end_name  begin_operator  end_operator  begin_call  begin_name create end  end_name  begin_argument_list  begin_argument  begin_expr  begin_name source association end  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name settings  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name displacement angle  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name dest end  end_name  begin_operator  end_operator  begin_call  begin_name create end  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dest association end  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name settings  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name displacement angle  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment create the main draggable label for the association this can be overridden in subclasses to change behaviour todo consider introducing this to fig edge model element and using throughout all edges param owner owning uml element param settings rendering settings end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name create name label  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name owner  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name diagram settings  end_name  end_type  begin_name settings  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_name middle group  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name fig text group  end_name  begin_argument_list  begin_argument  begin_expr  begin_name owner  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name settings  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment let s use groups to construct the different text sections at  end_comment  begin_comment the association  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name get name fig  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name middle group  end_name  begin_operator  end_operator  begin_name add fig  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get name fig  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name middle group  end_name  begin_operator  end_operator  begin_name add fig  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get stereotype fig  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add path item  end_name  begin_argument_list  begin_argument  begin_expr  begin_name middle group  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name path item placement  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name middle group  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name argo fig util  end_name  begin_operator  end_operator  begin_name mark position  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name color  end_name  begin_operator  end_operator  begin_name yellow  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment choose the arrowhead style for each end p todo this is called from paint would it not better be called from rendering changed end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name apply arrow heads  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name src end  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name dest end  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment this only happens if model change events arrive before we are completely constructed  end_comment  begin_return  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name source arrow type  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name src end  end_name  begin_operator  end_operator  begin_name get arrow type  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name dest arrow type  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name dest end  end_name  begin_operator  end_operator  begin_name get arrow type  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name get settings  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is show bidirectional arrows  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name source arrow type  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name dest arrow type  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name source arrow type  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name dest arrow type  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name set source arrow head  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name fig association end annotation  end_name  begin_operator  end_operator  begin_name arrow heads  end_name  begin_index  begin_expr  begin_name source arrow type  end_name  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set dest arrow head  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name fig association end annotation  end_name  begin_operator  end_operator  begin_name arrow heads  end_name  begin_index  begin_expr  begin_name dest arrow type  end_name  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment returns the name of the ordering kind param ordering kind the kind of ordering return ordered or the latter if null or unordered end_comment begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name get ordering name  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name ordering kind  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name ordering kind  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ordering kind  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ordering kind  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ordering kind  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_comment todo i 18 n  end_comment  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ordering kind  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_return  end_block 
begin_comment todo is this required why would the fig already be dashed see org tigris gef presentation fig edge set fig org tigris gef presentation fig end_comment begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set fig  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name fig  end_name  end_type  begin_name f  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name set fig  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name f  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get fig  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set dashed  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment sets the bounds but the size will be at least the one returned by link get minimum size unless checking of size is disabled p if the required height is bigger then the additional height is equally distributed among all compartments such that the accumulated height of all visible figs equals the demanded height param x desired x coordinate of upper left corner param y desired y coordinate of upper left corner param width desired width of the fig param height desired height of the fig see org tigris gef presentation fig set bounds impl int int int int end_comment begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set standard bounds  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name x  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name y  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name w  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name h  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment save our old boundaries so it can be used in property message later  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name rectangle  end_name  end_type  begin_name old bounds  end_name  begin_init  begin_expr  begin_call  begin_name get bounds  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment make sure we don t try to set things smaller than the minimum  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name dimension  end_name  end_type  begin_name minimum size  end_name  begin_init  begin_expr  begin_call  begin_name get minimum size  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name new w  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name max  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name w  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name minimum size  end_name  begin_operator  end_operator  begin_name width  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name new h  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name max  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name h  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name minimum size  end_name  begin_operator  end_operator  begin_name height  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment the box for the compartments is somewhere inside the outside bounds  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name rectangle  end_name  end_type  begin_name box  end_name  begin_init  begin_expr  begin_call  begin_name calculate compartment box dimensions  end_name  begin_argument_list  begin_argument  begin_expr  begin_name x  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name y  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name new w  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name new h  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name current height  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name get stereotype fig  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is visible  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name stereotype height  end_name  begin_init  begin_expr  begin_call  begin_name get stereotype fig  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get minimum size  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name height  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get name fig  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set top margin  end_name  begin_argument_list  begin_argument  begin_expr  begin_name stereotype height  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get stereotype fig  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set bounds  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name box  end_name  begin_operator  end_operator  begin_name x  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name box  end_name  begin_operator  end_operator  begin_name y  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name box  end_name  begin_operator  end_operator  begin_name width  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name stereotype height  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get name fig  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set top margin  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_comment now the new name fig height will include the stereotype height  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name dimension  end_name  end_type  begin_name name min  end_name  begin_init  begin_expr  begin_call  begin_name get name fig  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get minimum size  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name min name height  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name max  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name name min  end_name  begin_operator  end_operator  begin_name height  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name name fig height  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get name fig  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set bounds  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name box  end_name  begin_operator  end_operator  begin_name x  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name box  end_name  begin_operator  end_operator  begin_name y  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name box  end_name  begin_operator  end_operator  begin_name width  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name min name height  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment the new height can not be less than the name height  end_comment  begin_comment todo is this needed correct for when all compartments are hidden  end_comment  begin_expr_stmt  begin_expr  begin_name new h  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name max  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name min name height  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get line width  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name new h  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name current height  end_name  begin_operator  end_operator  begin_name min name height  end_name  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name requested height  end_name  begin_init  begin_expr  begin_name  begin_name box  end_name  begin_operator  end_operator  begin_name height  end_name  end_name  begin_operator  end_operator  begin_name current height  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name needed height  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_comment calculate the minimum needed height for all the compartments  end_comment  begin_for  begin_init  begin_decl  begin_type  begin_name fig compartment  end_name  end_type  begin_name c  end_name  begin_range  begin_expr  begin_name compartments  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name is visible  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name needed height  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name get minimum size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name height  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  begin_for  begin_init  begin_decl  begin_type  begin_name fig compartment  end_name  end_type  begin_name c  end_name  begin_range  begin_expr  begin_name compartments  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name is visible  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name compartment height  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name get minimum size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name height  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name requested height  end_name  begin_operator  end_operator  begin_name needed height  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment distribute the extra height over the visible compartments  end_comment  begin_expr_stmt  begin_expr  begin_name compartment height  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name requested height  end_name  begin_operator  end_operator  begin_name needed height  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get visible compartment count  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name set compartment bounds  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name rectangle  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name box  end_name  begin_operator  end_operator  begin_name x  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name box  end_name  begin_operator  end_operator  begin_name y  end_name  end_name  begin_operator  end_operator  begin_name current height  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name box  end_name  begin_operator  end_operator  begin_name width  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name compartment height  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name rectangle  end_name  begin_argument_list  begin_argument  begin_expr  begin_name x  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name y  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name new w  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name new h  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name current height  end_name  begin_operator  end_operator  begin_name compartment height  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  begin_if  begin_condition  begin_expr  begin_name requested height  end_name  begin_operator  end_operator  begin_name needed height  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment increase the height of the fig  end_comment  begin_expr_stmt  begin_expr  begin_name new h  end_name  begin_operator  end_operator  begin_name needed height  end_name  begin_operator  end_operator  begin_name requested height  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment if requested height equals needed height then do nothing it fits exactly  end_comment  begin_comment finally set the bounds of the big box and the border fig  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name get big port  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set bounds  end_name  begin_argument_list  begin_argument  begin_expr  begin_name x  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name y  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name new w  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name new h  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment now force calculation of the bounds of the figure update the edges  end_comment  begin_comment and trigger anyone who s listening to see if the bounds property  end_comment  begin_comment has changed  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name calc bounds  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name update edges  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name old bounds  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get bounds  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name fire prop change  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name old bounds  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get bounds  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment todo this functionality is in the worn place we should be able to call set visible on the compartment itself and then this class should react to that event improvements will follow in later releases hence this method should not be considered stable for module developers param compartment the compartment to be changed param is visible true if the attribute compartment is visible end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set compartment visible  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name fig compartment  end_name  end_type  begin_name compartment  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name is visible  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name rectangle  end_name  end_type  begin_name rect  end_name  begin_init  begin_expr  begin_call  begin_name get bounds  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name compartment  end_name  begin_operator  end_operator  begin_name is visible  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name is visible  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment hide compartment  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name damage  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name f  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name compartment  end_name  begin_operator  end_operator  begin_name get figs  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name fig  end_name  begin_operator  end_operator  begin_name f  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name set visible  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name compartment  end_name  begin_operator  end_operator  begin_name set visible  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment hiding one compartment means that the fig returns to minimal dimensions  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name dimension  end_name  end_type  begin_name a size  end_name  begin_init  begin_expr  begin_call  begin_name get minimum size  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set bounds  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name rect  end_name  begin_operator  end_operator  begin_name x  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name rect  end_name  begin_operator  end_operator  begin_name y  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name int  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name a size  end_name  begin_operator  end_operator  begin_name get width  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name int  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name a size  end_name  begin_operator  end_operator  begin_name get height  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment alternatively we could reduce the height of the fig by the height of this one hidden compartment but that would not be possible for the width so we better return to minimal dimensions overall  end_comment  end_block  end_then  end_if  end_block  end_then  begin_else  begin_block  begin_if  begin_condition  begin_expr  begin_name is visible  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment show compartment  end_comment  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name f  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name compartment  end_name  begin_operator  end_operator  begin_name get figs  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name fig  end_name  begin_operator  end_operator  begin_name f  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name set visible  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name compartment  end_name  begin_operator  end_operator  begin_name set visible  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name dimension  end_name  end_type  begin_name a size  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name get minimum size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set bounds  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name rect  end_name  begin_operator  end_operator  begin_name x  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name rect  end_name  begin_operator  end_operator  begin_name y  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name int  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name a size  end_name  begin_operator  end_operator  begin_name get width  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name int  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name a size  end_name  begin_operator  end_operator  begin_name get height  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name damage  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_else  end_if  end_block 
begin_comment utility function to localize the given string with help text and show it in the status bar of the argo uml window this function is used in favour of the inline call to enable later improvements e g it would be possible to show a help balloon todo work this out one matter to possibly improve show multiple lines param s the given string to be localized and shown end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name show help  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name s  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name argo event pump  end_name  begin_operator  end_operator  begin_name fire event  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name argo help event  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name argo event types  end_name  begin_operator  end_operator  begin_name help changed  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment replace the notation provider s p this method shall not be used for the initial creation of notation providers but only for replacing them when required initialization must be done in the constructor using methods which can t be overridden p notation providers can not be updated they are lightweight throw away objects hence this method creates a new notation provider whenever needed e g when the notation language is changed by the user then the n ps are to be re created so this method shall not be called from a fig constructor p after the removal of the deprecated method set owner this method shall contain the following statement assert notation provider name null param own the current owner end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name init notation providers  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name own  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name notation provider name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name notation provider name  end_name  begin_operator  end_operator  begin_name clean listener  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment this should not be looking for a named element since this is not always about the name of this modelelement alone  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a named element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name own  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name notation name  end_name  end_type  begin_name notation  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name notation  end_name  begin_operator  end_operator  begin_name find notation  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get notation settings  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get notation language  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name notation provider name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name notation provider factory 2  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get notation provider  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get notation provider type  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name own  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name notation  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block 
begin_comment p determines if the fig edge is currently connected to the correct fig nodes if not the edges is the correct fig nodes set and the edge rerouted p typically this is used when a user has amended from the property panel a relationship from one model element to another and the graph needs to react to that change p e g if the participant of an association end is changed p calls a helper method layout this to self to avoid this edge disappearing if the new source and dest are the same node todo this method is called far too frequently it should only be called when a specific event is received it seems to be currently called whenever any event is received from the owner return boolean whether or not the update was sucessful end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name determine fig nodes  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name owner  end_name  begin_init  begin_expr  begin_call  begin_name get owner  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name owner  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name get layer  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name new source  end_name  begin_init  begin_expr  begin_call  begin_name get source  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name new dest  end_name  begin_init  begin_expr  begin_call  begin_name get destination  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name fig  end_name  end_type  begin_name current source fig  end_name  begin_init  begin_expr  begin_call  begin_name get source fig node  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name fig  end_name  end_type  begin_name current dest fig  end_name  begin_init  begin_expr  begin_call  begin_name get dest fig node  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name current source  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name current destination  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name current source fig  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name current dest fig  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name current source  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name current source fig  end_name  begin_operator  end_operator  begin_name get owner  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name current destination  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name current dest fig  end_name  begin_operator  end_operator  begin_name get owner  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name new source  end_name  begin_operator  end_operator  begin_name current source  end_name  begin_operator  end_operator  begin_name new dest  end_name  begin_operator  end_operator  begin_name current destination  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name fig  end_name  end_type  begin_name new source fig  end_name  begin_init  begin_expr  begin_call  begin_name get no edge presentation for  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new source  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name fig  end_name  end_type  begin_name new dest fig  end_name  begin_init  begin_expr  begin_call  begin_name get no edge presentation for  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new dest  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name new source fig  end_name  begin_operator  end_operator  begin_name current source fig  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name set source fig node  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name fig node  end_name  begin_operator  end_operator  begin_name new source fig  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set source port fig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new source fig  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name new dest fig  end_name  begin_operator  end_operator  begin_name current dest fig  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name set dest fig node  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name fig node  end_name  begin_operator  end_operator  begin_name new dest fig  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set dest port fig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new dest fig  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name fig node  end_name  begin_operator  end_operator  begin_name new source fig  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name update edges  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name fig node  end_name  begin_operator  end_operator  begin_name new dest fig  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name update edges  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name calc bounds  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment adapted from selection w buttons from line 280  end_comment  begin_comment calls a helper method to avoid this edge disappearing  end_comment  begin_comment if the new source and dest are the same node  end_comment  begin_if  begin_condition  begin_expr  begin_name new source fig  end_name  begin_operator  end_operator  begin_name new dest fig  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name layout this to self  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  begin_return  begin_expr  end_expr  end_return  end_block 
begin_comment changes the font for all figs contained in the given fig group p todo in fact there is a design error in this method e g for a class if the name is italic since the class is abstract then the classes features should be in plain font this problem can be fixed by implementing the update font method in all subclasses param fg the fig group to change the font of end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name deep update font recursive  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name font  end_name  end_type  begin_name f  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name path fig  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name path fig  end_name  begin_operator  end_operator  begin_name argo fig text  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name argo fig text  end_name  begin_operator  end_operator  begin_name path fig  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name update font  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name path fig  end_name  begin_operator  end_operator  begin_name fig text  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name fig text  end_name  begin_operator  end_operator  begin_name path fig  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name set font  end_name  begin_argument_list  begin_argument  begin_expr  begin_name f  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name path fig  end_name  begin_operator  end_operator  begin_name fig group  end_name  end_expr  end_condition  begin_then  begin_block  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name fge  end_name  begin_range  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name fig group  end_name  begin_operator  end_operator  begin_name path fig  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get figs  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name deep update font recursive  end_name  begin_argument_list  begin_argument  begin_expr  begin_name f  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name fge  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  end_block  end_then  end_if  end_else  end_if  end_else  end_if  end_block 
begin_comment fix up bad figs p due to errors in earlier releases of argouml it can happen that there is a generalization without a child or parent p todo move into xsl we should not remove from the graph model while we re writing to it or we have a possible cause of concurrent modification exception param owner end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name fixup  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name owner  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a generalization  end_name  begin_argument_list  begin_argument  begin_expr  begin_name owner  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name sub type  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get specific  end_name  begin_argument_list  begin_argument  begin_expr  begin_name owner  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name super type  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get general  end_name  begin_argument_list  begin_argument  begin_expr  begin_name owner  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name sub type  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name super type  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment todo we should warn the user we have removed something tfm  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name remove from diagram  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name update discriminator text  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment show it  end_comment  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name owner  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal state exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name owner  end_name  begin_operator  end_operator  begin_name get class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  end_else  end_if  end_block 
begin_comment see org argouml uml diagram ui fig node model element update listeners java lang object java lang object end_comment begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name update listeners  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name old owner  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name new owner  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name old owner  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name remove element listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_name old owner  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name new owner  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name add element listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new owner  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block 
begin_comment todo the code implementing this method is from 2003 see issue 2171 mechanically integrated by tfmorris in may 2007 needs to be reviewed updated author decki endi yayan politechnic of bandung computer departement method for changing text of message end_comment begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name model changed  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name property change event  end_name  end_type  begin_name mee  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name model changed  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name mee  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment do nothing until code is reviewed  end_comment  begin_if  begin_condition  begin_expr  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a message  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get owner  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a parameter  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name mee  end_name  begin_operator  end_operator  begin_name get source  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name par  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name mee  end_name  begin_operator  end_operator  begin_name get source  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name update arguments from parameter  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get owner  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name par  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name mee  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name mee  end_name  begin_operator  end_operator  begin_name get source  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get owner  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a action  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name mee  end_name  begin_operator  end_operator  begin_name get source  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a operation  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name mee  end_name  begin_operator  end_operator  begin_name get source  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a argument  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name mee  end_name  begin_operator  end_operator  begin_name get source  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a signal  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name mee  end_name  begin_operator  end_operator  begin_name get source  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name update listeners  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get owner  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment needs to be updated for changes in notation subsystem tfm  end_comment  begin_comment string name str notation generate this get owner trim  end_comment  begin_comment get name fig set text name str  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name update arrow  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name damage  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block 
begin_comment todo the code implementing this method is from 2003 see issue 2171 mechanically integrated by tfmorris in may 2007 needs to be reviewed updated author decki endi yayan politechnic of bandung computer departement method for changing text of message param new owner param parameter end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name update arguments from parameter  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name new owner  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name parameter  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment do nothing until code is reviewed  end_comment  begin_if  begin_condition  begin_expr  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name new owner  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name act  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get action  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new owner  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a call action  end_name  begin_argument_list  begin_argument  begin_expr  begin_name act  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get operation  end_name  begin_argument_list  begin_argument  begin_expr  begin_name act  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name operation  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get operation  end_name  begin_argument_list  begin_argument  begin_expr  begin_name act  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get direction kind  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get in parameter  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get kind  end_name  begin_argument_list  begin_argument  begin_expr  begin_name parameter  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment update for changes in model subsystem tfm  end_comment  begin_comment collection colpar model get facade get in parameters  end_comment  begin_comment operation  end_comment  begin_comment collection colarg model get facade  end_comment  begin_comment get actual arguments act  end_comment  begin_comment if colpar size colarg size  end_comment  begin_comment iterator iter colarg iterator  end_comment  begin_comment while iter has next  end_comment  begin_comment object arg iter next  end_comment  begin_comment if iter has next  end_comment  begin_comment model get common behavior helper  end_comment  begin_comment remove actual argument act arg  end_comment  begin_comment   end_comment  begin_comment   end_comment  begin_comment   end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name new argument  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get common behavior factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create argument  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get common behavior helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new argument  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get data types factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create expression  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name parameter  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new argument  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name parameter  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get common behavior helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add actual argument  end_name  begin_argument_list  begin_argument  begin_expr  begin_name act  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name new argument  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get pump  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name remove model event listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name parameter  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get pump  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add model event listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name parameter  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  end_if  end_block 
begin_comment todo the code implementing this method is from 2003 see issue 2171 mechanically integrated by tfmorris in may 2007 needs to be reviewed updated author decki endi yayan politechnic of bandung computer departement method for changing text of message param new owner model element which should now be listened to end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name update listeners  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name new owner  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment our superclass no longer has this method so perhaps this whole  end_comment  begin_comment thing should be removed tfm  end_comment  begin_comment super update listeners new owner  end_comment  begin_comment todo do nothing until code is reviewed  end_comment  begin_if  begin_condition  begin_expr  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name new owner  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name act  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get action  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new owner  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name act  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get pump  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name remove model event listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name act  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get pump  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add model event listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name act  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name iter  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get actual arguments  end_name  begin_argument_list  begin_argument  begin_expr  begin_name act  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name iterator  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name iter  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name arg  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name iter  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get pump  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name remove model event listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get pump  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add model event listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_while  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a call action  end_name  begin_argument_list  begin_argument  begin_expr  begin_name act  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name oper  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get operation  end_name  begin_argument_list  begin_argument  begin_expr  begin_name act  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name oper  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get pump  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name remove model event listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name oper  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get pump  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add model event listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name oper  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name it 2  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get parameters  end_name  begin_argument_list  begin_argument  begin_expr  begin_name oper  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name iterator  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name it 2  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name param  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name it 2  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get pump  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name remove model event listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name param  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get pump  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add model event listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name param  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_while  end_block  end_then  end_if  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a send action  end_name  begin_argument_list  begin_argument  begin_expr  begin_name act  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name sig  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get signal  end_name  begin_argument_list  begin_argument  begin_expr  begin_name act  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name sig  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get pump  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name remove model event listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name sig  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get pump  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add model event listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name sig  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  end_if  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set standard bounds  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name x  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name y  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name w  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name h  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name rectangle  end_name  end_type  begin_name old bounds  end_name  begin_init  begin_expr  begin_call  begin_name get bounds  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name rectangle  end_name  end_type  begin_name nm  end_name  begin_init  begin_expr  begin_call  begin_name get name fig  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get bounds  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment center the name fig since center justification does not seem to work  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name get name fig  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set bounds  end_name  begin_argument_list  begin_argument  begin_expr  begin_name x  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name w  end_name  begin_operator  end_operator  begin_name  begin_name nm  end_name  begin_operator  end_operator  begin_name width  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name y  end_name  begin_operator  end_operator  begin_name h  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name nm  end_name  begin_operator  end_operator  begin_name height  end_name  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name nm  end_name  begin_operator  end_operator  begin_name width  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name nm  end_name  begin_operator  end_operator  begin_name height  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo replace magic numbers with constants  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name get stereotype fig  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is visible  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment todo test this  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name get stereotype fig  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set bounds  end_name  begin_argument_list  begin_argument  begin_expr  begin_name x  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name y  end_name  begin_operator  end_operator  begin_name h  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name w  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name stereotype height  end_name  begin_init  begin_expr  begin_call  begin_name get stereotype fig  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get minimum size  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name height  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get stereotype fig  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set bounds  end_name  begin_argument_list  begin_argument  begin_expr  begin_name x  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name y  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name w  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name stereotype height  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name head  end_name  begin_operator  end_operator  begin_name set bounds  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name x  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name y  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name w  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name h  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get big port  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set bounds  end_name  begin_argument_list  begin_argument  begin_expr  begin_name x  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name y  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name w  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name h  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name calc bounds  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment x x y y w w h h  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name fire prop change  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name old bounds  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get bounds  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name update edges  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment construct an unplaced fig with no owner using the given rendering settings end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name construct figs  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment todo why isn t this stuff managed by the name fig itself  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name name fig  end_name  begin_operator  end_operator  begin_name set filled  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name name fig  end_name  begin_operator  end_operator  begin_name set text  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name place string  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name name fig  end_name  begin_operator  end_operator  begin_name set bot margin  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment make space for the clarifier  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name name fig  end_name  begin_operator  end_operator  begin_name set right margin  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment margin between text and border  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name name fig  end_name  begin_operator  end_operator  begin_name set left margin  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name ready to edit  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set shadow size  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get settings  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get default shadow width  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo how to handle changes in shadowsize from the project properties  end_comment  begin_expr_stmt  begin_expr  begin_name stereotype style  end_name  begin_operator  end_operator  begin_call  begin_name get settings  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get default stereotype view  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment default reply text to be shown while placing node in diagram overrule this when the text is not new uml class name return the text to be shown while placing node in diagram end_comment begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name place string  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a model element  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get owner  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name place string  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get owner  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name place string  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name place string  end_name  begin_operator  end_operator  begin_comment todo i 18 n  end_comment  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get uml class name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get owner  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_name place string  end_name  end_expr  end_return  end_block  end_then  end_if  begin_return  begin_expr  end_expr  end_return  end_block 
begin_comment displays visual indications of pending to do items please note that the list of advices to do list is not the same as the list of element known by the fig node figs therefore it is necessary to check if the graphic item exists before drawing on it see cl attribute compartment for an example param g the graphics device see org argouml uml cognitive critics cl attribute compartment end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name paint clarifiers  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name graphics  end_name  end_type  begin_name g  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo generalize extension and remove critic specific stuff  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name icon x  end_name  begin_init  begin_expr  begin_call  begin_name get x  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name icon y  end_name  begin_init  begin_expr  begin_call  begin_name get y  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name to do list  end_name  end_type  begin_name td list  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name designer  end_name  begin_operator  end_operator  begin_name the designer  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get to do list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name to do item  end_name  end_argument  end_argument_list  end_name  end_type  begin_name items  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name td list  end_name  begin_operator  end_operator  begin_name element list for offender  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get owner  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name to do item  end_name  end_type  begin_name item  end_name  begin_range  begin_expr  begin_name items  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name icon  end_name  end_type  begin_name icon  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name item  end_name  begin_operator  end_operator  begin_name get clarifier  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name icon  end_name  begin_operator  end_operator  begin_name clarifier  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name clarifier  end_name  begin_operator  end_operator  begin_name icon  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name set fig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name clarifier  end_name  begin_operator  end_operator  begin_name icon  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name set to do item  end_name  begin_argument_list  begin_argument  begin_expr  begin_name item  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name icon  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name icon  end_name  begin_operator  end_operator  begin_name paint icon  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name g  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name icon x  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name icon y  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name icon x  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name icon  end_name  begin_operator  end_operator  begin_name get icon width  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  begin_expr_stmt  begin_expr  begin_name items  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name td list  end_name  begin_operator  end_operator  begin_name element list for offender  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name to do item  end_name  end_type  begin_name item  end_name  begin_range  begin_expr  begin_name items  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name icon  end_name  end_type  begin_name icon  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name item  end_name  begin_operator  end_operator  begin_name get clarifier  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name icon  end_name  begin_operator  end_operator  begin_name clarifier  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name clarifier  end_name  begin_operator  end_operator  begin_name icon  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name set fig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name clarifier  end_name  begin_operator  end_operator  begin_name icon  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name set to do item  end_name  begin_argument_list  begin_argument  begin_expr  begin_name item  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name icon  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name icon  end_name  begin_operator  end_operator  begin_name paint icon  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name g  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name icon x  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name icon y  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name icon x  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name icon  end_name  begin_operator  end_operator  begin_name get icon width  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  end_block 
begin_comment param x the x of the hit param y the y of the hit return the todo item of which the clarifier has been hit end_comment begin_type  begin_specifier  end_specifier  begin_name to do item  end_name  end_type  begin_name hit clarifier  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name x  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name y  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo to do item stuff should be made an opaque extension  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name icon x  end_name  begin_init  begin_expr  begin_call  begin_name get x  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name to do list  end_name  end_type  begin_name td list  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name designer  end_name  begin_operator  end_operator  begin_name the designer  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get to do list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name to do item  end_name  end_argument  end_argument_list  end_name  end_type  begin_name items  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name td list  end_name  begin_operator  end_operator  begin_name element list for offender  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get owner  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name to do item  end_name  end_type  begin_name item  end_name  begin_range  begin_expr  begin_name items  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name icon  end_name  end_type  begin_name icon  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name item  end_name  begin_operator  end_operator  begin_name get clarifier  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name width  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name icon  end_name  begin_operator  end_operator  begin_name get icon width  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name y  end_name  begin_operator  end_operator  begin_call  begin_name get y  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_name y  end_name  begin_operator  end_operator  begin_call  begin_name get y  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_name x  end_name  begin_operator  end_operator  begin_name icon x  end_name  begin_operator  end_operator  begin_name x  end_name  begin_operator  end_operator  begin_name icon x  end_name  begin_operator  end_operator  begin_name width  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name item  end_name  end_expr  end_return  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name icon x  end_name  begin_operator  end_operator  begin_name width  end_name  end_expr  end_expr_stmt  end_block  end_for  begin_for  begin_init  begin_decl  begin_type  begin_name to do item  end_name  end_type  begin_name item  end_name  begin_range  begin_expr  begin_name items  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name icon  end_name  end_type  begin_name icon  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name item  end_name  begin_operator  end_operator  begin_name get clarifier  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name icon  end_name  begin_operator  end_operator  begin_name clarifier  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name clarifier  end_name  begin_operator  end_operator  begin_name icon  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name set fig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name clarifier  end_name  begin_operator  end_operator  begin_name icon  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name set to do item  end_name  begin_argument_list  begin_argument  begin_expr  begin_name item  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name clarifier  end_name  begin_operator  end_operator  begin_name icon  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name hit  end_name  begin_argument_list  begin_argument  begin_expr  begin_name x  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name y  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name item  end_name  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_for  begin_expr_stmt  begin_expr  begin_name items  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name td list  end_name  begin_operator  end_operator  begin_name element list for offender  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name to do item  end_name  end_type  begin_name item  end_name  begin_range  begin_expr  begin_name items  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name icon  end_name  end_type  begin_name icon  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name item  end_name  begin_operator  end_operator  begin_name get clarifier  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name width  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name icon  end_name  begin_operator  end_operator  begin_name get icon width  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name y  end_name  begin_operator  end_operator  begin_call  begin_name get y  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_name y  end_name  begin_operator  end_operator  begin_call  begin_name get y  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_name x  end_name  begin_operator  end_operator  begin_name icon x  end_name  begin_operator  end_operator  begin_name x  end_name  begin_operator  end_operator  begin_name icon x  end_name  begin_operator  end_operator  begin_name width  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name item  end_name  end_expr  end_return  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name icon x  end_name  begin_operator  end_operator  begin_name width  end_name  end_expr  end_expr_stmt  end_block  end_for  begin_for  begin_init  begin_decl  begin_type  begin_name to do item  end_name  end_type  begin_name item  end_name  begin_range  begin_expr  begin_name items  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name icon  end_name  end_type  begin_name icon  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name item  end_name  begin_operator  end_operator  begin_name get clarifier  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name icon  end_name  begin_operator  end_operator  begin_name clarifier  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name clarifier  end_name  begin_operator  end_operator  begin_name icon  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name set fig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name clarifier  end_name  begin_operator  end_operator  begin_name icon  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name set to do item  end_name  begin_argument_list  begin_argument  begin_expr  begin_name item  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name clarifier  end_name  begin_operator  end_operator  begin_name icon  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name hit  end_name  begin_argument_list  begin_argument  begin_expr  begin_name x  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name y  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name item  end_name  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_for  begin_return  begin_expr  end_expr  end_return  end_block 
begin_comment see org tigris gef presentation fig get tip string java awt event mouse event end_comment begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name get tip string  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name mouse event  end_name  end_type  begin_name me  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo generalize extension and remove critic specific code  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name to do item  end_name  end_type  begin_name item  end_name  begin_init  begin_expr  begin_call  begin_name hit clarifier  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name me  end_name  begin_operator  end_operator  begin_name get x  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name me  end_name  begin_operator  end_operator  begin_name get y  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name tip  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name item  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name globals  end_name  begin_operator  end_operator  begin_name cur editor  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get selection manager  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name contains fig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name tip  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name item  end_name  begin_operator  end_operator  begin_name get headline  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name get owner  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name tip  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get tip string  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get owner  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name tip  end_name  begin_operator  end_operator  begin_call  begin_name to string  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_else  end_if  begin_if  begin_condition  begin_expr  begin_name tip  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name tip  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name tip  end_name  begin_operator  end_operator  begin_name ends with  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name tip  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_name tip  end_name  end_expr  end_return  end_block 
begin_comment called by property changed when it detects that a stereotype has been added or removed on removal the fig node removes its listener to that stereotype when a new stereotype is detected we add a listener todo bob says in my opinion we shouldn t be doing this here fig stereotype should always be listening to change of its owners name fig stereotypes compartment should always be listening for add or remove of stereotypes to its owner those classes will need to pass some event to the fig node on the awt thread only if a change results in a change of size that requires a redraw p note runs at the model mdr thread p param event the uml change event that caused the change end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name stereotype changed  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name uml change event  end_name  end_type  begin_name event  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name owner  end_name  begin_init  begin_expr  begin_call  begin_name get owner  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_assert  begin_expr  begin_name owner  end_name  begin_operator  end_operator  end_expr  end_assert  begin_try  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name event  end_name  begin_operator  end_operator  begin_name get old value  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name remove element listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name event  end_name  begin_operator  end_operator  begin_name get old value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name event  end_name  begin_operator  end_operator  begin_name get new value  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name add element listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name event  end_name  begin_operator  end_operator  begin_name get new value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name invalid element exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  end_try  end_block 
begin_comment utility function to localize the given string with help text and show it in the status bar of the argo uml window this function is used in favour of the inline call to enable later improvements e g it would be possible to show a help balloon p todo work this out one matter to possibly improve show multiple lines param s the given string to be localized and shown end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name show help  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name s  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name s  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment convert null to empty string and clear help message  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name argo event pump  end_name  begin_operator  end_operator  begin_name fire event  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name argo help event  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name argo event types  end_name  begin_operator  end_operator  begin_name help changed  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name argo event pump  end_name  begin_operator  end_operator  begin_name fire event  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name argo help event  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name argo event types  end_name  begin_operator  end_operator  begin_name help changed  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block 
begin_comment this method is called after the user finishes editing a text field that is in the fig node model element determine which field and update the model this class handles the name the stereotype and any compartment fig texts subclasses should override to handle other text elements param ft the fig text that has been edited and contains the new text throws property veto exception thrown when new text represents an unacceptable value end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name text edited  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name fig text  end_name  end_type  begin_name ft  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name property veto exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_if  begin_condition  begin_expr  begin_name ft  end_name  begin_operator  end_operator  begin_name name fig  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment todo can we delegate this to a specialist fig name class  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name get owner  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name notation provider name  end_name  begin_operator  end_operator  begin_name parse  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get owner  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name ft  end_name  begin_operator  end_operator  begin_name get text  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ft  end_name  begin_operator  end_operator  begin_name set text  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name notation provider name  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get owner  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get notation settings  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name ft  end_name  begin_operator  end_operator  begin_name compartment fig text  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name compartment fig text  end_name  end_type  begin_name fig text  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name compartment fig text  end_name  begin_operator  end_operator  begin_name ft  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name fig text  end_name  begin_operator  end_operator  begin_name get notation provider  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name parse  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name ft  end_name  begin_operator  end_operator  begin_name get owner  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name ft  end_name  begin_operator  end_operator  begin_name get text  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ft  end_name  begin_operator  end_operator  begin_name set text  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name fig text  end_name  begin_operator  end_operator  begin_name get notation provider  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to string  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name ft  end_name  begin_operator  end_operator  begin_name get owner  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get notation settings  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block 
begin_comment  end_commentbegin_comment event handlers mouse listener implementation end_commentbegin_comment if the user double clicks on any part of this fig node pass it down to one of the internal figs this allows the user to initiate direct text editing see java awt event mouse listener mouse clicked java awt event mouse event end_comment begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name mouse clicked  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name mouse event  end_name  end_type  begin_name me  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name ready to edit  end_name  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a model element  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get owner  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment todo why is this clearing the name tfm  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get owner  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name ready to edit  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_else  end_if  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name me  end_name  begin_operator  end_operator  begin_name is consumed  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name me  end_name  begin_operator  end_operator  begin_name get click count  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name me  end_name  begin_operator  end_operator  begin_name is popup trigger  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name me  end_name  begin_operator  end_operator  begin_name get modifiers  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name  begin_name input event  end_name  begin_operator  end_operator  begin_name button 3 mask  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get owner  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name is read only  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name rectangle  end_name  end_type  begin_name r  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name rectangle  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name me  end_name  begin_operator  end_operator  begin_name get x  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name me  end_name  begin_operator  end_operator  begin_name get y  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name fig  end_name  end_type  begin_name f  end_name  begin_init  begin_expr  begin_call  begin_name hit fig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name r  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name f  end_name  begin_operator  end_operator  begin_name mouse listener  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name f  end_name  begin_operator  end_operator  begin_name is visible  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name mouse listener  end_name  begin_operator  end_operator  begin_name f  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name mouse clicked  end_name  begin_argument_list  begin_argument  begin_expr  begin_name me  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name f  end_name  begin_operator  end_operator  begin_name fig group  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name f  end_name  begin_operator  end_operator  begin_name is visible  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment this enables direct text editing for sub figs of a  end_comment  begin_comment fig group object  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name fig  end_name  end_type  begin_name f 2  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name fig group  end_name  begin_operator  end_operator  begin_name f  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name hit fig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name r  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name f 2  end_name  begin_operator  end_operator  begin_name mouse listener  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name mouse listener  end_name  begin_operator  end_operator  begin_name f 2  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name mouse clicked  end_name  begin_argument_list  begin_argument  begin_expr  begin_name me  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name create contained model element  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name fig group  end_name  begin_operator  end_operator  begin_name f  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name me  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  end_if  end_else  end_if  end_block  end_then  end_if  end_block 
begin_comment this is a template method called by the argo uml framework as the result of a change to a model element do not call this method directly yourself p override this in any subclasses in order to change what model elements the fig node is listening to as a result of change to the model p p this method is guaranteed by the framework to be running on the same thread as the model subsystem p todo lets refactor this at some time to take uml change event argument param event the uml change event that caused the change end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name model changed  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name property change event  end_name  end_type  begin_name event  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name event  end_name  begin_operator  end_operator  begin_name association change event  end_name  begin_operator  end_operator  begin_name event  end_name  begin_operator  end_operator  begin_name attribute change event  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment todo this brute force approach of updating listeners on each  end_comment  begin_comment and every event without checking the event type or any other  end_comment  begin_comment information is going to cause lots of invalid element exceptions  end_comment  begin_comment in subclasses implementations of update listeners and they  end_comment  begin_comment won t have the event information to make their own decisions  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name update listeners  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get owner  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get owner  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name update stereotype icon  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name get owner  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name warn  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name get class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name warn  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name stereotype fig profile icon  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name fig  end_name  begin_range  begin_expr  begin_call  begin_name get figs  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name fig  end_name  begin_operator  end_operator  begin_name fig  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name set visible  end_name  begin_argument_list  begin_argument  begin_expr  begin_name fig  end_name  begin_operator  end_operator  begin_name stereotype fig profile icon  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name remove fig  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name stereotype fig profile icon  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name stereotype fig profile icon  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name original name fig  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name set name fig  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name original name fig  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name original name fig  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_for  begin_init  begin_decl  begin_type  begin_name fig  end_name  end_type  begin_name icon  end_name  begin_range  begin_expr  begin_name floating stereotypes  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name remove fig  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name icon  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name floating stereotypes  end_name  begin_operator  end_operator  begin_name clear  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name practical view  end_name  begin_init  begin_expr  begin_call  begin_name get practical view  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  begin_init  begin_expr  begin_call  begin_name get owner  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name stereos  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get stereotypes  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name hiding  end_name  begin_init  begin_expr  begin_name practical view  end_name  begin_operator  end_operator  begin_name  begin_name diagram appearance  end_name  begin_operator  end_operator  begin_name stereotype view small icon  end_name  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name get stereotype fig  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get stereotype fig  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set hiding stereotypes with icon  end_name  begin_argument_list  begin_argument  begin_expr  begin_name hiding  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name practical view  end_name  begin_operator  end_operator  begin_name  begin_name diagram appearance  end_name  begin_operator  end_operator  begin_name stereotype view big icon  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name image  end_name  end_type  begin_name replace icon  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name stereos  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name stereo  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name stereos  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name next  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo find a way to replace this dependency on project  end_comment  begin_expr_stmt  begin_expr  begin_name replace icon  end_name  begin_operator  end_operator  begin_call  begin_name get project  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get profile configuration  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get fig node strategy  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get icon for stereotype  end_name  begin_argument_list  begin_argument  begin_expr  begin_name stereo  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name replace icon  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name stereotype fig profile icon  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name fig profile icon  end_name  begin_argument_list  begin_argument  begin_expr  begin_name settings  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name replace icon  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name stereotype fig profile icon  end_name  begin_operator  end_operator  begin_name set owner  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get owner  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name stereotype fig profile icon  end_name  begin_operator  end_operator  begin_name set location  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get big port  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get location  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add fig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name stereotype fig profile icon  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name original name fig  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name get name fig  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name fig text  end_name  end_type  begin_name label fig  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name stereotype fig profile icon  end_name  begin_operator  end_operator  begin_name get label fig  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set name fig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name label fig  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name label fig  end_name  begin_operator  end_operator  begin_name add property change listener  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get big port  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set bounds  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name stereotype fig profile icon  end_name  begin_operator  end_operator  begin_name get bounds  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name fig  end_name  begin_range  begin_expr  begin_call  begin_name get figs  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name fig  end_name  begin_operator  end_operator  begin_name fig  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name set visible  end_name  begin_argument_list  begin_argument  begin_expr  begin_name fig  end_name  begin_operator  end_operator  begin_name stereotype fig profile icon  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  end_block  end_then  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name practical view  end_name  begin_operator  end_operator  begin_name  begin_name diagram appearance  end_name  begin_operator  end_operator  begin_name stereotype view small icon  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name get x  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name get width  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name icon width  end_name  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name stereo  end_name  begin_range  begin_expr  begin_name stereos  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_comment todo find a way to replace this dependency on project  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name image  end_name  end_type  begin_name icon  end_name  begin_init  begin_expr  begin_call  begin_name get project  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get profile configuration  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get fig node strategy  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get icon for stereotype  end_name  begin_argument_list  begin_argument  begin_expr  begin_name stereo  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name icon  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name fig image  end_name  end_type  begin_name fimg  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name fig image  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name get big port  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get y  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name icon  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name fimg  end_name  begin_operator  end_operator  begin_name set size  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name icon width  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name icon  end_name  begin_operator  end_operator  begin_name get height  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_name icon width  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name icon  end_name  begin_operator  end_operator  begin_name get width  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add fig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name fimg  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name floating stereotypes  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name fimg  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name icon width  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name update small icons  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name get width  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  begin_comment todo this is a redundant invocation  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name update stereotype text  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name damage  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name calc bounds  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name update edges  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name update bounds  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name redraw  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment todo move this in fig group in gef param scb the suppress calc bounds to set end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set suppress calc bounds  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name scb  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name suppress calc bounds  end_name  end_name  begin_operator  end_operator  begin_name scb  end_name  end_expr  end_expr_stmt  end_block 
begin_comment return a stereotype view which is most practical for the current conditions if the current mode is set to code big icon code mode and the model element has zero or more than one stereotype the practical view should be the textual view return current practical stereotype view end_comment begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name get practical view  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment todo assert model element null  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name practical view  end_name  begin_init  begin_expr  begin_call  begin_name get stereotype view  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  begin_init  begin_expr  begin_call  begin_name get owner  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name model element  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name stereotype count  end_name  begin_init  begin_expr  begin_call  begin_name get stereotype count  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name get stereotype view  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name  begin_name diagram appearance  end_name  begin_operator  end_operator  begin_name stereotype view big icon  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment todo find a way to replace this dependency on project  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name fig node strategy  end_name  end_type  begin_name fig node strategy  end_name  begin_init  begin_expr  begin_call  begin_name get project  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get profile configuration  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get fig node strategy  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name iterator  end_name  begin_argument_list  begin_argument  begin_name fig stereotype  end_name  end_argument  end_argument_list  end_name  end_type  begin_name figs iterator  end_name  begin_init  begin_expr  begin_call  begin_name get stereotype fig  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get stereotype figs  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name iterator  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name owner  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name figs iterator  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name figs iterator  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get owner  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name stereotype count  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name fig node strategy  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name owner  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name stereotype count  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name fig node strategy  end_name  begin_operator  end_operator  begin_name get icon for stereotype  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name owner  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name practical view  end_name  begin_operator  end_operator  begin_name  begin_name diagram appearance  end_name  begin_operator  end_operator  begin_name stereotype view textual  end_name  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  end_if  begin_return  begin_expr  begin_name practical view  end_name  end_expr  end_return  end_block 
begin_comment changes the font for all figs contained in the given fig group p todo in fact there is a design error in this method e g for a class if the name is italic since the class is abstract then the classes features should be in plain font this problem can be fixed by implementing the update font method in all subclasses param fg the fig group to change the font of end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name deep update font  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name fig group  end_name  end_type  begin_name fg  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo fonts shouldn t be handled any differently than other  end_comment  begin_comment rendering attributes  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name changed  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name fig  end_name  end_argument  end_argument_list  end_name  end_type  begin_name figs  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name fg  end_name  begin_operator  end_operator  begin_name get figs  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name fig  end_name  end_type  begin_name f  end_name  begin_range  begin_expr  begin_name figs  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_name f  end_name  begin_operator  end_operator  begin_name argo fig text  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name argo fig text  end_name  begin_operator  end_operator  begin_name f  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name rendering changed  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name changed  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name f  end_name  begin_operator  end_operator  begin_name fig group  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name deep update font  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name fig group  end_name  begin_operator  end_operator  begin_name f  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  begin_if  begin_condition  begin_expr  begin_name changed  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name fg  end_name  begin_operator  end_operator  begin_name calc bounds  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block 
begin_comment todo this function attempts to optimize the more generic code in the parent which also works correctly in this case is this a good idea end_comment begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name dimension  end_name  end_type  begin_name get minimum size  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name dimension  end_name  end_type  begin_name d  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name dimension  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name font  end_name  end_type  begin_name font  end_name  begin_init  begin_expr  begin_call  begin_name get font  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name font  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name d  end_name  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name max w  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name max h  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name get font metrics  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name max h  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name font  end_name  begin_operator  end_operator  begin_name get size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name max h  end_name  begin_operator  end_operator  begin_call  begin_name get font metrics  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get height  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name max w  end_name  begin_operator  end_operator  begin_call  begin_name get font metrics  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name string width  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get text  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_comment now force minimum dimensions for the text  end_comment  begin_expr_stmt  begin_expr  begin_name max w  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name max  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name max w  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name min text width  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment now add the areas around the text to return the complete size  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name overall h  end_name  begin_init  begin_expr  begin_name max h  end_name  begin_operator  end_operator  begin_call  begin_name get top margin  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get bot margin  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get line width  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name overall w  end_name  begin_init  begin_expr  begin_name max w  end_name  begin_operator  end_operator  begin_call  begin_name get left margin  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get right margin  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get line width  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name d  end_name  begin_operator  end_operator  begin_name width  end_name  end_name  begin_operator  end_operator  begin_name overall w  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name d  end_name  begin_operator  end_operator  begin_name height  end_name  end_name  begin_operator  end_operator  begin_name overall h  end_name  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name d  end_name  end_expr  end_return  end_block 
begin_comment utility function to localize the given string with help text and show it in the status bar of the argo uml window this function is used in favour of the inline call to enable later improvements e g it would be possible to show a help balloon p todo this code is also present in other root figs param s the given string to be localized and shown end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name show help  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name s  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name argo event pump  end_name  begin_operator  end_operator  begin_name fire event  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name argo help event  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name argo event types  end_name  begin_operator  end_operator  begin_name help changed  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment see org tigris gef presentation fig remove from diagram end_comment begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name remove from diagram  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment remove all items in the group otherwise the model event listeners remain todo why does a fig group not do this  end_comment  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name f  end_name  begin_range  begin_expr  begin_call  begin_name get figs  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name fig  end_name  begin_operator  end_operator  begin_name f  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name remove from diagram  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name remove from diagram  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get pump  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name remove model event listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get owner  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment todo this should become private and only called from constructor see org argouml uml diagram ui fig compartment populate end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name populate  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_name stereotype count  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  begin_init  begin_expr  begin_call  begin_name get owner  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name model element  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment todo this block can be removed after issue 4075 is tackled  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name is debug enabled  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment this will contain the figs that we do not need anymore  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name fig  end_name  end_argument  end_argument_list  end_name  end_type  begin_name remove collection  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name fig  end_name  end_argument  end_argument_list  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get figs  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment there is one fig more in the group than stereotypes keyword  end_comment  begin_if  begin_condition  begin_expr  begin_name keyword  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name fig keyword  end_name  end_type  begin_name keyword fig  end_name  begin_init  begin_expr  begin_call  begin_name find fig keyword  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name keyword fig  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment the keyword fig does not exist yet  end_comment  begin_comment let s create one  end_comment  begin_expr_stmt  begin_expr  begin_name keyword fig  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name fig keyword  end_name  begin_argument_list  begin_argument  begin_expr  begin_name keyword  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get bounds for next stereotype  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get settings  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment bounds not relevant here  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name add fig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name keyword fig  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_comment the keyword fig already exists  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name remove collection  end_name  begin_operator  end_operator  begin_name remove  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name keyword fig  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_name stereotype count  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name stereo  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get stereotypes  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name fig stereotype  end_name  end_type  begin_name stereotype text fig  end_name  begin_init  begin_expr  begin_call  begin_name find fig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name stereo  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name stereotype text fig  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name stereotype text fig  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name fig stereotype  end_name  begin_argument_list  begin_argument  begin_expr  begin_name stereo  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get bounds for next stereotype  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get settings  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment bounds not relevant here  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name add fig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name stereotype text fig  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_comment the stereotype fig already exists  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name remove collection  end_name  begin_operator  end_operator  begin_name remove  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name stereotype text fig  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_name stereotype count  end_name  end_expr  end_expr_stmt  end_block  end_for  begin_comment cleanup of unused fig text s  end_comment  begin_for  begin_init  begin_decl  begin_type  begin_name fig  end_name  end_type  begin_name f  end_name  begin_range  begin_expr  begin_name remove collection  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_name f  end_name  begin_operator  end_operator  begin_name fig stereotype  end_name  begin_operator  end_operator  begin_name f  end_name  begin_operator  end_operator  begin_name fig keyword  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name remove fig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name f  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name reorder stereotype figs  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment remove all stereotypes that have a graphical icon  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name update hidden stereotypes  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name image  end_name  end_type  begin_name get icon for stereotype  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name fig stereotype  end_name  end_type  begin_name fs  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo find a way to replace this dependency on project  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name project  end_name  end_type  begin_name project  end_name  begin_init  begin_expr  begin_call  begin_name get project  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name project  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name warn  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name owner  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name fs  end_name  begin_operator  end_operator  begin_name get owner  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name owner  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment keywords which look like a stereotype e g interface have  end_comment  begin_comment no owner  end_comment  begin_return  begin_expr  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name get profile configuration  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get fig node strategy  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get icon for stereotype  end_name  begin_argument_list  begin_argument  begin_expr  begin_name owner  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_else  end_if  end_block 
begin_comment the constructor end_comment begin_specifier  end_specifier  begin_name fig trace  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment todo why are these different colors tfm  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name get fig  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set line color  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name color  end_name  begin_operator  end_operator  begin_name red  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name arrow head triangle  end_name  end_type  begin_name end arrow  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name arrow head triangle  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name end arrow  end_name  begin_operator  end_operator  begin_name set fill color  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name color  end_name  begin_operator  end_operator  begin_name red  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set dest arrow head  end_name  begin_argument_list  begin_argument  begin_expr  begin_name end arrow  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set between nearest points  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment the constructor param edge the owning uml element end_comment begin_specifier  end_specifier  begin_name fig trace  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name edge  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name this  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set owner  end_name  begin_argument_list  begin_argument  begin_expr  begin_name edge  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment perform re routing if src dest nodes have changed p this method needs to be armed by a previous mouse dragged to avoid the situation where the user just clicks on the node then clicks on some unrelated fig without moving the edge p todo improve the fig finding algorithm to find the top most fig in the layer will be useful for nested states in a statechart see java awt event mouse listener mouse released java awt event mouse event end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name mouse released  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name mouse event  end_name  end_type  begin_name me  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment check pre conds  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name me  end_name  begin_operator  end_operator  begin_name is consumed  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_name armed  end_name  begin_operator  end_operator  begin_name point index  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name armed  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name mouse released  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name me  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_then  end_if  begin_comment set up  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name x  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name me  end_name  begin_operator  end_operator  begin_name get x  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  begin_operator  end_operator  begin_name y  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name me  end_name  begin_operator  end_operator  begin_name get y  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment the fig that was under the mouse when it was released  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name fig node model element  end_name  end_type  begin_name new fig  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_comment make a nice little target area  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name rectangle  end_name  end_type  begin_name mouse point  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name rectangle  end_name  begin_argument_list  begin_argument  begin_expr  begin_name x  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name y  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment and find the fig  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name editor  end_name  end_type  begin_name editor  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name globals  end_name  begin_operator  end_operator  begin_name cur editor  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name layer manager  end_name  end_type  begin_name lm  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name editor  end_name  begin_operator  end_operator  begin_name get layer manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name layer  end_name  end_type  begin_name active  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name lm  end_name  begin_operator  end_operator  begin_name get active layer  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name enumeration  end_name  end_type  begin_name figs  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name active  end_name  begin_operator  end_operator  begin_name elements in  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name mouse point  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment last is the top fig  end_comment  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name figs  end_name  begin_operator  end_operator  begin_name has more elements  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name fig  end_name  end_type  begin_name candidate fig  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name fig  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name figs  end_name  begin_operator  end_operator  begin_name next element  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name candidate fig  end_name  begin_operator  end_operator  begin_name fig node model element  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name candidate fig  end_name  begin_operator  end_operator  begin_name is selectable  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name new fig  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name fig node model element  end_name  begin_operator  end_operator  begin_name candidate fig  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_while  begin_comment check intermediate post condition  end_comment  begin_if  begin_condition  begin_expr  begin_name new fig  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name armed  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name mouse released  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name me  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name uml mutable graph support  end_name  end_type  begin_name mgm  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name uml mutable graph support  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name editor  end_name  begin_operator  end_operator  begin_name get graph model  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name fig node  end_name  end_type  begin_name old fig  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name is source  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name point index  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name old fig  end_name  begin_operator  end_operator  begin_name source fig  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name is source  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name old fig  end_name  begin_operator  end_operator  begin_name dest fig  end_name  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_comment delegate the re routing to graphmodels  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name mgm  end_name  begin_operator  end_operator  begin_name can change connected node  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name new fig  end_name  begin_operator  end_operator  begin_name get owner  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name old fig  end_name  begin_operator  end_operator  begin_name get owner  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name get content  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get owner  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mgm  end_name  begin_operator  end_operator  begin_name change connected node  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name new fig  end_name  begin_operator  end_operator  begin_name get owner  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name old fig  end_name  begin_operator  end_operator  begin_name get owner  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name get content  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get owner  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name is source  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name editor  end_name  begin_operator  end_operator  begin_name get selection manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name deselect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get content  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name armed  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_comment todo there is a cyclic dependency between selection reroute edge  end_comment  begin_comment and fig edge model element  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name fig edge model element  end_name  end_type  begin_name fig edge  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name fig edge model element  end_name  begin_operator  end_operator  begin_call  begin_name get content  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name fig edge  end_name  begin_operator  end_operator  begin_name determine fig nodes  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name fig edge  end_name  begin_operator  end_operator  begin_name compute route  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name mouse released  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name me  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block 
begin_comment sets the toolbar adds the toolbar to the north borderlayout position of the diagram p param toolbar is the toolbar to be set end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set tool bar  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name j tool bar  end_name  end_type  begin_name toolbar  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo this must happen on the awt thread  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name arrays  end_name  begin_operator  end_operator  begin_name as list  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get components  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name toolbar  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name target  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name remove  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name uml diagram  end_name  begin_operator  end_operator  begin_call  begin_name get target  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get j tool bar  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name toolbar  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name border layout  end_name  begin_operator  end_operator  begin_name north  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name tool bar  end_name  begin_operator  end_operator  begin_name toolbar  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name invalidate  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name validate  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name repaint  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block 
begin_comment create a new diagram name return string end_comment begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name get new diagram name  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment todo add unnamed or new or something localized of course  end_comment  begin_return  begin_comment unnamed  end_comment  begin_expr  begin_call  begin_name get label name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment create a nary association diamond shaped fig node on this diagram param model element the model element this fig node is to represent param bounds the position and size for the diamond node param settings the diagram setting for presentation return the fig node of the diamond representing the model element end_comment begin_type  begin_specifier  end_specifier  begin_name fig node model element  end_name  end_type  begin_name create nary association node  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name rectangle  end_name  end_type  begin_name bounds  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name diagram settings  end_name  end_type  begin_name settings  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name fig node association  end_name  end_type  begin_name diamond fig  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name fig node association  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name bounds  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name settings  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a association class  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_name bounds  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name fig class association class  end_name  end_type  begin_name class box fig  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name fig class association class  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name bounds  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name settings  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name fig edge association class  end_name  end_type  begin_name dash edge fig  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name fig edge association class  end_name  begin_argument_list  begin_argument  begin_expr  begin_name class box fig  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name diamond fig  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name settings  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name class box fig  end_name  begin_operator  end_operator  begin_name rendering changed  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo why isn t this calculation for location working  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name point  end_name  end_type  begin_name location  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name bounds  end_name  begin_operator  end_operator  begin_name get location  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name location  end_name  begin_operator  end_operator  begin_name y  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name location  end_name  begin_operator  end_operator  begin_name y  end_name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name diamond fig  end_name  begin_operator  end_operator  begin_name get height  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name  begin_name location  end_name  begin_operator  end_operator  begin_name y  end_name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name  begin_name location  end_name  begin_operator  end_operator  begin_name y  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name class box fig  end_name  begin_operator  end_operator  begin_name set location  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name location  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name diamond fig  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name class box fig  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dash edge fig  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_name diamond fig  end_name  end_expr  end_return  end_block 
begin_comment if node null end_commentbegin_comment throw new illegal argument exception end_commentbegin_comment a model element must be supplied end_commentbegin_comment  end_commentbegin_comment fig node fig node null end_commentbegin_comment if model get facade is a comment node end_commentbegin_comment fig node new fig comment end_commentbegin_comment else if model get facade is a stub state node end_commentbegin_comment return new fig stub state end_commentbegin_comment else if model get facade is a association class node end_commentbegin_comment fig node new fig class association class node x y 10 10 end_commentbegin_comment else if model get facade is a class node end_commentbegin_comment fig node new fig class node x y 10 10 end_commentbegin_comment else if model get facade is a interface node end_commentbegin_comment fig node new fig interface end_commentbegin_comment else if model get facade is a enumeration node end_commentbegin_comment fig node new fig enumeration end_commentbegin_comment else if model get facade is a stereotype node end_commentbegin_comment fig node new fig stereotype declaration end_commentbegin_comment else if model get facade is a data type node end_commentbegin_comment fig node new fig data type end_commentbegin_comment else if model get facade is a model node end_commentbegin_comment fig node new fig model node x y end_commentbegin_comment else if model get facade is a subsystem node end_commentbegin_comment fig node new fig subsystem node x y end_commentbegin_comment else if model get facade is a package node end_commentbegin_comment fig node new fig package node x y end_commentbegin_comment else if model get facade is a association node end_commentbegin_comment fig node new fig node association end_commentbegin_comment else if model get facade is a actor node end_commentbegin_comment fig node new fig actor end_commentbegin_comment else if model get facade is a use case node end_commentbegin_comment fig node new fig use case end_commentbegin_comment else if model get facade is a partition node end_commentbegin_comment fig node new fig partition end_commentbegin_comment else if model get facade is a call state node end_commentbegin_comment fig node new fig call state end_commentbegin_comment else if model get facade is a object flow state node end_commentbegin_comment fig node new fig object flow state end_commentbegin_comment else if model get facade is a subactivity state node end_commentbegin_comment fig node new fig subactivity state end_commentbegin_comment else if model get facade is a classifier role node end_commentbegin_comment fig node new fig classifier role end_commentbegin_comment else if model get facade is a message node end_commentbegin_comment fig node new fig message end_commentbegin_comment else if model get facade is a node node end_commentbegin_comment fig node new fig m node end_commentbegin_comment else if model get facade is a node instance node end_commentbegin_comment fig node new fig node instance end_commentbegin_comment else if model get facade is a component node end_commentbegin_comment fig node new fig component end_commentbegin_comment else if model get facade is a component instance node end_commentbegin_comment fig node new fig component instance end_commentbegin_comment else if model get facade is a object node end_commentbegin_comment fig node new fig object end_commentbegin_comment else if model get facade is a comment node end_commentbegin_comment fig node new fig comment end_commentbegin_comment else if model get facade is a action state node end_commentbegin_comment fig node new fig action state end_commentbegin_comment else if model get facade is a final state node end_commentbegin_comment fig node new fig final state end_commentbegin_comment else if model get facade is a submachine state node end_commentbegin_comment fig node new fig submachine state end_commentbegin_comment else if model get facade is a concurrent region node end_commentbegin_comment fig node new fig concurrent region end_commentbegin_comment else if model get facade is a synch state node end_commentbegin_comment fig node new fig synch state end_commentbegin_comment else if model get facade is a composite state node end_commentbegin_comment fig node new fig composite state end_commentbegin_comment else if model get facade is a state node end_commentbegin_comment fig node new fig simple state end_commentbegin_comment else if model get facade is a pseudostate node end_commentbegin_comment object p state node end_commentbegin_comment object kind model get facade get kind p state end_commentbegin_comment if model get pseudostate kind get initial equals kind end_commentbegin_comment fig node new fig initial state end_commentbegin_comment else if model get pseudostate kind get choice end_commentbegin_comment equals kind end_commentbegin_comment fig node new fig branch state end_commentbegin_comment else if model get pseudostate kind get junction end_commentbegin_comment equals kind end_commentbegin_comment fig node new fig junction state end_commentbegin_comment else if model get pseudostate kind get fork equals kind end_commentbegin_comment fig node new fig fork state end_commentbegin_comment else if model get pseudostate kind get join equals kind end_commentbegin_comment fig node new fig join state end_commentbegin_comment else if model get pseudostate kind get shallow history end_commentbegin_comment equals kind end_commentbegin_comment fig node new fig shallow history state end_commentbegin_comment else if model get pseudostate kind get deep history end_commentbegin_comment equals kind end_commentbegin_comment fig node new fig deep history state end_commentbegin_comment  end_commentbegin_comment  end_commentbegin_comment  end_commentbegin_comment if fig node null end_commentbegin_comment throw new illegal argument exception end_commentbegin_comment failed to construct a fig node for node end_commentbegin_comment  end_commentbegin_comment set style attributes fig node style attributes end_commentbegin_comment  end_commentbegin_comment return fig node end_commentbegin_comment set the fig style according to attributes p todo this is never used can we remove param fig the fig to style param attribute map a map of name value pairs end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set style attributes  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name fig  end_name  end_type  begin_name fig  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name map  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  end_type  begin_name attribute map  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name value  end_name  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name  begin_name map  end_name  begin_operator  end_operator  begin_name  begin_name entry  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  end_name  end_type  begin_name entry  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name attribute map  end_name  begin_operator  end_operator  begin_name entry set  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_expr_stmt  begin_expr  begin_name name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name entry  end_name  begin_operator  end_operator  begin_name get key  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name value  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name entry  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name fig  end_name  begin_operator  end_operator  begin_name fig compartment box  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name fig compartment box  end_name  end_type  begin_name fcb  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name fig compartment box  end_name  begin_operator  end_operator  begin_name fig  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name fcb  end_name  begin_operator  end_operator  begin_name show compartment  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get operation  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name equals ignore case  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name fcb  end_name  begin_operator  end_operator  begin_name show compartment  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get attribute  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name equals ignore case  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name fcb  end_name  begin_operator  end_operator  begin_name show compartment  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get enumeration literal  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name equals ignore case  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name fcb  end_name  begin_operator  end_operator  begin_name show compartment  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get extension point  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name equals ignore case  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_block  end_then  end_if  end_block  end_for  end_block 
begin_comment the connect method without specifying a connection type is unavailable in the argo uml implmentation inherit doc end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name connect  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name from port  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name to port  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name unsupported operation exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block 
begin_comment the connect method specifying a connection type by class is unavailable in the argo uml implementation todo this should be unsupported use the 3 object version inherit doc end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name connect  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name from port  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name to port  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name class  end_name  end_type  begin_name edge class  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name connect  end_name  begin_argument_list  begin_argument  begin_expr  begin_name from port  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name to port  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name object  end_name  begin_operator  end_operator  begin_name edge class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment construct and add a new edge of the given kind and connect the given ports param from port the originating port to connect param to port the destination port to connect param edge type the type of edge to create this is one of the types returned by the methods of code org argouml model meta types code return the type of edge created the same as code edge class code if we succeeded code null code otherwise end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name connect  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name from port  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name to port  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name edge type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment if this was an association then there will be relevant  end_comment  begin_comment information to fetch out of the mode arguments if it  end_comment  begin_comment not an association then these will be passed forward  end_comment  begin_comment harmlessly as null  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name editor  end_name  end_type  begin_name cur editor  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name globals  end_name  begin_operator  end_operator  begin_name cur editor  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name mode manager  end_name  end_type  begin_name mode manager  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name cur editor  end_name  begin_operator  end_operator  begin_name get mode manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name mode  end_name  end_type  begin_name mode  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name mode manager  end_name  begin_operator  end_operator  begin_name top  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name dictionary  end_name  end_type  begin_name args  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name mode  end_name  begin_operator  end_operator  begin_name get args  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name style  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name unidirectional  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name boolean  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model  end_name  begin_init  begin_expr  begin_call  begin_name get project  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get model  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment create the uml connection of the given type between the  end_comment  begin_comment given model elements  end_comment  begin_comment default aggregation none  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name connection  end_name  begin_init  begin_expr  begin_call  begin_name build connection  end_name  begin_argument_list  begin_argument  begin_expr  begin_name edge type  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name from port  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name style  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name to port  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name unidirectional  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name connection  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name is debug enabled  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name edge type  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name from port  end_name  begin_operator  end_operator  begin_name get class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name to port  end_name  begin_operator  end_operator  begin_name get class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name add edge  end_name  begin_argument_list  begin_argument  begin_expr  begin_name connection  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name is debug enabled  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name edge type  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name from port  end_name  begin_operator  end_operator  begin_name get class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name to port  end_name  begin_operator  end_operator  begin_name get class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_name connection  end_name  end_expr  end_return  end_block 
begin_comment construct and add a new edge of the given kind and connect the given ports param from port the originating port to connect param to port the destination port to connect param edge type an indicator of the edge type to create param style attributes key value pairs from which to style the edge return the type of edge created the same as code edge class code if we succeeded code null code otherwise end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name connect  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name from port  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name to port  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name edge type  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name map  end_name  end_type  begin_name style attributes  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  end_expr  end_return  end_block 
begin_comment return the source end of an edge param edge the edge for which we want the source port return the source port for the edge or code null code if the edge given is of the wrong type or has no source defined end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get source port  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name edge  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name edge  end_name  begin_operator  end_operator  begin_name comment edge  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name comment edge  end_name  begin_operator  end_operator  begin_name edge  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get source  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a relationship  end_name  begin_argument_list  begin_argument  begin_expr  begin_name edge  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a transition  end_name  begin_argument_list  begin_argument  begin_expr  begin_name edge  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a association end  end_name  begin_argument_list  begin_argument  begin_expr  begin_name edge  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get uml helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get source  end_name  begin_argument_list  begin_argument  begin_expr  begin_name edge  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a link  end_name  begin_argument_list  begin_argument  begin_expr  begin_name edge  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get common behavior helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get source  end_name  begin_argument_list  begin_argument  begin_expr  begin_name edge  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_else  end_if  end_else  end_if  begin_comment don t know what to do otherwise  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name get class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to string  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name edge  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  end_expr  end_return  end_block 
begin_comment return the destination end of an edge param edge the edge for which we want the destination port return the destination port for the edge or code null code if the edge given is otf the wrong type or has no destination defined end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get dest port  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name edge  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name edge  end_name  begin_operator  end_operator  begin_name comment edge  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name comment edge  end_name  begin_operator  end_operator  begin_name edge  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get destination  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a association  end_name  begin_argument_list  begin_argument  begin_expr  begin_name edge  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name list  end_name  end_type  begin_name conns  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name array list  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get connections  end_name  begin_argument_list  begin_argument  begin_expr  begin_name edge  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_call  begin_name  begin_name conns  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a relationship  end_name  begin_argument_list  begin_argument  begin_expr  begin_name edge  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a transition  end_name  begin_argument_list  begin_argument  begin_expr  begin_name edge  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a association end  end_name  begin_argument_list  begin_argument  begin_expr  begin_name edge  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get uml helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get destination  end_name  begin_argument_list  begin_argument  begin_expr  begin_name edge  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a link  end_name  begin_argument_list  begin_argument  begin_expr  begin_name edge  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get common behavior helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get destination  end_name  begin_argument_list  begin_argument  begin_expr  begin_name edge  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_else  end_if  end_else  end_if  end_else  end_if  begin_comment don t know what to do otherwise  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name get class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to string  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name edge  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  end_expr  end_return  end_block 
begin_comment initialization which is common to multiple constructors p there should be no size calculations here nor color setting since not all attributes are set yet like e g fill color end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name initialize  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name rectangle  end_name  end_type  begin_name bounds  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name enable size checking  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set suppress calc bounds  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name fig extension points compartment  end_name  end_type  begin_name epc  end_name  begin_init  begin_comment side effect this creates the fig  end_comment  begin_expr  begin_call  begin_name get extension points compartment  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment a use case has an external separator external means external to the compartment box this horizontal line sticks out of the box and touches the ellipse edge  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name fig  end_name  end_type  begin_name separator fig  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name epc  end_name  begin_operator  end_operator  begin_name get separator fig  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo this next line prevent loading a use case with a stereotype to grow why  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name get stereotype fig  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set visible  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment add figs to the fig node in back to front order  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name add fig  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get big port  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add fig  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get name fig  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment stereotype fig covers the name fig  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name add fig  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get stereotype fig  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add fig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name epc  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add fig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name separator fig  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment make all the parts match the main fig  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name set filled  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name set fill color  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name fill color  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name set line color  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name line color  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name set line width  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name line width  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment by default do not show extension points  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name set extension points visible  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment set the drop location in the case of d d  end_comment  begin_if  begin_condition  begin_expr  begin_name bounds  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name set location  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name bounds  end_name  begin_operator  end_operator  begin_name x  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name bounds  end_name  begin_operator  end_operator  begin_name y  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name set suppress calc bounds  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set bounds  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get bounds  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name enable size checking  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment compute the border point of the ellipse that is on the edge between the stored upper left corner and the given parameter p todo once we are at gef version 0 13 1 m 4 this method and in fact the whole class can be removed since it was taken over by gef in revision 1279 param another pt the remote point to which an edge is drawn return the connection point on the boundary of the ellipse end_comment begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name point  end_name  end_type  begin_name connection point  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name point  end_name  end_type  begin_name another pt  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name double  end_name  end_type  begin_name rx  end_name  begin_init  begin_expr  begin_name w  end_name  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name double  end_name  end_type  begin_name ry  end_name  begin_init  begin_expr  begin_name h  end_name  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name double  end_name  end_type  begin_name dx  end_name  begin_init  begin_expr  begin_name  begin_name another pt  end_name  begin_operator  end_operator  begin_name x  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name x  end_name  begin_operator  end_operator  begin_name rx  end_name  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name double  end_name  end_type  begin_name dy  end_name  begin_init  begin_expr  begin_name  begin_name another pt  end_name  begin_operator  end_operator  begin_name y  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name y  end_name  begin_operator  end_operator  begin_name ry  end_name  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name double  end_name  end_type  begin_name dd  end_name  begin_init  begin_expr  begin_name ry  end_name  begin_operator  end_operator  begin_name ry  end_name  begin_operator  end_operator  begin_name dx  end_name  begin_operator  end_operator  begin_name dx  end_name  begin_operator  end_operator  begin_name rx  end_name  begin_operator  end_operator  begin_name rx  end_name  begin_operator  end_operator  begin_name dy  end_name  begin_operator  end_operator  begin_name dy  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name double  end_name  end_type  begin_name mu  end_name  begin_init  begin_expr  begin_name rx  end_name  begin_operator  end_operator  begin_name ry  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name sqrt  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dd  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name point  end_name  end_type  begin_name res  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name point  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name int  end_name  begin_argument_list  begin_argument  begin_expr  begin_name mu  end_name  begin_operator  end_operator  begin_name dx  end_name  begin_operator  end_operator  begin_name x  end_name  begin_operator  end_operator  begin_name rx  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name int  end_name  begin_argument_list  begin_argument  begin_expr  begin_name mu  end_name  begin_operator  end_operator  begin_name dy  end_name  begin_operator  end_operator  begin_name y  end_name  begin_operator  end_operator  begin_name ry  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_name res  end_name  end_expr  end_return  end_block 
begin_comment use the code from the fig circle not the one from fig end_comment begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name point  end_name  end_type  begin_name connection point  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name point  end_name  end_type  begin_name another pt  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name get big port  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name connection point  end_name  begin_argument_list  begin_argument  begin_expr  begin_name another pt  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment return a fig that can be used to represent the given node p param gm the graph model for which we are rendering param lay the layer in the graph on which we want this figure param node the node to be rendered an model element object param style attributes an optional map of attributes to style the fig return the fig to be used or code null code if we can t create one end_comment begin_type  begin_specifier  end_specifier  begin_name fig node  end_name  end_type  begin_name get fig node for  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name graph model  end_name  end_type  begin_name gm  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name layer  end_name  end_type  begin_name lay  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name map  end_name  end_type  begin_name style attributes  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name fig node model element  end_name  end_type  begin_name fig node  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_comment create a new version of the relevant fig  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name argo diagram  end_name  end_type  begin_name diag  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name diagram utils  end_name  begin_operator  end_operator  begin_name get active diagram  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name diag  end_name  begin_operator  end_operator  begin_name uml diagram  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name uml diagram  end_name  begin_operator  end_operator  begin_name diag  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name does accept  end_name  begin_argument_list  begin_argument  begin_expr  begin_name node  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name fig node  end_name  begin_operator  end_operator  begin_call  begin_name fig node model element  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name uml diagram  end_name  begin_operator  end_operator  begin_name diag  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name drop  end_name  begin_argument_list  begin_argument  begin_expr  begin_name node  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name get class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to string  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name gm  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name lay  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  end_expr  end_return  begin_comment todo shouldn t we throw an exception here  end_comment  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name lay  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name fig node  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name fig node  end_name  begin_operator  end_operator  begin_name set di element  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name graph change adapter  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name gm  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name node  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name fig node  end_name  end_expr  end_return  end_block 
begin_comment write todo check if sections are not used within the file and put them as comments at the end of the file hint use a second map to compare with the used keys param filename the file name param indent the current indentation param output lost sections true if lost sections are to be written end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name write  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name filename  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name indent  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name output lost sections  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_try  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name file reader  end_name  end_type  begin_name f  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name file reader  end_name  begin_argument_list  begin_argument  begin_expr  begin_name filename  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name buffered reader  end_name  end_type  begin_name fr  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name buffered reader  end_name  begin_argument_list  begin_argument  begin_expr  begin_name f  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo this is using the default platform character encoding  end_comment  begin_comment specifying an encoding will produce more predictable results  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name file writer  end_name  end_type  begin_name fw  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name file writer  end_name  begin_argument_list  begin_argument  begin_expr  begin_name filename  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name line  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name line  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name fr  end_name  begin_operator  end_operator  begin_name read line  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_while  begin_condition  begin_expr  begin_name line  end_name  begin_operator  end_operator  end_expr  end_condition  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name section id  end_name  begin_init  begin_expr  begin_call  begin_name get sect id  end_name  begin_argument_list  begin_argument  begin_expr  begin_name line  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name section id  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name content  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name m ary  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name section id  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name content  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name fw  end_name  begin_operator  end_operator  begin_name write  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name line  end_name  begin_operator  end_operator  begin_name line separator  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name fw  end_name  begin_operator  end_operator  begin_name write  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name content  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment read until the end section is found discard  end_comment  begin_comment generated content  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name end section id  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_do  begin_block  begin_expr_stmt  begin_expr  begin_name line  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name fr  end_name  begin_operator  end_operator  begin_name read line  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name line  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name eof exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name section id  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name end section id  end_name  begin_operator  end_operator  begin_call  begin_name get sect id  end_name  begin_argument_list  begin_argument  begin_expr  begin_name line  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_condition  begin_expr  begin_name end section id  end_name  begin_operator  end_operator  end_expr  end_condition  end_do  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name end section id  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name section id  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name section id  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name end section id  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name m ary  end_name  begin_operator  end_operator  begin_name remove  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name section id  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name fw  end_name  begin_operator  end_operator  begin_name write  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name line  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name line  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name fr  end_name  begin_operator  end_operator  begin_name read line  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name line  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name fw  end_name  begin_operator  end_operator  begin_name write  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name line separator  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_while  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name m ary  end_name  begin_operator  end_operator  begin_name is empty  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name output lost sections  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name fw  end_name  begin_operator  end_operator  begin_name write  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name line separator  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name set  end_name  end_type  begin_name map entries  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name m ary  end_name  begin_operator  end_operator  begin_name entry set  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name itr  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name map entries  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name itr  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name map  end_name  begin_operator  end_operator  begin_name entry  end_name  end_name  end_type  begin_name entry  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name map  end_name  begin_operator  end_operator  begin_name entry  end_name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name itr  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name fw  end_name  begin_operator  end_operator  begin_name write  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name indent  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name entry  end_name  begin_operator  end_operator  begin_name get key  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_name line separator  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name fw  end_name  begin_operator  end_operator  begin_name write  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name string  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name entry  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name fw  end_name  begin_operator  end_operator  begin_name write  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name indent  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name entry  end_name  begin_operator  end_operator  begin_name get key  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_name line separator  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_while  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name fw  end_name  begin_operator  end_operator  begin_name write  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name fr  end_name  begin_operator  end_operator  begin_name close  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name fw  end_name  begin_operator  end_operator  begin_name close  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name io exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  end_try  end_block 
begin_comment end if is path in model else end_commentbegin_comment end for all languages end_commentbegin_comment todo do something with the generated list file names end_commentbegin_comment for example show it to the user in a dialog box end_commentbegin_comment save the source language in the model p todo support multiple languages now that we have uml 1 4 tagged values param node param language end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name save language  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name language  end_name  end_type  begin_name language  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name tagged value  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get tagged value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name node  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name source language tag  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name tagged value  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name saved lang  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get value of tag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tagged value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name language  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name saved lang  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get extension mechanisms helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set value of tag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tagged value  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name language  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name tagged value  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get extension mechanisms factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name build tagged value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name source language tag  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name language  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get extension mechanisms helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add tagged value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name node  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name tagged value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name do browse  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_try  begin_block  begin_comment show filechooser to select output directory  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name j file chooser  end_name  end_type  begin_name chooser  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name j file chooser  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name string  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name output directory combo box  end_name  begin_operator  end_operator  begin_name get model  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get selected item  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name chooser  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name chooser  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name j file chooser  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name chooser  end_name  begin_operator  end_operator  begin_name set file hiding enabled  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name chooser  end_name  begin_operator  end_operator  begin_name set multi selection enabled  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name chooser  end_name  begin_operator  end_operator  begin_name set file selection mode  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name j file chooser  end_name  begin_operator  end_operator  begin_name directories only  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name chooser  end_name  begin_operator  end_operator  begin_name set dialog title  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name chooser  end_name  begin_operator  end_operator  begin_name show dialog  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name chooser  end_name  begin_operator  end_operator  begin_name get selected file  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get path  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name path  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name chooser  end_name  begin_operator  end_operator  begin_name get selected file  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get path  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name output directory combo box  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name path  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name output directory combo box  end_name  begin_operator  end_operator  begin_name get model  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set selected item  end_name  begin_argument_list  begin_argument  begin_expr  begin_name path  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment else ignore  end_comment  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name exception  end_name  end_type  begin_name user pressed cancel  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo how does the pressed cancel become a java lang exception  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name info  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  end_try  end_block 
begin_comment create a diagram name from a package name param package name the package name return the name for the diagram end_comment begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name get diagram name  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name package name  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo this transformation is java specific we need a more language notation scheme for specifying qualified names possible algorithm replace all punctuation with our internal separator replace multiple separators with a single instance for languages like c what about i 18 n tfm  end_comment  begin_return  begin_expr  begin_call  begin_name  begin_name package name  end_name  begin_operator  end_operator  begin_name replace  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name diagram name separator  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_name diagram name separator  end_name  begin_operator  end_operator  begin_name diagram name suffix  end_name  end_expr  end_return  end_block 
begin_comment construct the configuration extension panel param settings a list of settings requested by the language importer end_comment begin_specifier  end_specifier  begin_name config panel extension  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name setting  end_name  end_argument  end_argument_list  end_name  end_type  begin_name settings  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name set layout  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name grid bag layout  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name settings  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name settings  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name j label  end_name  end_type  begin_name label  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name j label  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name label  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name create grid bag constraints  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name j panel  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name create grid bag constraints final  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_then  end_if  begin_for  begin_init  begin_decl  begin_type  begin_name setting  end_name  end_type  begin_name setting  end_name  begin_range  begin_expr  begin_name settings  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_name setting  end_name  begin_operator  end_operator  begin_name unique selection 2  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name j label  end_name  end_type  begin_name label  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name j label  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name setting  end_name  begin_operator  end_operator  begin_name get label  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name label  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name create grid bag constraints  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name unique selection 2  end_name  end_type  begin_name us  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name unique selection 2  end_name  begin_operator  end_operator  begin_name setting  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name button group  end_name  end_type  begin_name group  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name button group  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name count  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name option  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name us  end_name  begin_operator  end_operator  begin_name get options  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name j radio button  end_name  end_type  begin_name button  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name j radio button  end_name  begin_argument_list  begin_argument  begin_expr  begin_name option  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name index  end_name  begin_init  begin_expr  begin_name count  end_name  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name us  end_name  begin_operator  end_operator  begin_name get default selection  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name index  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name button  end_name  begin_operator  end_operator  begin_name set selected  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name group  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name button  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name button  end_name  begin_operator  end_operator  begin_name add action listener  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name action listener  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name action performed  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name action event  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name us  end_name  begin_operator  end_operator  begin_name set selection  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name button  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name create grid bag constraints  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name setting  end_name  begin_operator  end_operator  begin_name user string 2  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name j label  end_name  end_type  begin_name label  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name j label  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name setting  end_name  begin_operator  end_operator  begin_name get label  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name label  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name create grid bag constraints  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name user string 2  end_name  end_type  begin_name us  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name user string 2  end_name  begin_operator  end_operator  begin_name setting  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name j text field  end_name  end_type  begin_name text  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name j text field  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name us  end_name  begin_operator  end_operator  begin_name get default string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name text  end_name  begin_operator  end_operator  begin_name add focus listener  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name focus listener  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name focus gained  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name focus event  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  end_block  end_function  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name focus lost  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name focus event  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name us  end_name  begin_operator  end_operator  begin_name set user string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name text  end_name  begin_operator  end_operator  begin_name get text  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name text  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name create grid bag constraints  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name setting  end_name  begin_operator  end_operator  begin_name boolean selection 2  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name boolean selection 2  end_name  end_type  begin_name bs  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name boolean selection 2  end_name  begin_operator  end_operator  begin_name setting  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name j check box  end_name  end_type  begin_name button  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name j check box  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name setting  end_name  begin_operator  end_operator  begin_name get label  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name button  end_name  begin_operator  end_operator  begin_name set enabled  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name bs  end_name  begin_operator  end_operator  begin_name is selected  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name button  end_name  begin_operator  end_operator  begin_name add action listener  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name action listener  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name action performed  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name action event  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name bs  end_name  begin_operator  end_operator  begin_name set selected  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name button  end_name  begin_operator  end_operator  begin_name is selected  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name button  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name create grid bag constraints  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name setting  end_name  begin_operator  end_operator  begin_name path selection  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name j label  end_name  end_type  begin_name label  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name j label  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name setting  end_name  begin_operator  end_operator  begin_name get label  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name label  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name create grid bag constraints  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name path selection  end_name  end_type  begin_name ps  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name path selection  end_name  begin_operator  end_operator  begin_name setting  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo need to add file chooser  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name j text field  end_name  end_type  begin_name text  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name j text field  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name ps  end_name  begin_operator  end_operator  begin_name get default path  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name text  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name create grid bag constraints  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo update setting  end_comment  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name setting  end_name  begin_operator  end_operator  begin_name path list selection  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name path list selection  end_name  end_type  begin_name pls  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name path list selection  end_name  begin_operator  end_operator  begin_name setting  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name import classpath dialog  end_name  begin_argument_list  begin_argument  begin_expr  begin_name pls  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name create grid bag constraints  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name runtime exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name setting  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name j panel  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name create grid bag constraints final  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment get the files we generate it based on their specified file suffixes param monitor progress monitor which can be used to cancel long running request return the list of files to be imported end_comment begin_type  begin_specifier  end_specifier  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name file  end_name  end_argument  end_argument_list  end_name  end_type  begin_name get file list  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name progress monitor  end_name  end_type  begin_name monitor  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name file  end_name  end_argument  end_argument_list  end_name  end_type  begin_name files  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name arrays  end_name  begin_operator  end_operator  begin_name as list  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get selected files  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name files  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name file  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name files  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name suffix filter  end_name  end_type  begin_name  begin_name suffix filters  end_name  begin_index  end_index  end_name  begin_init  begin_expr  begin_block  begin_expr  begin_name selected suffix filter  end_name  end_expr  end_block  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name  begin_name suffix filters  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment not a suffix filter selected so we take all  end_comment  begin_expr_stmt  begin_expr  begin_name suffix filters  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name current module  end_name  begin_operator  end_operator  begin_name get suffix filters  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name files  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name file import utils  end_name  begin_operator  end_operator  begin_name get list  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name file  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name is descend selected  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name suffix filters  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name monitor  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name is directory  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name set src path  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name get absolute path  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name set src path  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name is changed only selected  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment filter out all unchanged files  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name project manager  end_name  begin_operator  end_operator  begin_name get manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get current project  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get model  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name files  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name f  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name files  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name fn  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name f  end_name  begin_operator  end_operator  begin_name get absolute path  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name lm  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name string  end_name  begin_operator  end_operator  begin_name value of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name f  end_name  begin_operator  end_operator  begin_name last modified  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get uml version  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name char at  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment todo not yet working for uml 2  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name lm  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get tagged value value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name fn  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name files  end_name  begin_operator  end_operator  begin_name remove  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_for  end_block  end_then  end_if  begin_return  begin_expr  begin_name files  end_name  end_expr  end_return  end_block 
begin_comment create a tagged value with a tag type matching our source module filename and a value of the file s last modified timestamp todo this functionality needs to be moved someplace useful if it s needed otherwise it can be deleted tfm 20070217 end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set last modified  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name project  end_name  end_type  begin_name project  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name file  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment set the last modified value  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name fn  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name get absolute path  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name lm  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name string  end_name  begin_operator  end_operator  begin_name value of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name last modified  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name lm  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set tagged value  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name get model  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name fn  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name lm  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block 
begin_comment the default encoding this should be asked by the gui for initialization return the encoding stored in argo key input source encoding key or if this is null the default system encoding end_comment begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name get encoding  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name enc  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name configuration  end_name  begin_operator  end_operator  begin_name get string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name argo  end_name  begin_operator  end_operator  begin_name key input source encoding  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name enc  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name enc  end_name  begin_operator  end_operator  begin_name trim  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment non nls 1  end_comment  begin_expr_stmt  begin_expr  begin_name enc  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name get property  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_return  begin_expr  begin_name enc  end_name  end_expr  end_return  end_block 
begin_comment iss set value count files i 1 10 end_commentbegin_comment import the selected source files it calls the actual parser methods depending on the type of the file param monitor a progress monitor to both receive progress updates and to be polled for user requests to cancel end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name do import  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name progress monitor  end_name  end_type  begin_name monitor  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment roughly equivalent to and derived from old import do file  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name monitor  end_name  begin_operator  end_operator  begin_name set maximum progress  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name max progress  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name progress  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name monitor  end_name  begin_operator  end_operator  begin_name update sub task  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name file  end_name  end_argument  end_argument_list  end_name  end_type  begin_name files  end_name  begin_init  begin_expr  begin_call  begin_name get file list  end_name  begin_argument_list  begin_argument  begin_expr  begin_name monitor  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name progress  end_name  begin_operator  end_operator  begin_name max progress prepare  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name monitor  end_name  begin_operator  end_operator  begin_name update progress  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name progress  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name files  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name monitor  end_name  begin_operator  end_operator  begin_name notify null action  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get pump  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name stop pumping events  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name critic thread was on  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name designer  end_name  begin_operator  end_operator  begin_name the designer  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get auto critique  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name critic thread was on  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name designer  end_name  begin_operator  end_operator  begin_name the designer  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set auto critique  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name do import internal  end_name  begin_argument_list  begin_argument  begin_expr  begin_name files  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name monitor  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name progress  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_finally  begin_block  begin_if  begin_condition  begin_expr  begin_name critic thread was on  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name designer  end_name  begin_operator  end_operator  begin_name the designer  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set auto critique  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment todo send an event instead of calling explorer directly  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name explorer event adaptor  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name structure changed  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get pump  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name start pumping events  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_finally  end_try  end_block 
begin_comment do the import param files left the files to parse param monitor the progress meter param progress the actual progress until now end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name do import internal  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name file  end_name  end_argument  end_argument_list  end_name  end_type  begin_name files left  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name progress monitor  end_name  end_type  begin_name monitor  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name progress  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name project  end_name  end_type  begin_name project  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name project manager  end_name  begin_operator  end_operator  begin_name get manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get current project  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name init current diagram  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name string buffer  end_name  end_type  begin_name problems  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name string buffer  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name new elements  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name hash set  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name new elements  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name current module  end_name  begin_operator  end_operator  begin_name parse files  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name project  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name files left  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name monitor  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name problems  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name print to buffer  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  end_try  begin_comment new style importers don t create diagrams so we ll do it  end_comment  begin_comment based on the list of new elements that they created  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name is create diagrams selected  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name diagram interface  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name add figures to diagrams  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new elements  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment do layout even if problems occurred during import  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name is diagram layout selected  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment todo monitor is getting dismissed before layout is complete  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name monitor  end_name  begin_operator  end_operator  begin_name update main task  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name monitor  end_name  begin_operator  end_operator  begin_name update sub task  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name layout diagrams  end_name  begin_argument_list  begin_argument  begin_expr  begin_name monitor  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name progress  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name files left  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment add messages from caught exceptions  end_comment  begin_if  begin_condition  begin_expr  begin_name problems  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name problems  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name monitor  end_name  begin_operator  end_operator  begin_name notify message  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_comment non nls 1  end_comment  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_comment non nls 1  end_comment  begin_argument  begin_expr  begin_call  begin_name  begin_name problems  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name monitor  end_name  begin_operator  end_operator  begin_name update main task  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name monitor  end_name  begin_operator  end_operator  begin_name update sub task  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment non nls 1  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name monitor  end_name  begin_operator  end_operator  begin_name update progress  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name max progress  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment return the fully qualified name of a model element in java dot separated format p todo we really need a language independent format here perhaps the list of names that form the hierarchy tfm end_comment begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name get qualified name  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string buffer  end_name  end_type  begin_name sb  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name string buffer  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name ns  end_name  begin_init  begin_expr  begin_name element  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_name ns  end_name  begin_operator  end_operator  end_expr  end_condition  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ns  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name insert  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name ns  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get namespace  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ns  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name ns  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name insert  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_while  begin_return  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment construct a panel which provides controls for populating a list of paths this can be used for a java classpath c include path etc param path list setting the settings object for this pathlist end_comment begin_specifier  end_specifier  begin_name import classpath dialog  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name path list selection  end_name  end_type  begin_name path list setting  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name super  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name setting  end_name  begin_operator  end_operator  begin_name path list setting  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set tool tip text  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name setting  end_name  begin_operator  end_operator  begin_name get description  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set layout  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name border layout  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name j label  end_name  end_type  begin_name label  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name j label  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name setting  end_name  begin_operator  end_operator  begin_name get label  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name label  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name border layout  end_name  begin_operator  end_operator  begin_name north  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name paths model  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name default list model  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name path  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name setting  end_name  begin_operator  end_operator  begin_name get default path list  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name paths model  end_name  begin_operator  end_operator  begin_name add element  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name path  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_name paths  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name j list  end_name  begin_argument_list  begin_argument  begin_expr  begin_name paths model  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name paths  end_name  begin_operator  end_operator  begin_name set visible row count  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name paths  end_name  begin_operator  end_operator  begin_name set tool tip text  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name setting  end_name  begin_operator  end_operator  begin_name get description  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name j scroll pane  end_name  end_type  begin_name list scroller  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name j scroll pane  end_name  begin_argument_list  begin_argument  begin_expr  begin_name paths  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name list scroller  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name border layout  end_name  begin_operator  end_operator  begin_name center  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment panel for controls  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name j panel  end_name  end_type  begin_name controls panel  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name j panel  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name controls panel  end_name  begin_operator  end_operator  begin_name set layout  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name grid layout  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name add button  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name j button  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name controls panel  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name add button  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name add button  end_name  begin_operator  end_operator  begin_name add action listener  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name add listener  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name remove button  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name j button  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name controls panel  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name remove button  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name remove button  end_name  begin_operator  end_operator  begin_name add action listener  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name remove listener  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo add up down buttons to control the ordering of items  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name controls panel  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name border layout  end_name  begin_operator  end_operator  begin_name south  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment returns a set of all unique applicable stereotypes for a given modelelement param model element the given modelelement return the set with stereotype uml objects end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name  begin_name set  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  end_type  begin_name get available stereotypes  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name set  end_name  begin_argument_list  begin_argument  begin_name list  end_name  end_argument  end_argument_list  end_name  end_type  begin_name paths  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name hash set  end_name  begin_argument_list  begin_argument  begin_name list  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name set  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  end_type  begin_name available stereotypes  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name tree set  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name path comparator  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get uml version  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name char at  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name models  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name project manager  end_name  begin_operator  end_operator  begin_name get manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get current project  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get models  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name top level models  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name project manager  end_name  begin_operator  end_operator  begin_name get manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get current project  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get models  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment adds all stereotypes defined at the top level namespaces  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name top level stereotypes  end_name  begin_init  begin_expr  begin_call  begin_name get top level stereotypes  end_name  begin_argument_list  begin_argument  begin_expr  begin_name top level models  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name valid top level stereotypes  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name array list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add all unique model elements from  end_name  begin_argument_list  begin_argument  begin_expr  begin_name available stereotypes  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name paths  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get extension mechanisms helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get all possible stereotypes  end_name  begin_argument_list  begin_argument  begin_expr  begin_name models  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name stereotype  end_name  begin_range  begin_expr  begin_name top level stereotypes  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get extension mechanisms helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is valid stereotype  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name stereotype  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name valid top level stereotypes  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name stereotype  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name add all unique model elements from  end_name  begin_argument_list  begin_argument  begin_expr  begin_name available stereotypes  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name paths  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name valid top level stereotypes  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment adds all stereotypes defined at the profiles applied to the  end_comment  begin_comment current namespace  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name namespace  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get namespace  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name namespace  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_while  begin_condition  begin_expr  end_expr  end_condition  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get applicable stereotypes in namespace  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name paths  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name available stereotypes  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name namespace  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name new namespace  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get namespace  end_name  begin_argument_list  begin_argument  begin_expr  begin_name namespace  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name new namespace  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_break  end_break  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name namespace  end_name  begin_operator  end_operator  begin_name new namespace  end_name  end_expr  end_expr_stmt  end_block  end_while  end_block  end_then  end_if  end_block  end_then  end_if  begin_comment adds all stereotypes defined at the profiles applied  end_comment  begin_comment to the current project  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name add all unique model elements from  end_name  begin_argument_list  begin_argument  begin_expr  begin_name available stereotypes  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name paths  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name project manager  end_name  begin_operator  end_operator  begin_name get manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get current project  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get profile configuration  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name find all stereotypes for model element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name available stereotypes  end_name  end_expr  end_return  end_block 
begin_comment returns a set union of all unique applicable stereotypes for a given collection of model elements todo this is not optimized for performance param elements the given collection of model elements return the set with stereotype uml objects end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name  begin_name set  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  end_type  begin_name get available stereotypes  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name elements  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name set  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  end_type  begin_name available stereotypes  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name tree set  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name path comparator  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name elements  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  begin_range  begin_expr  begin_name elements  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name available stereotypes  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get available stereotypes  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  end_block  end_then  end_if  begin_return  begin_expr  begin_name available stereotypes  end_name  end_expr  end_return  end_block 
begin_comment see javax swing table table model get value at int int end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get value at  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name row  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name col  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name  begin_name row  end_name  begin_argument_list  begin_argument  begin_operator  end_operator  begin_name row  end_name  end_argument  end_argument_list  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name row objects  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name  begin_name col  end_name  begin_argument_list  begin_argument  begin_operator  end_operator  begin_name col  end_name  end_argument  end_argument_list  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name show in diagram column  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name row obj  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name row objects  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name row  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name row obj  end_name  begin_operator  end_operator  begin_name diagram  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name diagram  end_name  end_type  begin_name d  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name diagram  end_name  begin_operator  end_operator  begin_name row obj  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_switch  begin_condition  begin_expr  begin_name col  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  begin_comment the name of this type of diagram  end_comment  begin_if  begin_condition  begin_expr  begin_name d  end_name  begin_operator  end_operator  begin_name uml diagram  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name uml diagram  end_name  begin_operator  end_operator  begin_name d  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get label name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_return  begin_expr  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_comment the name of this instance of diagram  end_comment  begin_return  begin_expr  begin_call  begin_name  begin_name d  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_comment n a or x nodes and x edges  end_comment  begin_return  begin_expr  begin_name show in diagram column  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name count nodes and edges  end_name  begin_argument_list  begin_argument  begin_expr  begin_name d  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_comment x nodes and x edges  end_comment  begin_return  begin_expr  begin_call  begin_name count nodes and edges  end_name  begin_argument_list  begin_argument  begin_expr  begin_name d  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_case  begin_default  end_default  end_block  end_switch  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a model element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name row obj  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name diagram  end_name  end_type  begin_name d  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name diagrams  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name d  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name diagrams  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name row  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_switch  begin_condition  begin_expr  begin_name col  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  begin_comment the name of this type of model element  end_comment  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get uml class name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name row obj  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_comment the name of this instance of model element  end_comment  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name row obj  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_comment the name of the parent diagram instance  end_comment  begin_return  begin_expr  begin_operator  end_operator  begin_name d  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name d  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_comment todo implement this show some documentation  end_comment  begin_return  begin_expr  end_expr  end_return  end_case  begin_default  end_default  end_block  end_switch  end_block  end_then  end_if  begin_switch  begin_condition  begin_expr  begin_name col  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  begin_comment the name of this type of object  end_comment  begin_if  begin_condition  begin_expr  begin_name row obj  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name cls name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name row obj  end_name  begin_operator  end_operator  begin_name get class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name last dot  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name cls name  end_name  begin_operator  end_operator  begin_name last index of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_call  begin_name  begin_name cls name  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name last dot  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_return  begin_expr  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_return  begin_expr  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_return  begin_expr  end_expr  end_return  end_case  begin_default  end_default  end_block  end_switch  begin_return  begin_expr  end_expr  end_return  end_block 
begin_comment see java awt event action listener action performed action event end_comment begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name action performed  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name action event  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo the project should be bound to the action when it is created  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name project  end_name  end_type  begin_name p  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name project manager  end_name  begin_operator  end_operator  begin_name get manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get current project  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name ns  end_name  begin_init  begin_expr  begin_call  begin_name find namespace  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name ns  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name is valid namespace  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ns  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name action performed  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name diagram settings  end_name  end_type  begin_name settings  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name p  end_name  begin_operator  end_operator  begin_name get project settings  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get default diagram settings  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo we should really be passing the default settings to  end_comment  begin_comment the diagram factory so they get set at creation time  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name argo diagram  end_name  end_type  begin_name diagram  end_name  begin_init  begin_expr  begin_call  begin_name create diagram  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ns  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name settings  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name p  end_name  begin_operator  end_operator  begin_name add member  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name diagram  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo make the explorer listen to project member property  end_comment  begin_comment changes to eliminate coupling on gui  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name explorer event adaptor  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name model element added  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ns  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name target manager  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set target  end_name  begin_argument_list  begin_argument  begin_expr  begin_name diagram  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal state exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_else  end_if  end_block 
begin_comment set the taggedvalue according to the condition of the checkbox the taggedvalue will be created if not existing see java awt event action listener action performed java awt event action event end_comment begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name action performed  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name action event  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name action performed  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name get source  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name uml check box 2  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name uml check box 2  end_name  end_type  begin_name source  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name uml check box 2  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name get source  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name obj  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name source  end_name  begin_operator  end_operator  begin_name get target  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a model element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name obj  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name new state  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name source  end_name  begin_operator  end_operator  begin_name is selected  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name tagged value  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get tagged value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name obj  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name tag name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name tagged value  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name tagged value  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get extension mechanisms factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name build tagged value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tag name  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo rework to use uml 1 4 tag definitions tfm  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get extension mechanisms helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add tagged value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name obj  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name tagged value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name new state  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get common behavior helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tagged value  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get common behavior helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tagged value  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block 
begin_comment see abstract action action performed action event end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name action performed  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name action event  end_name  end_type  begin_name ae  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name try save  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo what to do with the return value  end_comment  end_block 
begin_comment todo what to do with the return value end_commentbegin_comment method that does almost everything in this class p return true if all went well end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name try save  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name target  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name diagram utils  end_name  begin_operator  end_operator  begin_name get active diagram  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name target  end_name  begin_operator  end_operator  begin_name diagram  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name default name  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name diagram  end_name  begin_operator  end_operator  begin_name target  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name default name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name util  end_name  begin_operator  end_operator  begin_name strip junk  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name default name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name project  end_name  end_type  begin_name p  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name project manager  end_name  begin_operator  end_operator  begin_name get manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get current project  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name save graphics manager  end_name  end_type  begin_name sgm  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name save graphics manager  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name j file chooser  end_name  end_type  begin_name chooser  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name p  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name p  end_name  begin_operator  end_operator  begin_name get uri  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name p  end_name  begin_operator  end_operator  begin_name get uri  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to url  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get file  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name length  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name chooser  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name j file chooser  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name p  end_name  begin_operator  end_operator  begin_name get uri  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to url  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get file  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name chooser  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name chooser  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name j file chooser  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  begin_index  end_index  end_type  begin_name s  end_name  begin_init  begin_expr  begin_block  begin_expr  begin_name default name  end_name  end_expr  end_block  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name chooser  end_name  begin_operator  end_operator  begin_name set dialog title  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name message format  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment only specified format are allowed  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name chooser  end_name  begin_operator  end_operator  begin_name set accept all file filter used  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sgm  end_name  begin_operator  end_operator  begin_name set file chooser filters  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name chooser  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name default name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name fn  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name configuration  end_name  begin_operator  end_operator  begin_name get string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name save graphics manager  end_name  begin_operator  end_operator  begin_name key save graphics path  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name fn  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name chooser  end_name  begin_operator  end_operator  begin_name set selected file  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name file  end_name  begin_argument_list  begin_argument  begin_expr  begin_name fn  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name retval  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name chooser  end_name  begin_operator  end_operator  begin_name show save dialog  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name argo frame  end_name  begin_operator  end_operator  begin_name get frame  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name retval  end_name  begin_operator  end_operator  begin_name  begin_name j file chooser  end_name  begin_operator  end_operator  begin_name approve option  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name the file  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name chooser  end_name  begin_operator  end_operator  begin_name get selected file  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name the file  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name path  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name the file  end_name  begin_operator  end_operator  begin_name get path  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name configuration  end_name  begin_operator  end_operator  begin_name set string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name save graphics manager  end_name  begin_operator  end_operator  begin_name key save graphics path  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name path  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name the file  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name file  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name the file  end_name  begin_operator  end_operator  begin_name get parent file  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name sgm  end_name  begin_operator  end_operator  begin_name fix extension  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name the file  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name suffix  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name sgm  end_name  begin_operator  end_operator  begin_name get filter from file name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name the file  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get suffix  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_call  begin_name do save  end_name  begin_argument_list  begin_argument  begin_expr  begin_name the file  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name suffix  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name out of memory error  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name exception dialog  end_name  end_type  begin_name ed  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name exception dialog  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name argo frame  end_name  begin_operator  end_operator  begin_name get frame  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ed  end_name  begin_operator  end_operator  begin_name set modal  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ed  end_name  begin_operator  end_operator  begin_name set visible  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name exception dialog  end_name  end_type  begin_name ed  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name exception dialog  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name argo frame  end_name  begin_operator  end_operator  begin_name get frame  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ed  end_name  begin_operator  end_operator  begin_name set modal  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ed  end_name  begin_operator  end_operator  begin_name set visible  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  end_try  begin_return  begin_expr  end_expr  end_return  end_block 
begin_comment execute this action from the command line todo the underlying gef library relies on acme that doesn t allow us to create these files unless there is a window showing for this reason i have had to split the performing of commands in link org argouml application main main string so that we can by not supplying the batch option run these commands with the window showing hopefully this can eventually be fixed see org argouml application api command line interface do command string param argument is the file name that we save to return true if it is ok end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name do command  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name argument  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name file  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name file  end_name  begin_argument_list  begin_argument  begin_expr  begin_name argument  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name suffix  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name suffix filter  end_name  begin_operator  end_operator  begin_name get extension  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name file  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name suffix  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_try  begin_block  begin_return  begin_expr  begin_call  begin_name do save  end_name  begin_argument_list  begin_argument  begin_expr  begin_name file  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name suffix  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name file not found exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name io exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  end_try  begin_return  begin_expr  end_expr  end_return  end_block 
begin_comment constraint this code only deals with 1 supplier per dependency todo how to support more see org argouml uml ui abstract action add model element do it java util list end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name do it  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name selected  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name set  end_name  end_type  begin_name old set  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name hash set  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get selected  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name client  end_name  begin_range  begin_expr  begin_name selected  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name old set  end_name  begin_operator  end_operator  begin_name contains  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name client  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name old set  end_name  begin_operator  end_operator  begin_name remove  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name client  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment to be able to remove dependencies later  end_comment  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get core factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name build dependency  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get target  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name client  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_for  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name to be deleted  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name array list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name dependencies  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get client dependencies  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get target  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name dependency  end_name  begin_range  begin_expr  begin_name dependencies  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name old set  end_name  begin_operator  end_operator  begin_name contains all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get suppliers  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dependency  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name to be deleted  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dependency  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name project manager  end_name  begin_operator  end_operator  begin_name get manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get current project  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name move to trash  end_name  begin_argument_list  begin_argument  begin_expr  begin_name to be deleted  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment constraint this code only deals with 1 supplier per dependency todo do we need more see org argouml uml ui abstract action add model element do it java util list end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name do it  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name selected  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name set  end_name  end_type  begin_name old set  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name hash set  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get selected  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name supplier  end_name  begin_range  begin_expr  begin_name old set  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name old set  end_name  begin_operator  end_operator  begin_name contains  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name supplier  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name old set  end_name  begin_operator  end_operator  begin_name remove  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name supplier  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment to be able to remove dep s later  end_comment  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get core factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name build dependency  end_name  begin_argument_list  begin_argument  begin_expr  begin_name supplier  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get target  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_for  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name to be deleted  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name array list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name c  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get supplier dependencies  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get target  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name dependency  end_name  begin_range  begin_expr  begin_name c  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name old set  end_name  begin_operator  end_operator  begin_name contains all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get clients  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dependency  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name to be deleted  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dependency  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name project manager  end_name  begin_operator  end_operator  begin_name get manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get current project  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name move to trash  end_name  begin_argument_list  begin_argument  begin_expr  begin_name to be deleted  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment see org argouml uml ui uml plain text document set property java lang string end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set property  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name text  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name target  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name diagram utils  end_name  begin_operator  end_operator  begin_name get active diagram  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name target  end_name  begin_operator  end_operator  begin_name argo diagram  end_name  end_expr  end_condition  begin_then  begin_block  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name argo diagram  end_name  begin_operator  end_operator  begin_name target  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name set name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name text  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name property veto exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo what shall we do with the exception  end_comment  end_block  end_catch  end_try  end_block  end_then  end_if  end_block 
begin_comment todo what shall we do with the exception end_commentbegin_comment see org argouml uml ui uml plain text document get property end_comment begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name get property  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name target  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name diagram utils  end_name  begin_operator  end_operator  begin_name get active diagram  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name target  end_name  begin_operator  end_operator  begin_name argo diagram  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name argo diagram  end_name  begin_operator  end_operator  begin_name target  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_name collection  end_name  end_type  begin_name get applicable tag definitions  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name set  end_name  begin_argument_list  begin_argument  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  end_argument  end_argument_list  end_name  end_type  begin_name paths  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name hash set  end_name  begin_argument_list  begin_argument  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name set  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  end_type  begin_name available tag defs  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name tree set  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name path comparator  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name stereotypes  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get stereotypes  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name project  end_name  end_type  begin_name project  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name project manager  end_name  begin_operator  end_operator  begin_name get manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get current project  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get uml version  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name char at  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name get models  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_comment todo won t our use of path comparator take care of uniqueness  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name add all unique model elements from  end_name  begin_argument_list  begin_argument  begin_expr  begin_name available tag defs  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name paths  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get model management helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get all model elements of kind  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get tag definition  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_comment todo won t our use of path comparator take care of uniqueness  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name add all unique model elements from  end_name  begin_argument_list  begin_argument  begin_expr  begin_name available tag defs  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name paths  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name project  end_name  begin_operator  end_operator  begin_name get profile configuration  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name find by meta type  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get tag definition  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name list  end_name  end_type  begin_name not valids  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name array list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name tag def  end_name  begin_range  begin_expr  begin_name available tag defs  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name owner  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get owner  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tag def  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name owner  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name stereotypes  end_name  begin_operator  end_operator  begin_name contains  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name owner  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name not valids  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tag def  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name available tag defs  end_name  begin_operator  end_operator  begin_name remove all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name not valids  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_comment since uml 2 it s easier t ds only via stereotypes  end_comment  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name st  end_name  begin_range  begin_expr  begin_name stereotypes  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name available tag defs  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get attributes  end_name  begin_argument_list  begin_argument  begin_expr  begin_name st  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  end_block  end_else  end_if  begin_return  begin_expr  begin_name available tag defs  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name list  end_name  end_type  begin_name get choices  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name list  end_name  end_type  begin_name vec  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name array list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo correctly implement next function in the model subsystem for issue 1942  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name vec  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get model management helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get all possible imports  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get target  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name vec  end_name  end_expr  end_return  end_block 
begin_comment add a component with the specified label p param label the label for the component param component the component return the label added end_comment begin_type  begin_specifier  end_specifier  begin_name j label  end_name  end_type  begin_name add field  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name label  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name component  end_name  end_type  begin_name component  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name j label  end_name  end_type  begin_name jlabel  end_name  begin_init  begin_expr  begin_call  begin_name create label for  end_name  begin_argument_list  begin_argument  begin_expr  begin_name label  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name component  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name component  end_name  begin_operator  end_operator  begin_name set font  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name std font  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name jlabel  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name component  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name component  end_name  begin_operator  end_operator  begin_name uml stereotype list  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name uml model element list model 2  end_name  end_type  begin_name list  end_name  begin_init  begin_expr  begin_call  begin_name uml model element list model 2  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name uml stereotype list  end_name  begin_operator  end_operator  begin_name component  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get model  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name action create contained model element  end_name  end_type  begin_name new action  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name action create contained model element  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name list  end_name  begin_operator  end_operator  begin_name get meta type  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name list  end_name  begin_operator  end_operator  begin_name get target  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo i 18 n  end_comment  end_block  end_then  end_if  begin_return  begin_expr  begin_name jlabel  end_name  end_expr  end_return  end_block 
begin_comment add a fresh constraint to the model p there are 2 restrictions on what can be parsed given the current ocl grammar ol li class names must have a capital first letter li feature name must have a lower case first letter ol end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name add constraint  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment check ocl parsing constraints  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name mme context  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ocl util  end_name  begin_operator  end_operator  begin_name get inner most enclosing namespace  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name the m mmei target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name context name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name mme context  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name target name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name the m mmei target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name context name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name context name  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_comment this is to fix issue 2056  end_comment  begin_operator  end_operator  begin_name target name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name target name  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_comment this is to fix issue 2056  end_comment  begin_operator  end_operator  begin_call  begin_name  begin_name character  end_name  begin_operator  end_operator  begin_name is upper case  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name context name  end_name  begin_operator  end_operator  begin_name char at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a class  end_name  begin_argument_list  begin_argument  begin_expr  begin_name the m mmei target  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name character  end_name  begin_operator  end_operator  begin_name is upper case  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name target name  end_name  begin_operator  end_operator  begin_name char at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a feature  end_name  begin_argument_list  begin_argument  begin_expr  begin_name the m mmei target  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name character  end_name  begin_operator  end_operator  begin_name is lower case  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name target name  end_name  begin_operator  end_operator  begin_name char at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment todo i 18 n  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name j option pane  end_name  begin_operator  end_operator  begin_name show message dialog  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name j option pane  end_name  begin_operator  end_operator  begin_name error message  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment do not create a constraint  end_comment  begin_return  end_return  end_block  end_then  end_if  begin_comment null elements represent new constraints which will be  end_comment  begin_comment added to the target the first time any actual editing  end_comment  begin_comment takes place this is done to ensure syntactical  end_comment  begin_comment correctness of constraints stored with the target  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name the m al constraints  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name fire constraint added  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment  end_commentbegin_comment accessors end_commentbegin_comment sets the target of the property panel the given target t may either be a diagram or a modelelement if the target given is a fig a check is made if the fig has an owning modelelement and occurs on the current diagram if so that modelelement is the target deprecated as of argo uml version 0 13 5 the visibility of this method will change in the future replaced by link org argouml ui targetmanager target manager todo mvw i think this should not be deprecated param target the new target see org argouml ui tab target set target java lang object end_comment begin_type  begin_annotation  begin_name deprecated  end_name  end_annotation  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set target  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name target  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment targets ought to be uml objects or diagrams  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name info  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name target manager  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get targets  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name size  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name target  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name target  end_name  begin_operator  end_operator  begin_name fig  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name fig  end_name  begin_operator  end_operator  begin_name target  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get owner  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name target  end_name  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name target  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is auml element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_name target  end_name  begin_operator  end_operator  begin_name argo diagram  end_name  begin_comment todo improve extensibility of this  end_comment  begin_operator  end_operator  begin_name target  end_name  begin_operator  end_operator  begin_name critic  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name target  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name last panel  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name remove  end_name  begin_argument_list  begin_argument  begin_expr  begin_name last panel  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name last panel  end_name  begin_operator  end_operator  begin_name target listener  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment todo we should assert this never happens before removing  end_comment  begin_comment panels should control their own listeners  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name remove target listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name target listener  end_name  begin_operator  end_operator  begin_name last panel  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  begin_comment todo no need to do anything if we re not visible  end_comment  begin_comment if is visible  end_comment  begin_comment return  end_comment  begin_comment   end_comment  begin_expr_stmt  begin_expr  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name target  end_name  end_name  begin_operator  end_operator  begin_name target  end_name  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name target  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name blank panel  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name border layout  end_name  begin_operator  end_operator  begin_name center  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name validate  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name repaint  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name last panel  end_name  begin_operator  end_operator  begin_name blank panel  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name j panel  end_name  end_type  begin_name new panel  end_name  begin_init  begin_expr  begin_call  begin_name find panel for  end_name  begin_argument_list  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name new panel  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name new panel  end_name  begin_operator  end_operator  begin_name tab model target  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name add target listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name tab model target  end_name  begin_operator  end_operator  begin_name new panel  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name current panel  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name remove  end_name  begin_argument_list  begin_argument  begin_expr  begin_name current panel  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name current panel  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name new panel  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name current panel  end_name  begin_operator  end_operator  begin_name new panel  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name current panel  end_name  begin_operator  end_operator  begin_name blank panel  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name last panel  end_name  begin_operator  end_operator  begin_name blank panel  end_name  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name current panel  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name validate  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name repaint  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block 
begin_comment a factory method to create a prop panel for a particular target diagram uml element or gef fig param target object the target object return a new prop panel to display any model element of the given type end_comment begin_type  begin_specifier  end_specifier  begin_name j panel  end_name  end_type  begin_name create prop panel  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name target object  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name j panel  end_name  end_type  begin_name prop panel  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name prop panel factory  end_name  end_type  begin_name factory  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name prop panel factory manager  end_name  begin_operator  end_operator  begin_name get factories  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_expr_stmt  begin_expr  begin_name prop panel  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name factory  end_name  begin_operator  end_operator  begin_name create prop panel  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name target object  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name prop panel  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name prop panel  end_name  end_expr  end_return  end_block  end_then  end_if  end_block  end_for  begin_comment this does not work anymore yet since we never have a fig text here  end_comment  begin_if  begin_condition  begin_expr  begin_name target object  end_name  begin_operator  end_operator  begin_name fig text  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name prop panel  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name prop panel string  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name prop panel  end_name  begin_operator  end_operator  begin_name orientable  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name orientable  end_name  begin_operator  end_operator  begin_name prop panel  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name set orientation  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get orientation  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment todo we shouldn t need this as well as the above  end_comment  begin_if  begin_condition  begin_expr  begin_name prop panel  end_name  begin_operator  end_operator  begin_name prop panel  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name prop panel  end_name  begin_operator  end_operator  begin_name prop panel  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name set orientation  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get orientation  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_name prop panel  end_name  end_expr  end_return  end_block 
begin_comment returns the current target deprecated as of argo uml version 0 13 5 the visibility of this method will change in the future replaced by link org argouml ui targetmanager target manager get target target manager get instance get target todo mvw i think this should not be deprecated return the target see org argouml ui tab target get target end_comment begin_type  begin_annotation  begin_name deprecated  end_name  end_annotation  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get target  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  begin_name target  end_name  end_expr  end_return  end_block 
begin_comment see javax swing table table model get column class int end_comment begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name class  end_name  end_type  begin_name get column class  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name c  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name c  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_name class  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get tag definition  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name c  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment todo this will vary based on the type of the tag definition  end_comment  begin_return  begin_expr  begin_name  begin_name string  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_return  end_block  end_then  end_if  begin_return  begin_expr  end_expr  end_return  end_block 
begin_comment for debugging end_commentbegin_comment see javax swing table table model set value at java lang object int int end_comment begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set value at  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name a value  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name row index  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name column index  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name column index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name column index  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name column index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name a value  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment todo use default value of appropriate type here  end_comment  begin_expr_stmt  begin_expr  begin_name a value  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name a value  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name a value  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_name column index  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name remove row  end_name  begin_argument_list  begin_argument  begin_expr  begin_name row index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name tvs  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get tagged values collection  end_name  begin_argument_list  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name tvs  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name row index  end_name  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name column index  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name add row  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name object  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_name a value  end_name  end_expr  begin_operator  end_operator  begin_expr  end_expr  end_block  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name column index  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name add row  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name object  end_name  begin_index  end_index  end_name  begin_block  begin_expr  end_expr  begin_operator  end_operator  begin_expr  begin_name a value  end_name  end_expr  end_block  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  begin_else  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name tv  end_name  begin_init  begin_expr  begin_call  begin_name get from collection  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tvs  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name row index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name column index  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get extension mechanisms helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set type  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tv  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name a value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name column index  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get uml version  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name char at  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get extension mechanisms helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set data values  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tv  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name string  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_operator  end_operator  begin_name string  end_name  begin_operator  end_operator  begin_name a value  end_name  end_expr  end_block  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  begin_index  end_index  end_type  begin_name tva  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name tvs  end_name  begin_operator  end_operator  begin_name to array  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name value  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get value of tag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name tv  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name value  end_name  begin_operator  end_operator  begin_name collection  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment handle multivalued tagged value  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name iter  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name collection  end_name  begin_operator  end_operator  begin_name value  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name iterator  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name values  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name array list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name  begin_name tva  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_if  begin_condition  begin_expr  begin_name  begin_name tva  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_name  begin_name tva  end_name  begin_index  begin_expr  begin_name row index  end_name  end_expr  end_index  end_name  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name row index  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name values  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name a value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name iter  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name iter  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name iter  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name values  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name iter  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name value  end_name  begin_operator  end_operator  begin_name values  end_name  end_expr  end_expr_stmt  end_block  end_for  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name value  end_name  begin_operator  end_operator  begin_name a value  end_name  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get extension mechanisms helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set tagged value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name tv  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  end_if  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name fire table changed  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name table model event  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name row index  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name row index  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name column index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block 
begin_comment add a tagged value to the model with the given type and value param values values for the columns values 0 contains type for new tagged value values 1 contains value for new tagged value end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name add row  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name  begin_name object  end_name  begin_index  end_index  end_name  end_type  begin_name values  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name tag type  end_name  begin_init  begin_expr  begin_name  begin_name values  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get uml version  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name char at  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name tag type  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name tag type  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name tag value  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name string  end_name  begin_operator  end_operator  begin_name  begin_name values  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name tag value  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment todo use default value of appropriate type for td  end_comment  begin_expr_stmt  begin_expr  begin_name tag value  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_comment tag value true  end_comment  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name tv  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get extension mechanisms factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create tagged value  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment we really shouldn t add it until after it is set up but we  end_comment  begin_comment need it to have an owner for the following method calls  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get extension mechanisms helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add tagged value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name tv  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get extension mechanisms helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set type  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tv  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name tag type  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get extension mechanisms helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set data values  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tv  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name string  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_name tag value  end_name  end_expr  end_block  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_if  begin_condition  begin_expr  begin_name tag type  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name tag value  end_name  begin_init  begin_expr  begin_name  begin_name values  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get extension mechanisms helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add tagged value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name tag type  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_comment since we aren t sure of ordering fire event for whole table  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name fire table changed  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name table model event  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment if the property that this comboboxmodel depicts is changed in the uml model this method will make sure that the changes will be done in the combobox model equally p todo this function is not yet completely written inherit doc see java beans property change listener property change java beans property change event end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name model changed  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name uml change event  end_name  end_type  begin_name evt  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_name building model  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name evt  end_name  begin_operator  end_operator  begin_name attribute change event  end_name  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name evt  end_name  begin_operator  end_operator  begin_name get property name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property set name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name evt  end_name  begin_operator  end_operator  begin_name get source  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get target  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_name is clearable  end_name  begin_operator  end_operator  begin_call  begin_name get changed element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name evt  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name elem  end_name  begin_init  begin_expr  begin_call  begin_name get changed element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name evt  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name add element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment mvw for this case i had to move the call to set selected item outside the building model otherwise the combo does not update with the new selection see issue 5418  end_comment  begin_expr_stmt  begin_expr  begin_name building model  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set selected item  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name evt  end_name  begin_operator  end_operator  begin_name delete instance event  end_name  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get changed element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name evt  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o  end_name  begin_init  begin_expr  begin_call  begin_name get changed element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name evt  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name remove element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name evt  end_name  begin_operator  end_operator  begin_name add association event  end_name  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name get target  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name is valid event  end_name  begin_argument_list  begin_argument  begin_expr  begin_name evt  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name evt  end_name  begin_operator  end_operator  begin_name get property name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property set name  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name evt  end_name  begin_operator  end_operator  begin_name get source  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get target  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name elem  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name evt  end_name  begin_operator  end_operator  begin_name get new value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo here too  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name set selected item  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o  end_name  begin_init  begin_expr  begin_call  begin_name get changed element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name evt  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name evt  end_name  begin_operator  end_operator  begin_name remove association event  end_name  begin_operator  end_operator  begin_call  begin_name is valid event  end_name  begin_argument_list  begin_argument  begin_expr  begin_name evt  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name evt  end_name  begin_operator  end_operator  begin_name get property name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property set name  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name evt  end_name  begin_operator  end_operator  begin_name get source  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get target  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name evt  end_name  begin_operator  end_operator  begin_name get old value  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name internal 2 external  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get selected item  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment todo here too  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name set selected item  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name external 2 internal  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name evt  end_name  begin_operator  end_operator  begin_name get new value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  begin_else  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o  end_name  begin_init  begin_expr  begin_call  begin_name get changed element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name evt  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name remove element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_else  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name evt  end_name  begin_operator  end_operator  begin_name get source  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name argo diagram  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name evt  end_name  begin_operator  end_operator  begin_name get property name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property set name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment this should not be necessary but let s be sure  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name add element  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name evt  end_name  begin_operator  end_operator  begin_name get new value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment mvw for this case i have to move the call to set selected item outside the building model otherwise the combo does not update with the new selection the same does probably apply to the cases above  end_comment  begin_expr_stmt  begin_expr  begin_name building model  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set selected item  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name evt  end_name  begin_operator  end_operator  begin_name get new value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  begin_expr_stmt  begin_expr  begin_name building model  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block 
begin_comment the constructor end_comment begin_specifier  end_specifier  begin_name uml derived check box  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment todo this is a tagged value name which will never trigger an event  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name super  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name facade  end_name  begin_operator  end_operator  begin_name derived tag  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment see java awt event action listener action performed java awt event action event todo from combo box javadoc this method is public as an implementation side effect do not call or override we should find some other way to implement this end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name action performed  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name action event  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name action performed  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name get source  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name j text field  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name old value  end_name  begin_init  begin_expr  begin_call  begin_name get selected item  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name combo box editor  end_name  end_type  begin_name editor  end_name  begin_init  begin_expr  begin_call  begin_name get editor  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name item  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name editor  end_name  begin_operator  end_operator  begin_name get item  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name do on edit  end_name  begin_argument_list  begin_argument  begin_expr  begin_name item  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment next statement is necessary to update the textfield  end_comment  begin_comment if the selection is equal to what was allready  end_comment  begin_comment selected  end_comment  begin_if  begin_condition  begin_expr  begin_name old value  end_name  begin_operator  end_operator  begin_call  begin_name get selected item  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get editor  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set item  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get selected item  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  end_block 
begin_comment ignored end_commentbegin_comment todo this is a temporary method of making sure the model is updated on loss of focus of a combo box in the long term we should attempt to update the model on each keypress see java awt event focus listener focus lost java awt event focus event end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name focus lost  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name focus event  end_name  end_type  begin_name arg 0  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name do on edit  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get editor  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get item  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name property change  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name property change event  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name target  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name target  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name get source  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name must refresh  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name expression  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_comment this works we do get an event and now refresh the ui  end_comment  begin_if  begin_condition  begin_expr  begin_name container  end_name  begin_operator  end_operator  begin_name tab target  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name swing utilities  end_name  begin_operator  end_operator  begin_name invoke later  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name runnable  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name tab target  end_name  begin_operator  end_operator  begin_name container  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name refresh  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo the above statement also refreshes when we are not shown to be verified hence not entirely correct  end_comment  end_block  end_function  end_block  end_class  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name tab target  end_name  begin_operator  end_operator  begin_name container  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name refresh  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo the above statement also refreshes when we are not shown to be verified hence not entirely correct  end_comment  end_block 
begin_comment todo the above statement also refreshes when we are not shown to be verified hence not entirely correct end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name target added  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name target event  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name set target  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name get new target  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment see java beans property change listener property change java beans property change event todo this should be reviewed to see if it can be improved with a view towards removing some of the overrriding methods used as workarounds for differences between nsuml and mdr tfm 20060302 end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name property change  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name property change event  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name e  end_name  begin_operator  end_operator  begin_name attribute change event  end_name  end_expr  end_condition  begin_then  begin_block  begin_try  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name is valid event  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name rebuild model list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name invalid element exception  end_name  end_type  begin_name iee  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  end_return  end_block  end_catch  end_try  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name e  end_name  begin_operator  end_operator  begin_name add association event  end_name  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name is valid event  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o  end_name  begin_init  begin_expr  begin_call  begin_name get changed element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_name collection  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name array list  end_name  end_type  begin_name temp list  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name array list  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name collection  end_name  begin_operator  end_operator  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name it  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name temp list  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name it  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o 2  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name it  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o 2  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_while  end_block  end_then  begin_else  begin_block  begin_comment todo if this is an ordered list then you have to add in the right location  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name add element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name e  end_name  begin_operator  end_operator  begin_name remove association event  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name valid  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get changed element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_name collection  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name valid  end_name  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get changed element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name col  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name collection  end_name  begin_operator  end_operator  begin_call  begin_name get changed element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name it  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name col  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name valid  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name it  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name it  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name valid  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_then  end_if  end_block  end_while  end_block  end_else  end_if  begin_if  begin_condition  begin_expr  begin_name valid  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o  end_name  begin_init  begin_expr  begin_call  begin_name get changed element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_name collection  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name it  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name collection  end_name  begin_operator  end_operator  begin_name o  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name iterator  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name it  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o 3  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name it  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name remove element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o 3  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_while  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name remove element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  end_if  end_block  end_then  end_if  end_else  end_if  end_else  end_if  end_block 
begin_comment creates a new checkbox menu item attached to the specified action object and appends it to the end of this menu todo this is almost a duplicate of argo j menu add check item must find a way to merge param a the action for the checkbox menu item to be added return the new checkbox menu item end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name j check box menu item  end_name  end_type  begin_name get check item  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name action  end_name  end_type  begin_name a  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name string  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name a  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name action  end_name  begin_operator  end_operator  begin_name name  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name icon  end_name  end_type  begin_name icon  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name icon  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name a  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name action  end_name  begin_operator  end_operator  begin_name small icon  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name selected  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name boolean  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name a  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name j check box menu item  end_name  end_type  begin_name mi  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name j check box menu item  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name icon  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name selected  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name selected  end_name  begin_operator  end_operator  begin_name boolean value  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mi  end_name  begin_operator  end_operator  begin_name set horizontal text position  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name swing constants  end_name  begin_operator  end_operator  begin_name right  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mi  end_name  begin_operator  end_operator  begin_name set vertical text position  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name swing constants  end_name  begin_operator  end_operator  begin_name center  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mi  end_name  begin_operator  end_operator  begin_name set enabled  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name a  end_name  begin_operator  end_operator  begin_name is enabled  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mi  end_name  begin_operator  end_operator  begin_name add action listener  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name a  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name mi  end_name  end_expr  end_return  end_block 
begin_comment constructor for uml linked list param data model the data model param show icon true if an icon should be shown param show path true if containment path should be shown end_comment begin_specifier  end_specifier  begin_name uml stereotype list  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name list model  end_name  end_type  begin_name data model  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name show icon  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name show path  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name super  end_name  begin_argument_list  begin_argument  begin_expr  begin_name data model  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment   end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name list cell renderer  end_name  end_type  begin_name renderer  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name uml linked list cell renderer  end_name  begin_argument_list  begin_argument  begin_expr  begin_name show icon  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name show path  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set double buffered  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name renderer  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name set cell renderer  end_name  begin_argument_list  begin_argument  begin_expr  begin_name renderer  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name set font  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name look and feel mgr  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get standard font  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set selection mode  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name list selection model  end_name  begin_operator  end_operator  begin_name single selection  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo can we find a better way to do this than hard coding colour  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name set foreground  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name color  end_name  begin_operator  end_operator  begin_name blue  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set selection foreground  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name color  end_name  begin_operator  end_operator  begin_name blue  end_name  begin_operator  end_operator  begin_name darker  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name uml link mouse listener  end_name  end_type  begin_name mouse listener  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name uml link mouse listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add mouse listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_name mouse listener  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment the constructor param data model the data model end_comment begin_specifier  end_specifier  begin_name uml stereotype list  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name list model  end_name  end_type  begin_name data model  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name this  end_name  begin_argument_list  begin_argument  begin_expr  begin_name data model  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment constructor for uml linked list param data model the data model param show icon true if an icon should be shown end_comment begin_specifier  end_specifier  begin_name uml stereotype list  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name list model  end_name  end_type  begin_name data model  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name show icon  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name this  end_name  begin_argument_list  begin_argument  begin_expr  begin_name data model  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name show icon  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment see java beans property change listener property change java beans property change event todo this should be reviewed to see if it can be improved with a view towards removing some of the overrriding methods used as workarounds for differences between nsuml and mdr tfm 20060302 end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name property change  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name property change event  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name e  end_name  begin_operator  end_operator  begin_name attribute change event  end_name  end_expr  end_condition  begin_then  begin_block  begin_try  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name is valid event  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name rebuild model list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name invalid element exception  end_name  end_type  begin_name iee  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  end_return  end_block  end_catch  end_try  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name e  end_name  begin_operator  end_operator  begin_name add association event  end_name  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name is valid event  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o  end_name  begin_init  begin_expr  begin_call  begin_name get changed element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_name collection  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name array list  end_name  end_type  begin_name temp list  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name array list  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name collection  end_name  begin_operator  end_operator  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name it  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name temp list  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name it  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o 2  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name it  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o 2  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_while  end_block  end_then  begin_else  begin_block  begin_comment todo if this is an ordered list then you have to add in the right location  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name add element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name e  end_name  begin_operator  end_operator  begin_name remove association event  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name valid  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get changed element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_name collection  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name valid  end_name  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get changed element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name col  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name collection  end_name  begin_operator  end_operator  begin_call  begin_name get changed element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name it  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name col  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name valid  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name it  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name it  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name valid  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_then  end_if  end_block  end_while  end_block  end_else  end_if  begin_if  begin_condition  begin_expr  begin_name valid  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o  end_name  begin_init  begin_expr  begin_call  begin_name get changed element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_name collection  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name it  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name collection  end_name  begin_operator  end_operator  begin_name o  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name iterator  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name it  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o 3  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name it  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name remove element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o 3  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_while  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name remove element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  end_if  end_block  end_then  end_if  end_else  end_if  end_else  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name retain all  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name c  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name size  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name delegate  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name status  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name delegate  end_name  begin_operator  end_operator  begin_name retain all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo is this the right range here  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name fire contents changed  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name size  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name status  end_name  end_expr  end_return  end_block 
begin_comment generates a new unique id and returns it as a string the contents of the string is supposed to be unique with respect to all strings generated by other instances of this class todo we should consider using java util uuid for this instead return a string with unique content end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name generate id  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name java  end_name  begin_operator  end_operator  begin_name rmi  end_name  begin_operator  end_operator  begin_name server  end_name  begin_operator  end_operator  begin_name uid  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name to string  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment todo use the following function to have a dropdown set of tools tool bar factory add items to tool bar button panel actions true instead this temporary solution param button panel the toolbar param actions an array of actions representing the tool layout end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name add items to tool bar  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name j tool bar  end_name  end_type  begin_name button panel  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name object  end_name  begin_index  end_index  end_name  end_type  begin_name actions  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name j button  end_name  end_type  begin_name button  end_name  begin_init  begin_expr  begin_call  begin_name build popup tool box button  end_name  begin_argument_list  begin_argument  begin_expr  begin_name actions  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name tool bar manager  end_name  begin_operator  end_operator  begin_name always use standard rollover  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name button  end_name  begin_operator  end_operator  begin_name set border painted  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name button panel  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name button  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment todo use the following function to have a dropdown set of tools tool bar factory add items to tool bar button panel actions true instead this temporary solution param button panel the toolbar param actions an array of actions representing the tool layout end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name add items to tool bar  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name j tool bar  end_name  end_type  begin_name button panel  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name actions  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name add items to tool bar  end_name  begin_argument_list  begin_argument  begin_expr  begin_name button panel  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name actions  end_name  begin_operator  end_operator  begin_name to array  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment todo move this into the toolbar project end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name popup tool box button  end_name  end_type  begin_name build popup tool box button  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name  begin_name object  end_name  begin_index  end_index  end_name  end_type  begin_name actions  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name rollover  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name popup tool box button  end_name  end_type  begin_name tool box  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name  begin_name actions  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_operator  end_operator  begin_name i  end_name  end_expr  end_incr  begin_block  begin_if  begin_condition  begin_expr  begin_name  begin_name actions  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_name action  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name info  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name actions  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name action  end_name  end_type  begin_name a  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name action  end_name  begin_operator  end_operator  begin_name  begin_name actions  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name tool box  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name tool box  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name popup tool box button  end_name  begin_argument_list  begin_argument  begin_expr  begin_name a  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name rollover  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name tool box  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name a  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name  begin_name actions  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_name component  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name tool box  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name component  end_name  begin_operator  end_operator  begin_name  begin_name actions  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name  begin_name actions  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_name  begin_name object  end_name  begin_index  end_index  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  begin_index  end_index  end_type  begin_name action row  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name object  end_name  begin_index  end_index  end_name  begin_operator  end_operator  begin_name  begin_name actions  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name j  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name j  end_name  begin_operator  end_operator  begin_name  begin_name action row  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_operator  end_operator  begin_name j  end_name  end_expr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name action  end_name  end_type  begin_name a  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name action  end_name  begin_operator  end_operator  begin_name  begin_name action row  end_name  begin_index  begin_expr  begin_name j  end_name  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name tool box  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name cols  end_name  begin_init  begin_expr  begin_name  begin_name action row  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name tool box  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name popup tool box button  end_name  begin_argument_list  begin_argument  begin_expr  begin_name a  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name cols  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name rollover  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name tool box  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name a  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name actions  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_else  end_if  end_else  end_if  end_block  end_for  begin_return  begin_expr  begin_name tool box  end_name  end_expr  end_return  end_block 
begin_comment todo move an empty implementation to fig group in gef end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name position children  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name rectangle  end_name  end_type  begin_name my bounds  end_name  begin_init  begin_expr  begin_call  begin_name get bounds  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name display state  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name display state  end_name  begin_operator  end_operator  begin_name set bounds  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name my bounds  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment calc bounds  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name update edges  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment todo move an empty implementation to fig group in gef end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name position children  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name rectangle  end_name  end_type  begin_name bounds  end_name  begin_init  begin_expr  begin_call  begin_name get bounds  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get border  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set bounds  end_name  begin_argument_list  begin_argument  begin_expr  begin_name bounds  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get name display  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set bounds  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name rectangle  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name bounds  end_name  begin_operator  end_operator  begin_name x  end_name  end_name  begin_operator  end_operator  begin_call  begin_name get left margin  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name bounds  end_name  begin_operator  end_operator  begin_name y  end_name  end_name  begin_operator  end_operator  begin_call  begin_name get top margin  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name bounds  end_name  begin_operator  end_operator  begin_name width  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get left margin  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get right margin  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name bounds  end_name  begin_operator  end_operator  begin_name height  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get top margin  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get bottom margin  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_specifier  end_specifier  begin_name fig compartment  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name owner  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name rectangle  end_name  end_type  begin_name bounds  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name diagram settings  end_name  end_type  begin_name settings  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name meta type  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name property name  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name this  end_name  begin_argument_list  begin_argument  begin_expr  begin_name owner  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name bounds  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name settings  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name arrays  end_name  begin_operator  end_operator  begin_name as list  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name object  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_name meta type  end_name  end_expr  end_block  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name property name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment param owner the model element that owns the compartment param bounds the initial bounds of the compartment param settings the diagram settings param meta type the different metatype that can be displayed in the compartment end_comment begin_specifier  end_specifier  begin_name fig compartment  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name owner  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name rectangle  end_name  end_type  begin_name bounds  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name diagram settings  end_name  end_type  begin_name settings  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  end_type  begin_name meta types  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name property name  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name super  end_name  begin_argument_list  begin_argument  begin_expr  begin_name owner  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name settings  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get model element contents  end_name  begin_argument_list  begin_argument  begin_expr  begin_name owner  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get model element contents  end_name  begin_argument_list  begin_argument  begin_expr  begin_name owner  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name contains  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name element  end_name  begin_operator  end_operator  begin_name get class  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_try  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name y  end_name  begin_init  begin_expr  begin_name  begin_name bounds  end_name  begin_operator  end_operator  begin_name y  end_name  end_name  begin_operator  end_operator  begin_call  begin_name get top margin  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name x  end_name  begin_init  begin_expr  begin_name  begin_name bounds  end_name  begin_operator  end_operator  begin_name x  end_name  end_name  begin_operator  end_operator  begin_call  begin_name get left margin  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name rectangle  end_name  end_type  begin_name child bounds  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name rectangle  end_name  begin_argument_list  begin_argument  begin_expr  begin_name x  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name y  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name fig notation  end_name  end_type  begin_name fn  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name fig notation  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name child bounds  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name settings  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name notation type  end_name  begin_operator  end_operator  begin_name name  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add fig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name fn  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name y  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name fn  end_name  begin_operator  end_operator  begin_name get height  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name invalid element exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  end_block  end_catch  end_try  end_block  end_then  end_if  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get pump  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add model event listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name association change listener  end_name  begin_operator  end_operator  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name owner  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name property name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo remove listeners for add remove events  end_comment  end_block 
begin_comment todo remove listeners for add remove events end_comment begin_specifier  end_specifier  begin_name fig compartment  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name owner  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name diagram settings  end_name  end_type  begin_name settings  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name super  end_name  begin_argument_list  begin_argument  begin_expr  begin_name owner  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name settings  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set text  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name s  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name old text  end_name  begin_init  begin_expr  begin_call  begin_name get text  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name old text  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name rectangle  end_name  end_type  begin_name old bounds  end_name  begin_init  begin_expr  begin_call  begin_name get bounds  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name set text  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo this should happen in gef  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name fire prop change  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name old text  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo set text in gef should call set bounds instead of directly  end_comment  begin_comment changing x y w h then we will have an event generated  end_comment  begin_comment correctly in gef  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name fig group  end_name  end_type  begin_name group  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name fig group  end_name  begin_operator  end_operator  begin_call  begin_name get group  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name group  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name old bounds  end_name  begin_operator  end_operator  begin_name width  end_name  end_name  begin_operator  end_operator  begin_call  begin_name get bounds  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name width  end_name  begin_operator  end_operator  begin_name  begin_name old bounds  end_name  begin_operator  end_operator  begin_name height  end_name  end_name  begin_operator  end_operator  begin_call  begin_name get bounds  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name height  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name group  end_name  begin_operator  end_operator  begin_name calc bounds  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block 
begin_comment prevent underline events if underline does not change todo gef should manage this after gef 0 13 4 is included end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set underline  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name u  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name get underline  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name u  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name set underline  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name u  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment prevent bold events if bold does not change todo gef should manage this after gef 0 13 4 is included end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set bold  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name b  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name get bold  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name b  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name set bold  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name b  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment prevent italic events if italic does not change todo gef should manage this after gef 0 13 4 is included end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set italic  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name i  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name get italic  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name i  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name set italic  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment see java awt event action listener action performed java awt event action event end_comment begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name action performed  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name action event  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo what can we do with other kind of actions  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a call action  end_name  begin_argument_list  begin_argument  begin_expr  begin_name action  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get common behavior helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set operation  end_name  begin_argument_list  begin_argument  begin_expr  begin_name action  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name operation  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name action performed  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment initialization which is common to multiple constructors end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name initialize  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_name empty fig  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name fig empty rect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get x  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get y  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get width  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name offset  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name empty fig  end_name  begin_operator  end_operator  begin_name set line width  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name head fig  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name fig head  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get owner  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get settings  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get stereotype fig  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get name fig  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name head fig  end_name  begin_operator  end_operator  begin_name set bounds  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get x  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get y  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name offset  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get width  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name head fig  end_name  begin_operator  end_operator  begin_name get height  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name life line fig  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name fig life line  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get owner  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name rectangle  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name head fig  end_name  begin_operator  end_operator  begin_name get x  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get y  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name offset  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name head fig  end_name  begin_operator  end_operator  begin_name get height  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get line width  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get settings  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add fig  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get big port  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get big port  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set visible  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo move magic number 10 to descriptive constant  end_comment  begin_expr_stmt  begin_expr  begin_name minimum height  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name head fig  end_name  begin_operator  end_operator  begin_name get minimum height  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add fig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name empty fig  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add fig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name life line fig  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add fig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name head fig  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name create activations  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment gets the minimum size of the fig p the width is restricted by the notation making sure that the full classifier role description is displayed p the minimum height is restricted so that the all attached message will remain in the same position relative to the fig if no messages are attached then the minimum height will ensure box is shown plus at least 10 pixels of the lifeline return dimensions of the minimum size end_comment begin_type  begin_specifier  end_specifier  begin_name dimension  end_name  end_type  begin_name get minimum size  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment todo minimum height should not be calculated every time but only when an fig message has been added or removed currently doing that doesn t work because of an unknown problem how to test create only two c rs and a create message between them then move the create message to the bottom until that is fixed the workaround is to call update minimum height every time the minimum size is needed  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name update minimum height  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name dimension  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name head fig  end_name  begin_operator  end_operator  begin_name get minimum width  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name minimum height  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment updates the minimum height of the classifier role when a fig message is added or removed end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name update minimum height  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name y max  end_name  begin_init  begin_expr  begin_call  begin_name get y  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name fig edge  end_name  end_argument  end_argument_list  end_name  end_type  begin_name figs edges  end_name  begin_init  begin_expr  begin_call  begin_name get fig edges  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name fig message  end_name  end_type  begin_name create message  end_name  begin_init  begin_expr  begin_call  begin_name get first create fig message  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo is this next line safe what happens if there is just one  end_comment  begin_comment comment edge or a comment edge and a single message  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name figs edges  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_name create message  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment todo move magic number 10 to descriptive constant  end_comment  begin_expr_stmt  begin_expr  begin_name minimum height  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name head fig  end_name  begin_operator  end_operator  begin_name get minimum size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name height  end_name  begin_operator  end_operator  begin_name offset  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_for  begin_init  begin_decl  begin_type  begin_name fig  end_name  end_type  begin_name fig  end_name  begin_range  begin_expr  begin_name figs edges  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_name fig  end_name  begin_operator  end_operator  begin_name fig message  end_name  begin_comment we need the edge to be complete  end_comment  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name fig message  end_name  begin_operator  end_operator  begin_name fig  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get dest fig node  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name fig message  end_name  begin_operator  end_operator  begin_name fig  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get source fig node  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name fig message  end_name  begin_operator  end_operator  begin_name fig  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get y  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name y max  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name y max  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name fig message  end_name  begin_operator  end_operator  begin_name fig  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get y  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  begin_comment todo move magic number 10 to descriptive constant  end_comment  begin_expr_stmt  begin_expr  begin_name minimum height  end_name  begin_operator  end_operator  begin_name y max  end_name  begin_operator  end_operator  begin_call  begin_name get y  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block 
 begin_type  begin_name int  end_name  end_type  begin_name get minimum height  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name h  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name stereotype fig  end_name  begin_operator  end_operator  begin_name get minimum size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name height  end_name  begin_comment todo move the magic number 4 to a descriptive constant  end_comment  begin_operator  end_operator  begin_call  begin_name  begin_name name fig  end_name  begin_operator  end_operator  begin_name get minimum height  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name h  end_name  begin_operator  end_operator  begin_name default height  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name h  end_name  begin_operator  end_operator  begin_name default height  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_name h  end_name  end_expr  end_return  end_block 
begin_comment we do nothing no call to the parent end_comment begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_comment todo synchronized is required here as there can be some  end_comment  begin_comment concurrent modification problems when drawing a call message and  end_comment  begin_comment having that automatically draw the reply maybe fixing the todo  end_comment  begin_comment below will resolve this and the synch can go  end_comment  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set bounds impl  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name x  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name y  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name w  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name h  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name rectangle  end_name  end_type  begin_name old bounds  end_name  begin_init  begin_expr  begin_call  begin_name get bounds  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name rect fig  end_name  begin_operator  end_operator  begin_name set bounds  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name x  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name y  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name w  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name h  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name line fig  end_name  begin_operator  end_operator  begin_name set bounds  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name x  end_name  begin_operator  end_operator  begin_name w  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name y  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name w  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name h  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name y diff  end_name  begin_init  begin_expr  begin_name  begin_name old bounds  end_name  begin_operator  end_operator  begin_name y  end_name  end_name  begin_operator  end_operator  begin_name y  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_comment we don t recalculate activations just move them  end_comment  begin_for  begin_init  begin_decl  begin_type  begin_name fig activation  end_name  end_type  begin_name act  end_name  begin_range  begin_expr  begin_name activations  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_comment todo why do we need to remove then add the fig  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name remove fig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name act  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name act  end_name  begin_operator  end_operator  begin_name set location  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name line fig  end_name  begin_operator  end_operator  begin_name get x  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name  begin_name fig activation  end_name  begin_operator  end_operator  begin_name default width  end_name  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name act  end_name  begin_operator  end_operator  begin_name get y  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name y diff  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name activations  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name act  end_name  begin_operator  end_operator  begin_name get height  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name  begin_name old bounds  end_name  begin_operator  end_operator  begin_name height  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name act  end_name  begin_operator  end_operator  begin_name set height  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get height  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name add fig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name act  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name damage  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name x  end_name  begin_operator  end_operator  begin_name x  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name y  end_name  begin_operator  end_operator  begin_name y  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name w  end_name  begin_operator  end_operator  begin_name w  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name h  end_name  begin_operator  end_operator  begin_name h  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name fire prop change  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name old bounds  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get bounds  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name text edit started  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name fig text  end_name  end_type  begin_name ft  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment this is a temporary hack until the notation provider for a sd message will be able to parse successfully when the sequence number is missing remove this method completely then  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name notation settings  end_name  begin_operator  end_operator  begin_name set show sequence numbers  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name text edit started  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ft  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name notation settings  end_name  begin_operator  end_operator  begin_name set show sequence numbers  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment the default behaviour from fig edge model element is not correct here see issue 5005 todo we must determine what to do here but for now doing nothing is better i m not sure why the super method would not work as i would expect that to do nothing if the ends are already correct return true at all times for now end_comment begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name determine fig nodes  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  end_type  begin_name get receiver operations  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  end_type  begin_name op list  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name action  end_name  begin_init  begin_expr  begin_call  begin_name get action  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name receiver  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get receiver  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get owner  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name action  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name receiver  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment todo what can we do with other kind of actions  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a call action  end_name  begin_argument_list  begin_argument  begin_expr  begin_name action  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name bases  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get bases  end_name  begin_argument_list  begin_argument  begin_expr  begin_name receiver  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name iterator  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name bases  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name base  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name bases  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name op list  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get operations  end_name  begin_argument_list  begin_argument  begin_expr  begin_name base  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_while  end_block  end_then  end_if  end_block  end_then  end_if  begin_return  begin_expr  begin_name op list  end_name  end_expr  end_return  end_block 
begin_comment creates a link based on the given from and to port the from port should always point to a message coordinates instance the to port can point to a message coordinates instance or to a object instance on a sequence diagram you can only draw messages so other edge classes then links are not supported see org tigris gef graph mutable graph model connect object object class end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name connect message  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name from port  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name to port  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name message sort  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo lets move this behind the model interface  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get uml version  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name char at  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name create message 1  end_name  begin_argument_list  begin_argument  begin_expr  begin_name from port  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name to port  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name message sort  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_return  begin_expr  begin_call  begin_name create message 2  end_name  begin_argument_list  begin_argument  begin_expr  begin_name from port  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name to port  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name message sort  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_else  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name create message 1  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name from port  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name to port  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name message sort  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name edge  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name action  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get message sort  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get synch call  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name message sort  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name action  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get common behavior factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create call action  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get common behavior helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set asynchronous  end_name  begin_argument_list  begin_argument  begin_expr  begin_name action  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get message sort  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get a synch call  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name message sort  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name action  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get common behavior factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create call action  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get common behavior helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set asynchronous  end_name  begin_argument_list  begin_argument  begin_expr  begin_name action  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get message sort  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get create message  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name message sort  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name action  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get common behavior factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create create action  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get common behavior helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set asynchronous  end_name  begin_argument_list  begin_argument  begin_expr  begin_name action  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get message sort  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get reply  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name message sort  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name action  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get common behavior factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create return action  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get common behavior helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set asynchronous  end_name  begin_argument_list  begin_argument  begin_expr  begin_name action  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get message sort  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get delete message  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name message sort  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name action  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get common behavior factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create destroy action  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get common behavior helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set asynchronous  end_name  begin_argument_list  begin_argument  begin_expr  begin_name action  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get message sort  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get a synch signal  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name message sort  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name action  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get common behavior factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create send action  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get common behavior helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set asynchronous  end_name  begin_argument_list  begin_argument  begin_expr  begin_name action  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get terminate action  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name message sort  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment not implemented yet  end_comment  end_block  end_then  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  begin_if  begin_condition  begin_expr  begin_name from port  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name to port  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name association role  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get collaborations helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get association role  end_name  begin_argument_list  begin_argument  begin_expr  begin_name from port  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name to port  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name association role  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name association role  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get collaborations factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name build association role  end_name  begin_argument_list  begin_argument  begin_expr  begin_name from port  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name to port  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name message  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get collaborations factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name build message  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get interaction  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name association role  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name action  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get collaborations helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set action  end_name  begin_argument_list  begin_argument  begin_expr  begin_name message  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name action  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set namespace  end_name  begin_argument_list  begin_argument  begin_expr  begin_name action  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get collaboration  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get collaborations helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set sender  end_name  begin_argument_list  begin_argument  begin_expr  begin_name message  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name from port  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get common behavior helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set receiver  end_name  begin_argument_list  begin_argument  begin_expr  begin_name message  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name to port  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add edge  end_name  begin_argument_list  begin_argument  begin_expr  begin_name message  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name edge  end_name  begin_operator  end_operator  begin_name message  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name edge  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_name edge  end_name  end_expr  end_return  end_block 
begin_comment activity graph is a uml 1 x element that has been dropped in uml 2 for convenience and prevent changes to interfaces this is currently being used to build an activity for uml 2 param the context the package the activity is to be contained inside return the activity created see org argouml model activity graphs factory build activity graph java lang object end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name build activity graph  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name the context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name the context  end_name  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name package  end_name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_comment non nls 1  end_comment  begin_operator  end_operator  begin_name the context  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name runnable class  end_name  end_type  begin_name run  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name runnable class  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name activity  end_name  end_type  begin_name activity  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name activity  end_name  begin_operator  end_operator  begin_call  begin_name create activity graph  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name activity  end_name  begin_operator  end_operator  begin_name set package  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name package  end_name  end_name  begin_operator  end_operator  begin_name the context  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get params  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name activity  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name change command  end_name  end_type  begin_name cmd  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name change command  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model impl  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name run  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get editing domain  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get command stack  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name execute  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cmd  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name set objects  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name run  end_name  begin_operator  end_operator  begin_name get params  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name the context  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_operator  end_operator  begin_name activity  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name run  end_name  begin_operator  end_operator  begin_name get params  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name deprecated  end_name  end_annotation  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get add only  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment todo change to throw exception when uses are fixed  end_comment  begin_comment throw new not implemented exception  end_comment  begin_return  begin_expr  end_expr  end_return  begin_comment non nls 1  end_comment  end_block 
begin_comment non nls 1 end_comment begin_type  begin_annotation  begin_name deprecated  end_name  end_annotation  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get changeable  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  end_expr  end_return  begin_comment non nls 1  end_comment  end_block 
begin_comment non nls 1 end_comment begin_type  begin_annotation  begin_name deprecated  end_name  end_annotation  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get frozen  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  end_expr  end_return  begin_comment non nls 1  end_comment  end_block 
begin_comment todo document what does this do interacts with event pump in some manner param objects new objeccts end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set objects  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  begin_type_modifier  end_type_modifier  end_type  begin_name objects  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name is valid  end_name  begin_argument_list  begin_argument  begin_expr  begin_name label  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name objects  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name objects  end_name  end_name  begin_operator  end_operator  begin_name objects  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get model event pump  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name notify changed  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name notification impl  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name model event pump euml impl  end_name  begin_operator  end_operator  begin_name command stack update  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_specifier  end_specifier  begin_name change command  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name euml model implementation  end_name  end_type  begin_name model implementation  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name runnable  end_name  end_type  begin_name runnable  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name label  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name super  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model implementation  end_name  begin_operator  end_operator  begin_name get editing domain  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name runnable  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name label  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name model impl  end_name  begin_operator  end_operator  begin_name model implementation  end_name  end_expr  end_expr_stmt  end_block 
 begin_specifier  end_specifier  begin_name change command  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name euml model implementation  end_name  end_type  begin_name model implementation  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name runnable  end_name  end_type  begin_name runnable  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name label  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  begin_type_modifier  end_type_modifier  end_type  begin_name objects  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name super  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model implementation  end_name  begin_operator  end_operator  begin_name get editing domain  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name runnable  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name label  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name is valid  end_name  begin_argument_list  begin_argument  begin_expr  begin_name label  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name objects  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name objects  end_name  end_name  begin_operator  end_operator  begin_name objects  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name model impl  end_name  begin_operator  end_operator  begin_name model implementation  end_name  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name build classifier role  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name collaboration  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block 
begin_comment non nls 1 end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name build lifeline  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name interaction  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name lifeline  end_name  end_type  begin_name lifeline  end_name  begin_init  begin_expr  begin_call  begin_name create lifeline  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name lifeline  end_name  begin_operator  end_operator  begin_name set interaction  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name interaction  end_name  begin_operator  end_operator  begin_name interaction  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name lifeline  end_name  end_expr  end_return  end_block 
begin_comment todo all build create methods need undo support tfm end_comment begin_type  begin_specifier  end_specifier  begin_name collaboration  end_name  end_type  begin_name build collaboration  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name collaboration  end_name  end_type  begin_name collab  end_name  begin_init  begin_expr  begin_call  begin_name create collaboration  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name element  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get owned elements  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name collab  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name collab  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name collaboration  end_name  end_type  begin_name build collaboration  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name namespace  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name represented element  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_specifier  end_specifier  begin_name element  end_name  end_type  begin_name copy  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name source  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name destination  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name source  end_name  begin_operator  end_operator  begin_name element  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name destination  end_name  begin_operator  end_operator  begin_name element  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name element  end_name  end_type  begin_name copied element  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name uml util  end_name  begin_operator  end_operator  begin_name copy  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model impl  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name element  end_name  begin_operator  end_operator  begin_name source  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name element  end_name  begin_operator  end_operator  begin_name destination  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name copied element  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name unsupported operation exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name source  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name destination  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1 non nls 2  end_comment  end_block  end_then  end_if  begin_return  begin_expr  begin_name copied element  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name abstraction  end_name  end_type  begin_name build abstraction  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name supplier  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name client  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name client  end_name  begin_operator  end_operator  begin_name named element  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name supplier  end_name  begin_operator  end_operator  begin_name named element  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_comment non nls 1  end_comment  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name named element  end_name  begin_operator  end_operator  begin_name client  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get nearest package  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name null pointer exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_comment non nls 1  end_comment  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name runnable class  end_name  end_type  begin_name run  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name runnable class  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name abstraction  end_name  end_type  begin_name abstraction  end_name  begin_init  begin_expr  begin_call  begin_name create abstraction  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name abstraction  end_name  begin_operator  end_operator  begin_name set name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name abstraction  end_name  begin_operator  end_operator  begin_name get suppliers  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name named element  end_name  begin_operator  end_operator  begin_name supplier  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name abstraction  end_name  begin_operator  end_operator  begin_name get clients  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name named element  end_name  begin_operator  end_operator  begin_name client  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name named element  end_name  begin_operator  end_operator  begin_name client  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get nearest package  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get packaged elements  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name abstraction  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get params  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name abstraction  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name change command  end_name  end_type  begin_name cmd  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name change command  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model impl  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name run  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_comment non nls 1  end_comment  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment non nls 1  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name editing domain  end_name  begin_operator  end_operator  begin_name get command stack  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name execute  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cmd  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name set objects  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name run  end_name  begin_operator  end_operator  begin_name get params  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name client  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name supplier  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_operator  end_operator  begin_name abstraction  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name run  end_name  begin_operator  end_operator  begin_name get params  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name abstraction  end_name  end_type  begin_name abstraction  end_name  begin_init  begin_expr  begin_call  begin_name create abstraction  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name abstraction  end_name  begin_operator  end_operator  begin_name set name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name abstraction  end_name  begin_operator  end_operator  begin_name get suppliers  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name named element  end_name  begin_operator  end_operator  begin_name supplier  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name abstraction  end_name  begin_operator  end_operator  begin_name get clients  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name named element  end_name  begin_operator  end_operator  begin_name client  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name named element  end_name  begin_operator  end_operator  begin_name client  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get nearest package  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get packaged elements  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name abstraction  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get params  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name abstraction  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name association  end_name  end_type  begin_name build association  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name type 1  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name navigability 1  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name aggregation kind 1  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name type 2  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name navigability 2  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name aggregation kind 2  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name association name  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name type 1  end_name  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name type 2  end_name  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name aggregation kind 1  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name aggregation kind 1  end_name  begin_operator  end_operator  begin_name aggregation kind  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name aggregation kind 2  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name aggregation kind 2  end_name  begin_operator  end_operator  begin_name aggregation kind  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_comment non nls 1  end_comment  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name type 1  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get nearest package  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name null pointer exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_comment non nls 1  end_comment  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name runnable class  end_name  end_type  begin_name run  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name runnable class  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name association  end_name  end_type  begin_name association  end_name  begin_init  begin_expr  begin_call  begin_name create association  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name property  end_name  end_type  begin_name property 1  end_name  begin_init  begin_expr  begin_call  begin_name build association end internal  end_name  begin_argument_list  begin_argument  begin_expr  begin_name association  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name type 1  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name navigability 1  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name aggregation kind  end_name  begin_operator  end_operator  begin_name aggregation kind 1  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name property  end_name  end_type  begin_name property 2  end_name  begin_init  begin_expr  begin_call  begin_name build association end internal  end_name  begin_argument_list  begin_argument  begin_expr  begin_name association  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name type 2  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name navigability 2  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name aggregation kind  end_name  begin_operator  end_operator  begin_name aggregation kind 2  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name association name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name association  end_name  begin_operator  end_operator  begin_name set name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name association name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name association  end_name  begin_operator  end_operator  begin_name get owned ends  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property 1  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name association  end_name  begin_operator  end_operator  begin_name get owned ends  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property 2  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment the code below will make navigable ends owned by  end_comment  begin_comment the classifier at the opposite end but let s just  end_comment  begin_comment make them owned by the association for simplicity  end_comment  begin_comment don t assume everything will be like this though  end_comment  begin_comment bob says see page 42 and 43 of uml 2 2 superstructure  end_comment  begin_comment for info on property ownership default will be  end_comment  begin_comment association ownership but we need a way for the  end_comment  begin_comment user to change to classifier ownership at a  end_comment  begin_comment later time  end_comment  begin_comment if uml util get owned attributes type type 2 null  end_comment  begin_comment association get owned ends add property 1  end_comment  begin_comment else  end_comment  begin_comment uml util get owned attributes type type 2 add property 1  end_comment  begin_comment   end_comment  begin_comment if uml util get owned attributes type type 1 null  end_comment  begin_comment association get owned ends add property 2  end_comment  begin_comment else  end_comment  begin_comment uml util get owned attributes type type 1 add property 2  end_comment  begin_comment   end_comment  begin_comment   end_comment  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name type 1  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get nearest package  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get packaged elements  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name association  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get params  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name association  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name change command  end_name  end_type  begin_name cmd  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name change command  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model impl  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name run  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name editing domain  end_name  begin_operator  end_operator  begin_name get command stack  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name execute  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cmd  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name set objects  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name run  end_name  begin_operator  end_operator  begin_name get params  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name type 1  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name type 2  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_operator  end_operator  begin_name association  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name run  end_name  begin_operator  end_operator  begin_name get params  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name association  end_name  end_type  begin_name association  end_name  begin_init  begin_expr  begin_call  begin_name create association  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name property  end_name  end_type  begin_name property 1  end_name  begin_init  begin_expr  begin_call  begin_name build association end internal  end_name  begin_argument_list  begin_argument  begin_expr  begin_name association  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name type 1  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name navigability 1  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name aggregation kind  end_name  begin_operator  end_operator  begin_name aggregation kind 1  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name property  end_name  end_type  begin_name property 2  end_name  begin_init  begin_expr  begin_call  begin_name build association end internal  end_name  begin_argument_list  begin_argument  begin_expr  begin_name association  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name type 2  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name navigability 2  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name aggregation kind  end_name  begin_operator  end_operator  begin_name aggregation kind 2  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name association name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name association  end_name  begin_operator  end_operator  begin_name set name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name association name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name association  end_name  begin_operator  end_operator  begin_name get owned ends  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property 1  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name association  end_name  begin_operator  end_operator  begin_name get owned ends  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property 2  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment the code below will make navigable ends owned by  end_comment  begin_comment the classifier at the opposite end but let s just  end_comment  begin_comment make them owned by the association for simplicity  end_comment  begin_comment don t assume everything will be like this though  end_comment  begin_comment bob says see page 42 and 43 of uml 2 2 superstructure  end_comment  begin_comment for info on property ownership default will be  end_comment  begin_comment association ownership but we need a way for the  end_comment  begin_comment user to change to classifier ownership at a  end_comment  begin_comment later time  end_comment  begin_comment if uml util get owned attributes type type 2 null  end_comment  begin_comment association get owned ends add property 1  end_comment  begin_comment else  end_comment  begin_comment uml util get owned attributes type type 2 add property 1  end_comment  begin_comment   end_comment  begin_comment if uml util get owned attributes type type 1 null  end_comment  begin_comment association get owned ends add property 2  end_comment  begin_comment else  end_comment  begin_comment uml util get owned attributes type type 1 add property 2  end_comment  begin_comment   end_comment  begin_comment   end_comment  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name type 1  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get nearest package  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get packaged elements  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name association  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get params  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name association  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_annotation  begin_name deprecated  end_name  end_annotation  begin_specifier  end_specifier  begin_name association  end_name  end_type  begin_name build association  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name from classifier  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name aggregation kind 1  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name to classifier  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name aggregation kind 2  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name unidirectional  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name unidirectional  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name build association  end_name  begin_argument_list  begin_argument  begin_expr  begin_name from classifier  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name unidirectional  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name aggregation kind 1  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name to classifier  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name aggregation kind 2  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_return  begin_expr  begin_call  begin_name build association  end_name  begin_argument_list  begin_argument  begin_expr  begin_name from classifier  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name aggregation kind 1  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name to classifier  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name aggregation kind 2  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_else  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name build association  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name from classifier  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name aggregation kind 1  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name to classifier  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name aggregation kind 2  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name unidirectional  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name build association  end_name  begin_argument_list  begin_argument  begin_expr  begin_name from classifier  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name aggregation kind 1  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name to classifier  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name unidirectional  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name aggregation kind 2  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name association  end_name  end_type  begin_name build association  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name classifier 1  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name classifier 2  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name build association  end_name  begin_argument_list  begin_argument  begin_expr  begin_name classifier 1  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name classifier 2  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name association  end_name  end_type  begin_name build association  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name c 1  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name nav 1  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name c 2  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name nav 2  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name build association  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c 1  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name nav 1  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name c 2  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name nav 2  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name association class  end_name  end_type  begin_name build association class  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name end 1  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name end 2  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name end 1  end_name  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name end 2  end_name  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name end 1  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get nearest package  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name null pointer exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_comment non nls 1  end_comment  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name runnable class  end_name  end_type  begin_name run  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name runnable class  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name association class  end_name  end_type  begin_name association class  end_name  begin_init  begin_expr  begin_call  begin_name create association class  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name property  end_name  end_type  begin_name property 1  end_name  begin_init  begin_expr  begin_call  begin_name create association end  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name property  end_name  end_type  begin_name property 2  end_name  begin_init  begin_expr  begin_call  begin_name create association end  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name property 1  end_name  begin_operator  end_operator  begin_name set type  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name end 2  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name property 2  end_name  begin_operator  end_operator  begin_name set type  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name end 1  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name property 1  end_name  begin_operator  end_operator  begin_name set association  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name association class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name property 2  end_name  begin_operator  end_operator  begin_name set association  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name association class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name end 1  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get nearest package  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get packaged elements  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name association class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name uml util  end_name  begin_operator  end_operator  begin_name get owned attributes  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name end 1  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name association class  end_name  begin_operator  end_operator  begin_name get owned attributes  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property 1  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name uml util  end_name  begin_operator  end_operator  begin_name get owned attributes  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name end 1  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property 1  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name uml util  end_name  begin_operator  end_operator  begin_name get owned attributes  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name end 2  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name association class  end_name  begin_operator  end_operator  begin_name get owned attributes  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property 2  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name uml util  end_name  begin_operator  end_operator  begin_name get owned attributes  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name end 2  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property 2  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name get params  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name association class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name change command  end_name  end_type  begin_name cmd  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name change command  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model impl  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name run  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name editing domain  end_name  begin_operator  end_operator  begin_name get command stack  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name execute  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cmd  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name set objects  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name run  end_name  begin_operator  end_operator  begin_name get params  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name end 1  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name end 2  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_operator  end_operator  begin_name association class  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name run  end_name  begin_operator  end_operator  begin_name get params  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name association class  end_name  end_type  begin_name association class  end_name  begin_init  begin_expr  begin_call  begin_name create association class  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name property  end_name  end_type  begin_name property 1  end_name  begin_init  begin_expr  begin_call  begin_name create association end  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name property  end_name  end_type  begin_name property 2  end_name  begin_init  begin_expr  begin_call  begin_name create association end  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name property 1  end_name  begin_operator  end_operator  begin_name set type  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name end 2  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name property 2  end_name  begin_operator  end_operator  begin_name set type  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name end 1  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name property 1  end_name  begin_operator  end_operator  begin_name set association  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name association class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name property 2  end_name  begin_operator  end_operator  begin_name set association  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name association class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name end 1  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get nearest package  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get packaged elements  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name association class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name uml util  end_name  begin_operator  end_operator  begin_name get owned attributes  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name end 1  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name association class  end_name  begin_operator  end_operator  begin_name get owned attributes  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property 1  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name uml util  end_name  begin_operator  end_operator  begin_name get owned attributes  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name end 1  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property 1  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name uml util  end_name  begin_operator  end_operator  begin_name get owned attributes  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name end 2  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name association class  end_name  begin_operator  end_operator  begin_name get owned attributes  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property 2  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name uml util  end_name  begin_operator  end_operator  begin_name get owned attributes  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name end 2  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property 2  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name get params  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name association class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name property  end_name  end_type  begin_name build association end  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name assoc  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name type  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name multi  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name stereo  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name navigable  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name order  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name aggregation  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name scope  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name changeable  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name visibility  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment the attribute target scope of an association end in uml 1 x is no  end_comment  begin_comment longer supported in uml 2 x  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name assoc  end_name  begin_operator  end_operator  begin_name association  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_comment non nls 1  end_comment  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name aggregation  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name aggregation  end_name  begin_operator  end_operator  begin_name aggregation kind  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_comment non nls 1  end_comment  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name visibility  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name visibility  end_name  begin_operator  end_operator  begin_name visibility kind  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_comment non nls 1  end_comment  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name multi  end_name  begin_operator  end_operator  begin_name multiplicity element  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_comment non nls 1  end_comment  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name multiplicity element  end_name  end_type  begin_name m  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name multiplicity element  end_name  begin_operator  end_operator  begin_name multi  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name lower  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name m  end_name  begin_operator  end_operator  begin_name get lower  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name upper  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name m  end_name  begin_operator  end_operator  begin_name get upper  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name order  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name order  end_name  begin_operator  end_operator  begin_name boolean  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name changeable  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name changeable  end_name  begin_operator  end_operator  begin_name boolean  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_comment non nls 1  end_comment  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name stereo  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name stereo  end_name  begin_operator  end_operator  begin_name stereotype  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name runnable class  end_name  end_type  begin_name run  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name runnable class  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name property  end_name  end_type  begin_name property  end_name  begin_init  begin_expr  begin_call  begin_name build association end internal  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name association  end_name  begin_operator  end_operator  begin_name assoc  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name type  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name integer  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_name lower  end_name  end_expr  begin_expr  begin_name upper  end_name  end_expr  end_block  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name stereotype  end_name  begin_operator  end_operator  begin_name stereo  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name navigable  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name boolean  end_name  begin_operator  end_operator  begin_name order  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name aggregation kind  end_name  begin_operator  end_operator  begin_name aggregation  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name boolean  end_name  begin_operator  end_operator  begin_name changeable  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name visibility kind  end_name  begin_operator  end_operator  begin_name visibility  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get params  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get model event pump  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get root container  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set hold events  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name change command  end_name  end_type  begin_name cmd  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name change command  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model impl  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name run  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name editing domain  end_name  begin_operator  end_operator  begin_name get command stack  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name execute  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cmd  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name run  end_name  begin_operator  end_operator  begin_name get params  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is empty  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name editing domain  end_name  begin_operator  end_operator  begin_name get command stack  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name undo  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name editing domain  end_name  begin_operator  end_operator  begin_name get command stack  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name flush  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get model event pump  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get root container  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name clear held events  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get model event pump  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get root container  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set hold events  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name unsupported operation exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_comment non nls 1  end_comment  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name set objects  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name run  end_name  begin_operator  end_operator  begin_name get params  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name assoc  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get model event pump  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get root container  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set hold events  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_operator  end_operator  begin_name property  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name run  end_name  begin_operator  end_operator  begin_name get params  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name property  end_name  end_type  begin_name property  end_name  begin_init  begin_expr  begin_call  begin_name build association end internal  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name association  end_name  begin_operator  end_operator  begin_name assoc  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name type  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name integer  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_name lower  end_name  end_expr  begin_expr  begin_name upper  end_name  end_expr  end_block  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name stereotype  end_name  begin_operator  end_operator  begin_name stereo  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name navigable  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name boolean  end_name  begin_operator  end_operator  begin_name order  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name aggregation kind  end_name  begin_operator  end_operator  begin_name aggregation  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name boolean  end_name  begin_operator  end_operator  begin_name changeable  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name visibility kind  end_name  begin_operator  end_operator  begin_name visibility  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get params  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_annotation  begin_name deprecated  end_name  end_annotation  begin_specifier  end_specifier  begin_name property  end_name  end_type  begin_name build association end  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name assoc  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name type  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name multi  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name stereo  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name navigable  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name order  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name aggregation  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name scope  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name changeable  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name visibility  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not implemented exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_specifier  end_specifier  begin_name property  end_name  end_type  begin_name build association end  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name assoc  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name type  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name integer  end_name  begin_index  end_index  end_name  end_type  begin_name multi  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name stereo  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name navigable  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name order  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name aggregation  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name scope  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name changeable  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name visibility  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name build association end internal  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name association  end_name  begin_operator  end_operator  begin_name assoc  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name type  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name multi  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name stereotype  end_name  begin_operator  end_operator  begin_name stereo  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name boolean  end_name  begin_operator  end_operator  begin_name navigable  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name boolean  end_name  begin_operator  end_operator  begin_name order  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name aggregation kind  end_name  begin_operator  end_operator  begin_name aggregation  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name changeable  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name visibility kind  end_name  begin_operator  end_operator  begin_name visibility  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name property  end_name  end_type  begin_name build association end  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name type  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name assoc  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name build association end  end_name  begin_argument_list  begin_argument  begin_expr  begin_name assoc  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name type  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name property  end_name  end_type  begin_name build attribute 2  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_comment non nls 1  end_comment  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name property  end_name  end_type  begin_name property  end_name  begin_init  begin_expr  begin_call  begin_name create attribute  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name property  end_name  begin_operator  end_operator  begin_name set type  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name type  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name property  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name property  end_name  end_type  begin_name build attribute 2  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name type  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name uml util  end_name  begin_operator  end_operator  begin_name get owned attributes  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name unsupported operation exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name handle  end_name  begin_operator  end_operator  begin_name get class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_comment non nls 1  end_comment  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name runnable class  end_name  end_type  begin_name run  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name runnable class  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name property  end_name  end_type  begin_name property  end_name  begin_init  begin_expr  begin_call  begin_name create attribute  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name uml util  end_name  begin_operator  end_operator  begin_name get owned attributes  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name type  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name property  end_name  begin_operator  end_operator  begin_name set type  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name type  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name property  end_name  begin_operator  end_operator  begin_name set name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get params  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name change command  end_name  end_type  begin_name cmd  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name change command  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model impl  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name run  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name editing domain  end_name  begin_operator  end_operator  begin_name get command stack  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name execute  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cmd  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name set objects  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name run  end_name  begin_operator  end_operator  begin_name get params  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_operator  end_operator  begin_name property  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name run  end_name  begin_operator  end_operator  begin_name get params  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name property  end_name  end_type  begin_name property  end_name  begin_init  begin_expr  begin_call  begin_name create attribute  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name uml util  end_name  begin_operator  end_operator  begin_name get owned attributes  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name type  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name property  end_name  begin_operator  end_operator  begin_name set type  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name type  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name property  end_name  begin_operator  end_operator  begin_name set name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get params  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name template binding  end_name  end_type  begin_name build template binding  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name client  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name supplier  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name list  end_name  end_type  begin_name arguments  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo is it appropriate the templateable element as the client and a  end_comment  begin_comment list of template parameter substitution as the list of parameters  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name client  end_name  begin_operator  end_operator  begin_name templateable element  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_comment non nls 1  end_comment  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name supplier  end_name  begin_operator  end_operator  begin_name template signature  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_comment non nls 1  end_comment  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name arguments  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o  end_name  begin_range  begin_expr  begin_name arguments  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name o  end_name  begin_operator  end_operator  begin_name template parameter substitution  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_comment non nls 1  end_comment  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  end_block  end_for  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name runnable class  end_name  end_type  begin_name run  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name runnable class  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name template binding  end_name  end_type  begin_name template binding  end_name  begin_init  begin_expr  begin_call  begin_name create template binding  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name template binding  end_name  begin_operator  end_operator  begin_name set bound element  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name templateable element  end_name  begin_operator  end_operator  begin_name client  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name template binding  end_name  begin_operator  end_operator  begin_name set signature  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name template signature  end_name  begin_operator  end_operator  begin_name supplier  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name arguments  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o  end_name  begin_range  begin_expr  begin_name arguments  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name template binding  end_name  begin_operator  end_operator  begin_name get parameter substitutions  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name template parameter substitution  end_name  begin_operator  end_operator  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name get params  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name template binding  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name change command  end_name  end_type  begin_name cmd  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name change command  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model impl  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name run  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name editing domain  end_name  begin_operator  end_operator  begin_name get command stack  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name execute  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cmd  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name set objects  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name run  end_name  begin_operator  end_operator  begin_name get params  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name client  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name supplier  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_operator  end_operator  begin_name template binding  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name run  end_name  begin_operator  end_operator  begin_name get params  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name template binding  end_name  end_type  begin_name template binding  end_name  begin_init  begin_expr  begin_call  begin_name create template binding  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name template binding  end_name  begin_operator  end_operator  begin_name set bound element  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name templateable element  end_name  begin_operator  end_operator  begin_name client  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name template binding  end_name  begin_operator  end_operator  begin_name set signature  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name template signature  end_name  begin_operator  end_operator  begin_name supplier  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name arguments  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o  end_name  begin_range  begin_expr  begin_name arguments  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name template binding  end_name  begin_operator  end_operator  begin_name get parameter substitutions  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name template parameter substitution  end_name  begin_operator  end_operator  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name get params  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name template binding  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_type  begin_name build class  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name create class  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_type  begin_name build class  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name owner  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name build class  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name owner  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_type  begin_name build class  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_type  begin_name clazz  end_name  begin_init  begin_expr  begin_call  begin_name create class  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name clazz  end_name  begin_operator  end_operator  begin_name set name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_name clazz  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_type  begin_name build class  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name owner  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name owner  end_name  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name package  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name owner  end_name  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name owner  end_name  begin_operator  end_operator  begin_name interface  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_comment non nls 1  end_comment  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name runnable class  end_name  end_type  begin_name run  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name runnable class  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_type  begin_name clazz  end_name  begin_init  begin_expr  begin_call  begin_name create class  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name clazz  end_name  begin_operator  end_operator  begin_name set name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name owner  end_name  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name package  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name clazz  end_name  begin_operator  end_operator  begin_name set package  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name package  end_name  end_name  begin_operator  end_operator  begin_name owner  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name owner  end_name  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  begin_operator  end_operator  begin_name owner  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get nested classifiers  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name clazz  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name owner  end_name  begin_operator  end_operator  begin_name interface  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name interface  end_name  begin_operator  end_operator  begin_name owner  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get nested classifiers  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name clazz  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name get params  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name clazz  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name change command  end_name  end_type  begin_name cmd  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name change command  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model impl  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name run  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name editing domain  end_name  begin_operator  end_operator  begin_name get command stack  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name execute  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cmd  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name set objects  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name run  end_name  begin_operator  end_operator  begin_name get params  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name owner  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name run  end_name  begin_operator  end_operator  begin_name get params  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_type  begin_name clazz  end_name  begin_init  begin_expr  begin_call  begin_name create class  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name clazz  end_name  begin_operator  end_operator  begin_name set name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name owner  end_name  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name package  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name clazz  end_name  begin_operator  end_operator  begin_name set package  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name package  end_name  end_name  begin_operator  end_operator  begin_name owner  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name owner  end_name  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  begin_operator  end_operator  begin_name owner  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get nested classifiers  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name clazz  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name owner  end_name  begin_operator  end_operator  begin_name interface  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name interface  end_name  begin_operator  end_operator  begin_name owner  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get nested classifiers  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name clazz  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name get params  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name clazz  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name comment  end_name  end_type  begin_name build comment  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name model  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name model  end_name  begin_operator  end_operator  begin_name namespace  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name element  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name element  end_name  begin_operator  end_operator  begin_name element  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name runnable class  end_name  end_type  begin_name run  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name runnable class  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name comment  end_name  end_type  begin_name comment  end_name  begin_init  begin_expr  begin_call  begin_name create comment  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name element  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name comment  end_name  begin_operator  end_operator  begin_name get annotated elements  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name element  end_name  begin_operator  end_operator  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name namespace  end_name  begin_operator  end_operator  begin_name model  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get owned comments  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name comment  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get params  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name comment  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name change command  end_name  end_type  begin_name cmd  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name element  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name cmd  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name change command  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model impl  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name run  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name cmd  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name change command  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model impl  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name run  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name editing domain  end_name  begin_operator  end_operator  begin_name get command stack  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name execute  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cmd  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name element  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name set objects  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name run  end_name  begin_operator  end_operator  begin_name get params  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name set objects  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name run  end_name  begin_operator  end_operator  begin_name get params  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_return  begin_expr  begin_operator  end_operator  begin_name comment  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name run  end_name  begin_operator  end_operator  begin_name get params  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name comment  end_name  end_type  begin_name comment  end_name  begin_init  begin_expr  begin_call  begin_name create comment  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name element  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name comment  end_name  begin_operator  end_operator  begin_name get annotated elements  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name element  end_name  begin_operator  end_operator  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name namespace  end_name  begin_operator  end_operator  begin_name model  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get owned comments  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name comment  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get params  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name comment  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name constraint  end_name  end_type  begin_name build constraint  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name constr element  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name constr element  end_name  begin_operator  end_operator  begin_name element  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name element  end_name  begin_operator  end_operator  begin_name constr element  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get nearest package  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name null pointer exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_comment non nls 1  end_comment  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name runnable class  end_name  end_type  begin_name run  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name runnable class  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name constraint  end_name  end_type  begin_name constraint  end_name  begin_init  begin_expr  begin_call  begin_name create constraint  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name constraint  end_name  begin_operator  end_operator  begin_name get constrained elements  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name element  end_name  begin_operator  end_operator  begin_name constr element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get params  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name constraint  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name change command  end_name  end_type  begin_name cmd  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name change command  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model impl  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name run  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name editing domain  end_name  begin_operator  end_operator  begin_name get command stack  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name execute  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cmd  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name set objects  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name run  end_name  begin_operator  end_operator  begin_name get params  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name constr element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_operator  end_operator  begin_name constraint  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name run  end_name  begin_operator  end_operator  begin_name get params  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name constraint  end_name  end_type  begin_name constraint  end_name  begin_init  begin_expr  begin_call  begin_name create constraint  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name constraint  end_name  begin_operator  end_operator  begin_name get constrained elements  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name element  end_name  begin_operator  end_operator  begin_name constr element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get params  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name constraint  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name constraint  end_name  end_type  begin_name build constraint  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name bexpr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo boolean expresion is removed from uml 2 x is it ok to use  end_comment  begin_comment value specification  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name bexpr  end_name  begin_operator  end_operator  begin_name value specification  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_comment non nls 1  end_comment  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name constraint  end_name  end_type  begin_name constraint  end_name  begin_init  begin_expr  begin_call  begin_name create constraint  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name constraint  end_name  begin_operator  end_operator  begin_name set name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name constraint  end_name  begin_operator  end_operator  begin_name set specification  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name value specification  end_name  begin_operator  end_operator  begin_name bexpr  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name constraint  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name data type  end_name  end_type  begin_name build data type  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name owner  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name owner  end_name  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name package  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name owner  end_name  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name owner  end_name  begin_operator  end_operator  begin_name interface  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_comment non nls 1  end_comment  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name runnable class  end_name  end_type  begin_name run  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name runnable class  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name data type  end_name  end_type  begin_name data type  end_name  begin_init  begin_expr  begin_call  begin_name create data type  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name data type  end_name  begin_operator  end_operator  begin_name set name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name owner  end_name  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name package  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name data type  end_name  begin_operator  end_operator  begin_name set package  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name package  end_name  end_name  begin_operator  end_operator  begin_name owner  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name owner  end_name  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  begin_operator  end_operator  begin_name owner  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get nested classifiers  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name data type  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name owner  end_name  begin_operator  end_operator  begin_name interface  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name interface  end_name  begin_operator  end_operator  begin_name owner  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get nested classifiers  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name data type  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name get params  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name data type  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name change command  end_name  end_type  begin_name cmd  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name change command  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model impl  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name run  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name editing domain  end_name  begin_operator  end_operator  begin_name get command stack  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name execute  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cmd  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name set objects  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name run  end_name  begin_operator  end_operator  begin_name get params  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name owner  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_operator  end_operator  begin_name data type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name run  end_name  begin_operator  end_operator  begin_name get params  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name data type  end_name  end_type  begin_name data type  end_name  begin_init  begin_expr  begin_call  begin_name create data type  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name data type  end_name  begin_operator  end_operator  begin_name set name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name owner  end_name  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name package  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name data type  end_name  begin_operator  end_operator  begin_name set package  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name package  end_name  end_name  begin_operator  end_operator  begin_name owner  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name owner  end_name  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  begin_operator  end_operator  begin_name owner  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get nested classifiers  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name data type  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name owner  end_name  begin_operator  end_operator  begin_name interface  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name interface  end_name  begin_operator  end_operator  begin_name owner  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get nested classifiers  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name data type  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name get params  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name data type  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name dependency  end_name  end_type  begin_name build dependency  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name client obj  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name supplier obj  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name client obj  end_name  begin_operator  end_operator  begin_name named element  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name supplier obj  end_name  begin_operator  end_operator  begin_name named element  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_comment non nls 1  end_comment  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name named element  end_name  begin_operator  end_operator  begin_name client obj  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get nearest package  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name null pointer exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name runnable class  end_name  end_type  begin_name run  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name runnable class  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name dependency  end_name  end_type  begin_name dependency  end_name  begin_init  begin_expr  begin_call  begin_name create dependency  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name dependency  end_name  begin_operator  end_operator  begin_name get clients  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name named element  end_name  begin_operator  end_operator  begin_name client obj  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name dependency  end_name  begin_operator  end_operator  begin_name get suppliers  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name named element  end_name  begin_operator  end_operator  begin_name supplier obj  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name named element  end_name  begin_operator  end_operator  begin_name client obj  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get nearest package  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get packaged elements  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dependency  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get params  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dependency  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name change command  end_name  end_type  begin_name cmd  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name change command  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model impl  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name run  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name editing domain  end_name  begin_operator  end_operator  begin_name get command stack  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name execute  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cmd  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name set objects  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name run  end_name  begin_operator  end_operator  begin_name get params  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name client obj  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name supplier obj  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_operator  end_operator  begin_name dependency  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name run  end_name  begin_operator  end_operator  begin_name get params  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name dependency  end_name  end_type  begin_name dependency  end_name  begin_init  begin_expr  begin_call  begin_name create dependency  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name dependency  end_name  begin_operator  end_operator  begin_name get clients  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name named element  end_name  begin_operator  end_operator  begin_name client obj  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name dependency  end_name  begin_operator  end_operator  begin_name get suppliers  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name named element  end_name  begin_operator  end_operator  begin_name supplier obj  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name named element  end_name  begin_operator  end_operator  begin_name client obj  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get nearest package  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get packaged elements  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dependency  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get params  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dependency  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name dependency  end_name  end_type  begin_name build component realization  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name client obj  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name supplier obj  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name client obj  end_name  begin_operator  end_operator  begin_name named element  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name supplier obj  end_name  begin_operator  end_operator  begin_name named element  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_comment non nls 1  end_comment  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name named element  end_name  begin_operator  end_operator  begin_name client obj  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get nearest package  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name null pointer exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name runnable class  end_name  end_type  begin_name run  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name runnable class  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name component realization  end_name  end_type  begin_name dependency  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name uml factory  end_name  begin_operator  end_operator  begin_name e instance  end_name  begin_operator  end_operator  begin_name create component realization  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name dependency  end_name  begin_operator  end_operator  begin_name get clients  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name named element  end_name  begin_operator  end_operator  begin_name client obj  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name dependency  end_name  begin_operator  end_operator  begin_name get suppliers  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name named element  end_name  begin_operator  end_operator  begin_name supplier obj  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name named element  end_name  begin_operator  end_operator  begin_name client obj  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get nearest package  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get packaged elements  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dependency  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get params  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dependency  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name change command  end_name  end_type  begin_name cmd  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name change command  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model impl  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name run  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name editing domain  end_name  begin_operator  end_operator  begin_name get command stack  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name execute  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cmd  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name set objects  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name run  end_name  begin_operator  end_operator  begin_name get params  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name client obj  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name supplier obj  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_operator  end_operator  begin_name component realization  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name run  end_name  begin_operator  end_operator  begin_name get params  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name component realization  end_name  end_type  begin_name dependency  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name uml factory  end_name  begin_operator  end_operator  begin_name e instance  end_name  begin_operator  end_operator  begin_name create component realization  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name dependency  end_name  begin_operator  end_operator  begin_name get clients  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name named element  end_name  begin_operator  end_operator  begin_name client obj  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name dependency  end_name  begin_operator  end_operator  begin_name get suppliers  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name named element  end_name  begin_operator  end_operator  begin_name supplier obj  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name named element  end_name  begin_operator  end_operator  begin_name client obj  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get nearest package  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get packaged elements  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dependency  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get params  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dependency  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name build element residence  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name me  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name component  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo is this removed from uml 2  end_comment  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not implemented exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_specifier  end_specifier  begin_name enumeration  end_name  end_type  begin_name build enumeration  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name owner  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name owner  end_name  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name package  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name owner  end_name  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name owner  end_name  begin_operator  end_operator  begin_name interface  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name runnable class  end_name  end_type  begin_name run  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name runnable class  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name enumeration  end_name  end_type  begin_name enumeration  end_name  begin_init  begin_expr  begin_call  begin_name create enumeration  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name enumeration  end_name  begin_operator  end_operator  begin_name set name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name owner  end_name  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name package  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name enumeration  end_name  begin_operator  end_operator  begin_name set package  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name package  end_name  end_name  begin_operator  end_operator  begin_name owner  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name owner  end_name  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  begin_operator  end_operator  begin_name owner  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get nested classifiers  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name enumeration  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name owner  end_name  begin_operator  end_operator  begin_name interface  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name interface  end_name  begin_operator  end_operator  begin_name owner  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get nested classifiers  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name enumeration  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name get params  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name enumeration  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name change command  end_name  end_type  begin_name cmd  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name change command  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model impl  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name run  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name editing domain  end_name  begin_operator  end_operator  begin_name get command stack  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name execute  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cmd  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name set objects  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name run  end_name  begin_operator  end_operator  begin_name get params  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name owner  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_operator  end_operator  begin_name enumeration  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name run  end_name  begin_operator  end_operator  begin_name get params  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name enumeration  end_name  end_type  begin_name enumeration  end_name  begin_init  begin_expr  begin_call  begin_name create enumeration  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name enumeration  end_name  begin_operator  end_operator  begin_name set name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name owner  end_name  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name package  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name enumeration  end_name  begin_operator  end_operator  begin_name set package  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name package  end_name  end_name  begin_operator  end_operator  begin_name owner  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name owner  end_name  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  begin_operator  end_operator  begin_name owner  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get nested classifiers  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name enumeration  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name owner  end_name  begin_operator  end_operator  begin_name interface  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name interface  end_name  begin_operator  end_operator  begin_name owner  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get nested classifiers  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name enumeration  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name get params  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name enumeration  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name enumeration literal  end_name  end_type  begin_name build enumeration literal  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name enumeration  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name enumeration  end_name  begin_operator  end_operator  begin_name enumeration  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name runnable class  end_name  end_type  begin_name run  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name runnable class  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name enumeration literal  end_name  end_type  begin_name enumeration literal  end_name  begin_init  begin_expr  begin_call  begin_name create enumeration literal  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name enumeration literal  end_name  begin_operator  end_operator  begin_name set name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name enumeration literal  end_name  begin_operator  end_operator  begin_name set enumeration  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name enumeration  end_name  begin_operator  end_operator  begin_name enumeration  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get params  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name enumeration literal  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name change command  end_name  end_type  begin_name cmd  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name change command  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model impl  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name run  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name editing domain  end_name  begin_operator  end_operator  begin_name get command stack  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name execute  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cmd  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name set objects  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name run  end_name  begin_operator  end_operator  begin_name get params  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name enumeration  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_operator  end_operator  begin_name enumeration literal  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name run  end_name  begin_operator  end_operator  begin_name get params  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name enumeration literal  end_name  end_type  begin_name enumeration literal  end_name  begin_init  begin_expr  begin_call  begin_name create enumeration literal  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name enumeration literal  end_name  begin_operator  end_operator  begin_name set name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name enumeration literal  end_name  begin_operator  end_operator  begin_name set enumeration  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name enumeration  end_name  begin_operator  end_operator  begin_name enumeration  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get params  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name enumeration literal  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name generalization  end_name  end_type  begin_name build generalization  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name child  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name parent  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name child  end_name  begin_operator  end_operator  begin_name classifier  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name parent  end_name  begin_operator  end_operator  begin_name classifier  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name runnable class  end_name  end_type  begin_name run  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name runnable class  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name generalization  end_name  end_type  begin_name generalization  end_name  begin_init  begin_expr  begin_call  begin_name create generalization  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name generalization  end_name  begin_operator  end_operator  begin_name set general  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name classifier  end_name  begin_operator  end_operator  begin_name parent  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name generalization  end_name  begin_operator  end_operator  begin_name set specific  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name classifier  end_name  begin_operator  end_operator  begin_name child  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get params  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name generalization  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name change command  end_name  end_type  begin_name cmd  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name change command  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model impl  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name run  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name editing domain  end_name  begin_operator  end_operator  begin_name get command stack  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name execute  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cmd  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name set objects  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name run  end_name  begin_operator  end_operator  begin_name get params  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name parent  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name child  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_operator  end_operator  begin_name generalization  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name run  end_name  begin_operator  end_operator  begin_name get params  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name generalization  end_name  end_type  begin_name generalization  end_name  begin_init  begin_expr  begin_call  begin_name create generalization  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name generalization  end_name  begin_operator  end_operator  begin_name set general  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name classifier  end_name  begin_operator  end_operator  begin_name parent  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name generalization  end_name  begin_operator  end_operator  begin_name set specific  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name classifier  end_name  begin_operator  end_operator  begin_name child  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get params  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name generalization  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name interface  end_name  end_type  begin_name build interface  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name create interface  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name interface  end_name  end_type  begin_name build interface  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name owner  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name build interface  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name owner  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name interface  end_name  end_type  begin_name build interface  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name interface  end_name  end_type  begin_name interfaze  end_name  begin_init  begin_expr  begin_call  begin_name create interface  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name interfaze  end_name  begin_operator  end_operator  begin_name set name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_name interfaze  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name interface  end_name  end_type  begin_name build interface  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name owner  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name owner  end_name  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name package  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name owner  end_name  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name owner  end_name  begin_operator  end_operator  begin_name interface  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_comment non nls 1  end_comment  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name runnable class  end_name  end_type  begin_name run  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name runnable class  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name interface  end_name  end_type  begin_name interfaze  end_name  begin_init  begin_expr  begin_call  begin_name create interface  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name owner  end_name  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name package  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name interfaze  end_name  begin_operator  end_operator  begin_name set package  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name package  end_name  end_name  begin_operator  end_operator  begin_name owner  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name owner  end_name  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  begin_operator  end_operator  begin_name owner  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get nested classifiers  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name interfaze  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name owner  end_name  begin_operator  end_operator  begin_name interface  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name interface  end_name  begin_operator  end_operator  begin_name owner  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get nested classifiers  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name interfaze  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_else  end_if  begin_if  begin_condition  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name interfaze  end_name  begin_operator  end_operator  begin_name set name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name get params  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name interfaze  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name change command  end_name  end_type  begin_name cmd  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name change command  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model impl  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name run  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name editing domain  end_name  begin_operator  end_operator  begin_name get command stack  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name execute  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cmd  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name set objects  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name run  end_name  begin_operator  end_operator  begin_name get params  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name owner  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_operator  end_operator  begin_name interface  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name run  end_name  begin_operator  end_operator  begin_name get params  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name interface  end_name  end_type  begin_name interfaze  end_name  begin_init  begin_expr  begin_call  begin_name create interface  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name owner  end_name  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name package  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name interfaze  end_name  begin_operator  end_operator  begin_name set package  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name package  end_name  end_name  begin_operator  end_operator  begin_name owner  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name owner  end_name  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  begin_operator  end_operator  begin_name owner  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get nested classifiers  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name interfaze  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name owner  end_name  begin_operator  end_operator  begin_name interface  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name interface  end_name  begin_operator  end_operator  begin_name owner  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get nested classifiers  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name interfaze  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_else  end_if  begin_if  begin_condition  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name interfaze  end_name  begin_operator  end_operator  begin_name set name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name get params  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name interfaze  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name build manifestation  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name utilized element  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name utilized element  end_name  begin_operator  end_operator  begin_name packageable element  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name manifestation  end_name  end_type  begin_name m  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name uml factory  end_name  begin_operator  end_operator  begin_name e instance  end_name  begin_operator  end_operator  begin_name create manifestation  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name m  end_name  begin_operator  end_operator  begin_name set name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name packageable element  end_name  begin_operator  end_operator  begin_name utilized element  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name m  end_name  begin_operator  end_operator  begin_name set utilized element  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name packageable element  end_name  begin_operator  end_operator  begin_name utilized element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name m  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name operation  end_name  end_type  begin_name build operation 2  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name cls  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name return type  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name return type  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name return type  end_name  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name cls  end_name  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name uml util  end_name  begin_operator  end_operator  begin_name get owned operations  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name cls  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name unsupported operation exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name cls  end_name  begin_operator  end_operator  begin_name get class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_comment non nls 1  end_comment  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name runnable class  end_name  end_type  begin_name run  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name runnable class  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name operation  end_name  end_type  begin_name operation  end_name  begin_init  begin_expr  begin_call  begin_name create operation  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name uml util  end_name  begin_operator  end_operator  begin_name get owned operations  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name cls  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name operation  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name operation  end_name  begin_operator  end_operator  begin_name create return result  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name return type  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name operation  end_name  begin_operator  end_operator  begin_name set name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_comment todo remove can t be localized  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name operation  end_name  begin_operator  end_operator  begin_name set name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name get params  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name operation  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name change command  end_name  end_type  begin_name cmd  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name change command  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model impl  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name run  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name editing domain  end_name  begin_operator  end_operator  begin_name get command stack  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name execute  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cmd  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name set objects  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name run  end_name  begin_operator  end_operator  begin_name get params  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name cls  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_operator  end_operator  begin_name operation  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name run  end_name  begin_operator  end_operator  begin_name get params  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name operation  end_name  end_type  begin_name operation  end_name  begin_init  begin_expr  begin_call  begin_name create operation  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name uml util  end_name  begin_operator  end_operator  begin_name get owned operations  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name cls  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name operation  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name operation  end_name  begin_operator  end_operator  begin_name create return result  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name return type  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name operation  end_name  begin_operator  end_operator  begin_name set name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_comment todo remove can t be localized  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name operation  end_name  begin_operator  end_operator  begin_name set name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name get params  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name operation  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name parameter  end_name  end_type  begin_name build parameter  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name o  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo in uml 2 x event has no parameters the event metaclass in  end_comment  begin_comment uml 1 x corresponds to the trigger metaclass in uml 2 x see uml  end_comment  begin_comment superstructure page 456  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name o  end_name  begin_operator  end_operator  begin_name behavioral feature  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name runnable class  end_name  end_type  begin_name run  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name runnable class  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name parameter  end_name  end_type  begin_name param  end_name  begin_init  begin_expr  begin_call  begin_name create parameter  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name param  end_name  begin_operator  end_operator  begin_name set type  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name type  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo remove can t be localized  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name param  end_name  begin_operator  end_operator  begin_name set name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name behavioral feature  end_name  begin_operator  end_operator  begin_name o  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get owned parameters  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name size  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name behavioral feature  end_name  begin_operator  end_operator  begin_name o  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get owned parameters  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name param  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get params  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name param  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name change command  end_name  end_type  begin_name cmd  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name change command  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model impl  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name run  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name editing domain  end_name  begin_operator  end_operator  begin_name get command stack  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name execute  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cmd  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name set objects  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name run  end_name  begin_operator  end_operator  begin_name get params  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_operator  end_operator  begin_name parameter  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name run  end_name  begin_operator  end_operator  begin_name get params  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name parameter  end_name  end_type  begin_name param  end_name  begin_init  begin_expr  begin_call  begin_name create parameter  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name param  end_name  begin_operator  end_operator  begin_name set type  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name type  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo remove can t be localized  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name param  end_name  begin_operator  end_operator  begin_name set name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name behavioral feature  end_name  begin_operator  end_operator  begin_name o  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get owned parameters  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name size  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name behavioral feature  end_name  begin_operator  end_operator  begin_name o  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get owned parameters  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name param  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get params  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name param  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name package import  end_name  end_type  begin_name build package import  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name client  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name supplier  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name build package import  end_name  begin_argument_list  begin_argument  begin_expr  begin_name client  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name supplier  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name package import  end_name  end_type  begin_name build package import  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name client  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name supplier  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name visibility kind  end_name  end_type  begin_name visibility  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name client  end_name  begin_operator  end_operator  begin_name namespace  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name supplier  end_name  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name package  end_name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name runnable class  end_name  end_type  begin_name run  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name runnable class  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name package import  end_name  end_type  begin_name package import  end_name  begin_init  begin_expr  begin_call  begin_name create package import  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package import  end_name  begin_operator  end_operator  begin_name set imported package  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name package  end_name  end_name  begin_operator  end_operator  begin_name supplier  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package import  end_name  begin_operator  end_operator  begin_name set importing namespace  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name namespace  end_name  begin_operator  end_operator  begin_name client  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name visibility  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package import  end_name  begin_operator  end_operator  begin_name set visibility  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name visibility  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name get params  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name package import  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name change command  end_name  end_type  begin_name cmd  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name change command  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model impl  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name run  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name editing domain  end_name  begin_operator  end_operator  begin_name get command stack  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name execute  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cmd  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name set objects  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name run  end_name  begin_operator  end_operator  begin_name get params  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name client  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name supplier  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_operator  end_operator  begin_name package import  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name run  end_name  begin_operator  end_operator  begin_name get params  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name package import  end_name  end_type  begin_name package import  end_name  begin_init  begin_expr  begin_call  begin_name create package import  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package import  end_name  begin_operator  end_operator  begin_name set imported package  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name package  end_name  end_name  begin_operator  end_operator  begin_name supplier  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package import  end_name  begin_operator  end_operator  begin_name set importing namespace  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name namespace  end_name  begin_operator  end_operator  begin_name client  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name visibility  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package import  end_name  begin_operator  end_operator  begin_name set visibility  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name visibility  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name get params  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name package import  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name interface realization  end_name  end_type  begin_name build realization  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name client  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name supplier  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name namespace  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment the interface realization will be created in the client namespace  end_comment  begin_comment client is a namespace  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name client  end_name  begin_operator  end_operator  begin_name behaviored classifier  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name supplier  end_name  begin_operator  end_operator  begin_name interface  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name runnable class  end_name  end_type  begin_name run  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name runnable class  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name interface realization  end_name  end_type  begin_name realization  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name uml factory  end_name  begin_operator  end_operator  begin_name e instance  end_name  begin_operator  end_operator  begin_name create interface realization  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name realization  end_name  begin_operator  end_operator  begin_name set implementing classifier  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name behaviored classifier  end_name  begin_operator  end_operator  begin_name client  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name realization  end_name  begin_operator  end_operator  begin_name set contract  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name interface  end_name  begin_operator  end_operator  begin_name supplier  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name behaviored classifier  end_name  begin_operator  end_operator  begin_name client  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get interface realizations  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name realization  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get params  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name realization  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name change command  end_name  end_type  begin_name cmd  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name change command  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model impl  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name run  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_comment non nls 1  end_comment  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment non nls 1  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name editing domain  end_name  begin_operator  end_operator  begin_name get command stack  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name execute  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cmd  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name set objects  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name run  end_name  begin_operator  end_operator  begin_name get params  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name client  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name supplier  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_operator  end_operator  begin_name interface realization  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name run  end_name  begin_operator  end_operator  begin_name get params  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name interface realization  end_name  end_type  begin_name realization  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name uml factory  end_name  begin_operator  end_operator  begin_name e instance  end_name  begin_operator  end_operator  begin_name create interface realization  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name realization  end_name  begin_operator  end_operator  begin_name set implementing classifier  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name behaviored classifier  end_name  begin_operator  end_operator  begin_name client  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name realization  end_name  begin_operator  end_operator  begin_name set contract  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name interface  end_name  begin_operator  end_operator  begin_name supplier  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name behaviored classifier  end_name  begin_operator  end_operator  begin_name client  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get interface realizations  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name realization  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get params  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name realization  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name build template argument  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo is this removed from uml 2  end_comment  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not implemented exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_specifier  end_specifier  begin_name usage  end_name  end_type  begin_name build usage  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name client  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name supplier  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name client  end_name  begin_operator  end_operator  begin_name named element  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name supplier  end_name  begin_operator  end_operator  begin_name named element  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name named element  end_name  begin_operator  end_operator  begin_name client  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get nearest package  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name null pointer exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name runnable class  end_name  end_type  begin_name run  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name runnable class  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name usage  end_name  end_type  begin_name usage  end_name  begin_init  begin_expr  begin_call  begin_name create usage  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name usage  end_name  begin_operator  end_operator  begin_name get clients  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name named element  end_name  begin_operator  end_operator  begin_name client  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name usage  end_name  begin_operator  end_operator  begin_name get suppliers  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name named element  end_name  begin_operator  end_operator  begin_name supplier  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name named element  end_name  begin_operator  end_operator  begin_name client  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get nearest package  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get packaged elements  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name usage  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get params  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name usage  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name change command  end_name  end_type  begin_name cmd  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name change command  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model impl  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name run  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name editing domain  end_name  begin_operator  end_operator  begin_name get command stack  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name execute  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cmd  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name set objects  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name run  end_name  begin_operator  end_operator  begin_name get params  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name client  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name supplier  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_operator  end_operator  begin_name usage  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name run  end_name  begin_operator  end_operator  begin_name get params  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name usage  end_name  end_type  begin_name usage  end_name  begin_init  begin_expr  begin_call  begin_name create usage  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name usage  end_name  begin_operator  end_operator  begin_name get clients  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name named element  end_name  begin_operator  end_operator  begin_name client  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name usage  end_name  begin_operator  end_operator  begin_name get suppliers  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name named element  end_name  begin_operator  end_operator  begin_name supplier  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name named element  end_name  begin_operator  end_operator  begin_name client  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get nearest package  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get packaged elements  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name usage  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get params  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name usage  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get params  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name uml factory  end_name  begin_operator  end_operator  begin_name e instance  end_name  begin_operator  end_operator  begin_name create association  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name create element residence  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment todo is this removed from uml 2  end_comment  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not implemented exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name create flow  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment todo is this removed from uml 2  end_comment  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not implemented exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name create method  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment todo is this removed from uml 2  end_comment  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not implemented exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name create template argument  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment todo is this removed from uml 2  end_comment  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not implemented exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name build template argument  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name binding  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name argument  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo auto generated method stub  end_comment  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not yet implemented exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name create template argument  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name extent  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo auto generated method stub  end_comment  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not yet implemented exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name add deployment location  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name node  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo implement  end_comment  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not yet implemented exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name add element residence  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name residence  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo is it removed from uml 2  end_comment  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not yet implemented exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name add raised signal  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name sig  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo implement  end_comment  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not yet implemented exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name add source flow  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name flow  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo implement  end_comment  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not yet implemented exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name add target flow  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name flow  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo implement  end_comment  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not yet implemented exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name add template argument  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name index  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name argument  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo is it removed from uml 2  end_comment  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not yet implemented exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name add template argument  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name argument  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo is it removed from uml 2  end_comment  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not yet implemented exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name add template parameter  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name index  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name parameter  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo implement  end_comment  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not yet implemented exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name add template parameter  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name parameter  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo implement  end_comment  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not yet implemented exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name clear stereotypes  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo implement  end_comment  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not yet implemented exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_specifier  end_specifier  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  end_type  begin_name get all meta datatype names  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment todo not implemented  end_comment  begin_return  begin_expr  begin_call  begin_name  begin_name collections  end_name  begin_operator  end_operator  begin_name empty set  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name collection  end_name  end_type  begin_name get flows  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name source  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name target  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo implement  end_comment  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not yet implemented exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get source  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name relationship  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment link does not exist in uml 2 a link is represented just as an  end_comment  begin_comment association  end_comment  begin_comment todo treat message  end_comment  begin_comment todo not implemented for uml 2 tfm  end_comment  begin_comment else if relationship instanceof flow  end_comment  begin_comment flow flow flow relationship  end_comment  begin_comment collection col flow get source  end_comment  begin_comment if col is empty  end_comment  begin_comment return null  end_comment  begin_comment   end_comment  begin_comment return col to array 0  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name relationship  end_name  begin_operator  end_operator  begin_name relationship  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name relationship  end_name  begin_operator  end_operator  begin_name property  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name relationship  end_name  begin_operator  end_operator  begin_name association  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name property  end_name  end_argument  end_argument_list  end_name  end_type  begin_name conns  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name association  end_name  begin_operator  end_operator  begin_name relationship  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get member ends  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name conns  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_return  begin_expr  begin_call  begin_name  begin_name conns  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get type  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name relationship  end_name  begin_operator  end_operator  begin_name directed relationship  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name element  end_name  end_argument  end_argument_list  end_name  end_type  begin_name sources  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name directed relationship  end_name  begin_operator  end_operator  begin_name relationship  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get sources  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name sources  end_name  begin_operator  end_operator  begin_name is empty  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_return  begin_expr  begin_call  begin_name  begin_name sources  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name relationship  end_name  begin_operator  end_operator  begin_name property  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name property  end_name  begin_operator  end_operator  begin_name relationship  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get association  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get destination  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name relationship  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment link does not exist in uml 2 a link is represented just as an  end_comment  begin_comment association  end_comment  begin_comment todo treat message  end_comment  begin_comment todo not implemented for uml 2 tfm  end_comment  begin_comment else if relationship instanceof flow  end_comment  begin_comment flow flow flow relationship  end_comment  begin_comment collection col flow get target  end_comment  begin_comment if col is empty  end_comment  begin_comment return null  end_comment  begin_comment   end_comment  begin_comment return get first item or null col  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name relationship  end_name  begin_operator  end_operator  begin_name relationship  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name relationship  end_name  begin_operator  end_operator  begin_name property  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name relationship  end_name  begin_operator  end_operator  begin_name association  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name property  end_name  end_argument  end_argument_list  end_name  end_type  begin_name conns  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name association  end_name  begin_operator  end_operator  begin_name relationship  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get member ends  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name conns  end_name  begin_operator  end_operator  begin_name is empty  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_return  begin_expr  begin_call  begin_name  begin_name conns  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get type  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name relationship  end_name  begin_operator  end_operator  begin_name directed relationship  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name element  end_name  end_argument  end_argument_list  end_name  end_type  begin_name targets  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name directed relationship  end_name  begin_operator  end_operator  begin_name relationship  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get targets  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name targets  end_name  begin_operator  end_operator  begin_name is empty  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_return  begin_expr  begin_call  begin_name  begin_name targets  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name relationship  end_name  begin_operator  end_operator  begin_name property  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name property  end_name  begin_operator  end_operator  begin_name relationship  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get association  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set kind  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name kind  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo needs undo support  end_comment  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name parameter  end_name  begin_operator  end_operator  begin_name kind  end_name  begin_operator  end_operator  begin_name parameter direction kind  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name parameter  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name set direction  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name parameter direction kind  end_name  begin_operator  end_operator  begin_name kind  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name pseudostate  end_name  begin_operator  end_operator  begin_name kind  end_name  begin_operator  end_operator  begin_name pseudostate kind  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name pseudostate  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name set kind  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name pseudostate kind  end_name  begin_operator  end_operator  begin_name kind  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_then  end_if  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name kind  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set model element container  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name container  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo this method is mostly entirely redundant tfm  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name add owned element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name container  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set root  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name is root  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment appears to be gone from uml 2 x  end_comment  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not implemented exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_annotation  begin_name deprecated  end_name  end_annotation  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set target scope  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name target scope  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment don t implement deprecated method in interface  end_comment  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not implemented exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block 
begin_comment convert a multiplicity range bound string to an integer param b string containing a single multiplicity range bound return integer representation end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name string to bound  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name b  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_try  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name b  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name b  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name integer  end_name  begin_operator  end_operator  begin_name parse int  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name b  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_else  end_if  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name exception  end_name  end_type  begin_name ex  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name b  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_catch  end_try  end_block 
 begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name get body  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name e list  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  end_type  begin_name bodies  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name opaque expression  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name bodies  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name opaque expression  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get bodies  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name opaque behavior  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name bodies  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name opaque behavior  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get bodies  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_else  end_if  end_else  end_if  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name bodies  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name bodies  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name get language  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name e list  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  end_type  begin_name langs  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name opaque expression  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name langs  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name opaque expression  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get languages  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name opaque behavior  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name langs  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name opaque behavior  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get languages  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_comment non nls 1  end_comment  begin_operator  end_operator  begin_operator  end_operator  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_else  end_if  end_else  end_if  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name langs  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name langs  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name multiplicity to string  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name multiplicity  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name multiplicity  end_name  begin_operator  end_operator  begin_name multiplicity element  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name multiplicity element  end_name  end_type  begin_name mult  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name multiplicity element  end_name  begin_operator  end_operator  begin_name multiplicity  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name mult  end_name  begin_operator  end_operator  begin_name get lower  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name mult  end_name  begin_operator  end_operator  begin_name get upper  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name data types factory euml impl  end_name  begin_operator  end_operator  begin_name bound to string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name mult  end_name  begin_operator  end_operator  begin_name get lower  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name data types factory euml impl  end_name  begin_operator  end_operator  begin_name bound to string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name mult  end_name  begin_operator  end_operator  begin_name get lower  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_comment non nls 1  end_comment  begin_operator  end_operator  begin_call  begin_name  begin_name data types factory euml impl  end_name  begin_operator  end_operator  begin_name bound to string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name mult  end_name  begin_operator  end_operator  begin_name get upper  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_else  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name set body  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name body  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  end_type  begin_name bodies  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name opaque expression  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name bodies  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name opaque expression  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get bodies  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name opaque behavior  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name bodies  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name opaque behavior  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get bodies  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_else  end_if  end_else  end_if  begin_comment todo support more than one body language  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name bodies  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal state exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name bodies  end_name  begin_operator  end_operator  begin_name clear  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name bodies  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name body  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name handle  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name set language  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name language  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  end_type  begin_name langs  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name opaque expression  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name langs  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name opaque expression  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get languages  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name opaque behavior  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name langs  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name opaque behavior  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get languages  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_else  end_if  end_else  end_if  begin_comment todo support more than one body language  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name langs  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal state exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name langs  end_name  begin_operator  end_operator  begin_name clear  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name langs  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name language  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name handle  end_name  end_expr  end_return  end_block 
begin_comment non nls 1 end_commentbegin_comment this sets up the editing domain for the model editor todo we probably need an editing domain per argo project so that we can keep the resource sets separate end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name initialize editing domain  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment if the e uml resources system property is defined then we are in a  end_comment  begin_comment stand alone application else we re in an eclipse plug in  end_comment  begin_comment the e uml resource should contain the path to the  end_comment  begin_comment org eclipse uml 2 uml resource jar plugin  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name path  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name get property  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment non nls 1  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name basic command stack  end_name  end_type  begin_name command stack  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name basic command stack  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name handle error  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name exception  end_name  end_type  begin_name exception  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name handle error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name exception  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name runtime exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name exception  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name adapter factory  end_name  end_argument  end_argument_list  end_name  end_type  begin_name factories  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name adapter factory  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name factories  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name uml resource item provider adapter factory  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name factories  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name uml item provider adapter factory  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name factories  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name ecore item provider adapter factory  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name factories  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name uml reflective item provider adapter factory  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name composed adapter factory  end_name  end_type  begin_name adapter factory  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name composed adapter factory  end_name  begin_argument_list  begin_argument  begin_expr  begin_name factories  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo this will need to be adapted to send undo redo commands back  end_comment  begin_comment to our consumer e g argo uml if a new undo mechanism is implemented  end_comment  begin_comment for the model subsystem tfm  end_comment  begin_expr_stmt  begin_expr  begin_name editing domain  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name uml 2 adapter factory editing domain  end_name  begin_argument_list  begin_argument  begin_expr  begin_name adapter factory  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name command stack  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name read only map  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name resource set  end_name  end_type  begin_name resource set  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name editing domain  end_name  begin_operator  end_operator  begin_name get resource set  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name map  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  end_type  begin_name extension to factory map  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name resource set  end_name  begin_operator  end_operator  begin_name get resource factory registry  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get extension to factory map  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name map  end_name  begin_argument_list  begin_argument  begin_name uri  end_name  end_argument  begin_argument  begin_name uri  end_name  end_argument  end_argument_list  end_name  end_type  begin_name uri map  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name resource set  end_name  begin_operator  end_operator  begin_name get uri converter  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get uri map  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name path  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_try  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name file input stream  end_name  end_type  begin_name in  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name file input stream  end_name  begin_argument_list  begin_argument  begin_expr  begin_name path  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name in  end_name  begin_operator  end_operator  begin_name close  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name io exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name runtime exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_throw  end_block  end_catch  end_try  begin_expr_stmt  begin_expr  begin_name path  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name path  end_name  begin_operator  end_operator  begin_name replace  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment these lines were one cause for issue 5915 were they needed  end_comment  begin_comment todo review tfm  end_comment  begin_comment if character is letter path char at 0  end_comment  begin_comment path path  end_comment  begin_comment   end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name uri  end_name  end_type  begin_name uri  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name uri  end_name  begin_operator  end_operator  begin_name create uri  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_comment non nls 1  end_comment  begin_operator  end_operator  begin_name path  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment non nls 1  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name uri  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment non nls 1  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name registry  end_name  end_type  begin_name package registry  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name resource set  end_name  begin_operator  end_operator  begin_name get package registry  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package registry  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name uml package  end_name  begin_operator  end_operator  begin_name e ns uri  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name uml package  end_name  begin_operator  end_operator  begin_name e instance  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package registry  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name ecore package  end_name  begin_operator  end_operator  begin_name e ns uri  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name ecore package  end_name  begin_operator  end_operator  begin_name e instance  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment for other xmi files with further namespaces  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package registry  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name xmi 212 uml resource  end_name  begin_operator  end_operator  begin_name uml metamodel 2 1 1 ns uri  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name uml package  end_name  begin_operator  end_operator  begin_name e instance  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package registry  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name xmi 212 uml resource  end_name  begin_operator  end_operator  begin_name uml metamodel 2 1 1 uri  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name uml package  end_name  begin_operator  end_operator  begin_name e instance  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package registry  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name xmi 212 uml resource  end_name  begin_operator  end_operator  begin_name uml metamodel 2 1 ns uri  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name uml package  end_name  begin_operator  end_operator  begin_name e instance  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package registry  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name xmi 212 uml resource  end_name  begin_operator  end_operator  begin_name uml metamodel 2 1 uri  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name uml package  end_name  begin_operator  end_operator  begin_name e instance  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package registry  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name xmi 212 uml resource  end_name  begin_operator  end_operator  begin_name uml metamodel 2 2 ns uri  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name uml package  end_name  begin_operator  end_operator  begin_name e instance  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package registry  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name xmi 212 uml resource  end_name  begin_operator  end_operator  begin_name uml metamodel ns uri  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name uml package  end_name  begin_operator  end_operator  begin_name e instance  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package registry  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name xmi 212 uml resource  end_name  begin_operator  end_operator  begin_name uml metamodel uri  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name uml package  end_name  begin_operator  end_operator  begin_name e instance  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment eclipse namespaces  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package registry  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name uml 212 uml resource  end_name  begin_operator  end_operator  begin_name uml metamodel ns uri  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name uml package  end_name  begin_operator  end_operator  begin_name e instance  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name package registry  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name uml package  end_name  begin_operator  end_operator  begin_name e instance  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment for the uml files in the eclipse jar files we need this  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name extension to factory map  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name uml resource  end_name  begin_operator  end_operator  begin_name file extension  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name uml resource  end_name  begin_operator  end_operator  begin_name factory  end_name  begin_operator  end_operator  begin_name instance  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name uri map  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name uri  end_name  begin_operator  end_operator  begin_name create uri  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name uml resource  end_name  begin_operator  end_operator  begin_name libraries pathmap  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name uri  end_name  begin_operator  end_operator  begin_name append segment  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_comment non nls 1  end_comment  begin_operator  end_operator  begin_call  begin_name append segment  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment non nls 1  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name uri map  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name uri  end_name  begin_operator  end_operator  begin_name create uri  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name uml resource  end_name  begin_operator  end_operator  begin_name metamodels pathmap  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name uri  end_name  begin_operator  end_operator  begin_name append segment  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_comment non nls 1  end_comment  begin_operator  end_operator  begin_call  begin_name append segment  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment non nls 1  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name uri map  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name uri  end_name  begin_operator  end_operator  begin_name create uri  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name uml resource  end_name  begin_operator  end_operator  begin_name profiles pathmap  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name uri  end_name  begin_operator  end_operator  begin_name append segment  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_comment non nls 1  end_comment  begin_operator  end_operator  begin_call  begin_name append segment  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name extension to factory map  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name uml 22 uml resource  end_name  begin_operator  end_operator  begin_name file extension  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name uml 22 uml resource  end_name  begin_operator  end_operator  begin_name factory  end_name  begin_operator  end_operator  begin_name instance  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name extension to factory map  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name xmi 2 uml resource  end_name  begin_operator  end_operator  begin_name file extension  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name xmi 2 uml resource  end_name  begin_operator  end_operator  begin_name factory  end_name  begin_operator  end_operator  begin_name instance  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name uri map  end_name  begin_operator  end_operator  begin_name put all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name uml 22 uml extended meta data  end_name  begin_operator  end_operator  begin_name get uri map  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name uri map  end_name  begin_operator  end_operator  begin_name put all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name xmi 2 uml extended meta data  end_name  begin_operator  end_operator  begin_name get uri map  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment constructor end_comment begin_specifier  end_specifier  begin_name euml model implementation  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name initialize editing domain  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment non nls 1  end_comment  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name add base class  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name base class  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name stereotype  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_type  begin_name metaclass  end_name  begin_init  begin_expr  begin_call  begin_name get metaclass  end_name  begin_argument_list  begin_argument  begin_expr  begin_name base class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name profile  end_name  end_type  begin_name profile  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name stereotype  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get profile  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name metaclass  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name profile  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name profile  end_name  begin_operator  end_operator  begin_name create metaclass reference  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name metaclass  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name stereotype  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name create extension  end_name  begin_argument_list  begin_argument  begin_expr  begin_name metaclass  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_then  end_if  end_block  end_then  end_if  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block 
begin_comment non nls 1 end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name add copy stereotype  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name stereotype  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add stereotype  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name stereotype  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_annotation  begin_name deprecated  end_name  end_annotation  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name get meta model name  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name m  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name m  end_name  begin_operator  end_operator  begin_name element  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name get meta model name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name m  end_name  begin_operator  end_operator  begin_name get class  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block 
begin_comment non nls 1 end_commentbegin_comment param clazz the uml class return the meta name of the uml class end_comment begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name get meta model name  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name class  end_name  end_type  begin_name clazz  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name clazz  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get stereotype  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name ns  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name stereo  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name ns  end_name  begin_operator  end_operator  begin_name profile  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name stereo  end_name  begin_operator  end_operator  begin_name stereotype  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name stereotype  end_name  begin_operator  end_operator  begin_name stereo  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name class  end_name  end_argument  end_argument_list  end_name  end_type  begin_name base classes  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name stereotype  end_name  begin_operator  end_operator  begin_name stereo  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get all extended metaclasses  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name base classes  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name class  end_name  end_type  begin_name base class  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name base classes  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name next  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name stereotype  end_name  end_type  begin_name o  end_name  begin_range  begin_expr  begin_call  begin_name get stereotypes  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ns  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name o  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name o  end_name  begin_operator  end_operator  begin_name get all extended metaclasses  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name base class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name o  end_name  end_expr  end_return  end_block  end_then  end_if  end_block  end_for  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get stereotype  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name models  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name stereo  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name stereo  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name stereo  end_name  begin_operator  end_operator  begin_name stereotype  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name stereotype  end_name  begin_operator  end_operator  begin_name stereo  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name class  end_name  end_argument  end_argument_list  end_name  end_type  begin_name base classes  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name stereotype  end_name  begin_operator  end_operator  begin_name stereo  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get all extended metaclasses  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name base classes  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name class  end_name  end_type  begin_name base class  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name base classes  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name next  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name model  end_name  end_type  begin_name model  end_name  begin_range  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name model  end_name  end_argument  end_argument_list  end_name  begin_operator  end_operator  begin_name models  end_name  begin_operator  end_operator  end_expr  end_range  end_decl  end_init  begin_block  begin_comment todo this should call the single namespace form  end_comment  begin_comment get stereotype it 2 next stereo  end_comment  begin_for  begin_init  begin_decl  begin_type  begin_name stereotype  end_name  end_type  begin_name o  end_name  begin_range  begin_expr  begin_call  begin_name get stereotypes  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name o  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name o  end_name  begin_operator  end_operator  begin_name get all extended metaclasses  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name base class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name o  end_name  end_expr  end_return  end_block  end_then  end_if  end_block  end_for  end_block  end_for  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name stereotype  end_name  end_argument  end_argument_list  end_name  end_type  begin_name get stereotypes  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name ns  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name ns  end_name  begin_operator  end_operator  begin_name profile  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name stereotype  end_name  end_argument  end_argument_list  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name profile  end_name  begin_operator  end_operator  begin_name ns  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get owned stereotypes  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_return  begin_expr  begin_call  begin_name  begin_name collections  end_name  begin_operator  end_operator  begin_name empty set  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name stereotype  end_name  end_argument  end_argument_list  end_name  end_type  begin_name get stereotypes  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name models  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name stereotype  end_name  end_argument  end_argument_list  end_name  end_type  begin_name l  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name stereotype  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name models  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name ns  end_name  begin_range  begin_expr  begin_name models  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_name ns  end_name  begin_operator  end_operator  begin_name profile  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name l  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name profile  end_name  begin_operator  end_operator  begin_name ns  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get owned stereotypes  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo do we really want stereotypes from nested packages  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name iterator  end_name  begin_argument_list  begin_argument  begin_name package  end_name  end_argument  end_argument_list  end_name  end_type  begin_name iter  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name profile  end_name  begin_operator  end_operator  begin_name ns  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get nested packages  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name iterator  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name iter  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name package  end_name  end_type  begin_name p  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name iter  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name p  end_name  begin_operator  end_operator  begin_name profile  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name l  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get all stereotypes in  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name profile  end_name  begin_operator  end_operator  begin_name p  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_while  end_block  end_then  end_if  end_block  end_for  end_block  end_then  end_if  begin_return  begin_expr  begin_name l  end_name  end_expr  end_return  end_block 
begin_comment see org argouml model extension mechanisms helper get common tagged value types end_comment begin_type  begin_specifier  end_specifier  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name type  end_name  end_argument  end_argument_list  end_name  end_type  begin_name get common tagged value types  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment todo still not used because in argo uml string is hardwired  end_comment  begin_if  begin_condition  begin_expr  begin_name common tagged value types  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name common tagged value types  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name type  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment common tagged value types add org eclipse uml 2 uml resource uml resource  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name uri  end_name  end_type  begin_name uri  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name uri  end_name  begin_operator  end_operator  begin_name create uri  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name uml resource  end_name  begin_operator  end_operator  begin_name uml primitive types library uri  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name resource set  end_name  end_type  begin_name rs  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get editing domain  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get resource set  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name resource  end_name  end_type  begin_name res  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name rs  end_name  begin_operator  end_operator  begin_name get resource  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name uri  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name model  end_name  end_type  begin_name m  end_name  begin_init  begin_expr  begin_call  begin_name model  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name package  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  begin_call  begin_name  begin_name ecore util  end_name  begin_operator  end_operator  begin_name get object by type  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name res  end_name  begin_operator  end_operator  begin_name get contents  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name uml package  end_name  begin_operator  end_operator  begin_name literals  end_name  begin_operator  end_operator  begin_name model  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name common tagged value types  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name m  end_name  begin_operator  end_operator  begin_name get owned member  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ptype boolean name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name common tagged value types  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name m  end_name  begin_operator  end_operator  begin_name get owned member  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ptype integer name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name common tagged value types  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name m  end_name  begin_operator  end_operator  begin_name get owned member  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ptype string name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name common tagged value types  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name m  end_name  begin_operator  end_operator  begin_name get owned member  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ptype unatural name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_name common tagged value types  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is stereotype inh  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name object  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name base  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name object  end_name  begin_operator  end_operator  begin_name stereotype  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name is stereotype  end_name  begin_argument_list  begin_argument  begin_expr  begin_name object  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name base  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_comment todo mvw do we really look into super types of the stereotype or should we be looking into super types of the baseclass  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name it  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get supertypes  end_name  begin_argument_list  begin_argument  begin_expr  begin_name object  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name iterator  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name it  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name is stereotype inh  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name it  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name base  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  end_block  end_while  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name remove base class  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name base class  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name stereotype  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_type  begin_name metaclass  end_name  begin_init  begin_expr  begin_call  begin_name get metaclass  end_name  begin_argument_list  begin_argument  begin_expr  begin_name base class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name profile  end_name  end_type  begin_name profile  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name stereotype  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get profile  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name metaclass  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name profile  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name stereotype  end_name  end_type  begin_name st  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name stereotype  end_name  begin_operator  end_operator  begin_name handle  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name extension  end_name  end_type  begin_name ext  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name profile  end_name  begin_operator  end_operator  begin_name get owned extensions  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name ext  end_name  begin_operator  end_operator  begin_name get metaclass  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name metaclass  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ext  end_name  begin_operator  end_operator  begin_name get end types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name st  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_for  begin_init  begin_decl  begin_type  begin_name property  end_name  end_type  begin_name p  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name get attributes  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name association  end_name  end_type  begin_name assoc  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name p  end_name  begin_operator  end_operator  begin_name get association  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name assoc  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name assoc  end_name  begin_operator  end_operator  begin_name ext  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment additional cleanup needed because  end_comment  begin_comment this would not be removed by ext destroy  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name p  end_name  begin_operator  end_operator  begin_name destroy  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_then  end_if  end_block  end_for  begin_comment remove base class by destroying the extension  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ext  end_name  begin_operator  end_operator  begin_name destroy  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_then  end_if  end_block  end_for  begin_return  end_return  end_block  end_then  end_if  end_block  end_then  end_if  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block 
begin_comment non nls 1 end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name remove tagged value  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name tagged value  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo auto generated method stub  end_comment  end_block 
begin_comment todo auto generated method stub end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set tagged value  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name tagged values  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment this doesn t work in uml 2 both owner and property needed  end_comment  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name unsupported operation exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block 
begin_comment sets the value of an element s property tagged value this method makes sure that a collection of values is set if and only if the property is multivalued upper multiplicity value greater 1 so passing a collection is safe see org argouml model extension mechanisms helper set value of tag java lang object java lang object java lang object end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set tagged value  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name property  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name value  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_name element  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name property  end_name  begin_operator  end_operator  begin_name property  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name element  end_name  end_type  begin_name elem  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name element  end_name  begin_operator  end_operator  begin_name handle  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name property  end_name  end_type  begin_name prop  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name property  end_name  begin_operator  end_operator  begin_name property  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_comment consider the property multiplicity  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name prop  end_name  begin_operator  end_operator  begin_name is multivalued  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name value  end_name  begin_operator  end_operator  begin_name collection  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name new value  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name array list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name new value  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name value  end_name  begin_operator  end_operator  begin_name new value  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name prop  end_name  begin_operator  end_operator  begin_name is multivalued  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name value  end_name  begin_operator  end_operator  begin_name collection  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name col  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name collection  end_name  begin_operator  end_operator  begin_name value  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name col  end_name  begin_operator  end_operator  begin_name is empty  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name value  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_comment or get default value for prop  end_comment  end_block  end_then  begin_else  begin_block  begin_comment too bad we choose to take the first value  end_comment  begin_expr_stmt  begin_expr  begin_name value  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name col  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name next  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  end_if  end_else  end_if  begin_comment workaround for missing ability to parse  end_comment  begin_if  begin_condition  begin_expr  begin_name value  end_name  begin_operator  end_operator  begin_name collection  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name new value  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name array list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name v  end_name  begin_range  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name collection  end_name  begin_operator  end_operator  begin_name value  end_name  begin_operator  end_operator  end_expr  end_range  end_decl  end_init  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name new value  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name postprocess property value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name prop  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name v  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_name value  end_name  begin_operator  end_operator  begin_name new value  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name value  end_name  begin_operator  end_operator  begin_call  begin_name postprocess property value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name prop  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_comment ready to set the value finally  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name stereotype  end_name  end_type  begin_name stereotype  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name stereotype  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name prop  end_name  begin_operator  end_operator  begin_name e container  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name uml util  end_name  begin_operator  end_operator  begin_name set tagged value  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name stereotype  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name prop  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name postprocess property value  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name property  end_name  end_type  begin_name prop  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name value  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment workaround for missing ability to parse  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name prop  end_name  begin_operator  end_operator  begin_name get type  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name prop  end_name  begin_operator  end_operator  begin_name get type  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name value  end_name  begin_operator  end_operator  begin_name  begin_name literal unlimited natural  end_name  begin_operator  end_operator  begin_name unlimited  end_name  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_name value  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name get uml version  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment todo can we get this from the metamodel  end_comment  begin_return  begin_expr  end_expr  end_return  begin_comment non nls 1  end_comment  end_block 
begin_comment non nls 1 end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name equals pseudostate kind  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name ps 1  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name ps 2  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not yet implemented exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get activity  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_name activity node  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name activity node  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get activity  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get aggregation 2  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_name property  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name property  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get aggregation  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name collection  end_name  end_type  begin_name get annotated elements  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_name comment  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name comment  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get annotated elements  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get association  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_name property  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name property  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get association  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name association  end_name  end_argument  end_argument_list  end_name  end_type  begin_name get associations  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_name classifier  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name classifier  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get associations  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name property  end_name  end_type  begin_name get association end  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name classifier  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name association  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name classifier  end_name  begin_operator  end_operator  begin_name classifier  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name association  end_name  begin_operator  end_operator  begin_name association  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_for  begin_init  begin_decl  begin_type  begin_name property  end_name  end_type  begin_name p  end_name  begin_range  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name association  end_name  begin_operator  end_operator  begin_name association  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get owned ends  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name p  end_name  begin_operator  end_operator  begin_name get type  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name classifier  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name p  end_name  begin_operator  end_operator  begin_name get association  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name association  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name p  end_name  end_expr  end_return  end_block  end_then  end_if  end_block  end_for  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name property  end_name  end_argument  end_argument_list  end_name  end_type  begin_name get association ends  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_name classifier  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name property  end_name  end_argument  end_argument_list  end_name  end_type  begin_name result  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name property  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo seems to work only with both loops check why  end_comment  begin_for  begin_init  begin_decl  begin_type  begin_name property  end_name  end_type  begin_name p  end_name  begin_range  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name classifier  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get attributes  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name p  end_name  begin_operator  end_operator  begin_name get association  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name p  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  begin_for  begin_init  begin_decl  begin_type  begin_name association  end_name  end_type  begin_name a  end_name  begin_range  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name classifier  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get associations  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name property  end_name  end_type  begin_name p  end_name  begin_init  begin_expr  begin_call  begin_name get association end  end_name  begin_argument_list  begin_argument  begin_expr  begin_name handle  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name a  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name p  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name p  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  begin_return  begin_expr  begin_name result  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name collection  end_name  end_type  begin_name get association roles  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo how do we get the connectors of an association  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name warn  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_call  begin_name  begin_name collections  end_name  begin_operator  end_operator  begin_name empty set  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name property  end_name  end_argument  end_argument_list  end_name  end_type  begin_name get attributes  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_try  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name classifier  end_name  end_type  begin_name classifier  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name classifier  end_name  begin_operator  end_operator  begin_name handle  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name e list  end_name  begin_argument_list  begin_argument  begin_name property  end_name  end_argument  end_argument_list  end_name  end_type  begin_name attributes  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name classifier  end_name  begin_operator  end_operator  begin_name get attributes  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name property  end_name  end_argument  end_argument_list  end_name  end_type  begin_name result  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name property  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name property  end_name  end_type  begin_name p  end_name  begin_range  begin_expr  begin_name attributes  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name p  end_name  begin_operator  end_operator  begin_name get association  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name p  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  begin_return  begin_expr  begin_name result  end_name  end_expr  end_return  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name class cast exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_catch  end_try  end_block 
begin_comment non nls 1 end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get base  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name extend  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name extend  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get extended case  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name include  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name include  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get including case  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_else  end_if  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not yet implemented exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_specifier  end_specifier  begin_name collection  end_name  end_type  begin_name get bases  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_name lifeline  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name lifeline  end_name  end_type  begin_name lifeline  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name lifeline  end_name  begin_operator  end_operator  begin_name handle  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name list  end_name  end_type  begin_name bases  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name array list  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name lifeline  end_name  begin_operator  end_operator  begin_name get represents  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name bases  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name lifeline  end_name  begin_operator  end_operator  begin_name get represents  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_name bases  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name get value specification  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name value specification  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment return handle string value  end_comment  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name opaque expression  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get data types helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get body  end_name  begin_argument_list  begin_argument  begin_expr  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name literal boolean  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name boolean  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name literal boolean  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name is value  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name literal integer  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name integer  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name literal integer  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get value  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name literal string  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name literal string  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get value  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_comment todo lots more types duration instance interval  end_comment  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not yet implemented exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_block 
 begin_type  begin_annotation  begin_name suppress warnings  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get changeability  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_name structural feature  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name structural feature  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name is read only  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get changeable kind  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get frozen  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get changeable kind  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get changeable  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name collection  end_name  end_type  begin_name get classifiers  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name instance specification  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name instance specification  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get classifiers  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_comment non nls 1  end_comment  begin_operator  end_operator  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_specifier  end_specifier  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name dependency  end_name  end_argument  end_argument_list  end_name  end_type  begin_name get client dependencies  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment element is allowed but only named element can return nonempty list  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_name element  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name named element  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name named element  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get client dependencies  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_return  begin_expr  begin_call  begin_name  begin_name collections  end_name  begin_operator  end_operator  begin_name empty list  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name named element  end_name  end_argument  end_argument_list  end_name  end_type  begin_name get clients  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_name dependency  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name dependency  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get clients  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name comment  end_name  end_argument  end_argument_list  end_name  end_type  begin_name get comments  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_name element  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name comment  end_name  end_argument  end_argument_list  end_name  end_type  begin_name result  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name hash set  end_name  begin_argument_list  begin_argument  begin_name comment  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name  begin_name e structural feature  end_name  begin_operator  end_operator  begin_name setting  end_name  end_name  end_type  begin_name reference  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name uml util  end_name  begin_operator  end_operator  begin_name get inverse references  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name element  end_name  begin_operator  end_operator  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name reference  end_name  begin_operator  end_operator  begin_name get e object  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name comment  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name comment  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name reference  end_name  begin_operator  end_operator  begin_name get e object  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  begin_return  begin_expr  begin_name result  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get component instance  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block 
begin_comment non nls 1 end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get concurrency  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_name behavioral feature  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name behavioral feature  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get concurrency  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name collection  end_name  end_type  begin_name get connections  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment link does not exist in uml 2  end_comment  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment this is wrongly called with a null handle  end_comment  begin_comment as a workaround we return an empty collection  end_comment  begin_return  begin_expr  begin_call  begin_name  begin_name collections  end_name  begin_operator  end_operator  begin_name empty list  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name connector  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name connector  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get ends  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_name association  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name association  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get member ends  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name collection  end_name  end_type  begin_name get constraints  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_name element  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name constraint  end_name  end_argument  end_argument_list  end_name  end_type  begin_name result  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name constraint  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name namespace  end_name  end_type  begin_name ns  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name element  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get nearest package  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name ns  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_for  begin_init  begin_decl  begin_type  begin_name constraint  end_name  end_type  begin_name c  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name ns  end_name  begin_operator  end_operator  begin_name get owned rules  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name get constrained elements  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  end_block  end_then  end_if  begin_return  begin_expr  begin_name result  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get container  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name vertex  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name vertex  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get container  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name transition  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name transition  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get container  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_else  end_if  begin_comment todo unfinished implementation  end_comment  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not yet implemented exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_specifier  end_specifier  begin_name collection  end_name  end_type  begin_name get extended elements  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment public collection element get extended elements object handle  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_name stereotype  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_comment todo is this returning extended elements or base classes  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name e list  end_name  begin_argument_list  begin_argument  begin_name class  end_name  end_argument  end_argument_list  end_name  end_type  begin_name e list  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name stereotype  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get extended metaclasses  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name class  end_name  end_argument  end_argument_list  end_name  end_type  begin_name list  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name class  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name iter  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name e list  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name iter  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name list  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name class  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name iter  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_while  begin_return  begin_expr  begin_name list  end_name  end_expr  end_return  begin_comment todo untested alternative to investigate  end_comment  begin_comment collection element result new array list element  end_comment  begin_comment tree iterator it  end_comment  begin_comment model impl get editing domain get resource set get all contents  end_comment  begin_comment while it has next  end_comment  begin_comment object o it next  end_comment  begin_comment if handle get class is assignable from o get class  end_comment  begin_comment result add element o  end_comment  begin_comment   end_comment  begin_comment   end_comment  begin_comment return result  end_comment  end_block 
 begin_type  begin_specifier  end_specifier  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name extension point  end_name  end_argument  end_argument_list  end_name  end_type  begin_name get extension points  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name use case  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name use case  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get extension points  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name extend  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name extend  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get extension locations  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_else  end_if  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block 
begin_comment non nls 1 end_comment begin_type  begin_specifier  end_specifier  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name feature  end_name  end_argument  end_argument_list  end_name  end_type  begin_name get features  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_name classifier  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name feature  end_name  end_argument  end_argument_list  end_name  end_type  begin_name result  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name feature  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name feature  end_name  end_type  begin_name f  end_name  begin_range  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name classifier  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get features  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name f  end_name  begin_operator  end_operator  begin_name property  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name property  end_name  begin_operator  end_operator  begin_name f  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get association  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name f  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  begin_return  begin_expr  begin_name result  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get link  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not implemented exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block 
begin_comment non nls 1 end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get lifeline  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name connector  end_name  end_type  begin_name connector  end_name  begin_init  begin_expr  begin_call  begin_name connector  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name connector end  end_name  begin_operator  end_operator  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get owner  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name connectable element  end_name  end_type  begin_name prop  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name connector end  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get role  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name interaction  end_name  end_type  begin_name interaction  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name interaction  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name connector  end_name  begin_operator  end_operator  begin_name get owner  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name lifeline  end_name  end_type  begin_name lifeline  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name interaction  end_name  begin_operator  end_operator  begin_name get lifelines  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name lifeline  end_name  begin_operator  end_operator  begin_name get represents  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name prop  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name lifeline  end_name  end_expr  end_return  end_block  end_then  end_if  end_block  end_for  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal state exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name handle  end_name  begin_comment non nls 1  end_comment  begin_operator  end_operator  begin_comment non nls 1  end_comment  begin_operator  end_operator  begin_name interaction  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name get location  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo removed from uml 2  end_comment  begin_return  begin_expr  end_expr  end_return  begin_comment non nls 1  end_comment  end_block 
begin_comment non nls 1 end_comment begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name get lower  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_name multiplicity element  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name multiplicity element  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get lower  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name collection  end_name  end_type  begin_name get methods  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name behavioral feature  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name behavioral feature  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get methods  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_comment there s more to be handled which still need to be implemented  end_comment  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not yet implemented exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_specifier  end_specifier  begin_name element  end_name  end_type  begin_name get inner containing model  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_name element  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_comment todo what is the behavior of this in the case of nested models  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name element  end_name  end_type  begin_name result  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name element  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get model  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name result  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name result  end_name  begin_operator  end_operator  begin_call  begin_name get outermost owner  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name element  end_name  begin_operator  end_operator  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_name result  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name multiplicity element  end_name  end_type  begin_name get multiplicity  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment multiplicity element is now an interface implemented  end_comment  begin_comment by element types that support multiplicities tfm  end_comment  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name multiplicity element  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name multiplicity element  end_name  end_type  begin_name me  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name multiplicity element  end_name  begin_operator  end_operator  begin_name handle  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name me  end_name  begin_operator  end_operator  begin_name get upper value  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name me  end_name  begin_operator  end_operator  begin_name get lower value  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_name multiplicity element  end_name  begin_operator  end_operator  begin_name handle  end_name  end_expr  end_return  end_block  end_else  end_if  end_block  end_then  begin_else  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_else  end_if  end_block 
begin_comment non nls 1 end_comment begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name get name  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_name e object  end_name  begin_operator  end_operator  begin_comment should be element not e object really  end_comment  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_name string  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_name enumerator  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name string  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_name string  end_name  begin_operator  end_operator  begin_name handle  end_name  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name named element  end_name  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name named element  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name named element  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_return  begin_expr  end_expr  end_return  begin_comment non nls 1  end_comment  end_block  end_else  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name enumerator  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name enumerator  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name dynamic e object impl  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string buffer  end_name  end_type  begin_name name  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name string buffer  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name e class  end_name  end_type  begin_name c  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name dynamic e object impl  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name e class  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name c  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name append  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name e object  end_name  end_type  begin_name p  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name e container  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name p  end_name  begin_operator  end_operator  begin_name e package  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name e package  end_name  begin_operator  end_operator  begin_name p  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name append  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name append  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name append  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name element  end_name  end_type  begin_name e  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name uml util  end_name  begin_operator  end_operator  begin_name get base element  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name dynamic e object impl  end_name  begin_operator  end_operator  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name e  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name e  end_name  begin_operator  end_operator  begin_name named element  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name named element  end_name  begin_operator  end_operator  begin_name e  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_return  begin_expr  begin_call  begin_name  begin_name handle  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name e package  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name e package  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name handle  end_name  begin_comment non nls 1  end_comment  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_block 
begin_comment non nls 1 end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get namespace  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name element  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name element  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get owner  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_name namespace  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name o  end_name  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name dynamic e object impl  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name e class  end_name  end_type  begin_name c  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name dynamic e object impl  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name e class  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name c  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name e container  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  end_else  end_if  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name parameter  end_name  end_argument  end_argument_list  end_name  end_type  begin_name get parameters  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name behavioral feature  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_name event  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name get parameters list  end_name  begin_argument_list  begin_argument  begin_expr  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_comment todo implement remaining supported types  end_comment  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not yet implemented exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_specifier  end_specifier  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name parameter  end_name  end_argument  end_argument_list  end_name  end_type  begin_name get parameters list  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name behavioral feature  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name behavioral feature  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get owned parameters  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_comment todo implement remaining supported types  end_comment  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not yet implemented exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_specifier  end_specifier  begin_name collection  end_name  end_type  begin_name get received stimuli  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not implemented exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block 
begin_comment non nls 1 end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get receiver  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name message  end_name  end_type  begin_name message  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name message  end_name  begin_operator  end_operator  begin_name handle  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name message occurrence specification  end_name  end_type  begin_name mos  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name message occurrence specification  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name message  end_name  begin_operator  end_operator  begin_name get receive event  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_call  begin_name  begin_name mos  end_name  begin_operator  end_operator  begin_name get covereds  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name collection  end_name  end_type  begin_name get submachine states  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not implemented exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block 
begin_comment non nls 1 end_comment begin_type  begin_specifier  end_specifier  begin_name collection  end_name  end_type  begin_name get subvertices  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name region  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name all owned elements  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name collection  end_name  end_type  begin_name get supplier dependencies  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo not navigable this direction tfm  end_comment  begin_return  begin_expr  begin_name  begin_name collections  end_name  begin_operator  end_operator  begin_name empty set  end_name  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name list  end_name  end_type  begin_name get template parameters  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name templateable element  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name templateable element  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get template bindings  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block 
begin_comment non nls 1 end_comment begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name get tip string  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_comment non nls 1  end_comment  begin_if  begin_condition  begin_expr  begin_name model element  end_name  begin_operator  end_operator  begin_name named element  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name name  end_name  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name trim  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name length  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name get uml class name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_return  begin_expr  begin_call  begin_name get uml class name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_name name  end_name  end_expr  end_return  begin_comment non nls 1  end_comment  end_block  end_else  end_if  end_block 
begin_comment non nls 1 end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get top  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not yet implemented exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_annotation  begin_name deprecated  end_name  end_annotation  begin_specifier  end_specifier  begin_name collection  end_name  end_type  begin_name get transitions  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name is a state machine  end_name  begin_argument_list  begin_argument  begin_expr  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name region  end_name  end_argument  end_argument_list  end_name  end_type  begin_name regions  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name state machine  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get regions  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name transition  end_name  end_argument  end_argument_list  end_name  end_type  begin_name result  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name transition  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name region  end_name  end_type  begin_name region  end_name  begin_range  begin_expr  begin_name regions  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name region  end_name  begin_operator  end_operator  begin_name get transitions  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_return  begin_expr  begin_name result  end_name  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name is a vertex  end_name  begin_argument_list  begin_argument  begin_expr  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name get internal transitions  end_name  begin_argument_list  begin_argument  begin_expr  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name is a region  end_name  begin_argument_list  begin_argument  begin_expr  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name region  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get transitions  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name is a trigger  end_name  begin_argument_list  begin_argument  begin_expr  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment list transition result new array list transition  end_comment  begin_comment todo not complete how to retrieve the transitions  end_comment  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not yet implemented exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name is a event  end_name  begin_argument_list  begin_argument  begin_expr  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment todo not complete  end_comment  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not yet implemented exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get type  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name connector  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name connector  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get type  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name typed element  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name typed element  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get type  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_else  end_if  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_comment non nls 1  end_comment  begin_operator  end_operator  begin_operator  end_operator  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block 
begin_comment non nls 1 end_comment begin_type  begin_specifier  end_specifier  begin_name collection  end_name  end_type  begin_name get typed values  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not yet implemented exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name get value of tag  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment this doesn t work in uml 2 both owner and property needed  end_comment  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name unsupported operation exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block 
begin_comment returns the value of an element s property tagged value this method makes sure that a collection of values is returned if and only if the property is multivalued upper multiplicity value greater 1 see org argouml model facade get value of tag java lang object java lang object end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get value of tag  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name property  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_name element  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name property  end_name  begin_operator  end_operator  begin_name property  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name element  end_name  end_type  begin_name elem  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name element  end_name  begin_operator  end_operator  begin_name handle  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name property  end_name  end_type  begin_name prop  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name property  end_name  begin_operator  end_operator  begin_name property  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name stereotype  end_name  end_type  begin_name stereotype  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name stereotype  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name prop  end_name  begin_operator  end_operator  begin_name e container  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name value  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name uml util  end_name  begin_operator  end_operator  begin_name get tagged value  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name stereotype  end_name  begin_operator  end_operator  begin_name get qualified name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name prop  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name prop  end_name  begin_operator  end_operator  begin_name is multivalued  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name value  end_name  begin_operator  end_operator  begin_name collection  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name new value  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name array list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name new value  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name value  end_name  begin_operator  end_operator  begin_name new value  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment workaround for missing ability to parse  end_comment  begin_if  begin_condition  begin_expr  begin_name value  end_name  begin_operator  end_operator  begin_name collection  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name new value  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name array list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name v  end_name  begin_range  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name collection  end_name  begin_operator  end_operator  begin_name value  end_name  begin_operator  end_operator  end_expr  end_range  end_decl  end_init  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name new value  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name postprocess property value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name prop  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name v  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_name value  end_name  begin_operator  end_operator  begin_name new value  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name value  end_name  begin_operator  end_operator  begin_call  begin_name postprocess property value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name prop  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_return  begin_expr  begin_name value  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name postprocess property value  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name property  end_name  end_type  begin_name prop  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name value  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment workaround for missing ability to parse  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name prop  end_name  begin_operator  end_operator  begin_name get type  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name prop  end_name  begin_operator  end_operator  begin_name get type  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name integer  end_name  begin_operator  end_operator  begin_name value  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name int value  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name  begin_name literal unlimited natural  end_name  begin_operator  end_operator  begin_name unlimited  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name value  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_name value  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is a attribute  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo this probably needs more qualification tfm  end_comment  begin_return  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name property  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name property  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get class  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is a exception  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo this isn t right  end_comment  begin_return  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name signal  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is a link  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo check semantics here tfm  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_name instance specification  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name list  end_name  end_type  begin_name classifiers  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name instance specification  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get classifiers  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_call  begin_name  begin_name classifiers  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name classifiers  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_name association  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is a model element  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo what do we want to use as an equivalent here  end_comment  begin_return  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name element  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is a node instance  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo not in uml 2  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is a object  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo not in uml 2  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is a object flow state  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo not in uml 2  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is a return action  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo not implemented  end_comment  begin_return  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name action  end_name  begin_operator  end_operator  end_expr  end_return  begin_comment action handle get  end_comment  end_block 
 begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is a simple state  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo not in uml 2  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is a stimulus  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo not implemented  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is a stub state  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo not in uml 2  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is a subsystem  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo complete this implementation tfm  end_comment  begin_return  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name component  end_name  begin_operator  end_operator  end_expr  end_return  begin_comment has subsystem stereotype  end_comment  end_block 
 begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is a synch state  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo not in uml 2  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is a tagged value  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo changed in uml 2 x to special type of property  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is a terminate action  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo not in uml 2  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is a uninterpreted action  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo not in uml 2  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is constructor  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name operation  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name operation  end_name  end_type  begin_name operation  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name operation  end_name  begin_operator  end_operator  begin_name handle  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name stereo  end_name  begin_range  begin_expr  begin_call  begin_name get stereotypes  end_name  begin_argument_list  begin_argument  begin_expr  begin_name operation  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get extension mechanisms helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is stereotype inh  end_name  begin_argument_list  begin_argument  begin_expr  begin_name stereo  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_comment non nls 1  end_comment  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment non nls 1  end_comment  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  end_block  end_for  end_block  end_then  end_if  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is singleton  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo this doesn t belong in the implementation specific piece tfm  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is type  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo this doesn t belong in the implementation specific piece tfm  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is utility  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo this doesn t belong in the implementation specific piece tfm  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name element  end_name  end_type  begin_name lookup in  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_name namespace  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name string buffer  end_name  end_type  begin_name sb  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name string buffer  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name namespace  end_name  end_type  begin_name ns  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name namespace  end_name  begin_operator  end_operator  begin_name handle  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  end_init  begin_condition  end_condition  begin_incr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name idx  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name index of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment non nls 1  end_comment  begin_if  begin_condition  begin_expr  begin_name idx  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name named element  end_name  end_type  begin_name subspace  end_name  begin_init  begin_expr  begin_call  begin_name get element by name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ns  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name idx  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name subspace  end_name  begin_operator  end_operator  begin_name namespace  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name ns  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name namespace  end_name  begin_operator  end_operator  begin_name subspace  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name delete  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name idx  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_continue  end_continue  end_block  end_then  begin_else  begin_block  begin_break  end_break  end_block  end_else  end_if  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name named element  end_name  end_type  begin_name e  end_name  begin_init  begin_expr  begin_call  begin_name get element by name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ns  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_name e  end_name  end_expr  end_return  end_block  end_for  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name to string  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name model element  end_name  begin_operator  end_operator  begin_name multiplicity element  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name argouml  end_name  begin_operator  end_operator  begin_name model  end_name  begin_operator  end_operator  begin_name model  end_name  begin_operator  end_operator  begin_name get data types helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name multiplicity to string  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name model element  end_name  begin_operator  end_operator  begin_name element  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name get uml class name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_comment non nls 1  end_comment  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_else  end_if  begin_if  begin_condition  begin_expr  begin_name model element  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_return  begin_expr  begin_call  begin_name  begin_name model element  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get component instance  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not implemented exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block 
begin_comment non nls 1 end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get component realization  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  begin_name  begin_name component realization  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get create action  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not implemented exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block 
begin_comment non nls 1 end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get create object action  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  begin_name  begin_name create object action  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get destroy action  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not implemented exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block 
begin_comment non nls 1 end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get destroy object action  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  begin_name  begin_name destroy object action  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get instance  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not implemented exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block 
begin_comment non nls 1 end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get instance specification  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  begin_name  begin_name instance specification  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get link  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment todo gone in uml 2 1  end_comment  begin_comment it is now an instance specification with an  end_comment  begin_comment association as its classifier  end_comment  begin_return  begin_expr  begin_name  begin_name instance specification  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name get name  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name class  end_name  end_type  begin_name clazz  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name element  end_name  begin_operator  end_operator  begin_name class  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name clazz  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name class  end_name  begin_operator  end_operator  begin_name element  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name clazz  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name element  end_name  begin_operator  end_operator  begin_name get class  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name clazz  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment the name of the meta type is the class name after the last  end_comment  begin_comment and before the impl or end of class name  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name start name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name last index of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_comment eclipse uml 2 implementation classes often start with uml  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name prefix  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_comment non nls 1  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name start name  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name starts with  end_name  begin_argument_list  begin_argument  begin_expr  begin_name prefix  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name start name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name prefix  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment eclipse uml 2 implementation classes end with impl  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name suffix  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_comment non nls 1  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name end name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name ends with  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name suffix  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name end name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name suffix  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name start name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name end name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get object flow state  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not implemented exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block 
begin_comment non nls 1 end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get opaque expression  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  begin_name  begin_name opaque expression  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get scope kind  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not implemented exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block 
begin_comment non nls 1 end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get send action  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not implemented exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block 
begin_comment non nls 1 end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get send signal action  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  begin_name  begin_name send signal action  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get simple state  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not implemented exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block 
begin_comment non nls 1 end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get state  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  begin_name  begin_name state  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get stub state  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment todo gone in uml 2 1  end_comment  begin_return  begin_expr  begin_name  begin_name state  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get submachine state  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment todo gone in uml 2 1  end_comment  begin_return  begin_expr  begin_name  begin_name state  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get template argument  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment todo check that this is correct  end_comment  begin_return  begin_expr  begin_name  begin_name template parameter substitution  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get action sequence  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment todo need uml 2 x equivalent  end_comment  begin_return  begin_expr  end_expr  begin_comment action sequence class  end_comment  end_return  end_block 
begin_comment action sequence class end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get argument  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment todo need uml 2 x equivalent  end_comment  begin_return  begin_expr  end_expr  begin_comment argument class  end_comment  end_return  end_block 
begin_comment argument class end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get attribute link  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment todo need uml 2 x equivalent  end_comment  begin_return  begin_expr  end_expr  begin_comment attribute link class  end_comment  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get classifier in state  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment todo need uml 2 x equivalent  end_comment  begin_return  begin_expr  end_expr  begin_comment classifier in state class  end_comment  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get element residence  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not implemented exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block 
begin_comment non nls 1 end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get expression  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  begin_name  begin_name expression  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get flow  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not implemented exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block 
begin_comment non nls 1 end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get interaction instance set  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not implemented exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block 
begin_comment non nls 1 end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get lifeline  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  begin_name  begin_name lifeline  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get link end  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not implemented exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block 
begin_comment non nls 1 end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get link object  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not implemented exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block 
begin_comment non nls 1 end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get literal boolean  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  begin_name  begin_name literal boolean  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get method  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not implemented exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block 
begin_comment non nls 1 end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get multiplicity range  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  begin_name  begin_name multiplicity element  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get subsystem instance  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not implemented exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block 
begin_comment non nls 1 end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get time event  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  begin_name  begin_name time event  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get uninterpreted action  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment todo need uml 2 x equivalent  end_comment  begin_return  begin_expr  end_expr  begin_comment uninterpreted action class  end_comment  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name add class model event listener  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name property change listener  end_name  end_type  begin_name listener  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model class  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name string  end_name  begin_index  end_index  end_name  end_type  begin_name property names  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name model class  end_name  begin_operator  end_operator  begin_name class  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name e object  end_name  begin_operator  end_operator  begin_name  begin_name class  end_name  begin_operator  end_operator  begin_name is assignable from  end_name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name class  end_name  begin_operator  end_operator  begin_name model class  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_comment non nls 1  end_comment  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name register listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model class  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name listener  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name property names  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name register for classes  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name add model event listener  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name property change listener  end_name  end_type  begin_name listener  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name string  end_name  begin_index  end_index  end_name  end_type  begin_name property names  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name is debug enabled  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_comment non nls 1  end_comment  begin_operator  end_operator  begin_name listener  end_name  begin_operator  end_operator  begin_comment non nls 1  end_comment  begin_operator  end_operator  begin_name model element  end_name  begin_operator  end_operator  begin_comment non nls 1  end_comment  begin_operator  end_operator  begin_name property names  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name model element  end_name  begin_operator  end_operator  begin_name e object  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_comment non nls 1  end_comment  begin_operator  end_operator  begin_comment non nls 1  end_comment  begin_operator  end_operator  begin_name model element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name register listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name listener  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name property names  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name register for elements  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name add model event listener  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name uml change listener  end_name  end_type  begin_name listener  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name string  end_name  begin_index  end_index  end_name  end_type  begin_name property names  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name is debug enabled  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_comment non nls 1  end_comment  begin_operator  end_operator  begin_name listener  end_name  begin_operator  end_operator  begin_comment non nls 1  end_comment  begin_operator  end_operator  begin_name model element  end_name  begin_operator  end_operator  begin_comment non nls 1  end_comment  begin_operator  end_operator  begin_name property names  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name model element  end_name  begin_operator  end_operator  begin_name e object  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_comment non nls 1  end_comment  begin_operator  end_operator  begin_comment non nls 1  end_comment  begin_operator  end_operator  begin_name model element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name register listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name listener  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name property names  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name register for elements  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name add model event listener  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name property change listener  end_name  end_type  begin_name listener  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name modelelement  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name add model event listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_name listener  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name modelelement  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name string  end_name  begin_index  end_index  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name register listener  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name notifier  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name event listener  end_name  end_type  begin_name listener  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name string  end_name  begin_index  end_index  end_name  end_type  begin_name property names  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name map  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  begin_argument  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name listener  end_name  end_argument  end_argument_list  end_name  end_argument  end_argument_list  end_name  end_type  begin_name register  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name notifier  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name listener  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name null pointer exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_comment non nls 1  end_comment  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_synchronized  begin_expr  begin_name mutex  end_name  end_expr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name listener  end_name  end_argument  end_argument_list  end_name  end_type  begin_name list  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name register  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name notifier  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name found  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name list  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name list  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name listener  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name register  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name notifier  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name list  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_for  begin_init  begin_decl  begin_type  begin_name listener  end_name  end_type  begin_name l  end_name  begin_range  begin_expr  begin_name list  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name l  end_name  begin_operator  end_operator  begin_name get listener  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name listener  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name l  end_name  begin_operator  end_operator  begin_name set properties  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property names  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name found  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_then  end_if  end_block  end_for  end_block  end_else  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name found  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name list  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_name listener  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name property names  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_synchronized  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name unregister listener  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name notifier  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name event listener  end_name  end_type  begin_name listener  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name string  end_name  begin_index  end_index  end_name  end_type  begin_name property names  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name map  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  begin_argument  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name listener  end_name  end_argument  end_argument_list  end_name  end_argument  end_argument_list  end_name  end_type  begin_name register  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name notifier  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name listener  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name null pointer exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_comment non nls 1  end_comment  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_synchronized  begin_expr  begin_name mutex  end_name  end_expr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name listener  end_name  end_argument  end_argument_list  end_name  end_type  begin_name list  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name register  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name notifier  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name list  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name iterator  end_name  begin_argument_list  begin_argument  begin_name listener  end_name  end_argument  end_argument_list  end_name  end_type  begin_name iter  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name list  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name iter  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name listener  end_name  end_type  begin_name l  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name iter  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name l  end_name  begin_operator  end_operator  begin_name get listener  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name listener  end_name  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name property names  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name l  end_name  begin_operator  end_operator  begin_name remove properties  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property names  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name l  end_name  begin_operator  end_operator  begin_name get properties  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is empty  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name iter  end_name  begin_operator  end_operator  begin_name remove  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name iter  end_name  begin_operator  end_operator  begin_name remove  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_break  end_break  end_block  end_then  end_if  end_block  end_while  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name list  end_name  begin_operator  end_operator  begin_name is empty  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name register  end_name  begin_operator  end_operator  begin_name remove  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name notifier  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_synchronized  end_block 
begin_comment see org eclipse emf common notify adapter notify changed notification param notification the notification event end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name notify changed  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name notification  end_name  end_type  begin_name notification  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name notification  end_name  begin_operator  end_operator  begin_name get event type  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name  begin_name notification  end_name  begin_operator  end_operator  begin_name removing adapter  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name e named element  end_name  end_type  begin_name feature  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name e named element  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name notification  end_name  begin_operator  end_operator  begin_name get feature  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name feature name  end_name  begin_init  begin_expr  begin_name feature  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name feature  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment non nls 1  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name e reference  end_name  end_type  begin_name opposite ref  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name feature  end_name  begin_operator  end_operator  begin_name e reference  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name opposite ref  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name e reference  end_name  begin_operator  end_operator  begin_name feature  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get e opposite  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name opposite ref  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name fire event  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name notification  end_name  begin_operator  end_operator  begin_name get notifier  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name notification  end_name  begin_operator  end_operator  begin_name get old value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name notification  end_name  begin_operator  end_operator  begin_name get new value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name notification  end_name  begin_operator  end_operator  begin_name get event type  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name feature name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name opposite ref  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment see org eclipse emf common notify adapter notify changed notification param notification the notification event end_comment begin_type  begin_name void  end_name  end_type  begin_name fire event  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name notifier  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name old value  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name new value  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name event type  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name feature name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name e reference  end_name  end_type  begin_name opposite ref  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_comment non nls 1  end_comment  begin_operator  end_operator  begin_name feature name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name event type  end_name  begin_comment non nls 1  end_comment  begin_operator  end_operator  begin_operator  end_operator  begin_name old value  end_name  begin_comment non nls 1  end_comment  begin_operator  end_operator  begin_operator  end_operator  begin_name new value  end_name  begin_comment non nls 1  end_comment  begin_operator  end_operator  begin_operator  end_operator  begin_name notifier  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment non nls 1  end_comment  begin_class  begin_name event and listeners  end_name  begin_block  begin_constructor  begin_specifier  end_specifier  begin_name event and listeners  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name property change event  end_name  end_type  begin_name e  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name event listener  end_name  end_argument  end_argument_list  end_name  end_type  begin_name l  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_name event  end_name  begin_operator  end_operator  begin_name e  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name listeners  end_name  begin_operator  end_operator  begin_name l  end_name  end_expr  end_expr_stmt  end_block  end_constructor  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name property change event  end_name  end_type  begin_name event  end_name  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name event listener  end_name  end_argument  end_argument_list  end_name  end_type  begin_name listeners  end_name  end_decl  end_decl_stmt  end_block  end_class  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name event and listeners  end_name  end_argument  end_argument_list  end_name  end_type  begin_name events  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name event and listeners  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name event type  end_name  begin_operator  end_operator  begin_name  begin_name notification  end_name  begin_operator  end_operator  begin_name set  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name prop name  end_name  begin_init  begin_expr  begin_call  begin_name map property name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name feature name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name events  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name event and listeners  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name attribute change event  end_name  begin_argument_list  begin_argument  begin_expr  begin_name notifier  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name prop name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name old value  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name new value  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get listeners  end_name  begin_argument_list  begin_argument  begin_expr  begin_name notifier  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name prop name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name event type  end_name  begin_operator  end_operator  begin_name  begin_name notification  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_operator  end_operator  begin_name event type  end_name  begin_operator  end_operator  begin_name  begin_name notification  end_name  begin_operator  end_operator  begin_name remove  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name prop name  end_name  begin_init  begin_expr  begin_call  begin_name map property name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name feature name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name event type  end_name  begin_operator  end_operator  begin_name  begin_name notification  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name events  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name event and listeners  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name add association event  end_name  begin_argument_list  begin_argument  begin_expr  begin_name notifier  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name prop name  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name new value  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name new value  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get listeners  end_name  begin_argument_list  begin_argument  begin_expr  begin_name notifier  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name prop name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name events  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name event and listeners  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name attribute change event  end_name  begin_argument_list  begin_argument  begin_expr  begin_name notifier  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name prop name  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name new value  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get listeners  end_name  begin_argument_list  begin_argument  begin_expr  begin_name notifier  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name prop name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name is delete event required  end_name  begin_argument_list  begin_argument  begin_expr  begin_name old value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment changing of a property can result in the property  end_comment  begin_comment being removed and added again eclipse behaviour  end_comment  begin_comment we don t want to mistake this for deletion of the  end_comment  begin_comment property see issue 5853  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name events  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name event and listeners  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name delete instance event  end_name  begin_argument_list  begin_argument  begin_expr  begin_name old value  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_comment non nls 1  end_comment  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get listeners  end_name  begin_argument_list  begin_argument  begin_expr  begin_name old value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name info  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name events  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name event and listeners  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name remove association event  end_name  begin_argument_list  begin_argument  begin_expr  begin_name notifier  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name prop name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name old value  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name old value  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get listeners  end_name  begin_argument_list  begin_argument  begin_expr  begin_name notifier  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name prop name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name events  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name event and listeners  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name attribute change event  end_name  begin_argument_list  begin_argument  begin_expr  begin_name notifier  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name prop name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name old value  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get listeners  end_name  begin_argument_list  begin_argument  begin_expr  begin_name notifier  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name prop name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_if  begin_condition  begin_expr  begin_name opposite ref  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name prop name  end_name  begin_operator  end_operator  begin_call  begin_name map property name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name opposite ref  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name event type  end_name  begin_operator  end_operator  begin_name  begin_name notification  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name events  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name event and listeners  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name add association event  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new value  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name prop name  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name notifier  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name notifier  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get listeners  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new value  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name prop name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name events  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name event and listeners  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name attribute change event  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new value  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name prop name  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name notifier  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get listeners  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new value  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name prop name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_comment i e event type notification remove  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name events  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name event and listeners  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name add association event  end_name  begin_argument_list  begin_argument  begin_expr  begin_name old value  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name prop name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name notifier  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name notifier  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get listeners  end_name  begin_argument_list  begin_argument  begin_expr  begin_name old value  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name prop name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment bob says i don t understand the purpose of sending an attribute change  end_comment  begin_comment event when a delete event has already happened with this code in place  end_comment  begin_comment it causes the feedback loop mentioned in  end_comment  begin_comment http argouml tigris org issues show bug cgi id 6270  end_comment  begin_comment if this code must be re introduced to solve some other issue then please give  end_comment  begin_comment a full explanation here of what this solves for us  end_comment  begin_comment events add new event and listeners  end_comment  begin_comment new attribute change event  end_comment  begin_comment old value  end_comment  begin_comment prop name  end_comment  begin_comment notifier null null  end_comment  begin_comment get listeners  end_comment  begin_comment old value  end_comment  begin_comment prop name  end_comment  end_block  end_else  end_if  end_block  end_then  end_if  end_block  end_then  end_if  end_else  end_if  begin_for  begin_init  begin_decl  begin_type  begin_name event and listeners  end_name  end_type  begin_name e  end_name  begin_range  begin_expr  begin_name events  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name listeners  end_name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_for  begin_init  begin_decl  begin_type  begin_name event listener  end_name  end_type  begin_name l  end_name  begin_range  begin_expr  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name listeners  end_name  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_name l  end_name  begin_operator  end_operator  begin_name association change listener  end_name  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name event  end_name  end_name  begin_operator  end_operator  begin_name add association event  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name association change listener  end_name  begin_operator  end_operator  begin_name l  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name element added  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name add association event  end_name  begin_operator  end_operator  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name event  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name event  end_name  end_name  begin_operator  end_operator  begin_name remove association event  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name association change listener  end_name  begin_operator  end_operator  begin_name l  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name element removed  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name remove association event  end_name  begin_operator  end_operator  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name event  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name l  end_name  begin_operator  end_operator  begin_name property change listener  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name property change listener  end_name  begin_operator  end_operator  begin_name l  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name property change  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name event  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_block  end_for  end_block  end_then  end_if  end_block  end_for  end_block 
 begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name map property name  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo map uml 2 names to uml 1 x names  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment non nls 1  end_comment  begin_return  begin_expr  end_expr  end_return  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_return  begin_expr  begin_name name  end_name  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name suppress warnings  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_name list  end_name  end_type  begin_name get debug info  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name list  end_name  end_type  begin_name info  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name array list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name info  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment non nls 1  end_comment  begin_for  begin_init  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name it  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name register for elements  end_name  begin_operator  end_operator  begin_name entry set  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name iterator  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_call  begin_name  begin_name it  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_incr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name map  end_name  begin_operator  end_operator  begin_name entry  end_name  end_name  end_type  begin_name entry  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name map  end_name  begin_operator  end_operator  begin_name entry  end_name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name it  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name item  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name entry  end_name  begin_operator  end_operator  begin_name get key  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to string  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name list  end_name  end_type  begin_name model element node  end_name  begin_init  begin_expr  begin_call  begin_name new debug node  end_name  begin_argument_list  begin_argument  begin_expr  begin_name item  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name info  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element node  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name list  end_name  end_type  begin_name listener list  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name list  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name entry  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name map  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  begin_argument  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  end_argument  end_argument_list  end_name  end_type  begin_name map  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name hash map  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  begin_argument  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name list it  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name listener list  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_call  begin_name  begin_name list it  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_incr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name listener  end_name  end_type  begin_name listener  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name listener  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name list it  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name listener  end_name  begin_operator  end_operator  begin_name get properties  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_for  begin_init  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name event name  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name listener  end_name  begin_operator  end_operator  begin_name get properties  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name map  end_name  begin_operator  end_operator  begin_name contains key  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name event name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name map  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name event name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name linked list  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name map  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name event name  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name listener  end_name  begin_operator  end_operator  begin_name get listener  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get class  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  end_block  end_then  begin_else  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name map  end_name  begin_operator  end_operator  begin_name contains key  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment non nls 1  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name map  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name linked list  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name map  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_comment non nls 1  end_comment  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name listener  end_name  begin_operator  end_operator  begin_name get listener  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get class  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_for  begin_for  begin_init  begin_decl  begin_type  begin_name  begin_name map  end_name  begin_operator  end_operator  begin_name entry  end_name  end_name  end_type  begin_name o  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name map  end_name  begin_operator  end_operator  begin_name entry set  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model element node  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name string  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name o  end_name  begin_operator  end_operator  begin_name get key  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model element node  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name o  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  end_block  end_for  begin_return  begin_expr  begin_name info  end_name  end_expr  end_return  end_block 
begin_comment todo get set root model aren t specific to the model implementation end_commentbegin_comment they could probably be moved elsewhere tfm 20070530 end_comment begin_type  begin_annotation  begin_name deprecated  end_name  end_annotation  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set root model  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name root model  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo hook this creating of a new resource in to someplace more  end_comment  begin_comment more appropriate perhaps create model  end_comment  begin_comment better yet add a new method to model api to create a new top level  end_comment  begin_comment project model xmi file so we don t depend on side effects  end_comment  begin_if  begin_condition  begin_expr  begin_name root model  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name root model  end_name  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name package  end_name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_comment non nls 1  end_comment  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name root model  end_name  begin_operator  end_operator  begin_name get class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name e object  end_name  end_argument  end_argument_list  end_name  end_type  begin_name restore list  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name e object  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name the root model  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name the root model  end_name  begin_operator  end_operator  begin_name e resource  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name the root model  end_name  begin_operator  end_operator  begin_name e resource  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get contents  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name the root model  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_name root model  end_name  begin_operator  end_operator  begin_name the root model  end_name  end_expr  end_condition  begin_then  begin_block  begin_for  begin_init  begin_decl  begin_type  begin_name e object  end_name  end_type  begin_name o  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name the root model  end_name  begin_operator  end_operator  begin_name e resource  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get contents  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_name the root model  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name restore list  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ecore util  end_name  begin_operator  end_operator  begin_name remove  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name the root model  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name the root model  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name package  end_name  end_name  begin_operator  end_operator  begin_name root model  end_name  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name root model  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name the root model  end_name  begin_operator  end_operator  begin_name e resource  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name restore list  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name the root model  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name resource  end_name  end_type  begin_name r  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name uml util  end_name  begin_operator  end_operator  begin_name get resource  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model impl  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name uml util  end_name  begin_operator  end_operator  begin_name default uri  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name boolean  end_name  begin_operator  end_operator  begin_name false  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name r  end_name  begin_operator  end_operator  begin_name get contents  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add all  end_name  begin_argument_list  begin_argument  begin_expr  begin_name restore list  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get model event pump  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set root container  end_name  begin_argument_list  begin_argument  begin_expr  begin_name the root model  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_annotation  begin_name suppress warnings  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_name collection  end_name  end_type  begin_name get all contents  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name element  end_name  begin_operator  end_operator  begin_name element  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name result  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name hash set  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name element  end_name  begin_operator  end_operator  begin_name collaboration  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment todo implement  end_comment  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name element  end_name  begin_operator  end_operator  begin_name classifier  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name classifier  end_name  begin_operator  end_operator  begin_name element  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name all features  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name element  end_name  begin_operator  end_operator  begin_name namespace  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name namespace  end_name  begin_operator  end_operator  begin_name element  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get members  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name element  end_name  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name package  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name package  end_name  end_name  begin_operator  end_operator  begin_name element  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get packaged elements  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name package  end_name  end_name  end_type  begin_name p  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name package  end_name  end_name  begin_operator  end_operator  begin_name element  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get nesting package  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_name p  end_name  begin_operator  end_operator  end_expr  end_condition  begin_block  begin_for  begin_init  begin_decl  begin_type  begin_name packageable element  end_name  end_type  begin_name e  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name p  end_name  begin_operator  end_operator  begin_name get packaged elements  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name get visibility  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name  begin_name visibility kind  end_name  begin_operator  end_operator  begin_name public literal  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  begin_expr_stmt  begin_expr  begin_name p  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name p  end_name  begin_operator  end_operator  begin_name get nesting package  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_while  end_block  end_then  end_if  begin_return  begin_expr  begin_name result  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name collection  end_name  end_type  begin_name get all model elements of kind  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name nsa  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name nsa  end_name  begin_operator  end_operator  begin_name element  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name element  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name class  end_name  end_type  begin_name the type  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name type  end_name  begin_operator  end_operator  begin_name string  end_name  end_expr  end_condition  begin_then  begin_block  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_name the type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name class  end_name  begin_operator  end_operator  begin_name for name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name string  end_name  begin_operator  end_operator  begin_name type  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name class not found exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name type  end_name  begin_operator  end_operator  begin_name class  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name the type  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name class  end_name  begin_operator  end_operator  begin_name type  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_else  end_if  end_else  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name element  end_name  begin_operator  end_operator  begin_name  begin_name class  end_name  begin_operator  end_operator  begin_name is assignable from  end_name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name the type  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name element  end_name  end_argument  end_argument_list  end_name  end_type  begin_name result  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name element  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name element  end_name  end_type  begin_name element  end_name  begin_range  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name namespace  end_name  begin_operator  end_operator  begin_name nsa  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name all owned elements  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name the type  end_name  begin_operator  end_operator  begin_name is assignable from  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name element  end_name  begin_operator  end_operator  begin_name get class  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  begin_return  begin_expr  begin_name result  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name collection  end_name  end_type  begin_name get all model elements of kind  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name nsa  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name kind  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_try  begin_block  begin_return  begin_expr  begin_call  begin_name get all model elements of kind  end_name  begin_argument_list  begin_argument  begin_expr  begin_name nsa  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name class  end_name  begin_operator  end_operator  begin_name for name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name kind  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name class not found exception  end_name  end_type  begin_name cnfe  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cnfe  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  end_block 
 begin_type  begin_specifier  end_specifier  begin_name collection  end_name  end_type  begin_name get all model elements of kind with model  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name model  end_name  begin_operator  end_operator  begin_name model  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name class  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name class  end_name  end_type  begin_name kind  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name class  end_name  begin_operator  end_operator  begin_name type  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name ret  end_name  begin_init  begin_expr  begin_call  begin_name get all model elements of kind  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name kind  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name kind  end_name  begin_operator  end_operator  begin_name is assignable from  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get class  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name ret  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name array list  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ret  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name ret  end_name  begin_operator  end_operator  begin_name contains  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ret  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  begin_return  begin_expr  begin_name ret  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name collection  end_name  end_type  begin_name get all surrounding namespaces  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name element  end_name  begin_operator  end_operator  begin_name named element  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name named element  end_name  begin_operator  end_operator  begin_name element  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name all namespaces  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name suppress warnings  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_name collection  end_name  end_type  begin_name get contents  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name element  end_name  begin_operator  end_operator  begin_name element  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name result  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name hash set  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name element  end_name  begin_operator  end_operator  begin_name namespace  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name namespace  end_name  begin_operator  end_operator  begin_name element  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get owned members  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name namespace  end_name  begin_operator  end_operator  begin_name element  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get imported members  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name element  end_name  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name package  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name package  end_name  end_name  begin_operator  end_operator  begin_name element  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get packaged elements  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_name result  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  end_type  begin_name get path list  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo needs completing stub implementation only tfm  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  end_type  begin_name path  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a named element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_comment todo some elements such as generalization are  end_comment  begin_comment no longer named for a transitional period we ll  end_comment  begin_comment return a string so debug can continue but the  end_comment  begin_comment calling code should probably be fixed tfm 20070607  end_comment  begin_comment bob says these are the comments that were in  end_comment  begin_comment facade euml impl get name same trick is needed here  end_comment  begin_comment for now  end_comment  begin_expr_stmt  begin_expr  begin_name name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get uml class name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_expr_stmt  begin_comment non nls 1  end_comment  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name path  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name path  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  end_type  begin_name get root elements  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name model  end_name  begin_operator  end_operator  begin_name e object  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  end_type  begin_name contents  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name contents  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name e object  end_name  begin_operator  end_operator  begin_name model  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name e resource  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get contents  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name contents  end_name  begin_operator  end_operator  begin_name contains  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name contents  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_name contents  end_name  end_expr  end_return  end_block  end_then  end_if  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block 
begin_comment non nls 1 end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is cyclic ownership  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name parent  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name child  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo auto generated method stub  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
begin_comment non nls 1 end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get ordered  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  begin_name ordered  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get unordered  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  end_expr  end_return  begin_comment non nls 1  end_comment  end_block 
 begin_type  begin_annotation  begin_name deprecated  end_name  end_annotation  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get classifier  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  end_expr  end_return  begin_comment non nls 1  end_comment  end_block 
begin_comment non nls 1 end_comment begin_type  begin_annotation  begin_name deprecated  end_name  end_annotation  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get instance  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  end_expr  end_return  begin_comment non nls 1  end_comment  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name build transition  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name owning state  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name source  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name dest  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name source  end_name  begin_operator  end_operator  begin_name vertex  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name dest  end_name  begin_operator  end_operator  begin_name vertex  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_comment non nls 1  end_comment  begin_operator  end_operator  begin_name source  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name dest  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name owning state  end_name  begin_operator  end_operator  begin_name state machine  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name owning state  end_name  begin_operator  end_operator  begin_name state  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name owning state  end_name  begin_operator  end_operator  begin_name region  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name owning state  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name region  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name owning state  end_name  begin_operator  end_operator  begin_name state machine  end_name  begin_operator  end_operator  begin_name owning state  end_name  begin_operator  end_operator  begin_name state  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name list  end_name  end_type  begin_name regions  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get state machines helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get regions  end_name  begin_argument_list  begin_argument  begin_expr  begin_name owning state  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name regions  end_name  begin_operator  end_operator  begin_name is empty  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name region  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get uml factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name build node  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get region  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name owning state  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name region  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name regions  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name region  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name region  end_name  begin_operator  end_operator  begin_name owning state  end_name  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name transition  end_name  end_type  begin_name transition  end_name  begin_init  begin_expr  begin_call  begin_name create transition  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name transition  end_name  begin_operator  end_operator  begin_name set source  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name vertex  end_name  begin_operator  end_operator  begin_name source  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name transition  end_name  begin_operator  end_operator  begin_name set target  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name vertex  end_name  begin_operator  end_operator  begin_name dest  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name transition  end_name  begin_operator  end_operator  begin_name set container  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name region  end_name  begin_operator  end_operator  begin_name region  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name transition  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name build transition  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name source  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name target  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name source  end_name  begin_operator  end_operator  begin_name vertex  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name target  end_name  begin_operator  end_operator  begin_name vertex  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name region  end_name  end_type  begin_name region  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name vertex  end_name  begin_operator  end_operator  begin_name source  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get container  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_call  begin_name build transition  end_name  begin_argument_list  begin_argument  begin_expr  begin_name region  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name source  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name add subvertex  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name subvertex  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name region  end_name  begin_operator  end_operator  begin_name subvertex  end_name  begin_operator  end_operator  begin_name vertex  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name vertex  end_name  begin_operator  end_operator  begin_name subvertex  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name set container  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name region  end_name  begin_operator  end_operator  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_then  end_if  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name handle  end_name  begin_comment non nls 1  end_comment  begin_operator  end_operator  begin_operator  end_operator  begin_name subvertex  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block 
begin_comment non nls 1 end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name find namespace for event  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name trans  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo auto generated method stub  end_comment  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not yet implemented exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_specifier  end_specifier  begin_name collection  end_name  end_type  begin_name get all possible statemachines  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o submachine state  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name o submachine state  end_name  begin_operator  end_operator  begin_name state  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name state machine  end_name  end_argument  end_argument_list  end_name  end_type  begin_name statemachines  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get model management helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get all model elements of kind  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name state machine  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name statemachines  end_name  begin_operator  end_operator  begin_name remove  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get state machine  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o submachine state  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name statemachines  end_name  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_else  end_if  end_block 
begin_comment non nls 1 end_comment begin_type  begin_specifier  end_specifier  begin_name collection  end_name  end_type  begin_name get all possible subvertices  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o state  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo auto generated method stub  end_comment  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not yet implemented exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_specifier  end_specifier  begin_name list  end_name  end_type  begin_name get regions  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name state machine  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name state machine  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get regions  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name state  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name state  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get regions  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_else  end_if  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block 
begin_comment non nls 1 end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get source  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name trans  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name trans  end_name  begin_operator  end_operator  begin_name transition  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name transition  end_name  begin_operator  end_operator  begin_name trans  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get target  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get state machine  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_comment non nls 1  end_comment  begin_operator  end_operator  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name container  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get model element container  end_name  begin_argument_list  begin_argument  begin_expr  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_name container  end_name  begin_operator  end_operator  end_expr  end_condition  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a state machine  end_name  begin_argument_list  begin_argument  begin_expr  begin_name container  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name container  end_name  end_expr  end_return  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name container  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get model element container  end_name  begin_argument_list  begin_argument  begin_expr  begin_name container  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_while  begin_comment in this case either the container was not set or it was not contained in a statemachine  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is top state  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo this needs to be double checked tfm  end_comment  begin_return  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_name state  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name state  end_name  begin_operator  end_operator  begin_name o  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get owner  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set container  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name region  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_name vertex  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name vertex  end_name  end_type  begin_name vertex  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name vertex  end_name  begin_operator  end_operator  begin_name handle  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name region  end_name  begin_operator  end_operator  begin_name state  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name region  end_name  end_argument  end_argument_list  end_name  end_type  begin_name regions  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name state  end_name  begin_operator  end_operator  begin_name region  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get regions  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name regions  end_name  begin_operator  end_operator  begin_name is empty  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name region  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get uml factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name build node  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get region  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name region  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name region  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name regions  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name region  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name region  end_name  begin_operator  end_operator  begin_name region  end_name  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name vertex  end_name  begin_operator  end_operator  begin_name get container  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_name region  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment if the region is changed to another region then  end_comment  begin_comment we make sure that a delete event is not fired  end_comment  begin_comment as a result  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name info  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name vertex  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment non nls 1  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name model event pump euml impl  end_name  end_type  begin_name pump  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name model event pump euml impl  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get pump  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name pump  end_name  begin_operator  end_operator  begin_name add element for delete event ignore  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name vertex  end_name  begin_operator  end_operator  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_comment the only way a region is set to null is if we re deleting  end_comment  begin_comment the vertex in which case we do nothing special so that  end_comment  begin_comment the removal of the state triggers a delete event  end_comment  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name vertex  end_name  begin_operator  end_operator  begin_name set container  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name region  end_name  begin_operator  end_operator  begin_name region  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_then  end_if  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block 
begin_comment non nls 1 end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set context  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name statemachine  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo auto generated method stub  end_comment  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not yet implemented exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set statemachine as submachine  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o submachine state  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o statemachine  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name o submachine state  end_name  begin_operator  end_operator  begin_name state  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name o statemachine  end_name  begin_operator  end_operator  begin_name state machine  end_name  begin_operator  end_operator  begin_name o statemachine  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_comment non nls 1  end_comment  begin_operator  end_operator  begin_name o submachine state  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name o statemachine  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name state  end_name  end_type  begin_name state  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name state  end_name  begin_operator  end_operator  begin_name o submachine state  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name state machine  end_name  end_type  begin_name state machine  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name state machine  end_name  begin_operator  end_operator  begin_name o statemachine  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name model event pump euml impl  end_name  end_type  begin_name pump  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name model event pump euml impl  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get pump  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name pump  end_name  begin_operator  end_operator  begin_name add element for delete event ignore  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name state  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name state  end_name  begin_operator  end_operator  begin_name set submachine  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name state machine  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name build connection  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element type  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name from element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name from style  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name to element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name to style  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name unidirectional  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name namespace  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name illegal model element connection exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name is connection valid  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element type  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name from element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name to element  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal model element connection exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name element type  end_name  begin_operator  end_operator  begin_name get class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  begin_comment non nls 1  end_comment  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name from element  end_name  begin_operator  end_operator  begin_name get class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  begin_comment non nls 1  end_comment  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name to element  end_name  begin_operator  end_operator  begin_name get class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name connection  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get association role  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name connection  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get collaborations factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name build association role  end_name  begin_argument_list  begin_argument  begin_expr  begin_name from element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name to element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get association  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment note for uml 2 the aggregation ends are swapped  end_comment  begin_expr_stmt  begin_expr  begin_name connection  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get core factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name build association  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name classifier  end_name  begin_operator  end_operator  begin_name from element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name aggregation kind  end_name  begin_operator  end_operator  begin_name to style  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name classifier  end_name  begin_operator  end_operator  begin_name to element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name aggregation kind  end_name  begin_operator  end_operator  begin_name from style  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name boolean  end_name  begin_operator  end_operator  begin_name unidirectional  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get association end  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name from element  end_name  begin_operator  end_operator  begin_name association  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name connection  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get core factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name build association end  end_name  begin_argument_list  begin_argument  begin_expr  begin_name to element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name from element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name from element  end_name  begin_operator  end_operator  begin_name classifier  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name connection  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get core factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name build association end  end_name  begin_argument_list  begin_argument  begin_expr  begin_name from element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name to element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get association class  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name connection  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get core factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name build association class  end_name  begin_argument_list  begin_argument  begin_expr  begin_name from element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name to element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get association role  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name connection  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get collaborations factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name build association role  end_name  begin_argument_list  begin_argument  begin_expr  begin_name from element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name from style  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name to element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name to style  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name boolean  end_name  begin_operator  end_operator  begin_name unidirectional  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get generalization  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name connection  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get core factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name build generalization  end_name  begin_argument_list  begin_argument  begin_expr  begin_name from element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name to element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get package import  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name connection  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get core factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name build package import  end_name  begin_argument_list  begin_argument  begin_expr  begin_name from element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name to element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get usage  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name connection  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get core factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name build usage  end_name  begin_argument_list  begin_argument  begin_expr  begin_name from element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name to element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get component realization  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name connection  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get core factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name build component realization  end_name  begin_argument_list  begin_argument  begin_expr  begin_name from element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name to element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get dependency  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name connection  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get core factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name build dependency  end_name  begin_argument_list  begin_argument  begin_expr  begin_name from element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name to element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get abstraction  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name connection  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get core factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name build realization  end_name  begin_argument_list  begin_argument  begin_expr  begin_name from element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name to element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name namespace  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get link  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name connection  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get common behavior factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name build link  end_name  begin_argument_list  begin_argument  begin_expr  begin_name from element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name to element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get extend  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment extend but only between two use cases remember we draw from the  end_comment  begin_comment extension port to the base port  end_comment  begin_expr_stmt  begin_expr  begin_name connection  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get use cases factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name build extend  end_name  begin_argument_list  begin_argument  begin_expr  begin_name to element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name from element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get include  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name connection  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get use cases factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name build include  end_name  begin_argument_list  begin_argument  begin_expr  begin_name from element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name to element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get control flow  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name activity node  end_name  end_type  begin_name from activity  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name activity node  end_name  begin_operator  end_operator  begin_name from element  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name activity node  end_name  end_type  begin_name to activity  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name activity node  end_name  begin_operator  end_operator  begin_name from element  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name control flow  end_name  end_type  begin_name cf  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name uml factory  end_name  begin_operator  end_operator  begin_name e instance  end_name  begin_operator  end_operator  begin_name create control flow  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cf  end_name  begin_operator  end_operator  begin_name set activity  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name from activity  end_name  begin_operator  end_operator  begin_name get activity  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cf  end_name  begin_operator  end_operator  begin_name set source  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name from activity  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cf  end_name  begin_operator  end_operator  begin_name set target  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name to activity  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name connection  end_name  begin_operator  end_operator  begin_name cf  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get object flow  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name activity node  end_name  end_type  begin_name from object  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name activity node  end_name  begin_operator  end_operator  begin_name from element  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name activity node  end_name  end_type  begin_name to object  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name activity node  end_name  begin_operator  end_operator  begin_name from element  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name control flow  end_name  end_type  begin_name of  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name uml factory  end_name  begin_operator  end_operator  begin_name e instance  end_name  begin_operator  end_operator  begin_name create control flow  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name of  end_name  begin_operator  end_operator  begin_name set activity  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name from object  end_name  begin_operator  end_operator  begin_name get activity  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name of  end_name  begin_operator  end_operator  begin_name set source  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name from object  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name of  end_name  begin_operator  end_operator  begin_name set target  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name to object  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name connection  end_name  begin_operator  end_operator  begin_name of  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get transition  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name connection  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get state machines factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name build transition  end_name  begin_argument_list  begin_argument  begin_expr  begin_name from element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name to element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  begin_if  begin_condition  begin_expr  begin_name connection  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal model element connection exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name element type  end_name  begin_operator  end_operator  begin_name get class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  begin_comment non nls 1  end_comment  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name from element  end_name  begin_operator  end_operator  begin_name get class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  begin_comment non nls 1  end_comment  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name to element  end_name  begin_operator  end_operator  begin_name get class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_return  begin_expr  begin_name connection  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name build node  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name element type  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name container  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name property name  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  begin_init  begin_expr  begin_call  begin_name build node  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element type  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add owned element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name container  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name element  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name build node  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element type  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name container  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name build node  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element type  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name container  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name string  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name build node  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element type  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name container  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name property  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name defaults  end_name  end_type  begin_name defaults  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  begin_init  begin_expr  begin_call  begin_name build node  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element type  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name container  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name property  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name defaults  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name type  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name defaults  end_name  begin_operator  end_operator  begin_name get default type  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element type  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name defaults  end_name  begin_operator  end_operator  begin_name get default name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element type  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name type  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set type  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name type  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  begin_return  begin_expr  begin_name element  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name build node  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get actor  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get use cases factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create actor  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get tag definition  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get extension mechanisms factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create tag definition  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get use case  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get use cases factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create use case  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get uml class  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get core factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name build class  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get interface  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get core factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name build interface  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get data type  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get core factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create data type  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get package  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get model management factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create package  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get profile  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get model management factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create profile  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get model  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get model management factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create model  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get activity  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get activity graphs factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create activity graph  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get call behavior action  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name uml factory  end_name  begin_operator  end_operator  begin_name e instance  end_name  begin_operator  end_operator  begin_name create call behavior action  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get create object action  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name uml factory  end_name  begin_operator  end_operator  begin_name e instance  end_name  begin_operator  end_operator  begin_name create create object action  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get destroy object action  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name uml factory  end_name  begin_operator  end_operator  begin_name e instance  end_name  begin_operator  end_operator  begin_name create destroy object action  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get activity parameter node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name uml factory  end_name  begin_operator  end_operator  begin_name e instance  end_name  begin_operator  end_operator  begin_name create activity parameter node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get central buffer node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name uml factory  end_name  begin_operator  end_operator  begin_name e instance  end_name  begin_operator  end_operator  begin_name create central buffer node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get data store node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name uml factory  end_name  begin_operator  end_operator  begin_name e instance  end_name  begin_operator  end_operator  begin_name create data store node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get expansion node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name uml factory  end_name  begin_operator  end_operator  begin_name e instance  end_name  begin_operator  end_operator  begin_name create expansion node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get accept event action  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name uml factory  end_name  begin_operator  end_operator  begin_name e instance  end_name  begin_operator  end_operator  begin_name create accept event action  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get send signal action  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name uml factory  end_name  begin_operator  end_operator  begin_name e instance  end_name  begin_operator  end_operator  begin_name create send signal action  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get input pin  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name uml factory  end_name  begin_operator  end_operator  begin_name e instance  end_name  begin_operator  end_operator  begin_name create input pin  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get output pin  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name uml factory  end_name  begin_operator  end_operator  begin_name e instance  end_name  begin_operator  end_operator  begin_name create output pin  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get state  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name uml factory  end_name  begin_operator  end_operator  begin_name e instance  end_name  begin_operator  end_operator  begin_name create state  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get final state  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name uml factory  end_name  begin_operator  end_operator  begin_name e instance  end_name  begin_operator  end_operator  begin_name create final state  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get port  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name uml factory  end_name  begin_operator  end_operator  begin_name e instance  end_name  begin_operator  end_operator  begin_name create port  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get region  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name uml factory  end_name  begin_operator  end_operator  begin_name e instance  end_name  begin_operator  end_operator  begin_name create region  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get pseudostate  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get state machines factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create pseudostate  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get action state  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get activity graphs factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create action state  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get subactivity state  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get activity graphs factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create subactivity state  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get partition  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get activity graphs factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create partition  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get stub state  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get state machines factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create stub state  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get submachine state  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get state machines factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create submachine state  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get composite state  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get state machines factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create composite state  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get synch state  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get state machines factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create synch state  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get instance specification  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name uml factory  end_name  begin_operator  end_operator  begin_name e instance  end_name  begin_operator  end_operator  begin_name create instance specification  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get state  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get classifier role  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get collaborations factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create classifier role  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get lifeline  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get collaborations factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create lifeline  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get component  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get core factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create component  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get core factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create node  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get node instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get common behavior factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create node instance  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get object  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get common behavior factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create object  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get comment  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get core factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create comment  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get namespace  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get operation  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get core factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create operation  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get enumeration  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get core factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create enumeration  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get enumeration literal  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get core factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create enumeration literal  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get stereotype  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get extension mechanisms factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create stereotype  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get attribute  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get core factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create attribute  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get signal  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get common behavior factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create signal  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get exception  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get common behavior factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get transition  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get state machines factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create transition  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get parameter  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get core factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create parameter  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get extension point  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get use cases factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create extension point  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get reception  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get common behavior factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create reception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get property  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get core factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create attribute  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name element type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name get subsystem  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment in uml 2 subsystem is a component with subsystem stereotype  end_comment  begin_comment so this must occur after the meta types get component case  end_comment  begin_expr_stmt  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get model management factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create subsystem  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name o  end_name  begin_operator  end_operator  begin_name e object  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_comment non nls 1  end_comment  begin_operator  end_operator  begin_name element type  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_return  begin_expr  begin_name o  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name delete  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name elem  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name elem  end_name  begin_operator  end_operator  begin_name e object  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name runnable class  end_name  end_type  begin_name run  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name runnable class  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ecore util  end_name  begin_operator  end_operator  begin_name delete  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name e object  end_name  begin_operator  end_operator  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get editing domain  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get command stack  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name execute  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name change command  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model impl  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name run  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_comment non nls 1  end_comment  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is removed  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment this triggers some warnings in logs because some elements are  end_comment  begin_comment created without an owner and e resource is null  end_comment  begin_comment todo fix this  end_comment  begin_comment the warning log if we would not add the e object to a resource would  end_comment  begin_comment looks like this warn awt event queue 0 encountered deleted  end_comment  begin_comment object during delete of  end_comment  begin_if  begin_condition  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_name element  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name element  end_name  begin_operator  end_operator  begin_name o  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name e resource  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_return  end_block  end_then  end_if  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block 
begin_comment non nls 1 end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is connection type  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name connection type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment if our map has any entries for this type it s a connection type  end_comment  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name valid connection map  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name connection type  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name delete extent  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name resource  end_name  end_type  begin_name resource  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name e object  end_name  begin_operator  end_operator  begin_name element  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name e resource  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name resource  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name unload resource  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name resource  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name warn  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment non nls 1  end_comment  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name invalid element exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name element  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_else  end_if  end_block 
begin_comment non nls 1 end_comment begin_type  begin_specifier  end_specifier  begin_name collection  end_name  end_type  begin_name get extent elements  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name extent name  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name extent name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name extent name  end_name  begin_operator  end_operator  begin_name starts with  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment trying to get a built in standard profile from eclipse uml 2  end_comment  begin_try  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name uri  end_name  end_type  begin_name uri  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name uri  end_name  begin_operator  end_operator  begin_name create uri  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name extent name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name resource  end_name  end_type  begin_name r  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get editing domain  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get resource set  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get resource  end_name  begin_argument_list  begin_argument  begin_expr  begin_name uri  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get read only map  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name put  end_name  begin_argument_list  begin_argument  begin_expr  begin_name r  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name boolean  end_name  begin_operator  end_operator  begin_name true  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_call  begin_name  begin_name r  end_name  begin_operator  end_operator  begin_name get contents  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name exception  end_name  end_type  begin_name ex  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name warn  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name extent name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment non nls 1  end_comment  end_block  end_catch  end_try  end_block  end_then  end_if  begin_return  begin_expr  end_expr  end_return  end_block 
begin_comment nothing to do end_commentbegin_comment todo model implementation independent end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name delete collection  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name col  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name it  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name col  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name it  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get uml factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name it  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_while  end_block 
begin_comment see org argouml model uml helper get source java lang object end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get source  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name relationship  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name relationship  end_name  begin_operator  end_operator  begin_name relationship  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment handles all children of relationship including extend and  end_comment  begin_comment include which are not members of core  end_comment  begin_return  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get source  end_name  begin_argument_list  begin_argument  begin_expr  begin_name relationship  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name relationship  end_name  begin_operator  end_operator  begin_name transition  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get state machines helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get source  end_name  begin_argument_list  begin_argument  begin_expr  begin_name relationship  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name relationship  end_name  begin_operator  end_operator  begin_name activity edge  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name activity edge  end_name  begin_operator  end_operator  begin_name relationship  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get source  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name relationship  end_name  begin_operator  end_operator  begin_name property  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment todo we expect an association end here  end_comment  begin_comment check more carefully tfm  end_comment  begin_return  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get source  end_name  begin_argument_list  begin_argument  begin_expr  begin_name relationship  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name relationship  end_name  begin_operator  end_operator  begin_name message  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get sender  end_name  begin_argument_list  begin_argument  begin_expr  begin_name relationship  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_comment non nls 1  end_comment  begin_operator  end_operator  begin_name relationship  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block 
begin_comment see org argouml model uml helper get destination java lang object end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get destination  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name relationship  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name relationship  end_name  begin_operator  end_operator  begin_name relationship  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment handles all children of relationship including extend and  end_comment  begin_comment include which are not members of core  end_comment  begin_return  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get destination  end_name  begin_argument_list  begin_argument  begin_expr  begin_name relationship  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name relationship  end_name  begin_operator  end_operator  begin_name activity edge  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name activity edge  end_name  begin_operator  end_operator  begin_name relationship  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get target  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name relationship  end_name  begin_operator  end_operator  begin_name transition  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get state machines helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get destination  end_name  begin_argument_list  begin_argument  begin_expr  begin_name relationship  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name relationship  end_name  begin_operator  end_operator  begin_name property  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment todo we expect an association end here  end_comment  begin_comment check more carefully tfm  end_comment  begin_return  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get destination  end_name  begin_argument_list  begin_argument  begin_expr  begin_name relationship  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name relationship  end_name  begin_operator  end_operator  begin_name message  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get receiver  end_name  begin_argument_list  begin_argument  begin_expr  begin_name relationship  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_comment non nls 1  end_comment  begin_operator  end_operator  begin_name relationship  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block 
begin_comment non nls 1 end_commentbegin_comment getter for the attributes of a type param type the type that owns the attributes return the attributes or null end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name  begin_name e list  end_name  begin_argument_list  begin_argument  begin_name property  end_name  end_argument  end_argument_list  end_name  end_type  begin_name get owned attributes  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name type  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name type  end_name  begin_operator  end_operator  begin_name association class  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name association class  end_name  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get owned attributes  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name type  end_name  begin_operator  end_operator  begin_name association  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name association  end_name  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get owned ends  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name util  end_name  begin_operator  end_operator  begin_name uml util  end_name  begin_operator  end_operator  begin_name get owned attributes  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name type  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_else  end_if  end_else  end_if  end_block 
begin_comment copy a tree of uml elements into a destination location param model implementation the e uml model implementation param source the tree of uml elements to be copied param destination the destination container return the root of the newly copied tree of uml elements or null end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name element  end_name  end_type  begin_name copy  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name euml model implementation  end_name  end_type  begin_name model implementation  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name element  end_name  end_type  begin_name source  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name element  end_name  end_type  begin_name destination  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name command  end_name  end_type  begin_name copy to clipboard  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name copy to clipboard command  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model implementation  end_name  begin_operator  end_operator  begin_name get editing domain  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name source  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name command  end_name  end_type  begin_name paste from clipboard  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name paste from clipboard command  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model implementation  end_name  begin_operator  end_operator  begin_name get editing domain  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name destination  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name strict compound command  end_name  end_type  begin_name copy command  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name strict compound command  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_block  begin_expr_stmt  begin_expr  begin_name is pessimistic  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name copy command  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name copy to clipboard  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name copy command  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name paste from clipboard  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name copy command  end_name  begin_operator  end_operator  begin_name set label  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment non nls 1  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name copy command  end_name  begin_operator  end_operator  begin_name can execute  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model implementation  end_name  begin_operator  end_operator  begin_name get model event pump  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get root container  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set hold events  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model implementation  end_name  begin_operator  end_operator  begin_name get editing domain  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get command stack  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name execute  end_name  begin_argument_list  begin_argument  begin_expr  begin_name copy command  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model implementation  end_name  begin_operator  end_operator  begin_name get editing domain  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get command stack  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get most recent command  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get affected objects  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name size  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model implementation  end_name  begin_operator  end_operator  begin_name get model event pump  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get root container  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set hold events  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_operator  end_operator  begin_name element  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model implementation  end_name  begin_operator  end_operator  begin_name get editing domain  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get command stack  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get most recent command  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get affected objects  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name iterator  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name next  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model implementation  end_name  begin_operator  end_operator  begin_name get editing domain  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get command stack  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name undo  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model implementation  end_name  begin_operator  end_operator  begin_name get model event pump  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get root container  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name clear held events  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model implementation  end_name  begin_operator  end_operator  begin_name get model event pump  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get root container  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set hold events  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  end_if  begin_return  begin_expr  end_expr  end_return  end_block 
begin_comment returns information about an object p if it s an element it returns its metaclass name and if it s a named element it appends its name param o the object return the string description end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name to string  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name o  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name o  end_name  begin_operator  end_operator  begin_name element  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name o  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name string builder  end_name  end_type  begin_name sb  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name string builder  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment non nls 1  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name named  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_name named element  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name named element  end_name  begin_operator  end_operator  begin_name o  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name named element  end_name  begin_operator  end_operator  begin_name o  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment non nls 1  end_comment  begin_expr_stmt  begin_expr  begin_name named  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name named element  end_name  begin_operator  end_operator  begin_name o  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name element  end_name  begin_operator  end_operator  begin_name o  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name e class  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name named  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment non nls 1  end_comment  begin_return  begin_expr  begin_call  begin_name  begin_name sb  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment returns the resource associated with an uri or creates the resource if it does not exist param model implementation the e uml implementation param uri the uri which identifies the resource return the retrieved or created resource end_comment begin_type  begin_specifier  end_specifier  begin_name resource  end_name  end_type  begin_name get resource  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name euml model implementation  end_name  end_type  begin_name model implementation  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name uri  end_name  end_type  begin_name uri  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name read only  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name uri  end_name  begin_operator  end_operator  begin_name file extension  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_comment non nls 1  end_comment  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name uri  end_name  begin_operator  end_operator  begin_name file extension  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment non nls 1  end_comment  begin_comment make sure we have a recognized file extension  end_comment  begin_expr_stmt  begin_expr  begin_name uri  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name uri  end_name  begin_operator  end_operator  begin_name append file extension  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name resource  end_name  end_type  begin_name r  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model implementation  end_name  begin_operator  end_operator  begin_name get editing domain  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get resource set  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get resource  end_name  begin_argument_list  begin_argument  begin_expr  begin_name uri  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name r  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name r  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model implementation  end_name  begin_operator  end_operator  begin_name get editing domain  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get resource set  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create resource  end_name  begin_argument_list  begin_argument  begin_expr  begin_name uri  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name r  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name null pointer exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_comment non nls 1  end_comment  begin_operator  end_operator  begin_name uri  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model implementation  end_name  begin_operator  end_operator  begin_name get read only map  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name put  end_name  begin_argument_list  begin_argument  begin_expr  begin_name r  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name boolean  end_name  begin_operator  end_operator  begin_name value of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name read only  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name r  end_name  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name suppress warnings  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name check args  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name  begin_name object  end_name  begin_index  end_index  end_name  end_type  begin_name args  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_index  end_index  end_name  end_type  begin_name types  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  begin_name  begin_name types  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name  begin_name types  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name is assignable from  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name get class  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name i  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name types  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1 non nls 2  end_comment  end_block  end_then  end_if  end_block  end_for  end_block 
 begin_type  begin_specifier  end_specifier  begin_name extend  end_name  end_type  begin_name build extend  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name abase  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name anextension  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name build extend  end_name  begin_argument_list  begin_argument  begin_expr  begin_name abase  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name anextension  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name extend  end_name  end_type  begin_name build extend  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name extended case  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name extension  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name extension location  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name extended case  end_name  begin_operator  end_operator  begin_name use case  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name extension  end_name  begin_operator  end_operator  begin_name use case  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name extension location  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name extension location  end_name  begin_operator  end_operator  begin_name extension point  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name extension location  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name extension point  end_name  begin_operator  end_operator  begin_name extension location  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get use case  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name extended case  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name extended case  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name runnable class  end_name  end_type  begin_name run  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name runnable class  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name extension point  end_name  end_type  begin_name ep  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name extension location  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name ep  end_name  begin_operator  end_operator  begin_call  begin_name create extension point  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name use case  end_name  begin_operator  end_operator  begin_name extended case  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get extension points  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ep  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name ep  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name extension point  end_name  begin_operator  end_operator  begin_name extension location  end_name  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name extend  end_name  end_type  begin_name extend  end_name  begin_init  begin_expr  begin_call  begin_name create extend  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name extend  end_name  begin_operator  end_operator  begin_name set extended case  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name use case  end_name  begin_operator  end_operator  begin_name extended case  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name extend  end_name  begin_operator  end_operator  begin_name set extension  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name use case  end_name  begin_operator  end_operator  begin_name extension  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name extend  end_name  begin_operator  end_operator  begin_name get extension locations  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ep  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get params  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name extend  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get params  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ep  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name change command  end_name  end_type  begin_name cmd  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name change command  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model impl  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name run  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get editing domain  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get command stack  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name execute  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cmd  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cmd  end_name  begin_operator  end_operator  begin_name set objects  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name run  end_name  begin_operator  end_operator  begin_name get params  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name extension  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name extended case  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name run  end_name  begin_operator  end_operator  begin_name get params  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_operator  end_operator  begin_name extend  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name run  end_name  begin_operator  end_operator  begin_name get params  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name collection  end_name  end_type  begin_name parse  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name input source  end_name  end_type  begin_name input source  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name read only  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name uml exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_if  begin_condition  begin_expr  begin_name input source  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name null pointer exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name input stream  end_name  end_type  begin_name is  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name needs closing  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name input source  end_name  begin_operator  end_operator  begin_name get system id  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name input source  end_name  begin_operator  end_operator  begin_name get public id  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name input source  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment non nls 1  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name input source  end_name  begin_operator  end_operator  begin_name get byte stream  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name is  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name input source  end_name  begin_operator  end_operator  begin_name get byte stream  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name input source  end_name  begin_operator  end_operator  begin_name get system id  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_try  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name url  end_name  end_type  begin_name url  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name url  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name input source  end_name  begin_operator  end_operator  begin_name get system id  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name url  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name url  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment non nls 1  end_comment  begin_expr_stmt  begin_expr  begin_name is  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name url  end_name  begin_operator  end_operator  begin_name open stream  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name is  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name is  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name buffered input stream  end_name  begin_argument_list  begin_argument  begin_expr  begin_name is  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name needs closing  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name malformed url exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment do nothing  end_comment  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name io exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment do nothing  end_comment  end_block  end_catch  end_try  end_block  end_then  end_if  end_else  end_if  begin_if  begin_condition  begin_expr  begin_name is  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name unsupported operation exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_comment todo review priority of public id vs system id has been reversed  end_comment  begin_comment from original implementation  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name id  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name input source  end_name  begin_operator  end_operator  begin_name get public id  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name id  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name id  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name input source  end_name  begin_operator  end_operator  begin_name get system id  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name id  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment we only take the filename not the whole system path  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name ix  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name id  end_name  begin_operator  end_operator  begin_name last index of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name ix  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name id  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name id  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ix  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name resource  end_name  end_type  begin_name r  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name uml util  end_name  begin_operator  end_operator  begin_name get resource  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model impl  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name uri  end_name  begin_operator  end_operator  begin_name create uri  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name id  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name read only  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get model event pump  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name stop pumping events  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name r  end_name  begin_operator  end_operator  begin_name unload  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name r  end_name  begin_operator  end_operator  begin_name load  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name is  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo some import only uml 2 profiles trigger this investigate  end_comment  begin_comment if is uml 2 r  end_comment  begin_comment throw new uml exception attempted to load non uml 2 x file  end_comment  begin_comment   end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name is uml 14  end_name  begin_argument_list  begin_argument  begin_expr  begin_name r  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name uml exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name io exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name uml exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_finally  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get model event pump  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name start pumping events  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name needs closing  end_name  end_expr  end_condition  begin_then  begin_block  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name is  end_name  begin_operator  end_operator  begin_name close  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name io exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name runtime exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  end_block  end_then  end_if  end_block  end_finally  end_try  begin_expr_stmt  begin_expr  begin_name resource  end_name  begin_operator  end_operator  begin_name r  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name resource  end_name  begin_comment non nls 1  end_comment  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name resource  end_name  begin_operator  end_operator  begin_name get contents  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name size  end_name  begin_argument_list  end_argument_list  end_call  begin_comment non nls 1  end_comment  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment non nls 1  end_comment  begin_return  begin_expr  begin_call  begin_name  begin_name r  end_name  begin_operator  end_operator  begin_name get contents  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment todo silently ignore instead end_commentbegin_comment return false end_comment begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name get tag name  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name resource  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name list  end_name  end_type  begin_name l  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name resource  end_name  begin_operator  end_operator  begin_name get contents  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name l  end_name  begin_operator  end_operator  begin_name is empty  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_comment non nls 1  end_comment  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name l  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_else  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name write  end_name  begin_parameter_list  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name uml exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name e resource  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name uml exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_comment do we need to get stereotype applications for each element tfm  end_comment  begin_comment for iterator all contents uml util get all contents model true  end_comment  begin_comment false all contents has next  end_comment  begin_comment e object e object e object all contents next  end_comment  begin_comment if e object instanceof element  end_comment  begin_comment contents add all element e object get stereotype applications  end_comment  begin_comment   end_comment  begin_comment   end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name map  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  begin_argument  begin_name integer  end_name  end_argument  end_argument_list  end_name  end_type  begin_name options  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name hash map  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  begin_argument  begin_name integer  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name options  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name xml resource  end_name  begin_operator  end_operator  begin_name option line width  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo is there an option we can use to save our argo uml version  end_comment  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get model event pump  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name stop pumping events  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name e resource  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name save  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o stream  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name options  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name io exception  end_name  end_type  begin_name ioe  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name uml exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ioe  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_finally  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get model event pump  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name start pumping events  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_finally  end_try  end_block 
begin_comment constructor param implementation the model implementation param model the project member model param writer the writer param version the version of argo uml end_comment begin_specifier  end_specifier  begin_name xmi writer euml impl  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name euml model implementation  end_name  end_type  begin_name implementation  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name the model  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name output stream  end_name  end_type  begin_name stream  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name version  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name stream  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name the model  end_name  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name package  end_name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_comment non nls 1  end_comment  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name implementation  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name model impl  end_name  begin_operator  end_operator  begin_name implementation  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name model  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name eclipse  end_name  begin_operator  end_operator  begin_name uml 2  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name package  end_name  end_name  begin_operator  end_operator  begin_name the model  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name o stream  end_name  begin_operator  end_operator  begin_name stream  end_name  end_expr  end_expr_stmt  end_block 
begin_comment builds a message within some interaction related to some assocationrole the message is added as the last in the interaction sequence furthermore the message is added as the last to the list of messages already attached to the role effectively the already attached messages become predecessors of this message todo this sets the activator as a side effect however it is impossible to determine the activator at this stage as we don t yet know what the action will be of the message we re creating see issue 5692 param inter the interaction param role the association role return the newly created message end_comment begin_type  begin_specifier  end_specifier  begin_name message  end_name  end_type  begin_name build message interaction  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name interaction  end_name  end_type  begin_name inter  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name association role  end_name  end_type  begin_name role  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_assert  begin_expr  begin_name inter  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_assert  begin_assert  begin_expr  begin_name role  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_assert  begin_decl_stmt  begin_decl  begin_type  begin_name message  end_name  end_type  begin_name message  end_name  begin_init  begin_expr  begin_call  begin_name create message  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name inter  end_name  begin_operator  end_operator  begin_name get message  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name message  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name message  end_name  begin_operator  end_operator  begin_name set communication connection  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name role  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name role  end_name  begin_operator  end_operator  begin_name get connection  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name size  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name message  end_name  begin_operator  end_operator  begin_name set sender  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name classifier role  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name role  end_name  begin_operator  end_operator  begin_name get connection  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get participant  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name message  end_name  begin_operator  end_operator  begin_name set receiver  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name classifier role  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name role  end_name  begin_operator  end_operator  begin_name get connection  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get participant  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name message  end_name  end_argument  end_argument_list  end_name  end_type  begin_name messages  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get received messages  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name message  end_name  begin_operator  end_operator  begin_name get sender  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name message  end_name  end_type  begin_name last msg  end_name  begin_init  begin_expr  begin_call  begin_name last message  end_name  begin_argument_list  begin_argument  begin_expr  begin_name messages  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name message  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name last msg  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name message  end_name  begin_operator  end_operator  begin_name set activator  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name last msg  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name messages  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get activated messages  end_name  begin_argument_list  begin_argument  begin_expr  begin_name last msg  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name messages  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get sent messages  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name message  end_name  begin_operator  end_operator  begin_name get sender  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_name last msg  end_name  begin_operator  end_operator  begin_call  begin_name last message  end_name  begin_argument_list  begin_argument  begin_expr  begin_name messages  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name message  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name last msg  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name message  end_name  begin_operator  end_operator  begin_name get predecessor  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name find end  end_name  begin_argument_list  begin_argument  begin_expr  begin_name last msg  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  begin_return  begin_expr  begin_name message  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set base  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name arole  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name abase  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name arole  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name arole  end_name  begin_operator  end_operator  begin_name association role  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name association role  end_name  end_type  begin_name role  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name association role  end_name  begin_operator  end_operator  begin_name arole  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name uml association  end_name  end_type  begin_name base  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name uml association  end_name  begin_operator  end_operator  begin_name abase  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo must we calculate the whole list  end_comment  begin_if  begin_condition  begin_expr  begin_name base  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get all possible bases  end_name  begin_argument_list  begin_argument  begin_expr  begin_name role  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name base  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name role  end_name  begin_operator  end_operator  begin_name set base  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name base  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name classifier role  end_name  end_type  begin_name sender  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name classifier role  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get source  end_name  begin_argument_list  begin_argument  begin_expr  begin_name role  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name classifier role  end_name  end_type  begin_name receiver  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name classifier role  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get destination  end_name  begin_argument_list  begin_argument  begin_expr  begin_name role  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name classifier  end_name  end_argument  end_argument_list  end_name  end_type  begin_name sender bases  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name sender  end_name  begin_operator  end_operator  begin_name get base  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name classifier  end_name  end_argument  end_argument_list  end_name  end_type  begin_name receiver bases  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name receiver  end_name  begin_operator  end_operator  begin_name get base  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name association end role  end_name  end_type  begin_name sender role  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name association end role  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get association end  end_name  begin_argument_list  begin_argument  begin_expr  begin_name sender  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name role  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name association end role  end_name  end_type  begin_name receiver role  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name association end role  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get association end  end_name  begin_argument_list  begin_argument  begin_expr  begin_name receiver  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name role  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name base  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_for  begin_init  begin_decl  begin_type  begin_name association end  end_name  end_type  begin_name end  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name base  end_name  begin_operator  end_operator  begin_name get connection  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name sender bases  end_name  begin_operator  end_operator  begin_name contains  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name end  end_name  begin_operator  end_operator  begin_name get participant  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sender role  end_name  begin_operator  end_operator  begin_name set base  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name end  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name receiver bases  end_name  begin_operator  end_operator  begin_name contains  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name end  end_name  begin_operator  end_operator  begin_name get participant  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name receiver role  end_name  begin_operator  end_operator  begin_name set base  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name end  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_block  end_for  end_block  end_then  end_if  begin_return  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name arole  end_name  begin_operator  end_operator  begin_name association end role  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name association end role  end_name  end_type  begin_name role  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name association end role  end_name  begin_operator  end_operator  begin_name arole  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name association end  end_name  end_type  begin_name base  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name association end  end_name  begin_operator  end_operator  begin_name abase  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name role  end_name  begin_operator  end_operator  begin_name set base  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name base  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_then  end_if  end_else  end_if  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block 
begin_comment see org argouml model common behavior helper set node instance java lang object java lang object end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set node instance  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name node instance  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name component instance  end_name  begin_operator  end_operator  begin_name node instance  end_name  begin_operator  end_operator  begin_name node instance  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name component instance  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name set node instance  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name node instance  end_name  begin_operator  end_operator  begin_name node instance  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name component instance  end_name  begin_operator  end_operator  begin_name node instance  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment todo check if this is ok this is literally adapted from nsuml  end_comment  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name component instance  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name set node instance  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_then  end_if  end_else  end_if  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name node instance  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_specifier  end_specifier  begin_name permission  end_name  end_type  begin_name build package import  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name client  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name supplier  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name client  end_name  begin_operator  end_operator  begin_name namespace  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name supplier  end_name  begin_operator  end_operator  begin_name uml package  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name permission  end_name  end_type  begin_name per  end_name  begin_init  begin_expr  begin_call  begin_name build permission internal  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name model element  end_name  begin_operator  end_operator  begin_name client  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name uml package  end_name  begin_operator  end_operator  begin_name supplier  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo this should fetch the stereotype from our profile  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get extension mechanisms factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name build stereotype  end_name  begin_argument_list  begin_argument  begin_expr  begin_name per  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name model management helper  end_name  begin_operator  end_operator  begin_name import stereotype  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name per  end_name  begin_operator  end_operator  begin_name get namespace  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name per  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name permission  end_name  end_type  begin_name build package access  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name client  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name supplier  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name client  end_name  begin_operator  end_operator  begin_name namespace  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name supplier  end_name  begin_operator  end_operator  begin_name uml package  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name permission  end_name  end_type  begin_name per  end_name  begin_init  begin_expr  begin_call  begin_name build permission internal  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name model element  end_name  begin_operator  end_operator  begin_name client  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name uml package  end_name  begin_operator  end_operator  begin_name supplier  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo this should fetch the stereotype from our profile  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get extension mechanisms factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name build stereotype  end_name  begin_argument_list  begin_argument  begin_expr  begin_name per  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name model management helper  end_name  begin_operator  end_operator  begin_name access stereotype  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name per  end_name  begin_operator  end_operator  begin_name get namespace  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name per  end_name  end_expr  end_return  end_block 
begin_comment copies a feature from one classifier to another param source is the feature to copy param classifier is the classifier to put the copy in return a newly created feature end_comment begin_type  begin_specifier  end_specifier  begin_name feature  end_name  end_type  begin_name copy feature  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name source  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name classifier  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name source  end_name  begin_operator  end_operator  begin_name feature  end_name  begin_operator  end_operator  begin_name classifier  end_name  begin_operator  end_operator  begin_name classifier  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name source  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name classifier  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name feature  end_name  end_type  begin_name f  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name source  end_name  begin_operator  end_operator  begin_name attribute  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name attribute  end_name  end_type  begin_name attr  end_name  begin_init  begin_expr  begin_call  begin_name create attribute  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name do copy attribute  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name attribute  end_name  begin_operator  end_operator  begin_name source  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name attr  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name f  end_name  begin_operator  end_operator  begin_name attr  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name source  end_name  begin_operator  end_operator  begin_name operation  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name operation  end_name  end_type  begin_name oper  end_name  begin_init  begin_expr  begin_call  begin_name create operation  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name do copy operation  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name operation  end_name  begin_operator  end_operator  begin_name source  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name oper  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo build a return parameter  end_comment  begin_expr_stmt  begin_expr  begin_name f  end_name  begin_operator  end_operator  begin_name oper  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name source  end_name  begin_operator  end_operator  begin_name method  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name method  end_name  end_type  begin_name method  end_name  begin_init  begin_expr  begin_call  begin_name create method  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name do copy method  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name method  end_name  begin_operator  end_operator  begin_name source  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name f  end_name  begin_operator  end_operator  begin_name method  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name source  end_name  begin_operator  end_operator  begin_name reception  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name reception  end_name  end_type  begin_name reception  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name reception  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get common behavior factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create reception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name do copy reception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name reception  end_name  begin_operator  end_operator  begin_name source  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name reception  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name f  end_name  begin_operator  end_operator  begin_name reception  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name source  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name f  end_name  begin_operator  end_operator  begin_name set owner  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name classifier  end_name  begin_operator  end_operator  begin_name classifier  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name classifier  end_name  begin_operator  end_operator  begin_name classifier  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get feature  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name f  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name f  end_name  end_expr  end_return  end_block 
begin_comment nothing more to do don t copy owned elements end_commentbegin_comment copy the meta attributes of an attribute to another param source the source attribute param target the new attribute to be adapted end_comment begin_type  begin_name void  end_name  end_type  begin_name do copy attribute  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name attribute  end_name  end_type  begin_name source  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name attribute  end_name  end_type  begin_name target  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo delete old multiplicity why is copy using hard coded value tfm  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name target  end_name  begin_operator  end_operator  begin_name set multiplicity  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get multiplicity 11  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name target  end_name  begin_operator  end_operator  begin_name set changeability  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name source  end_name  begin_operator  end_operator  begin_name get changeability  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name target  end_name  begin_operator  end_operator  begin_name set target scope  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name source  end_name  begin_operator  end_operator  begin_name get target scope  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name target  end_name  begin_operator  end_operator  begin_name set type  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name source  end_name  begin_operator  end_operator  begin_name get type  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name do copy feature  end_name  begin_argument_list  begin_argument  begin_expr  begin_name source  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name behavioral feature  end_name  end_argument  end_argument_list  end_name  end_type  begin_name get all behavioral features  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name element  end_name  begin_operator  end_operator  begin_name model element  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name list  end_name  end_type  begin_name contents  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name array list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name behavioral feature  end_name  end_argument  end_argument_list  end_name  end_type  begin_name result  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name behavioral feature  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name contents  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get tagged values collection  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name contents  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name model element  end_name  begin_operator  end_operator  begin_name element  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get template parameter  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name it  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name contents  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name it  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name it  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_name classifier  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name classifier  end_name  end_type  begin_name clazz  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name classifier  end_name  begin_operator  end_operator  begin_name o  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name clazz  end_name  begin_operator  end_operator  begin_name data type  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o 1  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name clazz  end_name  begin_operator  end_operator  begin_name get feature  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_name o 1  end_name  begin_operator  end_operator  begin_name behavioral feature  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name behavioral feature  end_name  begin_operator  end_operator  begin_name o 1  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  end_block  end_then  end_if  end_block  end_then  begin_else  begin_block  begin_comment todo 2 nd next for single has next  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get all behavioral features  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name it  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_while  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name invalid object exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name invalid element exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  begin_return  begin_expr  begin_name result  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name interface  end_name  end_argument  end_argument_list  end_name  end_type  begin_name get realized interfaces  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name cls  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name classifier  end_name  end_type  begin_name classifier  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name classifier  end_name  begin_operator  end_operator  begin_name cls  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name classifier  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name collections  end_name  begin_operator  end_operator  begin_name empty list  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name interface  end_name  end_argument  end_argument_list  end_name  end_type  begin_name result  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name interface  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo this should be using internal get all realized interfaces  end_comment  begin_try  begin_block  begin_for  begin_init  begin_decl  begin_type  begin_name dependency  end_name  end_type  begin_name client dependency  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name classifier  end_name  begin_operator  end_operator  begin_name get client dependency  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_name client dependency  end_name  begin_operator  end_operator  begin_name abstraction  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name abstraction  end_name  end_type  begin_name abstraction  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name abstraction  end_name  begin_operator  end_operator  begin_name client dependency  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name stereotype  end_name  end_type  begin_name stereo  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name abstraction  end_name  begin_operator  end_operator  begin_name get stereotype  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_name stereo  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name core factory  end_name  begin_operator  end_operator  begin_name realize stereotype  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name stereo  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_comment the following should always be true  end_comment  begin_operator  end_operator  begin_call  begin_name  begin_name stereo  end_name  begin_operator  end_operator  begin_name get base class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name supplier  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name abstraction  end_name  begin_operator  end_operator  begin_name get supplier  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_name supplier  end_name  begin_operator  end_operator  begin_name interface  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name interface  end_name  begin_operator  end_operator  begin_name supplier  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  end_block  end_then  end_if  end_block  end_for  end_block  end_then  end_if  end_block  end_for  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name invalid object exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name invalid element exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  begin_return  begin_expr  begin_name result  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name add connection  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name connection  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name uml association  end_name  begin_operator  end_operator  begin_name connection  end_name  begin_operator  end_operator  begin_name association end  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name association end  end_name  end_argument  end_argument_list  end_name  end_type  begin_name ends  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name uml association  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get connection  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ends  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name association end  end_name  begin_operator  end_operator  begin_name connection  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment uml 1 4 wfr 2 5 3 1 3  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name ends  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_for  begin_init  begin_decl  begin_type  begin_name association end  end_name  end_type  begin_name end  end_name  begin_range  begin_expr  begin_name ends  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name end  end_name  begin_operator  end_operator  begin_name set aggregation  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name aggregation kind enum  end_name  begin_operator  end_operator  begin_name ak none  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  end_block  end_then  end_if  begin_return  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name link  end_name  begin_operator  end_operator  begin_name connection  end_name  begin_operator  end_operator  begin_name link end  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name link  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get connection  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name link end  end_name  begin_operator  end_operator  begin_name connection  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_then  end_if  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name connection  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name add connection  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name position  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name connection  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name uml association  end_name  begin_operator  end_operator  begin_name connection  end_name  begin_operator  end_operator  begin_name association end  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name uml association  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get connection  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name position  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name association end  end_name  begin_operator  end_operator  begin_name connection  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name association end  end_name  end_argument  end_argument_list  end_name  end_type  begin_name ends  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name uml association  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get connection  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment uml 1 4 wfr 2 5 3 1 3 no aggregation for n ary associations  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name ends  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_for  begin_init  begin_decl  begin_type  begin_name association end  end_name  end_type  begin_name end  end_name  begin_range  begin_expr  begin_name ends  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name end  end_name  begin_operator  end_operator  begin_name set aggregation  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name aggregation kind enum  end_name  begin_operator  end_operator  begin_name ak none  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  end_block  end_then  end_if  begin_return  end_return  end_block  end_then  end_if  begin_comment strange but the link get connection returns a collection not a list this is a bug compared to the uml standard imho mvw hence the link end is added to the end instead  end_comment  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name link  end_name  begin_operator  end_operator  begin_name connection  end_name  begin_operator  end_operator  begin_name link end  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name link  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get connection  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name link end  end_name  begin_operator  end_operator  begin_name connection  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_then  end_if  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name connection  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block 
begin_comment get element residences todo unused should be added to facade tfm param handle a model element return collection the element residence for this model element end_comment begin_type  begin_specifier  end_specifier  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name element residence  end_name  end_argument  end_argument_list  end_name  end_type  begin_name get element residence  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_try  begin_block  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name model element  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name omg  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name uml package  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name model element  end_name  begin_operator  end_operator  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name ref outermost package  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get core  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get a resident element residence  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get element residence  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name model element  end_name  begin_operator  end_operator  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name invalid object exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name invalid element exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_annotation  begin_name deprecated  end_name  end_annotation  begin_specifier  end_specifier  begin_name multiplicity  end_name  end_type  begin_name create multiplicity  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name lower  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name upper  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name create multiplicity internal  end_name  begin_argument_list  begin_argument  begin_expr  begin_name lower  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name upper  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment todo as currently implemented this expects a list of multiplicity ranges is this an interface change from the nsuml implementation i suspect it used to accept a list of integers tfm see org argouml model data types factory create multiplicity java util list end_comment begin_type  begin_annotation  begin_name deprecated  end_name  end_annotation  begin_specifier  end_specifier  begin_name multiplicity  end_name  end_type  begin_name create multiplicity  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name list  end_name  end_type  begin_name range  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name create multiplicity internal  end_name  begin_argument_list  begin_argument  begin_expr  begin_name range  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name deprecated  end_name  end_annotation  begin_specifier  end_specifier  begin_name multiplicity  end_name  end_type  begin_name create multiplicity  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name str  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name create multiplicity internal  end_name  begin_argument_list  begin_argument  begin_expr  begin_name str  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment todo mvw this needs rethinking rework i have the following questions why does it not search for a stereotype in the namespace using properties and only create a new stereotype if it will actually be used ie why is there not a get stereotype string name string base class edited by d 00 mst these comments imported from nsuml implementation tfm see org argouml model extension mechanisms factory build stereotype java lang object java lang object java lang object end_comment begin_type  begin_specifier  end_specifier  begin_name stereotype  end_name  end_type  begin_name build stereotype  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name the model element object  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name the name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name the namespace object  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name the model element object  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name the name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name the namespace object  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name the model element object  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name the name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name the namespace object  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name model element  end_name  end_type  begin_name me  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name model element  end_name  begin_operator  end_operator  begin_name the model element object  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name text  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name string  end_name  begin_operator  end_operator  begin_name the name  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name namespace  end_name  end_type  begin_name ns  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name namespace  end_name  begin_operator  end_operator  begin_name the namespace object  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name stereotype  end_name  end_type  begin_name stereo  end_name  begin_init  begin_expr  begin_call  begin_name build stereotype  end_name  begin_argument_list  begin_argument  begin_expr  begin_name text  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name stereo  end_name  begin_operator  end_operator  begin_name get base class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name me  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo this doesn t look right review tfm  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name stereotype  end_name  end_type  begin_name stereo 2  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name stereotype  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name extension helper  end_name  begin_operator  end_operator  begin_name get stereotype  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ns  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name stereo  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name stereo 2  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name me  end_name  begin_operator  end_operator  begin_name get stereotype  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name stereo 2  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get uml factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete  end_name  begin_argument_list  begin_argument  begin_expr  begin_name stereo  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name stereo 2  end_name  end_expr  end_return  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name stereo  end_name  begin_operator  end_operator  begin_name set namespace  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ns  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name me  end_name  begin_operator  end_operator  begin_name get stereotype  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name stereo  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name stereo  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name stereotype  end_name  end_type  begin_name build stereotype  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name the model element object  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name the name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name models  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name model element  end_name  end_type  begin_name me  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name model element  end_name  begin_operator  end_operator  begin_name the model element object  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name stereotype  end_name  end_type  begin_name stereo  end_name  begin_init  begin_expr  begin_call  begin_name build stereotype  end_name  begin_argument_list  begin_argument  begin_expr  begin_name the name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name stereo  end_name  begin_operator  end_operator  begin_name get base class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name me  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name stereotype  end_name  end_type  begin_name stereo 2  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name stereotype  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name extension helper  end_name  begin_operator  end_operator  begin_name get stereotype  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name models  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name stereo  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name stereo 2  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name me  end_name  begin_operator  end_operator  begin_name get stereotype  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name stereo 2  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get uml factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete  end_name  begin_argument_list  begin_argument  begin_expr  begin_name stereo  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name stereo 2  end_name  end_expr  end_return  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name stereo  end_name  begin_operator  end_operator  begin_name set namespace  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name omg  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name modelmanagement  end_name  begin_operator  end_operator  begin_name model  end_name  end_name  begin_operator  end_operator  begin_name model  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name me  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name me  end_name  begin_operator  end_operator  begin_name get stereotype  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name stereo  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_name stereo  end_name  end_expr  end_return  end_block 
begin_comment builds an initialized stereotype with no namespace a stereotype must have a namespace so this method is unsafe use build stereotype string object param text is the name of the stereotype return an initialized stereotype end_comment begin_type  begin_specifier  end_specifier  begin_name stereotype  end_name  end_type  begin_name build stereotype  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name text  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name stereotype  end_name  end_type  begin_name stereotype  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get uml package  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get core  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get stereotype  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create stereotype  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name initialize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name stereotype  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name stereotype  end_name  begin_operator  end_operator  begin_name set name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name text  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name stereotype  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name stereotype  end_name  end_type  begin_name build stereotype  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name text  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name namespace  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name namespace  end_name  begin_operator  end_operator  begin_name namespace  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name text  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name namespace  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name namespace  end_name  end_type  begin_name ns  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name namespace  end_name  begin_operator  end_operator  begin_name namespace  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name omg  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name uml package  end_name  end_name  end_type  begin_name uml pkg  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name omg  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name uml package  end_name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ns  end_name  begin_operator  end_operator  begin_name ref outermost package  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name stereotype  end_name  end_type  begin_name stereotype  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name uml pkg  end_name  begin_operator  end_operator  begin_name get core  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get stereotype  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name create stereotype  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name initialize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name stereotype  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name stereotype  end_name  begin_operator  end_operator  begin_name set name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name text  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name stereotype  end_name  begin_operator  end_operator  begin_name set namespace  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ns  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name stereotype  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name stereotype  end_name  end_argument  end_argument_list  end_name  end_type  begin_name get stereotypes  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name ns  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name ns  end_name  begin_operator  end_operator  begin_name namespace  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name ns  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name stereotype  end_name  end_argument  end_argument_list  end_name  end_type  begin_name l  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name stereotype  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo this could be a huge collection find a more efficient way  end_comment  begin_try  begin_block  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o  end_name  begin_range  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name namespace  end_name  begin_operator  end_operator  begin_name ns  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get owned element  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_name stereotype  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name l  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name stereotype  end_name  begin_operator  end_operator  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_name uml package  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name l  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get stereotypes  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_block  end_for  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name invalid object exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name invalid element exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  begin_return  begin_expr  begin_name l  end_name  end_expr  end_return  end_block 
begin_comment todo make this work when the given stereotype has more than one baseclass todo currently only works for stereotypes where the baseclass is equal to the given one inheritance does not work end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get stereotype  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name ns  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name stereo  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name ns  end_name  begin_operator  end_operator  begin_name namespace  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name stereo  end_name  begin_operator  end_operator  begin_name stereotype  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_try  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name model element  end_name  begin_operator  end_operator  begin_name stereo  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  end_type  begin_name base classes  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name stereotype  end_name  begin_operator  end_operator  begin_name stereo  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get base class  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name base classes  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name base class  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name base classes  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name next  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name stereotype  end_name  end_type  begin_name o  end_name  begin_range  begin_expr  begin_call  begin_name get stereotypes  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ns  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name o  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name o  end_name  begin_operator  end_operator  begin_name get base class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name base class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name o  end_name  end_expr  end_return  end_block  end_then  end_if  end_block  end_for  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name invalid object exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name invalid element exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name stereotype  end_name  end_type  begin_name get stereotype  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name models  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name stereo  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name stereo  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name stereo  end_name  begin_operator  end_operator  begin_name stereotype  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_try  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name stereotype  end_name  begin_operator  end_operator  begin_name stereo  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  end_type  begin_name base classes  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name stereotype  end_name  begin_operator  end_operator  begin_name stereo  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get base class  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name base classes  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name base class  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name base classes  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name next  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name model  end_name  end_type  begin_name model  end_name  begin_range  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name model  end_name  end_argument  end_argument_list  end_name  begin_operator  end_operator  begin_name models  end_name  begin_operator  end_operator  end_expr  end_range  end_decl  end_init  begin_block  begin_comment todo this should call the single namespace form  end_comment  begin_comment get stereotype it 2 next stereo  end_comment  begin_for  begin_init  begin_decl  begin_type  begin_name stereotype  end_name  end_type  begin_name o  end_name  begin_range  begin_expr  begin_call  begin_name get stereotypes  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name o  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name o  end_name  begin_operator  end_operator  begin_name get base class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name base class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name o  end_name  end_expr  end_return  end_block  end_then  end_if  end_block  end_for  end_block  end_for  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name invalid object exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name invalid element exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  begin_return  begin_expr  end_expr  end_return  end_block 
begin_comment see org argouml model extension mechanisms helper get common tagged value types end_comment begin_type  begin_specifier  end_specifier  begin_name collection  end_name  end_type  begin_name get common tagged value types  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment todo still not used because in argo uml string is hardwired  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name stereotype  end_name  end_argument  end_argument_list  end_name  end_type  begin_name get stereotypes  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name models  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name stereotype  end_name  end_argument  end_argument_list  end_name  end_type  begin_name ret  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name stereotype  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model  end_name  begin_range  begin_expr  begin_name models  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name model  end_name  begin_operator  end_operator  begin_name model  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ret  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get stereotypes  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name invalid object exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name invalid element exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  begin_return  begin_expr  begin_name ret  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is stereotype inh  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name object  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name base  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name object  end_name  begin_operator  end_operator  begin_name stereotype  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_try  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name is stereotype  end_name  begin_argument_list  begin_argument  begin_expr  begin_name object  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name base  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_comment todo mvw do we really look into super types of the stereotype or should we be looking into super types of the baseclass  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name it  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get supertypes  end_name  begin_argument_list  begin_argument  begin_expr  begin_name object  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name iterator  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name it  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name is stereotype inh  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name it  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name base  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  end_block  end_while  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name invalid object exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name invalid element exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set tag type  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name tag type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name tag definition  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment todo what type of validation can we do here on tag type  end_comment  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name tag definition  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name set tag type  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tag type  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_then  end_if  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name tag type  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_specifier  end_specifier  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name model element  end_name  end_argument  end_argument_list  end_name  end_type  begin_name get imported elements  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name pack  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name pack  end_name  begin_operator  end_operator  begin_name uml package  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name illegal argument collection  end_name  begin_argument_list  begin_argument  begin_expr  begin_name pack  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name model element  end_name  end_argument  end_argument_list  end_name  end_type  begin_name results  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name model element  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_comment todo this code manually processes the element imports of a package but we need to check whether mdr already does something similar automatically as part of its namespace processing tfm 20060408  end_comment  begin_for  begin_init  begin_decl  begin_type  begin_name element import  end_name  end_type  begin_name ei  end_name  begin_range  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name uml package  end_name  begin_operator  end_operator  begin_name pack  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get element import  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name model element  end_name  end_type  begin_name element  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ei  end_name  begin_operator  end_operator  begin_name get imported element  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name results  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_return  begin_expr  begin_name results  end_name  end_expr  end_return  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name invalid object exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name invalid element exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get inner containing model  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_try  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name is a model  end_name  begin_argument_list  begin_argument  begin_expr  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name handle  end_name  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name is auml element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name illegal argument object  end_name  begin_argument_list  begin_argument  begin_expr  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_comment if we can t find a model return the outermost  end_comment  begin_comment containing model element  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name get model element container  end_name  begin_argument_list  begin_argument  begin_expr  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name handle  end_name  end_expr  end_return  end_block  end_then  end_if  begin_comment todo replace this recursive function by a loop like in get root  end_comment  begin_return  begin_expr  begin_call  begin_name get inner containing model  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get model element container  end_name  begin_argument_list  begin_argument  begin_expr  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name invalid object exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name invalid element exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get model element  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_try  begin_block  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name element import  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment todo this does not belong here use get imported element  end_comment  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name element import  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get imported element  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name tagged value  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name tagged value  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get model element  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name template argument  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name template argument  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get model element  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name invalid object exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name invalid element exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  begin_return  begin_expr  begin_call  begin_name illegal argument object  end_name  begin_argument_list  begin_argument  begin_expr  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment todo rationalize this with get model element container end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get container  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_try  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name is a guard  end_name  begin_argument_list  begin_argument  begin_expr  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a action  end_name  begin_argument_list  begin_argument  begin_expr  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name get container  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get transition  end_name  begin_argument_list  begin_argument  begin_expr  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name is a event  end_name  begin_argument_list  begin_argument  begin_expr  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name container  end_name  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name it  end_name  begin_init  begin_expr  begin_call  begin_name get transitions  end_name  begin_argument_list  begin_argument  begin_expr  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name iterator  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name it  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_expr_stmt  begin_expr  begin_name container  end_name  begin_operator  end_operator  begin_call  begin_name get container  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name it  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name container  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name container  end_name  end_expr  end_return  end_block  end_then  end_if  end_block  end_while  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name state vertex  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name state vertex  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get container  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_comment todo use get model element container for transition  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name is a transition  end_name  begin_argument_list  begin_argument  begin_expr  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name transition  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get state machine  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get top  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get container  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name element residence  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name element residence  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get container  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name invalid object exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name invalid element exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  begin_return  begin_expr  begin_call  begin_name illegal argument object  end_name  begin_argument_list  begin_argument  begin_expr  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name feature  end_name  end_argument  end_argument_list  end_name  end_type  begin_name get operations and receptions  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name classifier  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name feature  end_name  end_argument  end_argument_list  end_name  end_type  begin_name ops and receps  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name feature  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo return empty collection on null input or throw illegal argument  end_comment  begin_if  begin_condition  begin_expr  begin_name classifier  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_for  begin_init  begin_decl  begin_type  begin_name feature  end_name  end_type  begin_name f  end_name  begin_range  begin_expr  begin_call  begin_name get features  end_name  begin_argument_list  begin_argument  begin_expr  begin_name classifier  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name is a operation  end_name  begin_argument_list  begin_argument  begin_expr  begin_name f  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a reception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name f  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ops and receps  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name f  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  end_block  end_then  end_if  begin_return  begin_expr  begin_name ops and receps  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name message  end_name  end_argument  end_argument_list  end_name  end_type  begin_name get predecessors  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_try  begin_block  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name message  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment todo this has different semantics than everything else  end_comment  begin_return  begin_expr  begin_call  begin_name  begin_name collections  end_name  begin_operator  end_operator  begin_name unmodifiable collection  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name message  end_name  end_argument  end_argument_list  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name message  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get predecessor  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name invalid object exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name invalid element exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  begin_return  begin_expr  begin_call  begin_name illegal argument collection  end_name  begin_argument_list  begin_argument  begin_expr  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name get upper  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_try  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name is a association end  end_name  begin_argument_list  begin_argument  begin_expr  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name upper  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name association end  end_name  end_type  begin_name end  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name association end  end_name  begin_operator  end_operator  begin_name handle  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name end  end_name  begin_operator  end_operator  begin_name get multiplicity  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name upper  end_name  begin_operator  end_operator  begin_call  begin_name get upper  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name end  end_name  begin_operator  end_operator  begin_name get multiplicity  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_name upper  end_name  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name is a multiplicity  end_name  begin_argument_list  begin_argument  begin_expr  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name multiplicity  end_name  end_type  begin_name up  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name multiplicity  end_name  begin_operator  end_operator  begin_name handle  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name list  end_name  end_type  begin_name ranges  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name array list  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name up  end_name  begin_operator  end_operator  begin_name get range  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo this assumes ranges are sorted is this true tfm  end_comment  begin_return  begin_expr  begin_call  begin_name get upper  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name ranges  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name ranges  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name is a multiplicity range  end_name  begin_argument_list  begin_argument  begin_expr  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name multiplicity range  end_name  end_type  begin_name up  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name multiplicity range  end_name  begin_operator  end_operator  begin_name handle  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_call  begin_name  begin_name up  end_name  begin_operator  end_operator  begin_name get upper  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name invalid object exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name invalid element exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  begin_expr_stmt  begin_expr  begin_call  begin_name illegal argument  end_name  begin_argument_list  begin_argument  begin_expr  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name get lower  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_try  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name is a association end  end_name  begin_argument_list  begin_argument  begin_expr  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name lower  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name association end  end_name  end_type  begin_name end  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name association end  end_name  begin_operator  end_operator  begin_name handle  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name end  end_name  begin_operator  end_operator  begin_name get multiplicity  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name lower  end_name  begin_operator  end_operator  begin_call  begin_name get lower  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name end  end_name  begin_operator  end_operator  begin_name get multiplicity  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_name lower  end_name  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name is a multiplicity  end_name  begin_argument_list  begin_argument  begin_expr  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name multiplicity  end_name  end_type  begin_name low  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name multiplicity  end_name  begin_operator  end_operator  begin_name handle  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name list  end_name  end_type  begin_name ranges  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name array list  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name low  end_name  begin_operator  end_operator  begin_name get range  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo this assumes ranges are sorted is this true tfm  end_comment  begin_return  begin_expr  begin_call  begin_name get lower  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name ranges  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name is a multiplicity range  end_name  begin_argument_list  begin_argument  begin_expr  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name multiplicity range  end_name  end_type  begin_name low  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name multiplicity range  end_name  begin_operator  end_operator  begin_name handle  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_call  begin_name  begin_name low  end_name  begin_operator  end_operator  begin_name get lower  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name invalid object exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name invalid element exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  begin_expr_stmt  begin_expr  begin_call  begin_name illegal argument  end_name  begin_argument_list  begin_argument  begin_expr  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get activity  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not implemented exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_comment non nls 1  end_comment  begin_operator  end_operator  begin_call  begin_name  begin_name handle  end_name  begin_operator  end_operator  begin_name get class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name get name  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_try  begin_block  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name ordering kind enum  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name handle  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name replace all  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name call concurrency kind enum  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name handle  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name replace all  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name changeable kind enum  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name handle  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name replace all  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name visibility kind enum  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name handle  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name replace all  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name aggregation kind enum  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name handle  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name replace all  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name parameter direction kind enum  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name handle  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name replace all  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name pseudostate kind  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name handle  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name replace all  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name model element  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name model element  end_name  end_type  begin_name me  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name model element  end_name  begin_operator  end_operator  begin_name handle  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_call  begin_name  begin_name me  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name multiplicity  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get data types helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name multiplicity to string  end_name  begin_argument_list  begin_argument  begin_expr  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name expression  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name expression  end_name  begin_operator  end_operator  begin_name handle  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get body  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name element residence  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name template parameter  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name template parameter  end_name  end_type  begin_name template parameter  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name template parameter  end_name  begin_operator  end_operator  begin_name handle  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo do we want to construct an artificial name here  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string buffer  end_name  end_type  begin_name result  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name string buffer  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name model element  end_name  end_type  begin_name template  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name template parameter  end_name  begin_operator  end_operator  begin_name get template  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name template  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name template  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name model element  end_name  end_type  begin_name parameter  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name template parameter  end_name  begin_operator  end_operator  begin_name get parameter  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name parameter  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name parameter  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_comment todo what other non model element types do we need to handle here  end_comment  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name invalid object exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name uuid  end_name  begin_init  begin_expr  begin_call  begin_name get uuid  end_name  begin_argument_list  begin_argument  begin_expr  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name uuid  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name invalid element exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name uuid  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  begin_else  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name invalid element exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_else  end_if  end_block  end_catch  end_try  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name handle  end_name  begin_operator  end_operator  begin_name get class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name get value of tag  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_try  begin_block  begin_if  begin_condition  begin_expr  begin_name handle  end_name  begin_operator  end_operator  begin_name tagged value  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name tagged value  end_name  end_type  begin_name tv  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name tagged value  end_name  begin_operator  end_operator  begin_name handle  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name ref values  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name tv  end_name  begin_operator  end_operator  begin_name get reference value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name values  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name tv  end_name  begin_operator  end_operator  begin_name get data value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name values  end_name  begin_operator  end_operator  begin_name is empty  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name ref values  end_name  begin_operator  end_operator  begin_name is empty  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_comment todo implement support for multiple tagged values  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name values  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name ref values  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name warn  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment todo more is required here to support reference values  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name value  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name ref values  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name value  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ref values  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name next  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name value  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name values  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name next  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_if  begin_condition  begin_expr  begin_name value  end_name  begin_operator  end_operator  begin_name string  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_name string  end_name  begin_operator  end_operator  begin_name value  end_name  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name value  end_name  begin_operator  end_operator  begin_name enumeration literal  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment todo temporary stopgap for enumeration literal  end_comment  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name enumeration literal  end_name  begin_operator  end_operator  begin_name value  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_comment todo implement support for types other than string  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name warn  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_else  end_if  end_else  end_if  end_block  end_then  end_if  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name invalid object exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name invalid element exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  begin_return  begin_expr  begin_call  begin_name illegal argument string  end_name  begin_argument_list  begin_argument  begin_expr  begin_name handle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get value of tag  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name property  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not implemented exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name to string  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_try  begin_block  begin_if  begin_condition  begin_expr  begin_name model element  end_name  begin_operator  end_operator  begin_name multiplicity  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name argouml  end_name  begin_operator  end_operator  begin_name model  end_name  begin_operator  end_operator  begin_name model  end_name  begin_operator  end_operator  begin_name get data types helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name multiplicity to string  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name model element  end_name  begin_operator  end_operator  begin_name expression  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name expression  end_name  end_type  begin_name exp  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name expression  end_name  begin_operator  end_operator  begin_name model element  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name result  end_name  begin_init  begin_expr  begin_call  begin_name get uml class name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name language  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name exp  end_name  begin_operator  end_operator  begin_name get language  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name body  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name exp  end_name  begin_operator  end_operator  begin_name get body  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo i 18 n  end_comment  begin_if  begin_condition  begin_expr  begin_name language  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name language  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name result  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name language  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name body  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name body  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name result  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name body  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_name result  end_name  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name model element  end_name  begin_operator  end_operator  begin_name element import  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name element import  end_name  end_type  begin_name ei  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name element import  end_name  begin_operator  end_operator  begin_name model element  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name model element  end_name  end_type  begin_name me  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ei  end_name  begin_operator  end_operator  begin_name get imported element  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name type name  end_name  begin_init  begin_expr  begin_call  begin_name get uml class name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name me  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name elem name  end_name  begin_init  begin_expr  begin_call  begin_name to string  end_name  begin_argument_list  begin_argument  begin_expr  begin_name me  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name alias  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ei  end_name  begin_operator  end_operator  begin_name get alias  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name alias  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name alias  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment todo i 18 n this needs to be localized but we don t  end_comment  begin_comment have any localization capabilities in the model subsystem  end_comment  begin_comment object args type name elem name alias  end_comment  begin_comment misc name element import alias imported 0 1 alias 2  end_comment  begin_comment return translator localize  end_comment  begin_comment misc name element import alias args  end_comment  begin_return  begin_expr  begin_operator  end_operator  begin_name type name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name elem name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name alias  end_name  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_comment object args type name elem name  end_comment  begin_comment misc name element import imported 0 1  end_comment  begin_comment return translator  end_comment  begin_comment localize misc name element import args  end_comment  begin_return  begin_expr  begin_operator  end_operator  begin_name type name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name elem name  end_name  end_expr  end_return  end_block  end_else  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name is auml element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name get uml class name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name model element  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name invalid object exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name invalid element exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  begin_return  begin_expr  begin_call  begin_name  begin_name model element  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name string  end_name  begin_index  end_index  end_type  begin_name get metatype names  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment get all uml metaclasses  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name mof class  end_name  end_argument  end_argument_list  end_name  end_type  begin_name meta types  end_name  begin_init  begin_expr  begin_call  begin_name get meta classes  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  begin_index  end_index  end_type  begin_name names  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name string  end_name  begin_index  begin_expr  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name mof class  end_name  end_type  begin_name mof class  end_name  begin_range  begin_expr  begin_name meta types  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_comment todo do we need to worry about uml class uml package etc  end_comment  begin_expr_stmt  begin_expr  begin_name  begin_name names  end_name  begin_index  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name mof class  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_return  begin_expr  begin_name names  end_name  end_expr  end_return  end_block 
begin_comment register a listener for metamodel class and all its subclasses optionally qualified by a list of property names todo verify that property event names are legal for this class in the metamodel end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name register class event  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name property change listener  end_name  end_type  begin_name listener  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model class  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name string  end_name  begin_index  end_index  end_name  end_type  begin_name property names  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name model class  end_name  begin_operator  end_operator  begin_name class  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name class name  end_name  begin_init  begin_expr  begin_call  begin_name get class name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name is debug enabled  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model class  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name format array  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property names  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_name listener  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  end_type  begin_name subtypes  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name subtype map  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name class name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name verify attribute names  end_name  begin_argument_list  begin_argument  begin_expr  begin_name class name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name property names  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_synchronized  begin_expr  begin_name registration mutex  end_name  end_expr  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name listened classes  end_name  begin_operator  end_operator  begin_name register  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name listener  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name class name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name property names  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name subtype  end_name  begin_range  begin_expr  begin_name subtypes  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name listened classes  end_name  begin_operator  end_operator  begin_name register  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name listener  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name subtype  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name property names  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  end_block  end_synchronized  begin_return  end_return  end_block  end_then  end_if  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name model class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block 
begin_comment recursive method to get all subtypes todo does this have a scalability problem end_comment begin_type  begin_specifier  end_specifier  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  end_type  begin_name get subtypes  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name model package  end_name  end_type  begin_name extent  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name model element  end_name  end_type  begin_name me  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  end_type  begin_name all subtypes  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name hash set  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name me  end_name  begin_operator  end_operator  begin_name generalizable element  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name generalizable element  end_name  end_type  begin_name ge  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name generalizable element  end_name  begin_operator  end_operator  begin_name me  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name model element  end_name  end_argument  end_argument_list  end_name  end_type  begin_name subtypes  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name extent  end_name  begin_operator  end_operator  begin_name get generalizes  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get subtype  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ge  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name model element  end_name  end_type  begin_name st  end_name  begin_range  begin_expr  begin_name subtypes  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name all subtypes  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name st  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name all subtypes  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get subtypes  end_name  begin_argument_list  begin_argument  begin_expr  begin_name extent  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name st  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  end_block  end_then  end_if  begin_return  begin_expr  begin_name all subtypes  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name collection  end_name  end_type  begin_name get all model elements of kind  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name nsa  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo performance critical method  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name long  end_name  end_type  begin_name start time  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name current time millis  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name nsa  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name  begin_name collections  end_name  begin_operator  end_operator  begin_name empty list  end_name  end_name  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name type  end_name  begin_operator  end_operator  begin_name string  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name get all model elements of kind  end_name  begin_argument_list  begin_argument  begin_expr  begin_name nsa  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name string  end_name  begin_operator  end_operator  begin_name type  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name nsa  end_name  begin_operator  end_operator  begin_name namespace  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name class  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name nsa  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name type  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_comment because we get the metatype class stripped of its reflective proxies we need to jump through a hoop or two to find it in the metamodel then work from there to get its proxy  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name class  end_name  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name last index of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name starts with  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name all of type  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name collections  end_name  begin_operator  end_operator  begin_name empty set  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ref package  end_name  end_type  begin_name extent  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name ref object  end_name  begin_operator  end_operator  begin_name nsa  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name ref outermost package  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name ref class  end_name  end_type  begin_name class proxy  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name facade mdr impl  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get proxy  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name extent  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name all of type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name class proxy  end_name  begin_operator  end_operator  begin_name ref all of type  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name invalid object exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name invalid element exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  begin_comment remove any elements not in requested namespace  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name return elements  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name array list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo perhaps use a hash set or other collection with faster lookup  end_comment  begin_comment performance in case our callers are doing naive contains lookups  end_comment  begin_for  begin_init  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name all of type  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_call  begin_name  begin_name i  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_incr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name me  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name i  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo optimize for root model case tfm  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name contained  end_name  begin_argument_list  begin_argument  begin_expr  begin_name nsa  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name me  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name return elements  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name me  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  begin_decl_stmt  begin_decl  begin_type  begin_name long  end_name  end_type  begin_name duration  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name current time millis  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name start time  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name duration  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name return elements  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name collection  end_name  end_type  begin_name get all model elements of kind  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name nsa  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name kind  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name nsa  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name kind  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name  begin_name collections  end_name  begin_operator  end_operator  begin_name empty list  end_name  end_name  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name nsa  end_name  begin_operator  end_operator  begin_name namespace  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name nsa  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name col  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_name col  end_name  begin_operator  end_operator  begin_call  begin_name get all model elements of kind  end_name  begin_argument_list  begin_argument  begin_expr  begin_name nsa  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name class  end_name  begin_operator  end_operator  begin_name for name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name kind  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name class not found exception  end_name  end_type  begin_name cnfe  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name kind  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  begin_return  begin_expr  begin_name col  end_name  end_expr  end_return  end_block 
begin_comment todo as currently coded this actually returns all behavioral features which are owned by classifiers contained in the given namespace which is slightly different then what s documented it will not include any behavioral features which are part of the namespace but which don t have an owner end_comment begin_type  begin_specifier  end_specifier  begin_name collection  end_name  end_type  begin_name get all behavioral features  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name ns  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment get classifiers in namespace  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name array list  end_name  end_type  begin_name features  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name array list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name classifiers  end_name  begin_init  begin_expr  begin_call  begin_name get all model elements of kind  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ns  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get classifier  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name classifiers  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment get features owned by those classifiers  end_comment  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name i  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name features  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get features  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name i  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_while  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name invalid object exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name invalid element exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  begin_comment select those features which are behavioral features  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name array list  end_name  end_type  begin_name behavioralfeatures  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name array list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name ii  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name features  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name ii  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name f  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ii  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name f  end_name  begin_operator  end_operator  begin_name behavioral feature  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name behavioralfeatures  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name f  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_while  begin_return  begin_expr  begin_name behavioralfeatures  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name collection  end_name  end_type  begin_name get all possible imports  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name pack  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo fully implement this  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name container  end_name  begin_init  begin_expr  begin_name pack  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name cc  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get model element container  end_name  begin_argument_list  begin_argument  begin_expr  begin_name pack  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_name cc  end_name  begin_operator  end_operator  end_expr  end_condition  begin_block  begin_expr_stmt  begin_expr  begin_name container  end_name  begin_operator  end_operator  begin_name cc  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name cc  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get model element container  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cc  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_while  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name mes  end_name  begin_init  begin_expr  begin_call  begin_name get all model elements of kind  end_name  begin_argument_list  begin_argument  begin_expr  begin_name container  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get model element  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name vmes  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name array list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name mes  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name i  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name me  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name i  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is valid namespace  end_name  begin_argument_list  begin_argument  begin_expr  begin_name me  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name pack  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name vmes  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name me  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_while  begin_return  begin_expr  begin_name vmes  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get element  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  end_type  begin_name path  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name the root namespace  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name model element  end_name  end_type  begin_name root  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name model element  end_name  begin_operator  end_operator  begin_name the root namespace  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name root  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name get element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name path  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name path  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_if  begin_condition  begin_expr  begin_name root  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name root  end_name  begin_operator  end_operator  begin_name namespace  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name path  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name found  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name model element  end_name  end_type  begin_name me  end_name  begin_range  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name namespace  end_name  begin_operator  end_operator  begin_name root  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get owned element  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name path  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name me  end_name  begin_operator  end_operator  begin_name namespace  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_continue  end_continue  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name me  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name root  end_name  begin_operator  end_operator  begin_name me  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name found  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_then  end_if  end_block  end_for  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name found  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  end_block  end_for  begin_return  begin_expr  begin_name root  end_name  end_expr  end_return  end_block  end_else  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get element  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  end_type  begin_name full path  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name full path  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name full path  end_name  begin_operator  end_operator  begin_name is empty  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name root  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get root elements  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_comment model impl get facade get root elements gets all root elements in the uml repository including available profiles that are not part of the current project degrades performance project manager get manager get current project get roots only returns user model roots and no profiles project manager get manager get current project get models gets all root models but no root namespaces todo which is best is there any other way  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name model element  end_name  begin_operator  end_operator  begin_name root  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name full path  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name element  end_name  begin_operator  end_operator  begin_name root  end_name  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name root  end_name  begin_operator  end_operator  begin_name namespace  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name full path  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name element  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get model management helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get element  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name full path  end_name  begin_operator  end_operator  begin_name sub list  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name full path  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name root  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name element  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_break  end_break  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_for  begin_return  begin_expr  begin_name element  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name model element  end_name  end_argument  end_argument_list  end_name  end_type  begin_name get contents  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name modelelement  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name modelelement  end_name  begin_operator  end_operator  begin_name uml package  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name get contents  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name uml package  end_name  begin_operator  end_operator  begin_name modelelement  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name modelelement  end_name  begin_operator  end_operator  begin_name namespace  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name get contents  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name namespace  end_name  begin_operator  end_operator  begin_name modelelement  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name modelelement  end_name  begin_operator  end_operator  begin_name instance  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name get contents  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name instance  end_name  begin_operator  end_operator  begin_name modelelement  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name modelelement  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment this is silly but for backward compatibility  end_comment  begin_return  begin_expr  begin_call  begin_name  begin_name collections  end_name  begin_operator  end_operator  begin_name empty set  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_else  end_if  end_else  end_if  end_else  end_if  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name modelelement  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block 
begin_comment p a helper method to make link get contents object as efficient as possible p p this is called passing in a collection to place the result rather than creating a new instance of a collection to return p param results a collection of model elements to which the contents are to be added param modelelement the model element to get the contents from end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name get contents  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name model element  end_name  end_argument  end_argument_list  end_name  end_type  begin_name results  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name modelelement  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name modelelement  end_name  begin_operator  end_operator  begin_name uml package  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get contents  end_name  begin_argument_list  begin_argument  begin_expr  begin_name results  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name uml package  end_name  begin_operator  end_operator  begin_name modelelement  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name modelelement  end_name  begin_operator  end_operator  begin_name namespace  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get contents  end_name  begin_argument_list  begin_argument  begin_expr  begin_name results  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name namespace  end_name  begin_operator  end_operator  begin_name modelelement  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name modelelement  end_name  begin_operator  end_operator  begin_name instance  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get contents  end_name  begin_argument_list  begin_argument  begin_expr  begin_name results  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name instance  end_name  begin_operator  end_operator  begin_name modelelement  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name modelelement  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  end_else  end_if  end_else  end_if  end_else  end_if  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name modelelement  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block 
begin_comment get the contents of a package p for a package pre 1 the operation contents results in a set containing the model elements owned by or imported by the package contents set model element contents self owned element union self imported element pre for a subsystem subtype of package pre 2 the operation contents results in a set containing the model elements owned by or imported by the subsystem contents set model element contents self owned element union self imported element pre param pkg package to get contents of return all owned plus imported elements end_comment begin_type  begin_specifier  end_specifier  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name model element  end_name  end_argument  end_argument_list  end_name  end_type  begin_name get contents  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name uml package  end_name  end_type  begin_name pkg  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name model element  end_name  end_argument  end_argument_list  end_name  end_type  begin_name results  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name model element  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name element import  end_name  end_argument  end_argument_list  end_name  end_type  begin_name c  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name pkg  end_name  begin_operator  end_operator  begin_name get element import  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name element import  end_name  end_type  begin_name ei  end_name  begin_range  begin_expr  begin_name c  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name results  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name ei  end_name  begin_operator  end_operator  begin_name get imported element  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name results  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get contents  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name namespace  end_name  begin_operator  end_operator  begin_name pkg  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name results  end_name  end_expr  end_return  end_block 
begin_comment adds the contents of a package to the given collection same as link get contents uml package but adding to results to an existing collection instead of returning a new collection end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name get contents  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name model element  end_name  end_argument  end_argument_list  end_name  end_type  begin_name results  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name uml package  end_name  end_type  begin_name pkg  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name element import  end_name  end_argument  end_argument_list  end_name  end_type  begin_name c  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name pkg  end_name  begin_operator  end_operator  begin_name get element import  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name element import  end_name  end_type  begin_name ei  end_name  begin_range  begin_expr  begin_name c  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name results  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name ei  end_name  begin_operator  end_operator  begin_name get imported element  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name get contents  end_name  begin_argument_list  begin_argument  begin_expr  begin_name results  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name namespace  end_name  begin_operator  end_operator  begin_name pkg  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment get the contents of a namespace which includes the contents of all owning namespaces p for a namespace pre 1 the operation contents results in a set containing all model elements contained by the namespace contents set model element contents self owned element union self namespace contents pre param namespace namespace to get contents of return contents of namespace and all containing namespaces end_comment begin_type  begin_specifier  end_specifier  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name model element  end_name  end_argument  end_argument_list  end_name  end_type  begin_name get contents  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name namespace  end_name  end_type  begin_name namespace  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name model element  end_name  end_argument  end_argument_list  end_name  end_type  begin_name results  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name model element  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name results  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name namespace  end_name  begin_operator  end_operator  begin_name get owned element  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name namespace  end_name  end_type  begin_name owner  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name namespace  end_name  begin_operator  end_operator  begin_name get namespace  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name owner  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name results  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get contents  end_name  begin_argument_list  begin_argument  begin_expr  begin_name owner  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment todo should we handle access and import here  end_comment  begin_return  begin_expr  begin_name results  end_name  end_expr  end_return  end_block 
begin_comment adds the contents of a namespace to the given collection same as link get contents namespace but adding to results to an existing collection instead of returning a new collection end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name get contents  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name model element  end_name  end_argument  end_argument_list  end_name  end_type  begin_name results  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name namespace  end_name  end_type  begin_name namespace  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name results  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name namespace  end_name  begin_operator  end_operator  begin_name get owned element  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name namespace  end_name  end_type  begin_name owner  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name namespace  end_name  begin_operator  end_operator  begin_name get namespace  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name owner  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get contents  end_name  begin_argument_list  begin_argument  begin_expr  begin_name results  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name owner  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment todo should we handle access and import  end_comment  end_block 
begin_comment todo should we handle access and import end_commentbegin_comment return the contents of an instance for a instance pre 5 the operation contents results in a set containing all model elements contained by the instance contents set model element contents self owned instance union self owned link pre param instance the instance return a collection containing all owned instances and links end_comment begin_type  begin_specifier  end_specifier  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name model element  end_name  end_argument  end_argument_list  end_name  end_type  begin_name get contents  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name instance  end_name  end_type  begin_name instance  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name model element  end_name  end_argument  end_argument_list  end_name  end_type  begin_name results  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name model element  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name results  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name instance  end_name  begin_operator  end_operator  begin_name get owned instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name results  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name instance  end_name  begin_operator  end_operator  begin_name get owned link  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name results  end_name  end_expr  end_return  end_block 
begin_comment adds the contents of an instance to the given collection same as link get contents instance but adding to results to an existing collection instead of returning a new collection end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name get contents  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name model element  end_name  end_argument  end_argument_list  end_name  end_type  begin_name results  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name instance  end_name  end_type  begin_name instance  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name results  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name instance  end_name  begin_operator  end_operator  begin_name get owned instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name results  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name instance  end_name  begin_operator  end_operator  begin_name get owned link  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name model element  end_name  end_argument  end_argument_list  end_name  end_type  begin_name get all imported elements  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name pack  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name pack  end_name  begin_operator  end_operator  begin_name namespace  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name collections  end_name  begin_operator  end_operator  begin_name empty list  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name model element  end_name  end_argument  end_argument_list  end_name  end_type  begin_name ret  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name model element  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get all imported elements  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ret  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name pack  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name ret  end_name  end_expr  end_return  end_block 
begin_comment p a helper method to make link get all imported elements object as efficient as possible p p this is called passing in a collection to place the result rather than creating a new instance of a collection to return p param results a collection of modelelements to which the imported elements are to be added param pack the package to get the imported elements from end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name get all imported elements  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name model element  end_name  end_argument  end_argument_list  end_name  end_type  begin_name results  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name pack  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name pack  end_name  begin_operator  end_operator  begin_name namespace  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name namespace  end_name  end_type  begin_name ns  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name namespace  end_name  begin_operator  end_operator  begin_name pack  end_name  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_comment todo this is not according the contract for this function but it is used in several places and i mvw presume that we need this generally this part 1 is about drawing an import permission between packages the part 2 below is about model management element import  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name dependency  end_name  end_argument  end_argument_list  end_name  end_type  begin_name deps  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ns  end_name  begin_operator  end_operator  begin_name get client dependency  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name dependency  end_name  end_type  begin_name dep  end_name  begin_range  begin_expr  begin_name deps  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_name dep  end_name  begin_operator  end_operator  begin_name permission  end_name  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get extension mechanisms helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name has stereotype  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dep  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name friend stereotype  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_for  begin_init  begin_decl  begin_type  begin_name model element  end_name  end_type  begin_name o  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name dep  end_name  begin_operator  end_operator  begin_name get supplier  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_name namespace  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name results  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name namespace  end_name  begin_operator  end_operator  begin_name o  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get owned element  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get extension mechanisms helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name has stereotype  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dep  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name import stereotype  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get extension mechanisms helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name has stereotype  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dep  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name access stereotype  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_for  begin_init  begin_decl  begin_type  begin_name model element  end_name  end_type  begin_name o  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name dep  end_name  begin_operator  end_operator  begin_name get supplier  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_name namespace  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name results  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name core helper mdr impl  end_name  begin_operator  end_operator  begin_name get all visible elements  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name namespace  end_name  begin_operator  end_operator  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  end_block  end_then  end_if  end_else  end_if  end_block  end_then  end_if  end_block  end_for  begin_comment todo this is the 2 nd part of this method  end_comment  begin_if  begin_condition  begin_expr  begin_name ns  end_name  begin_operator  end_operator  begin_name uml package  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name results  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get imported elements  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ns  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name invalid object exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name invalid element exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  end_block 
 begin_type  begin_specifier  end_specifier  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name model element  end_name  end_argument  end_argument_list  end_name  end_type  begin_name get all contents  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name pack  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo is there anyway we can determine this size at runtime  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name set  end_name  begin_argument_list  begin_argument  begin_name model element  end_name  end_argument  end_argument_list  end_name  end_type  begin_name results  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name hash set  end_name  begin_argument_list  begin_argument  begin_name model element  end_name  end_argument  end_argument_list  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name set  end_name  begin_argument_list  begin_argument  begin_name model element  end_name  end_argument  end_argument_list  end_name  end_type  begin_name dup check  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name hash set  end_name  begin_argument_list  begin_argument  begin_name model element  end_name  end_argument  end_argument_list  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get all contents  end_name  begin_argument_list  begin_argument  begin_expr  begin_name results  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name model element  end_name  begin_operator  end_operator  begin_name pack  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name dup check  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name results  end_name  end_expr  end_return  end_block 
begin_comment p a helper method to make link get all contents object as efficient as possible this is called recursively p p param results a collection that will be populated with model elements param pack the namespace to get the contents from param dup check a collection of model elements that have already been checked on a previous recursive call checking this saves duplicating effort on already processed elements end_comment begin_type  begin_name void  end_name  end_type  begin_name get all contents  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name model element  end_name  end_argument  end_argument_list  end_name  end_type  begin_name results  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name model element  end_name  end_type  begin_name pack  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name model element  end_name  end_argument  end_argument_list  end_name  end_type  begin_name dup check  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name pack  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name dup check  end_name  begin_operator  end_operator  begin_name contains  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name pack  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name dup check  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name pack  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_try  begin_block  begin_comment for a namespace pre 2 the operation all contents results in a set containing all model elements contained by the namespace all contents set model element all contents self contents where contents self owned element union self namespace contents pre p  end_comment  begin_if  begin_condition  begin_expr  begin_name pack  end_name  begin_operator  end_operator  begin_name namespace  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get contents  end_name  begin_argument_list  begin_argument  begin_expr  begin_name results  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name pack  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment for a classifier pre 10 the operation all contents returns a set containing all model elements contained in the classifier together with the contents inherited from its parents all contents set model element all contents self contents union self parent all contents select e e element ownership visibility public or e element ownership visibility protected where parent is defined for generalizable element as 1 the operation parent returns a set containing all direct parents parent set generalizable element parent self generalization parent pre p  end_comment  begin_comment for a package pre 3 the operation all contents results in a set containing the model elements owned by or imported by the package or one of its ancestors all contents set model element all contents self contents union self parent all contents select e e element ownership visibility public or e element ownership visibility protected where the required operations are defined as 1 the operation contents results in a set containing the model elements owned by or imported by the package contents set model element contents self owned element union self imported element 2 the operation all imported elements results in a set containing the model elements imported by the package or one of its parents all imported elements set model element all imported elements self imported element union self parent ocl as type package all imported elements select re re element import visibility public or re element import visibility protected pre  end_comment  begin_if  begin_condition  begin_expr  begin_name pack  end_name  begin_operator  end_operator  begin_name classifier  end_name  begin_operator  end_operator  begin_name pack  end_name  begin_operator  end_operator  begin_name uml package  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name generalizable element  end_name  end_argument  end_argument_list  end_name  end_type  begin_name parents  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name core helper mdr impl  end_name  begin_operator  end_operator  begin_name get parents  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name generalizable element  end_name  begin_operator  end_operator  begin_name pack  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo try reusing the same set on every recursion  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name set  end_name  begin_argument_list  begin_argument  begin_name model element  end_name  end_argument  end_argument_list  end_name  end_type  begin_name all contents  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name hash set  end_name  begin_argument_list  begin_argument  begin_name model element  end_name  end_argument  end_argument_list  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name generalizable element  end_name  end_type  begin_name parent  end_name  begin_range  begin_expr  begin_name parents  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get all contents  end_name  begin_argument_list  begin_argument  begin_expr  begin_name all contents  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name parent  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name dup check  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_if  begin_condition  begin_expr  begin_name pack  end_name  begin_operator  end_operator  begin_name uml package  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get all imported elements  end_name  begin_argument_list  begin_argument  begin_expr  begin_name all contents  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name pack  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name generalizable element  end_name  end_type  begin_name parent  end_name  begin_range  begin_expr  begin_name parents  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get all imported elements  end_name  begin_argument_list  begin_argument  begin_expr  begin_name all contents  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name parent  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  end_block  end_then  end_if  begin_for  begin_init  begin_decl  begin_type  begin_name model element  end_name  end_type  begin_name element  end_name  begin_range  begin_expr  begin_name all contents  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name visibility kind enum  end_name  begin_operator  end_operator  begin_name vk public  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name element  end_name  begin_operator  end_operator  begin_name get visibility  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name visibility kind enum  end_name  begin_operator  end_operator  begin_name vk protected  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name element  end_name  begin_operator  end_operator  begin_name get visibility  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name results  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  end_block  end_then  end_if  begin_comment for a collaboration pre 1 the operation all contents results in the set of all model elements contained in the collaboration together with those contained in the parents except those that have been specialized all contents set model element all contents self contents union self parent all contents reject e self contents name include e name parent here is the generalizable element definition pre  end_comment  begin_if  begin_condition  begin_expr  begin_name pack  end_name  begin_operator  end_operator  begin_name collaboration  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment todo not implemented  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name pack  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name invalid object exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name invalid element exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  end_block 
begin_comment todo get all possible subvertices and get all sub states are duplicates tfm end_comment begin_type  begin_specifier  end_specifier  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name state vertex  end_name  end_argument  end_argument_list  end_name  end_type  begin_name get all possible subvertices  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o state  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name state vertex  end_name  end_argument  end_argument_list  end_name  end_type  begin_name result  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name state vertex  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_if  begin_condition  begin_expr  begin_name o state  end_name  begin_operator  end_operator  begin_name composite state  end_name  end_expr  end_condition  begin_then  begin_block  begin_for  begin_init  begin_decl  begin_type  begin_name state vertex  end_name  end_type  begin_name vertex  end_name  begin_range  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name composite state  end_name  begin_operator  end_operator  begin_name o state  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get subvertex  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name vertex  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get all possible subvertices  end_name  begin_argument_list  begin_argument  begin_expr  begin_name vertex  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  end_block  end_then  end_if  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name invalid object exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name invalid element exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  begin_return  begin_expr  begin_name result  end_name  end_expr  end_return  end_block 
begin_comment todo get all possible subvertices and get all sub states are duplicates tfm end_comment begin_type  begin_specifier  end_specifier  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name state vertex  end_name  end_argument  end_argument_list  end_name  end_type  begin_name get all sub states  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name comp state  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_try  begin_block  begin_if  begin_condition  begin_expr  begin_name comp state  end_name  begin_operator  end_operator  begin_name composite state  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name state vertex  end_name  end_argument  end_argument_list  end_name  end_type  begin_name result  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name state vertex  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name sub state  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get subvertices  end_name  begin_argument_list  begin_argument  begin_expr  begin_name comp state  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_name sub state  end_name  begin_operator  end_operator  begin_name composite state  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get all sub states  end_name  begin_argument_list  begin_argument  begin_expr  begin_name sub state  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name state vertex  end_name  begin_operator  end_operator  begin_name sub state  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_return  begin_expr  begin_name result  end_name  end_expr  end_return  end_block  end_then  end_if  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name invalid object exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name invalid element exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block 
begin_comment delete a model element implements cascading delete to make sure model is still valid after element has been deleted p the actual deletion is delegated to delete methods in the rest of the factories for example a method delete class exists on core helper delete methods as delete class should only do those extra actions that are necessary for the deletion of the modelelement itself i e delete class should only take care of things specific to uml class p the delete methods in the uml factories should not be called directly throughout the code calls should always refer to this method and never call the delete xxx method on xxx factory directly the reason that it is possible to call the delete xxx methods directly is a pure implementation detail p the implementation of this method uses a quite complicated if then else tree this is done to provide optimal performance and full compliance to the uml 1 4 metamodel the last remark refers to the fact that the uml 1 4 model uses multiple inheritance in several places this has to be taken into account p todo the requirements of the metamodel could probably be better determined by reflection on the metamodel then each association that a deleted element participates in could be reviewed to make sure that it meets the requirements and if not be deleted tfm p extensions and its children are not taken into account here they do not require extra cleanup actions not in the form of a call to the remove method as is normal for all children of m base and not in the form of other behaviour we want to implement via this operation param elem the element to be deleted see org argouml model uml factory delete java lang object end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name delete  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name elem  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_comment todo hold lock for entire recursive traversal  end_comment  begin_synchronized  begin_expr  begin_name lock  end_name  end_expr  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name elements to be deleted  end_name  begin_operator  end_operator  begin_name contains  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name top  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name top  end_name  begin_operator  end_operator  begin_name elem  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name elements to be deleted  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name ref object  end_name  begin_operator  end_operator  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_synchronized  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name is debug enabled  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name top  end_name  begin_operator  end_operator  begin_name elem  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment begin a transaction we ll do a bunch of reads first  end_comment  begin_comment to collect a set of elements to delete then delete them all  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get repository  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name begin trans  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_try  begin_block  begin_comment todo encountering a deleted object during  end_comment  begin_comment any part of this traversal will  end_comment  begin_comment abort the rest of the traversal  end_comment  begin_comment we probably should do the whole traversal  end_comment  begin_comment in a single mdr transaction  end_comment  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name element  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get core  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name model element  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get core  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete model element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment no else here to make sure classifier with  end_comment  begin_comment its double inheritance goes ok  end_comment  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name generalizable element  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name generalizable element  end_name  end_type  begin_name ge  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name generalizable element  end_name  begin_operator  end_operator  begin_name elem  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get core  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete generalizable element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ge  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name stereotype  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name stereotype  end_name  end_type  begin_name s  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name stereotype  end_name  begin_operator  end_operator  begin_name elem  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get extension mechanisms  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete stereotype  end_name  begin_argument_list  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  begin_comment no else here to make sure association class goes ok  end_comment  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name parameter  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get core  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete parameter  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name constraint  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get core  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete constraint  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name relationship  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name delete relationship  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name relationship  end_name  begin_operator  end_operator  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name association end  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get core  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete association end  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name association end role  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get collaborations  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete association end role  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name comment  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get core  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete comment  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name action  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name delete action  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name attribute link  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get common behavior  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete attribute link  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name instance  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name delete instance  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name instance  end_name  begin_operator  end_operator  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name stimulus  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get common behavior  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete stimulus  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  begin_comment no else to handle multiple inheritance of linkobject  end_comment  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name link  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get common behavior  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete link  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name link end  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get common behavior  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete link end  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name interaction  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get collaborations  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete interaction  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name interaction instance set  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get collaborations  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete interaction instance set  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name collaboration instance set  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get collaborations  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete collaboration instance set  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name message  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get collaborations  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete message  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name extension point  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get use cases  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete extension point  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name state vertex  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name delete state vertex  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name state vertex  end_name  begin_operator  end_operator  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name state machine  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get state machines  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete state machine  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name activity graph  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get activity graphs  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete activity graph  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name transition  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get state machines  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete transition  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name guard  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get state machines  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete guard  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name tagged value  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get extension mechanisms  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete tagged value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name tag definition  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get extension mechanisms  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete tag definition  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  begin_comment else if elem instanceof m event  end_comment  begin_comment   end_comment  begin_comment   end_comment  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name presentation element  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get core  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete presentation element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name template parameter  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get core  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete template parameter  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name template argument  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get core  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete template argument  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name element import  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get model management  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete element import  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name element residence  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get core  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete element residence  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name partition  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get activity graphs  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete partition  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name feature  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name delete feature  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name feature  end_name  begin_operator  end_operator  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name namespace  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name delete namespace  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name namespace  end_name  begin_operator  end_operator  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name invalid object exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment if we get this with the repository locked it means our root  end_comment  begin_comment model element was already deleted nothing to do  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name invalid element exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment our wrapped version of the same error  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  begin_finally  begin_block  begin_comment end our transaction  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get repository  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name end trans  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_finally  end_try  begin_synchronized  begin_expr  begin_name lock  end_name  end_expr  begin_block  begin_comment elements which will be deleted when their container is deleted  end_comment  begin_comment don t get added to the list of elements to be deleted  end_comment  begin_comment but we still want to traverse them looking for other elements  end_comment  begin_comment to be deleted  end_comment  begin_try  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name container  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name ref object  end_name  begin_operator  end_operator  begin_name elem  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name ref immediate composite  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name container  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name elements to be deleted  end_name  begin_operator  end_operator  begin_name contains  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name container  end_name  end_expr  end_argument  end_argument_list  end_call  begin_comment there is a bug in the version of mdr 20050711 that  end_comment  begin_comment we use that causes it to fail to delete aggregate  end_comment  begin_comment elements which are single valued and where the  end_comment  begin_comment aggregate end is listed second in the association  end_comment  begin_comment defined in the metamodel for the uml 1 4 metamodel  end_comment  begin_comment this affects a state machine s top state vertex and  end_comment  begin_comment a transition s guard see issue 4948 5227 tfm  end_comment  begin_comment 20080713  end_comment  begin_operator  end_operator  begin_operator  end_operator  begin_name container  end_name  begin_operator  end_operator  begin_name state machine  end_name  begin_operator  end_operator  begin_name elem  end_name  begin_operator  end_operator  begin_name state vertex  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name container  end_name  begin_operator  end_operator  begin_name transition  end_name  begin_operator  end_operator  begin_name elem  end_name  begin_operator  end_operator  begin_name guard  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name elements in deletion order  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name ref object  end_name  begin_operator  end_operator  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name invalid object exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  end_try  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name top  end_name  end_expr  end_condition  begin_then  begin_block  begin_for  begin_init  begin_decl  begin_type  begin_name ref object  end_name  end_type  begin_name o  end_name  begin_range  begin_expr  begin_name elements in deletion order  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_comment todo this doesn t belong here but it s not a good time  end_comment  begin_comment to move it find someplace less obtrusive than this  end_comment  begin_comment inner loop tfm  end_comment  begin_if  begin_condition  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_name composite state  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment this enforces the following well formedness rule  end_comment  begin_comment p well formedness rule 4 12 3 1 composite state  end_comment  begin_comment 4 there have to be at least two composite  end_comment  begin_comment substates in a concurrent composite state p  end_comment  begin_comment if this is broken by deletion of substate then we  end_comment  begin_comment change the parent composite substate to be not  end_comment  begin_comment concurrent  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name composite state  end_name  end_type  begin_name deleted composite state  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name composite state  end_name  begin_operator  end_operator  begin_name o  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name composite state  end_name  end_type  begin_name containing composite state  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name deleted composite state  end_name  begin_operator  end_operator  begin_name get container  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name containing composite state  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name containing composite state  end_name  begin_operator  end_operator  begin_name is concurrent  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name containing composite state  end_name  begin_operator  end_operator  begin_name get subvertex  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name size  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name containing composite state  end_name  begin_operator  end_operator  begin_name set concurrent  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name invalid object exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  end_try  end_block  end_then  end_if  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name o  end_name  begin_operator  end_operator  begin_name ref delete  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name invalid object exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  end_try  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name elements to be deleted  end_name  begin_operator  end_operator  begin_name remove  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_name top  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name elements in deletion order  end_name  begin_operator  end_operator  begin_name clear  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name elements to be deleted  end_name  begin_operator  end_operator  begin_name is empty  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name elements to be deleted  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name elements to be deleted  end_name  begin_operator  end_operator  begin_name clear  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_synchronized  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name execute  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name dummy model command  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment delete a namespace param elem namespace to be deleted end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name delete namespace  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name namespace  end_name  end_type  begin_name elem  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get core  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete namespace  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name classifier  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get core  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete classifier  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name uml class  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get core  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete class  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name association class  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get core  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete association class  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name interface  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get core  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete interface  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name data type  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get core  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete data type  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name primitive  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get core  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete primitive  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name enumeration  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment todo add enumeration literal someplace  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name get core  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete enumeration  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name programming language data type  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get core  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete programming language data type  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_else  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get core  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete node  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name component  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get core  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete component  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name artifact  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get core  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete artifact  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name signal  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get common behavior  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete signal  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name exception  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get common behavior  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name classifier role  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get collaborations  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete classifier role  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name use case  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get use cases  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete use case  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name actor  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get use cases  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete actor  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name classifier in state  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get activity graphs  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete classifier in state  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name collaboration  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get collaborations  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete collaboration  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name uml package  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get model management  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete package  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name omg  end_name  begin_operator  end_operator  begin_name uml  end_name  begin_operator  end_operator  begin_name modelmanagement  end_name  begin_operator  end_operator  begin_name model  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get model management  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete model  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_name subsystem  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get model management  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name delete subsystem  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_block  end_then  end_if  end_else  end_if  end_else  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set base  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name extend  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name base  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name base  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name base  end_name  begin_operator  end_operator  begin_name use case  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name base  end_name  begin_operator  end_operator  begin_name get class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name extend  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name extend  end_name  begin_operator  end_operator  begin_name extend  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name extend  end_name  end_type  begin_name the extend  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name extend  end_name  begin_operator  end_operator  begin_name extend  end_name  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name base  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name the extend  end_name  begin_operator  end_operator  begin_name get base  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_for  begin_init  begin_decl  begin_type  begin_name extension point  end_name  end_type  begin_name point  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name the extend  end_name  begin_operator  end_operator  begin_name get extension point  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name remove extend  end_name  begin_argument_list  begin_argument  begin_expr  begin_name point  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name the extend  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_decl_stmt  begin_decl  begin_type  begin_name extension point  end_name  end_type  begin_name point  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name extension point  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model impl  end_name  begin_operator  end_operator  begin_name get use cases factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name build extension point  end_name  begin_argument_list  begin_argument  begin_expr  begin_name base  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name the extend  end_name  begin_operator  end_operator  begin_name set base  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name use case  end_name  begin_operator  end_operator  begin_name base  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add extension point  end_name  begin_argument_list  begin_argument  begin_expr  begin_name the extend  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name point  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name extend  end_name  begin_operator  end_operator  begin_name include  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment todo this can be simplified to just  end_comment  begin_comment include extend set base use case base  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name include  end_name  end_type  begin_name the include  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name include  end_name  begin_operator  end_operator  begin_name extend  end_name  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name base  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name the include  end_name  begin_operator  end_operator  begin_name get base  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  end_return  end_block  end_then  end_if  begin_comment todo this looks backwards left over from issue 2034  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name the include  end_name  begin_operator  end_operator  begin_name set addition  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name use case  end_name  begin_operator  end_operator  begin_name base  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_else  end_if  end_else  end_if  end_block 
begin_comment a near clone of this code works fine outside of argo uml but throws a null pointer exception during the transform when run within argo uml i think it s something to do with the class libraries being used but i can t figure out what so i ve done a simpler less efficient stepwise translation below in serial transform end_comment begin_type  begin_specifier  end_specifier  begin_name input source  end_name  end_type  begin_name chained transform  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name  begin_name string  end_name  begin_index  end_index  end_name  end_type  begin_name styles  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name input source  end_name  end_type  begin_name input  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name xmi exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name sax transformer factory  end_name  end_type  begin_name stf  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name sax transformer factory  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name transformer factory  end_name  begin_operator  end_operator  begin_name new instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo reconfigure exception handling to distinguish between errors  end_comment  begin_comment that are possible due to bad input data and those that represent  end_comment  begin_comment unexpected processing errors  end_comment  begin_try  begin_block  begin_comment set up reader to be first filter in chain  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name sax parser factory  end_name  end_type  begin_name spf  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name sax parser factory  end_name  begin_operator  end_operator  begin_name new instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name sax parser  end_name  end_type  begin_name parser  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name spf  end_name  begin_operator  end_operator  begin_name new sax parser  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name xml reader  end_name  end_type  begin_name last  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name parser  end_name  begin_operator  end_operator  begin_name get xml reader  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment create filter for each style sheet and chain to previous  end_comment  begin_comment filter reader  end_comment  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name  begin_name styles  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name xslt file name  end_name  begin_init  begin_expr  begin_name style path  end_name  begin_operator  end_operator  begin_name  begin_name styles  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name url  end_name  end_type  begin_name xslt url  end_name  begin_init  begin_expr  begin_call  begin_name get class  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get resource  end_name  begin_argument_list  begin_argument  begin_expr  begin_name xslt file name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name xslt url  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name io exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name xslt file name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name stream source  end_name  end_type  begin_name xslt stream source  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name stream source  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name xslt url  end_name  begin_operator  end_operator  begin_name open stream  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name xslt stream source  end_name  begin_operator  end_operator  begin_name set system id  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name xslt url  end_name  begin_operator  end_operator  begin_name to external form  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name xml filter  end_name  end_type  begin_name filter  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name stf  end_name  begin_operator  end_operator  begin_name new xml filter  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name xslt stream source  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name filter  end_name  begin_operator  end_operator  begin_name set parent  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name last  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name last  end_name  begin_operator  end_operator  begin_name filter  end_name  end_expr  end_expr_stmt  end_block  end_for  begin_decl_stmt  begin_decl  begin_type  begin_name sax source  end_name  end_type  begin_name transform source  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name sax source  end_name  begin_argument_list  begin_argument  begin_expr  begin_name last  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name input  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment create temporary file for output  end_comment  begin_comment todo we should be able to chain this directly to xmi reader  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name tmp file  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name create temp file  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name temp xmi file prefix  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name tmp file  end_name  begin_operator  end_operator  begin_name delete on exit  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name stream result  end_name  end_type  begin_name result  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name stream result  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name file output stream  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tmp file  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name transformer  end_name  end_type  begin_name transformer  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name stf  end_name  begin_operator  end_operator  begin_name new transformer  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name transformer  end_name  begin_operator  end_operator  begin_name transform  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name transform source  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name result  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name input source  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name file input stream  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tmp file  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name sax exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name xmi exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name parser configuration exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name xmi exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name io exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name xmi exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name transformer configuration exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name xmi exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name transformer exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name xmi exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  end_block 
begin_comment see org netbeans lib jmi xmi xmi context get reference java lang string java lang string end_comment begin_type  begin_specifier  end_specifier  begin_name ref object  end_name  end_type  begin_name get reference  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name doc id  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name xmi id  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ref object  end_name  end_type  begin_name ro  end_name  begin_init  begin_expr  begin_call  begin_name get reference int  end_name  begin_argument_list  begin_argument  begin_expr  begin_name doc id  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name xmi id  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name ro  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name id to object  end_name  begin_operator  end_operator  begin_name contains key  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name doc id  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name ro  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name get reference  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name doc id  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name xmi id  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name ro  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment todo distinguish between deferred resolution and things which  end_comment  begin_comment are unresolved at end of load and should be reported to user  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name doc id  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name xmi id  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment todo count report unresolved references  end_comment  begin_return  begin_expr  begin_name ro  end_name  end_expr  end_return  end_block 
begin_comment  end_commentbegin_comment begin andro mda code end_commentbegin_comment  end_commentbegin_comment convert a system id from an href which may be relative or otherwise in need of resolution to an absolute url copied from andro mda 3 1 by ludo rastaman see link org andromda repositories mdr mdr xmi reference resolver context see org netbeans lib jmi xmi xmi context to url java lang string end_comment begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name url  end_name  end_type  begin_name to url  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name system id  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name is debug enabled  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name system id  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment todo using just the last piece of the id leaves the potential for  end_comment  begin_comment name collisions if two linked files have the same name in different  end_comment  begin_comment directories  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name suffix  end_name  begin_init  begin_expr  begin_call  begin_name get suffix  end_name  begin_argument_list  begin_argument  begin_expr  begin_name system id  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment if the model url has a suffix of zip or jar get  end_comment  begin_comment the suffix without it and store it in the url map  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name exts  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name suffix with ext  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name suffix  end_name  begin_operator  end_operator  begin_name replace all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name exts  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name url  end_name  end_type  begin_name model url  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name url map  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name suffix with ext  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment several tries to construct a url that really exists  end_comment  begin_if  begin_condition  begin_expr  begin_name model url  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name public 2 system ids  end_name  begin_operator  end_operator  begin_name contains key  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name system id  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment if system id is public id previously mapped from a system id  end_comment  begin_comment try to use the system id  end_comment  begin_expr_stmt  begin_expr  begin_name model url  end_name  begin_operator  end_operator  begin_call  begin_name get valid url  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name public 2 system ids  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name system id  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name model url  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment if system id is a valid url simply use it  end_comment  begin_comment todo this causes a network connection attempt for profiles  end_comment  begin_expr_stmt  begin_expr  begin_name model url  end_name  begin_operator  end_operator  begin_call  begin_name get valid url  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name fixup url  end_name  begin_argument_list  begin_argument  begin_expr  begin_name system id  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name model url  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment try to find suffix in module list  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name model url as string  end_name  begin_init  begin_expr  begin_call  begin_name find module url  end_name  begin_argument_list  begin_argument  begin_expr  begin_name suffix  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name model url as string  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model url as string  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name model url  end_name  begin_operator  end_operator  begin_call  begin_name get valid url  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model url as string  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name model url  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment search the classpath  end_comment  begin_expr_stmt  begin_expr  begin_name model url  end_name  begin_operator  end_operator  begin_call  begin_name find model url on classpath  end_name  begin_argument_list  begin_argument  begin_expr  begin_name system id  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name model url  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment give up and let superclass deal with it  end_comment  begin_expr_stmt  begin_expr  begin_name model url  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name to url  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name system id  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  begin_comment if we ve found the module model log it  end_comment  begin_comment and place it in the map so we don t have to  end_comment  begin_comment find it if we need it again  end_comment  begin_if  begin_condition  begin_expr  begin_name model url  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name info  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name model url  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name url map  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name suffix with ext  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name model url  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name pending profiles  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name system id  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name model url  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name relative uri  end_name  begin_init  begin_expr  begin_name system id  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_if  begin_condition  begin_expr  begin_name base uri  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name relative uri  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name base uri  end_name  begin_operator  end_operator  begin_name relativize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model url  end_name  begin_operator  end_operator  begin_name to uri  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to string  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name is debug enabled  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name system id  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name model url  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name relative uri  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name relative uri  end_name  begin_operator  end_operator  begin_name system id  end_name  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name uri syntax exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name system id  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name relative uri  end_name  begin_operator  end_operator  begin_name system id  end_name  end_expr  end_expr_stmt  end_block  end_catch  end_try  begin_comment todo check whether this is really needed i think it s  end_comment  begin_comment left over from an incomplete understanding of the magic draw  end_comment  begin_comment composition error problem tfm  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name reverse url map  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model url  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name relative uri  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name reverse url map  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name system id  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name relative uri  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_comment todo we failed to resolve url signal error  end_comment  end_block  end_else  end_if  end_block  end_then  end_if  begin_return  begin_expr  begin_name model url  end_name  end_expr  end_return  end_block 
begin_comment todo copied from uml diagram renderer find the figs in the given layer that should be the source and destination and attach these to either end of the fig edge param layer the layer to look for the fig nodes param new edge the edge to attach end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set ports  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name layer  end_name  end_type  begin_name layer  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name fig edge  end_name  end_type  begin_name new edge  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name new edge  end_name  begin_operator  end_operator  begin_name get owner  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name new edge  end_name  begin_operator  end_operator  begin_name get source port fig  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name t source  end_name  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name t source  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get uml helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get source  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name fig node  end_name  end_type  begin_name source node  end_name  begin_init  begin_expr  begin_call  begin_name get node presentation for  end_name  begin_argument_list  begin_argument  begin_expr  begin_name layer  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name t source  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_assert  begin_expr  begin_operator  end_operator  begin_name source node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name t source  end_name  end_expr  end_assert  begin_expr_stmt  begin_expr  begin_call  begin_name set source port  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new edge  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name source node  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name new edge  end_name  begin_operator  end_operator  begin_name get dest port fig  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name t dest  end_name  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name t dest  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get uml helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get destination  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name new edge  end_name  begin_operator  end_operator  begin_name get owner  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set dest port  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new edge  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get node presentation for  end_name  begin_argument_list  begin_argument  begin_expr  begin_name layer  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name t dest  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name new edge  end_name  begin_operator  end_operator  begin_name get source port fig  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name new edge  end_name  begin_operator  end_operator  begin_name get dest port fig  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal state exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name new edge  end_name  begin_operator  end_operator  begin_name get class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  end_block 
begin_comment todo copied from uml diagram renderer get the fig node from the given layer that represents the given model element the fig node portion of an association class is returned in preference to the fig edge portion if no fig node is found then a f ig edge is searched for and the fig node that acts as its edge port is returned param lay the layer containing the fig param model element the model element to find presentation for return the fig node presentation of the model element end_comment begin_type  begin_specifier  end_specifier  begin_name fig node  end_name  end_type  begin_name get node presentation for  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name layer  end_name  end_type  begin_name lay  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_assert  begin_expr  begin_name model element  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_assert  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name fig  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name lay  end_name  begin_operator  end_operator  begin_name get contents no edges  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_name fig  end_name  begin_operator  end_operator  begin_name fig node  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model element  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name fig node  end_name  begin_operator  end_operator  begin_name fig  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get owner  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name fig node  end_name  begin_operator  end_operator  begin_name fig  end_name  begin_operator  end_operator  end_expr  end_return  end_block  end_then  end_if  end_block  end_for  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name fig  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name lay  end_name  begin_operator  end_operator  begin_name get contents edges only  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_name fig  end_name  begin_operator  end_operator  begin_name fig edge model element  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model element  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name fig edge model element  end_name  begin_operator  end_operator  begin_name fig  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get owner  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name fig edge model element  end_name  begin_operator  end_operator  begin_name fig  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get edge port  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_for  begin_return  begin_expr  end_expr  end_return  end_block 
begin_comment set a uml property by property name param handle the element to which a property must be set param value the new property value param property name the property name end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name value  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name property name  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name getter setter  end_name  end_type  begin_name bgs  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name getter setter by property name  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name bgs  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name bgs  end_name  begin_operator  end_operator  begin_name set  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name handle  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name handle  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name property name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name getter setter  end_name  end_type  begin_name bgs  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name getter setter by property name  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name bgs  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name bgs  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name handle  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name type  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is full build only  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name property name  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name getter setter  end_name  end_type  begin_name bgs  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name getter setter by property name  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name bgs  end_name  begin_operator  end_operator  begin_name list getter setter  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name list getter setter  end_name  begin_operator  end_operator  begin_name bgs  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name is full build only  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is valid element  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name property name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_argument  end_argument_list  end_name  end_type  begin_name types  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name getter setter  end_name  end_type  begin_name bgs  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name getter setter by property name  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name bgs  end_name  begin_operator  end_operator  begin_name list getter setter  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name list getter setter  end_name  begin_operator  end_operator  begin_name bgs  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name is valid element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name types  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is abstract  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name value  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set abstract  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name boolean  end_name  begin_operator  end_operator  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is leaf  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name value  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set leaf  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name boolean  end_name  begin_operator  end_operator  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is root  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name value  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set root  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name boolean  end_name  begin_operator  end_operator  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is active  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name value  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set active  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name boolean  end_name  begin_operator  end_operator  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is static  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name value  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set static  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name boolean  end_name  begin_operator  end_operator  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name x  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  end_block 
begin_comment not needed end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is valid element  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_argument  end_argument_list  end_name  end_type  begin_name types  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name get options  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name types  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment have we handled uml 2 here end_comment begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is static  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name value  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set static  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name boolean  end_name  begin_operator  end_operator  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is query  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name value  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set query  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name boolean  end_name  begin_operator  end_operator  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is navigable  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name value  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set navigable  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name boolean  end_name  begin_operator  end_operator  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is asynchronous  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name value  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get common behavior helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set asynchronous  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name boolean  end_name  begin_operator  end_operator  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is synch  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name value  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get activity graphs helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set synch  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name boolean  end_name  begin_operator  end_operator  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get ordering  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get ordering kind  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get ordered  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name value  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name boolean  end_name  begin_operator  end_operator  begin_name value  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set ordering  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get ordering kind  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get ordered  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set ordering  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get ordering kind  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get unordered  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name tv  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get tagged value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name tag name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name tv  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name tag  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get value of tag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tv  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tag  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_return  end_block  end_then  end_if  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name value  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name tagged value  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get tagged value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name tag name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name tagged value  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name tagged value  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get extension mechanisms factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name build tagged value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tag name  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get extension mechanisms helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add tagged value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name tagged value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name boolean  end_name  begin_operator  end_operator  begin_name value  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get common behavior helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tagged value  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get common behavior helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tagged value  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name kind  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get visibility  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name kind  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name kind  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get visibility kind  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get public  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name public  end_name  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name kind  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get visibility kind  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get package  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name package  end_name  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name kind  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get visibility kind  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get protected  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name protected  end_name  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name kind  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get visibility kind  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get private  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name private  end_name  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_return  begin_expr  begin_name public  end_name  end_expr  end_return  end_block  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name value  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name kind  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name public  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name kind  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get visibility kind  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get public  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name protected  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name kind  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get visibility kind  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get protected  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name package  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name kind  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get visibility kind  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get package  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name kind  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get visibility kind  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get private  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_else  end_if  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set visibility  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name kind  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name kind  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get aggregation  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name kind  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name kind  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get aggregation kind  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get none  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name none  end_name  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name kind  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get aggregation kind  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get aggregate  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name aggregate  end_name  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name kind  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get aggregation kind  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get composite  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name composite  end_name  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_return  begin_expr  begin_name none  end_name  end_expr  end_return  end_block  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name value  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name kind  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name aggregate  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name kind  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get aggregation kind  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get aggregate  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name composite  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name kind  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get aggregation kind  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get composite  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name kind  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get aggregation kind  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get none  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set aggregation  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name kind  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name kind  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get kind  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name kind  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name kind  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get direction kind  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get in parameter  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name in  end_name  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name kind  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get direction kind  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get in out parameter  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name inout  end_name  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name kind  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get direction kind  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get out parameter  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name out  end_name  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_return  begin_expr  begin_name return  end_name  end_expr  end_return  end_block  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name value  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name kind  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name value  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name kind  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name in  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name kind  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get direction kind  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get in parameter  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name out  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name kind  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get direction kind  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get out parameter  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name inout  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name kind  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get direction kind  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get in out parameter  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name return  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name kind  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get direction kind  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get return parameter  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set kind  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name kind  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name kind  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get concurrency  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name kind  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name kind  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get concurrency kind  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get sequential  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name sequential  end_name  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name kind  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get concurrency kind  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get guarded  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name guarded  end_name  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name kind  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get concurrency kind  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get concurrent  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name concurrent  end_name  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_return  begin_expr  begin_name sequential  end_name  end_expr  end_return  end_block  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name value  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name kind  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name sequential  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name kind  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get concurrency kind  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get sequential  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name guarded  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name kind  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get concurrency kind  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get guarded  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name kind  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get concurrency kind  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get concurrent  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set concurrency  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name kind  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name kind  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get changeability  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name kind  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name kind  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get changeable kind  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get add only  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name addonly  end_name  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name kind  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get changeable kind  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get changeable  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name changeable  end_name  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name kind  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get changeable kind  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get frozen  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name frozen  end_name  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_return  begin_expr  begin_name changeable  end_name  end_expr  end_return  end_block  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name value  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name changeable  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set read only  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name addonly  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set changeability  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get changeable kind  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get add only  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set read only  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_else  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name x  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  end_block 
begin_comment not needed end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is valid element  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_argument  end_argument_list  end_name  end_type  begin_name types  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name get options  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name types  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name x  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  end_block 
begin_comment not needed end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is valid element  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_argument  end_argument_list  end_name  end_type  begin_name types  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name get options  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name types  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name x  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  end_block 
begin_comment not needed end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is valid element  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_argument  end_argument_list  end_name  end_type  begin_name types  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name get options  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name types  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name x  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  end_block 
begin_comment not needed end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is valid element  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_argument  end_argument_list  end_name  end_type  begin_name types  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name get options  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name types  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name x  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  end_block 
begin_comment not needed end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is valid element  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_argument  end_argument_list  end_name  end_type  begin_name types  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name get options  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name types  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name x  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  end_block 
begin_comment not needed end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is valid element  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_argument  end_argument_list  end_name  end_type  begin_name types  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name get options  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name types  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name x  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  end_block 
begin_comment not needed end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is valid element  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_argument  end_argument_list  end_name  end_type  begin_name types  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name get options  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name types  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name x  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  end_block 
begin_comment not needed end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is valid element  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_argument  end_argument_list  end_name  end_type  begin_name types  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name get options  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name types  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name x  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  end_block 
begin_comment not needed end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is valid element  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_argument  end_argument_list  end_name  end_type  begin_name types  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name get options  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name types  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name x  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  end_block 
begin_comment not needed end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is valid element  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_argument  end_argument_list  end_name  end_type  begin_name types  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name get options  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name types  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name x  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  end_block 
begin_comment not needed end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is valid element  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_argument  end_argument_list  end_name  end_type  begin_name types  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name get options  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name types  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name x  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  end_block 
begin_comment not needed end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is valid element  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_argument  end_argument_list  end_name  end_type  begin_name types  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name get options  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name types  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name x  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  end_block 
begin_comment not needed end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is valid element  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_argument  end_argument_list  end_name  end_type  begin_name types  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name get options  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name types  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name x  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  end_block 
begin_comment not needed end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is valid element  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_argument  end_argument_list  end_name  end_type  begin_name types  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name get options  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name types  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name x  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  end_block 
begin_comment not needed end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is valid element  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_argument  end_argument_list  end_name  end_type  begin_name types  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name get options  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name types  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name x  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  end_block 
begin_comment not needed end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is valid element  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_argument  end_argument_list  end_name  end_type  begin_name types  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name get options  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name types  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name x  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  end_block 
begin_comment not needed end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is valid element  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_argument  end_argument_list  end_name  end_type  begin_name types  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name get options  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name types  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is full build only  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name x  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  end_block 
begin_comment not needed end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is valid element  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_argument  end_argument_list  end_name  end_type  begin_name types  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name get options  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name types  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name list  end_name  end_type  begin_name get choices  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name list  end_name  end_type  begin_name list  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name array list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo correctly implement next function in the model subsystem for issue 1942  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name list  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get model management helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get all possible imports  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get target  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name list  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is full build only  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name x  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  end_block 
begin_comment not needed end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is valid element  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_argument  end_argument_list  end_name  end_type  begin_name types  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name get options  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name types  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name list  end_name  end_type  begin_name get choices  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name list  end_name  end_type  begin_name list  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name array list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name parent  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get state machines helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name find namespace for event  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get target  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name list  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get model management helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get all model elements of kind  end_name  begin_argument_list  begin_argument  begin_expr  begin_name parent  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get event  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name list  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name x  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  end_block 
begin_comment not needed end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is valid element  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_argument  end_argument_list  end_name  end_type  begin_name types  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name get options  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name types  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name list  end_name  end_type  begin_name get choices  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name list  end_name  end_type  begin_name list  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name array list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo correctly implement next function in the model subsystem for issue 1942  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name project manager  end_name  begin_operator  end_operator  begin_name get manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get current project  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get model  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name list  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get model management helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get all model elements of kind  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get reception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name list  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name x  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  end_block 
begin_comment not needed end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is valid element  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_argument  end_argument_list  end_name  end_type  begin_name types  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name get options  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name types  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name x  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  end_block 
begin_comment not needed end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is full build only  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is valid element  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_argument  end_argument_list  end_name  end_type  begin_name types  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name get options  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name types  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name list  end_name  end_type  begin_name get choices  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name list  end_name  end_type  begin_name list  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name array list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo correctly implement next function in the model subsystem for issue 1942  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name project manager  end_name  begin_operator  end_operator  begin_name get manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get current project  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get model  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name list  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get model management helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get all model elements of kind  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get uml class  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name list  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get model management helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get all model elements of kind  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get interface  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name list  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get model management helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get all model elements of kind  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get data type  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name list  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get model management helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get all model elements of kind  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get data value  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name list  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get model management helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get all model elements of kind  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get association  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name list  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get model management helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get all model elements of kind  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get dependency  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name list  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get model management helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get all model elements of kind  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get constraint  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name list  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get model management helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get all model elements of kind  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get signal  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name list  end_name  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get body  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name value  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name info  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name model element  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set body  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name x  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  end_block 
begin_comment not needed end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is valid element  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_argument  end_argument_list  end_name  end_type  begin_name types  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name get options  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name types  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name x  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  end_block 
begin_comment not needed end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is valid element  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_argument  end_argument_list  end_name  end_type  begin_name types  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name get options  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name types  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name x  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  end_block 
begin_comment not needed end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is valid element  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_argument  end_argument_list  end_name  end_type  begin_name types  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name get options  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name types  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name x  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  end_block 
begin_comment not needed end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is valid element  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_argument  end_argument_list  end_name  end_type  begin_name types  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name get options  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name types  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name x  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  end_block 
begin_comment not needed end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is valid element  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_argument  end_argument_list  end_name  end_type  begin_name types  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name get options  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name types  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name list  end_name  end_type  begin_name get choices  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name list  end_name  end_type  begin_name list  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name array list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment get all classifiers in our model  end_comment  begin_comment todo we need the property panels to have some reference to  end_comment  begin_comment the project they belong to instead of using deprecated  end_comment  begin_comment functionality  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name project  end_name  end_type  begin_name p  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name project manager  end_name  begin_operator  end_operator  begin_name get manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get current project  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name p  end_name  begin_operator  end_operator  begin_name get root  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name list  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get model management helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get all model elements of kind with model  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get classifier  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name profile configuration  end_name  end_type  begin_name profile configuration  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name p  end_name  begin_operator  end_operator  begin_name get profile configuration  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name model management helper  end_name  end_type  begin_name mmh  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get model management helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name classifier meta type  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get classifier  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment get all classifiers in all top level packages of all profiles  end_comment  begin_for  begin_init  begin_decl  begin_type  begin_name profile  end_name  end_type  begin_name profile  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name profile configuration  end_name  begin_operator  end_operator  begin_name get profiles  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_try  begin_block  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name top package  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name profile  end_name  begin_operator  end_operator  begin_name get profile packages  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a model  end_name  begin_argument_list  begin_argument  begin_expr  begin_name top package  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name list  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name mmh  end_name  begin_operator  end_operator  begin_name get all model elements of kind with model  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name top package  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name classifier meta type  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name profile exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo we need to rethrow this as some other exception  end_comment  begin_comment type but that is too much change for the moment  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  end_try  end_block  end_for  begin_return  begin_expr  begin_name list  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name x  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  end_block 
begin_comment not needed end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is valid element  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_argument  end_argument_list  end_name  end_type  begin_name types  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name get options  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name types  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name list  end_name  end_type  begin_name get choices  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name collections  end_name  begin_operator  end_operator  begin_name unmodifiable list  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name meta classes  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name x  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  end_block 
begin_comment not needed end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is valid element  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_argument  end_argument_list  end_name  end_type  begin_name types  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name get options  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name types  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name list  end_name  end_type  begin_name get choices  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name list  end_name  end_type  begin_name vec  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name array list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name vec  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get collaborations helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get all possible bases  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get target  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name vec  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name x  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  end_block 
begin_comment not needed end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is valid element  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_argument  end_argument_list  end_name  end_type  begin_name types  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name get options  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name types  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name x  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  end_block 
begin_comment not needed end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is valid element  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_argument  end_argument_list  end_name  end_type  begin_name types  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name get options  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name types  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name get  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name x  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not needed  end_comment  end_block 
begin_comment not needed end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is valid element  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_argument  end_argument_list  end_name  end_type  begin_name types  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name get options  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name types  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name get property  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name target  end_name  begin_init  begin_expr  begin_call  begin_name get target  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo this can be a mess there are any better solution  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name field name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set property  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name text  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name target  end_name  begin_init  begin_expr  begin_call  begin_name get target  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo this can be a mess there are any better solution  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name field name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name text  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block 
begin_comment constructor param model the single item list model end_comment begin_specifier  end_specifier  begin_name row selector  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name default list model  end_name  end_type  begin_name model  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name this  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment constructor param model the single item list model param expanded true if the control should be initially expanded param expandable true if the control should be expandable end_comment begin_specifier  end_specifier  begin_name row selector  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name default list model  end_name  end_type  begin_name model  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name expanded  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name expandable  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name super  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name border layout  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name expandable  end_name  end_name  begin_operator  end_operator  begin_name expandable  end_name  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name meta type  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name list  end_name  end_type  begin_name meta types  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name action  end_name  end_type  begin_name add action  end_name  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name action  end_name  end_argument  end_argument_list  end_name  end_type  begin_name new actions  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name command  end_name  end_argument  end_argument_list  end_name  end_type  begin_name additional new commands  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name property name  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name model  end_name  begin_operator  end_operator  begin_name uml model element list model  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment temporary until simple list model is used for all  end_comment  begin_expr_stmt  begin_expr  begin_name target  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name uml model element list model  end_name  begin_operator  end_operator  begin_name model  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get target  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name meta type  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name uml model element list model  end_name  begin_operator  end_operator  begin_name model  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get meta type  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name property name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name scroll  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name old scroll list  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name readonly  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get model management helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is read only  end_name  begin_argument_list  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name meta types  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name new actions  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name uml model element list model  end_name  begin_operator  end_operator  begin_name model  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get new actions  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name model  end_name  begin_operator  end_operator  begin_name simple list model  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name target  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name simple list model  end_name  begin_operator  end_operator  begin_name model  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get uml element  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name property name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name simple list model  end_name  begin_operator  end_operator  begin_name model  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get property name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name meta type  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name simple list model  end_name  begin_operator  end_operator  begin_name model  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get meta type  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name meta types  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name simple list model  end_name  begin_operator  end_operator  begin_name model  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get meta types  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name additional new commands  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name simple list model  end_name  begin_operator  end_operator  begin_name model  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get additional commands  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name scroll  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name scroll list impl  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name readonly  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get model management helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is read only  end_name  begin_argument_list  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_comment temporary until simple list model is used for all  end_comment  begin_expr_stmt  begin_expr  begin_name property name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name target  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name readonly  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_else  end_if  end_else  end_if  begin_assert  begin_expr  begin_operator  end_operator  begin_name target  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_assert  begin_if  begin_condition  begin_expr  begin_name meta types  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name meta types  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name array list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name meta types  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name meta type  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name is debug enabled  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name meta type  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name j component  end_name  begin_operator  end_operator  begin_name scroll  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name shrunk preferred size  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name j component  end_name  begin_operator  end_operator  begin_name scroll  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get preferred size  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name remove  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name j component  end_name  begin_operator  end_operator  begin_name scroll  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name scroll  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name scroll list factory  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name j scroll pane  end_name  end_type  begin_name jscroll  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name j scroll pane  end_name  begin_operator  end_operator  begin_name scroll  end_name  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name jscroll  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name expanded preferred size  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name jscroll  end_name  begin_operator  end_operator  begin_name get preferred size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name expanded maximum size  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name jscroll  end_name  begin_operator  end_operator  begin_name get maximum size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name jscroll  end_name  begin_operator  end_operator  begin_name set horizontal scroll bar policy  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name j scroll pane  end_name  begin_operator  end_operator  begin_name horizontal scrollbar never  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name model  end_name  begin_operator  end_operator  begin_name simple list model  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name simple list model  end_name  begin_operator  end_operator  begin_name model  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get add command  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name remove action  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name remove action  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name scroll  end_name  begin_operator  end_operator  begin_name get list  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name simple list model  end_name  begin_operator  end_operator  begin_name model  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name add action  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name add action  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name simple list model  end_name  begin_operator  end_operator  begin_name model  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get add command  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name remove action  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name add action  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_name actions  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name action  end_name  end_argument  end_argument_list  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expandable  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name expanded  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name jscroll  end_name  begin_operator  end_operator  begin_name set vertical scroll bar policy  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name j scroll pane  end_name  begin_operator  end_operator  begin_name vertical scrollbar never  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name delete action  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name move up action  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name move down action  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name move top action  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name move bottom action  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name readonly  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment create popup tool if we have a single row  end_comment  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name meta  end_name  begin_range  begin_expr  begin_name meta types  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get uml factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is containment valid  end_name  begin_argument_list  begin_argument  begin_expr  begin_name meta  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name label  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name meta  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to lower case  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name action  end_name  end_type  begin_name create action  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name action create contained model element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name meta  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name property name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name label  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name actions  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name create action  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  begin_if  begin_condition  begin_expr  begin_name new actions  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name actions  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new actions  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name additional new commands  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name additional new commands  end_name  begin_operator  end_operator  begin_name is empty  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_for  begin_init  begin_decl  begin_type  begin_name command  end_name  end_type  begin_name cmd  end_name  begin_range  begin_expr  begin_name additional new commands  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_name cmd  end_name  begin_operator  end_operator  begin_name icon identifiable  end_name  begin_operator  end_operator  begin_name cmd  end_name  begin_operator  end_operator  begin_name named  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name actions  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name command action  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cmd  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name named  end_name  begin_operator  end_operator  begin_name cmd  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name icon identifiable  end_name  begin_operator  end_operator  begin_name cmd  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get icon  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name actions  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name command action  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cmd  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_for  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name actions  end_name  begin_operator  end_operator  begin_name is empty  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name j panel  end_name  end_type  begin_name button panel  end_name  begin_init  begin_expr  begin_call  begin_name create single button panel  end_name  begin_argument_list  begin_argument  begin_expr  begin_name actions  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name button panel  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name border layout  end_name  begin_operator  end_operator  begin_name west  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  begin_else  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name readonly  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment todo lets build this into a separate build toolbar method  end_comment  begin_comment create add and remove buttons if needed first  end_comment  begin_if  begin_condition  begin_expr  begin_name add action  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name actions  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name add action  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name remove action  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name actions  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name remove action  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name delete action  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name delete action  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name delete action  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name actions  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name delete action  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_comment then any new buttons  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name action  end_name  end_argument  end_argument_list  end_name  end_type  begin_name create actions  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name action  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name meta  end_name  begin_range  begin_expr  begin_name meta types  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get uml factory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is containment valid  end_name  begin_argument_list  begin_argument  begin_expr  begin_name meta  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name label  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name meta  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to lower case  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name action  end_name  end_type  begin_name create action  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name action create contained model element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name meta  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name label  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name create actions  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name create action  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  begin_if  begin_condition  begin_expr  begin_name additional new commands  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name additional new commands  end_name  begin_operator  end_operator  begin_name is empty  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_for  begin_init  begin_decl  begin_type  begin_name command  end_name  end_type  begin_name cmd  end_name  begin_range  begin_expr  begin_name additional new commands  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_name cmd  end_name  begin_operator  end_operator  begin_name icon identifiable  end_name  begin_operator  end_operator  begin_name cmd  end_name  begin_operator  end_operator  begin_name named  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name create actions  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name command action  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cmd  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name named  end_name  begin_operator  end_operator  begin_name cmd  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name icon identifiable  end_name  begin_operator  end_operator  begin_name cmd  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get icon  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name create actions  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name command action  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cmd  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_for  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name create actions  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name actions  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name create actions  end_name  begin_operator  end_operator  begin_name to array  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name actions  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name create actions  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get uml helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is movable  end_name  begin_argument_list  begin_argument  begin_expr  begin_name meta type  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name move up action  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name move up action  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name move down action  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name move down action  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name move top action  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name move top action  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name move bottom action  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name move bottom action  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name move up action  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name move down action  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name move top action  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name move bottom action  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name move up action  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name move down action  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name move top action  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name move bottom action  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name delete action  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name add mouse listener  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get model management helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is read only  end_name  begin_argument_list  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name delete action  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get list  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add list selection listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_name delete action  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name remove action  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get list  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add list selection listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment todo we should really test the model instead for this  end_comment  begin_comment but we have no api yet  end_comment  begin_comment can we just check if the collection to build the j list  end_comment  begin_comment control implements the list interface  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get uml helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is movable  end_name  begin_argument_list  begin_argument  begin_expr  begin_name meta type  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get list  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add list selection listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_name move up action  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get list  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add list selection listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_name move down action  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get list  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add list selection listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_name move top action  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get list  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add list selection listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_name move bottom action  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name get list  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add mouse listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get model  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add list data listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block 
begin_comment param target the target of the panel param prop the xml data that contains the information of the options return a radio button panel with the options end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name build option box  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name j panel  end_name  end_type  begin_name panel  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name target  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name control data  end_name  end_type  begin_name prop  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name property name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name prop  end_name  begin_operator  end_operator  begin_name get property name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo consider a conditional feature in the xml panel def for this  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get uml version  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name char at  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property name  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a association end  end_name  begin_argument_list  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment only association end has an aggregation option box  end_comment  begin_return  end_return  end_block  end_then  end_if  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name getter setter manager  end_name  end_type  begin_name getter setter  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name getter setter manager  end_name  begin_operator  end_operator  begin_name get getter setter  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name prop  end_name  begin_operator  end_operator  begin_name get type  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name getter setter  end_name  begin_operator  end_operator  begin_name contains  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name j panel  end_name  end_type  begin_name control  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name radio button panel  end_name  begin_argument_list  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name property name  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name getter setter  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add control  end_name  begin_argument_list  begin_argument  begin_expr  begin_name panel  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name control  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block 
begin_comment param panel the panel where the controls will be added param target the target of the panel param prop the xml data that contains the information of the combo return a combo panel end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name build combo panel  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name j panel  end_name  end_type  begin_name panel  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name target  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name control data  end_name  end_type  begin_name prop  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name j component  end_name  end_type  begin_name comp  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name property name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name prop  end_name  begin_operator  end_operator  begin_name get property name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name prop  end_name  begin_operator  end_operator  begin_name get property name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name uml combo box model  end_name  end_type  begin_name model  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name uml model element namespace combo box model  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name uml combo box  end_name  end_type  begin_name combo  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name uml searchable combo box  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get action  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name comp  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name uml combo box navigator  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name combo  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name prop  end_name  begin_operator  end_operator  begin_name get property name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name uml combo box model  end_name  end_type  begin_name model  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a template parameter  end_name  begin_argument_list  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name model  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name uml structural feature type combo box model  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get parameter  end_name  begin_argument_list  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name model  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name uml structural feature type combo box model  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_name comp  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name uml combo box  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name prop  end_name  begin_operator  end_operator  begin_name get property name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a association role  end_name  begin_argument_list  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name uml combo box model  end_name  end_type  begin_name model  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name uml association role base combo box model  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name uml combo box  end_name  end_type  begin_name combo  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name uml searchable combo box  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get action  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name comp  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name uml combo box navigator  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name combo  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_comment   end_comment  end_block  end_else  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name prop  end_name  begin_operator  end_operator  begin_name get property name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name uml combo box model  end_name  end_type  begin_name model  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name uml generalization powertype combo box model  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name uml combo box  end_name  end_type  begin_name combo  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name uml combo box  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name comp  end_name  begin_operator  end_operator  begin_name combo  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name prop  end_name  begin_operator  end_operator  begin_name get property name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name uml multiplicity panel  end_name  end_type  begin_name m panel  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name uml multiplicity panel  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name comp  end_name  begin_operator  end_operator  begin_name m panel  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name prop  end_name  begin_operator  end_operator  begin_name get property name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name uml combo box model  end_name  end_type  begin_name model  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name uml message activator combo box model  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name j combo box  end_name  end_type  begin_name combo  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name uml message activator combo box  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get action  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name comp  end_name  begin_operator  end_operator  begin_name combo  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name prop  end_name  begin_operator  end_operator  begin_name get property name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a call event  end_name  begin_argument_list  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name uml combo box model  end_name  end_type  begin_name model  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name uml call event operation combo box model  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name uml combo box  end_name  end_type  begin_name combo  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name uml combo box  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name comp  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name uml combo box navigator  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name combo  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name uml combo box model  end_name  end_type  begin_name model  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name uml call action operation combo box model  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name uml combo box  end_name  end_type  begin_name combo  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name uml combo box  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name comp  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name uml combo box navigator  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name combo  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name prop  end_name  begin_operator  end_operator  begin_name get property name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name uml combo box model  end_name  end_type  begin_name model  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name uml component instance classifier combo box model  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name uml combo box  end_name  end_type  begin_name combo  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name uml combo box  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name comp  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name uml combo box navigator  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name combo  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name prop  end_name  begin_operator  end_operator  begin_name get property name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name uml combo box model  end_name  end_type  begin_name model  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name uml collaboration represented classifier combo box model  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name uml combo box  end_name  end_type  begin_name combo  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name uml combo box  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name comp  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name uml combo box navigator  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name combo  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name prop  end_name  begin_operator  end_operator  begin_name get property name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name uml combo box model  end_name  end_type  begin_name model  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name uml collaboration represented operation combo box model  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name uml combo box  end_name  end_type  begin_name combo  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name uml combo box  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name comp  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name uml combo box navigator  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name combo  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name prop  end_name  begin_operator  end_operator  begin_name get property name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name uml combo box model  end_name  end_type  begin_name model  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a activity graph  end_name  begin_argument_list  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name model  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name uml activity graph context combo box model  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name model  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name uml state machine context combo box model  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name uml combo box  end_name  end_type  begin_name combo  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name uml combo box  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name comp  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name uml combo box navigator  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name combo  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name prop  end_name  begin_operator  end_operator  begin_name get property name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name uml combo box model  end_name  end_type  begin_name model  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name uml link association combo box model  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name comp  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name uml combo box navigator  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name uml searchable combo box  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get action  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name prop  end_name  begin_operator  end_operator  begin_name get property name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name uml combo box model  end_name  end_type  begin_name model  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name uml association end type combo box model  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name comp  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name uml combo box  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name prop  end_name  begin_operator  end_operator  begin_name get property name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name uml combo box model  end_name  end_type  begin_name model  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name uml submachine state combo box model  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name uml combo box  end_name  end_type  begin_name submachine box  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name uml combo box  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name comp  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name uml combo box navigator  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name submachine box  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name prop  end_name  begin_operator  end_operator  begin_name get property name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name uml combo box model  end_name  end_type  begin_name model  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name uml stub state combo box model  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name uml combo box  end_name  end_type  begin_name referencestate box  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name uml combo box  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name comp  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name uml combo box navigator  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name referencestate box  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name prop  end_name  begin_operator  end_operator  begin_name get property name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name uml combo box model  end_name  end_type  begin_name model  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name uml meta class combo box model  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name uml combo box  end_name  end_type  begin_name type combo box  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name uml combo box  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name comp  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name uml combo box navigator  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name type combo box  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo why is this disabled always  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name comp  end_name  begin_operator  end_operator  begin_name set enabled  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name prop  end_name  begin_operator  end_operator  begin_name get property name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name uml combo box model  end_name  end_type  begin_name model  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name uml template parameter parameter combo box model  end_name  begin_argument_list  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name uml combo box  end_name  end_type  begin_name combo  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name uml combo box  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name comp  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name uml combo box navigator  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name combo  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name prop  end_name  begin_operator  end_operator  begin_name get property name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name uml combo box model  end_name  end_type  begin_name model  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name uml template parameter default element combo box model  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name uml combo box  end_name  end_type  begin_name combo  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name uml combo box  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name comp  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name uml combo box navigator  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name combo  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name prop  end_name  begin_operator  end_operator  begin_name get property name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name uml combo box model  end_name  end_type  begin_name model  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name uml signal combo box model  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name uml combo box  end_name  end_type  begin_name combo  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name uml combo box  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name comp  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name uml combo box navigator  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name combo  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name prop  end_name  begin_operator  end_operator  begin_name get property name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name uml combo box model  end_name  end_type  begin_name model  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name uml transition trigger combo box model  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name uml combo box  end_name  end_type  begin_name combo  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name uml combo box  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name comp  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name uml combo box navigator  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name combo  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name prop  end_name  begin_operator  end_operator  begin_name get property name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name uml combo box model  end_name  end_type  begin_name model  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name uml method specification combo box model  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name uml combo box  end_name  end_type  begin_name combo  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name uml combo box  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name comp  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name uml combo box navigator  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name combo  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  begin_if  begin_condition  begin_expr  begin_name comp  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name add control  end_name  begin_argument_list  begin_argument  begin_expr  begin_name panel  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name prop  end_name  begin_operator  end_operator  begin_name get label  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name comp  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block 
begin_comment the list of operations shall contain all operations of all classifiers contained in the same package as the callaction itself p todo in fact we also should include operations of imported clasifiers see org argouml uml ui uml combo box model build model list end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name build model list  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name target  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name target manager  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get model target  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name ops  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name array list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a call action  end_name  begin_argument_list  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name ns  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get model element container  end_name  begin_argument_list  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a package  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ns  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_expr_stmt  begin_expr  begin_name ns  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get model element container  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ns  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name ns  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_break  end_break  end_block  end_then  end_if  end_block  end_while  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a namespace  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ns  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name c  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get model management helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get all model elements of kind  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ns  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get meta types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get classifier  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name i  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ops  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get operations  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name i  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_while  end_block  end_then  end_if  begin_comment to be really sure let s add the operation that is linked to the action in the model too if it is not listed yet we need this incase an operation is moved out of the package or maybe with imported xmi  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name current  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get operation  end_name  begin_argument_list  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a operation  end_name  begin_argument_list  begin_argument  begin_expr  begin_name current  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name ops  end_name  begin_operator  end_operator  begin_name contains  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name current  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ops  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name current  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name set elements  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ops  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment if the property that this comboboxmodel depicts is changed in the uml model this method will make sure that the changes will be done in the combobox model equally p todo this function is not yet completely written inherit doc see java beans property change listener property change java beans property change event end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name model changed  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name uml change event  end_name  end_type  begin_name evt  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_name building model  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name evt  end_name  begin_operator  end_operator  begin_name delete instance event  end_name  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get changed element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name evt  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o  end_name  begin_init  begin_expr  begin_call  begin_name get changed element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name evt  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name remove element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name evt  end_name  begin_operator  end_operator  begin_name add association event  end_name  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name get target  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name is valid event  end_name  begin_argument_list  begin_argument  begin_expr  begin_name evt  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name evt  end_name  begin_operator  end_operator  begin_name get property name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property set name  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name evt  end_name  begin_operator  end_operator  begin_name get source  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get target  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name elem  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name evt  end_name  begin_operator  end_operator  begin_name get new value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name elem  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name add element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment mvw for this case i had to move the call to set selected item outside the building model otherwise the combo does not update with the new selection see issue 5418  end_comment  begin_expr_stmt  begin_expr  begin_name building model  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set selected item  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elem  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o  end_name  begin_init  begin_expr  begin_call  begin_name get changed element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name evt  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name evt  end_name  begin_operator  end_operator  begin_name remove association event  end_name  begin_operator  end_operator  begin_call  begin_name is valid event  end_name  begin_argument_list  begin_argument  begin_expr  begin_name evt  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name evt  end_name  begin_operator  end_operator  begin_name get property name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property set name  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name evt  end_name  begin_operator  end_operator  begin_name get source  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get target  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name evt  end_name  begin_operator  end_operator  begin_name get old value  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get selected item  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment todo here too  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name set selected item  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name evt  end_name  begin_operator  end_operator  begin_name get new value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  begin_else  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o  end_name  begin_init  begin_expr  begin_call  begin_name get changed element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name evt  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name remove element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_else  end_if  end_block  end_then  end_if  end_else  end_if  end_else  end_if  begin_expr_stmt  begin_expr  begin_name building model  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block 
begin_comment constructor for uml comment body document end_comment begin_specifier  end_specifier  begin_name uml comment body document  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name property name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name target  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name super  end_name  begin_argument_list  begin_argument  begin_expr  begin_name property name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo this is probably not the right location for switching off the filter newlines the setting gets lost after selecting a different model element in the diagram btw see how it is used in javax swing text plain document see issue 1812  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name put property  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name boolean  end_name  begin_operator  end_operator  begin_name false  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment see java awt event action listener action performed java awt event action event todo from combo box javadoc this method is public as an implementation side effect do not call or override we should find some other way to implement this end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name action performed  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name action event  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name action performed  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name get source  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name j text field  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name old value  end_name  begin_init  begin_expr  begin_call  begin_name get selected item  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name combo box editor  end_name  end_type  begin_name editor  end_name  begin_init  begin_expr  begin_call  begin_name get editor  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name item  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name editor  end_name  begin_operator  end_operator  begin_name get item  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name do on edit  end_name  begin_argument_list  begin_argument  begin_expr  begin_name item  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment next statement is necessary to update the textfield  end_comment  begin_comment if the selection is equal to what was allready  end_comment  begin_comment selected  end_comment  begin_if  begin_condition  begin_expr  begin_name old value  end_name  begin_operator  end_operator  begin_call  begin_name get selected item  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get editor  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set item  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get selected item  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  end_block 
begin_comment todo this is a temporary method of making sure the model is updated on loss of focus of a combo box in the long term we should attempt to update the model on each keypress see java awt event focus listener focus lost java awt event focus event end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name focus lost  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name focus event  end_name  end_type  begin_name arg 0  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name do on edit  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get editor  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get item  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment the constructor param expression model expression model should be shared between language and body fields param notify set to true to forward events to model only one of language and body fields should have this set to true todo mvw i do not understand that end_comment begin_specifier  end_specifier  begin_name uml expression body field  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name uml expression model  end_name  end_type  begin_name expression model  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name notify  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_name model  end_name  begin_operator  end_operator  begin_name expression model  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name notify model  end_name  begin_operator  end_operator  begin_name notify  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get document  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add document listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set tool tip text  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set font  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name look and feel mgr  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get standard font  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set rows  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment make it stretch vertically  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name update  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment creates a new field that selects the language for an expression param m expression model should be shared between language and body fields param n only one of language and body fields should forward events to model todo mvw i do not understand that end_comment begin_specifier  end_specifier  begin_name uml expression language field  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name uml expression model  end_name  end_type  begin_name m  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name n  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_name model  end_name  begin_operator  end_operator  begin_name m  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name notify model  end_name  begin_operator  end_operator  begin_name n  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get document  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add document listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set tool tip text  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set font  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name look and feel mgr  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get standard font  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name update  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment to simplify implementation we list all associations found with any of the classifiers represented by the linked instances p todo make a foolproof algorithm that only allows selecting associations that create a correct model also take into account n ary associations and associationclasses this algo best goes in the model subsystem e g in a method get all possible associations for a link see org argouml uml ui uml combo box model build model list end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name build model list  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name link ends  end_name  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name associations  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name hash set  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name t  end_name  begin_init  begin_expr  begin_call  begin_name get target  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a link  end_name  begin_argument_list  begin_argument  begin_expr  begin_name t  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name link ends  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get connections  end_name  begin_argument_list  begin_argument  begin_expr  begin_name t  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name ile  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name link ends  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name ile  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name instance  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get instance  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name ile  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name c  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get classifiers  end_name  begin_argument_list  begin_argument  begin_expr  begin_name instance  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name ic  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name ic  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name classifier  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ic  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name ae  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get association ends  end_name  begin_argument_list  begin_argument  begin_expr  begin_name classifier  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name iae  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ae  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name iae  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name association end  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name iae  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name association  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get association  end_name  begin_argument_list  begin_argument  begin_expr  begin_name association end  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name associations  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name association  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_while  end_block  end_while  end_block  end_while  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name set elements  end_name  begin_argument_list  begin_argument  begin_expr  begin_name associations  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment constructor for uml linked list param data model the data model param show icon true if an icon should be shown param show path true if containment path should be shown end_comment begin_specifier  end_specifier  begin_name uml linked list  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name list model  end_name  end_type  begin_name data model  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name show icon  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name show path  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name this  end_name  begin_argument_list  begin_argument  begin_expr  begin_name data model  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name uml linked list cell renderer  end_name  begin_argument_list  begin_argument  begin_expr  begin_name show icon  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name show path  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set selection mode  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name list selection model  end_name  begin_operator  end_operator  begin_name single selection  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo can we find a better way to do this than hard coding colour  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name set foreground  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name color  end_name  begin_operator  end_operator  begin_name blue  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set selection foreground  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name color  end_name  begin_operator  end_operator  begin_name blue  end_name  begin_operator  end_operator  begin_name darker  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name uml link mouse listener  end_name  end_type  begin_name mouse listener  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name uml link mouse listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add mouse listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_name mouse listener  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment the constructor param data model the data model end_comment begin_specifier  end_specifier  begin_name uml linked list  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name list model  end_name  end_type  begin_name data model  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name this  end_name  begin_argument_list  begin_argument  begin_expr  begin_name data model  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment constructor for uml linked list param data model the data model param show icon true if an icon should be shown end_comment begin_specifier  end_specifier  begin_name uml linked list  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name list model  end_name  end_type  begin_name data model  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name show icon  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name this  end_name  begin_argument_list  begin_argument  begin_expr  begin_name data model  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name show icon  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment constructor for uml list 2 used by subclasses that want to add their own renderer to the list param data model the data model param renderer the renderer end_comment begin_name uml linked list  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name list model  end_name  end_type  begin_name data model  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name list cell renderer  end_name  end_type  begin_name renderer  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name super  end_name  begin_argument_list  begin_argument  begin_expr  begin_name data model  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set double buffered  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name renderer  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name set cell renderer  end_name  begin_argument_list  begin_argument  begin_expr  begin_name renderer  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name set font  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name look and feel mgr  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get standard font  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add mouse listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment see java beans property change listener property change java beans property change event todo this should be reviewed to see if it can be improved with a view towards removing some of the overrriding methods used as workarounds for differences between nsuml and mdr tfm 20060302 end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name property change  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name property change event  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name uml model element list model  end_name  end_type  begin_name lm  end_name  begin_init  begin_expr  begin_name this  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name runnable  end_name  end_type  begin_name do work runnable  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name runnable  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_try  begin_block  begin_comment the original controls on property panels regularly rebuild themselves  end_comment  begin_comment from scratch rather than add and remove elements  end_comment  begin_comment for now we just try and add remove but we can reinstate this if required  end_comment  begin_comment   end_comment  begin_comment if e instanceof attribute change event  end_comment  begin_comment try  end_comment  begin_comment if is valid event e  end_comment  begin_comment log info rebuilding model  end_comment  begin_comment rebuild model list  end_comment  begin_comment   end_comment  begin_comment catch invalid element exception iee  end_comment  begin_comment return  end_comment  begin_comment   end_comment  begin_comment else  end_comment  begin_if  begin_condition  begin_expr  begin_name e  end_name  begin_operator  end_operator  begin_name add association event  end_name  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name is valid event  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o  end_name  begin_init  begin_expr  begin_call  begin_name get changed element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_name collection  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name info  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name array list  end_name  end_type  begin_name temp list  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name array list  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name collection  end_name  begin_operator  end_operator  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name it  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name temp list  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name it  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o 2  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name it  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o 2  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_while  end_block  end_then  begin_else  begin_block  begin_comment todo if this is an ordered list then you have to add in the right location  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name lm  end_name  begin_operator  end_operator  begin_name ordered  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ordered  end_name  end_type  begin_name ordered  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name ordered  end_name  begin_operator  end_operator  begin_name lm  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name elements  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ordered  end_name  begin_operator  end_operator  begin_name get model elements  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name elements  end_name  begin_operator  end_operator  begin_name list  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name posn  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name list  end_name  begin_operator  end_operator  begin_name elements  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name index of  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment we tested this above do we need to test again  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name posn  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name posn  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  begin_range  begin_expr  begin_name elements  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_name element  end_name  begin_operator  end_operator  begin_name o  end_name  end_expr  end_condition  begin_then  begin_block  begin_break  end_break  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name posn  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name add  end_name  begin_argument_list  begin_argument  begin_expr  begin_name posn  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name add element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  end_if  end_block  end_else  end_if  end_block  end_then  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name e  end_name  begin_operator  end_operator  begin_name remove association event  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name valid  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get changed element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_name collection  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name valid  end_name  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get changed element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name col  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name collection  end_name  begin_operator  end_operator  begin_call  begin_name get changed element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name it  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name col  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name valid  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name it  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name it  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name contains  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name valid  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_then  end_if  end_block  end_while  end_block  end_else  end_if  begin_if  begin_condition  begin_expr  begin_name valid  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o  end_name  begin_init  begin_expr  begin_call  begin_name get changed element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name o  end_name  begin_operator  end_operator  begin_name collection  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name it  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name collection  end_name  begin_operator  end_operator  begin_name o  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name iterator  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name it  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o 3  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name it  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name remove element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o 3  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_while  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name remove element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name o  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  end_if  end_block  end_then  end_if  end_else  end_if  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name invalid element exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name is debug enabled  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_catch  end_try  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name swing utilities  end_name  begin_operator  end_operator  begin_name invoke later  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name do work runnable  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment see org argouml uml ui uml combo box model build model list end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name build model list  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name set  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  end_type  begin_name elements  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name tree set  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name path comparator  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name project manager  end_name  begin_operator  end_operator  begin_name get manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get current project  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get root  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name target  end_name  begin_init  begin_expr  begin_call  begin_name get target  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name elements  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get all possible namespaces  end_name  begin_argument_list  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name model  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment these next lines for the case that the current namespace is not a valid one which of course should not happen but it does see the project attached to issue 3772  end_comment  begin_comment todo enhance the is valid namespace function so that this never happens  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name namespace  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get namespace  end_name  begin_argument_list  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name namespace  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name elements  end_name  begin_operator  end_operator  begin_name contains  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name namespace  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name elements  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name namespace  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name warn  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment our comparator will throw an invalid element exception if the old  end_comment  begin_comment list contains deleted elements eg after a new project is loaded  end_comment  begin_comment so remove all the old contents first  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name remove all elements  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add all  end_name  begin_argument_list  begin_argument  begin_expr  begin_name elements  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment creates a new checkbox menu item attached to the specified action object and appends it to the end of this menu todo this is almost a duplicate of argo j menu add check item must find a way to merge param a the action for the checkbox menu item to be added return the new checkbox menu item end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name j check box menu item  end_name  end_type  begin_name get check item  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name action  end_name  end_type  begin_name a  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name string  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name a  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name action  end_name  begin_operator  end_operator  begin_name name  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name icon  end_name  end_type  begin_name icon  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name icon  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name a  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name action  end_name  begin_operator  end_operator  begin_name small icon  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name selected  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name boolean  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name a  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name j check box menu item  end_name  end_type  begin_name mi  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name j check box menu item  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name icon  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name selected  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name selected  end_name  begin_operator  end_operator  begin_name boolean value  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mi  end_name  begin_operator  end_operator  begin_name set horizontal text position  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name swing constants  end_name  begin_operator  end_operator  begin_name right  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mi  end_name  begin_operator  end_operator  begin_name set vertical text position  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name swing constants  end_name  begin_operator  end_operator  begin_name center  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mi  end_name  begin_operator  end_operator  begin_name set enabled  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name a  end_name  begin_operator  end_operator  begin_name is enabled  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mi  end_name  begin_operator  end_operator  begin_name add action listener  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name a  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name mi  end_name  end_expr  end_return  end_block 
begin_comment see javax swing combo box model set selected item java lang object end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set selected item  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name an item  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name an item  end_name  begin_operator  end_operator  begin_name string  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name an item  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to string  end_name  begin_argument_list  begin_argument  begin_expr  begin_name an item  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name add element  end_name  begin_argument_list  begin_argument  begin_expr  begin_name an item  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name set selected item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name an item  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment see org argouml uml ui action set multiplicity set selected item java lang object java lang object end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name set selected item  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name item  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name target  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name target  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a classifier role  end_name  begin_argument_list  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get facade  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is a multiplicity  end_name  begin_argument_list  begin_argument  begin_expr  begin_name item  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment todo aren t our items always strings tfm 20100917  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set multiplicity  end_name  begin_argument_list  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name item  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name item  end_name  begin_operator  end_operator  begin_name string  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get core helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set multiplicity  end_name  begin_argument_list  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name string  end_name  begin_operator  end_operator  begin_name item  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_block  end_then  end_if  end_block 
begin_comment constructor for umlofs state list model end_comment begin_specifier  end_specifier  begin_name umlofs state list model  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name model element  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo this needs work we also need to listen to addition removal of states to from a classifier in state  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name super  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name model element  end_name  begin_operator  end_operator  begin_name get class  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name action add ofs state  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name action remove ofs state  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set target  end_name  begin_argument_list  begin_argument  begin_expr  begin_name model element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment create the combobox wich display available value specification type todo literal null expression instance value todo use something else that a combobox todo if combobox can we restrict list for instance can we create a boolean for a integer value todo return end_comment begin_type  begin_specifier  end_specifier  begin_name j combo box  end_name  end_type  begin_name ui select  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment get the list opaque expression literal string  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  end_type  begin_name list vs  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get data types helper  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get value specifications  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  begin_index  end_index  end_type  begin_name type instance value  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name list vs  end_name  begin_operator  end_operator  begin_name to array  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name type instance value list  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name j combo box  end_name  begin_argument_list  begin_argument  begin_expr  begin_name type instance value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i sel  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_comment by default the first value of the combobox is selected  end_comment  begin_if  begin_condition  begin_expr  begin_name model  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment get current initial value  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name expression  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name model  end_name  begin_operator  end_operator  begin_name get expression  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name expression  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment select the current type in the combobox  end_comment  begin_comment if expression implements one of the combobox select it  end_comment  begin_comment todo do it in e uml module project  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  begin_index  end_index  end_type  begin_name interfaces  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name expression  end_name  begin_operator  end_operator  begin_name get class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get interfaces  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name i sel  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_expr_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i interf  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i interf  end_name  begin_operator  end_operator  begin_name  begin_name interfaces  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  begin_name i sel  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_incr  begin_expr  begin_name i interf  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i vs  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i vs  end_name  begin_operator  end_operator  begin_name  begin_name type instance value  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  begin_name i sel  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_incr  begin_expr  begin_name i vs  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_if  begin_condition  begin_expr  begin_name  begin_name interfaces  end_name  begin_index  begin_expr  begin_name i interf  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name get simple name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name type instance value  end_name  begin_index  begin_expr  begin_name i vs  end_name  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name i sel  end_name  begin_operator  end_operator  begin_name i vs  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  end_block  end_for  end_block  end_then  end_if  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type instance value list  end_name  begin_operator  end_operator  begin_name set selected index  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i sel  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment when we change the type we need to create a new initial value and to display the panel todo if we select the same type that the current do nothing  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name type instance value list  end_name  begin_operator  end_operator  begin_name add action listener  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name action listener  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name action performed  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name action event  end_name  end_type  begin_name ae  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name ae  end_name  begin_operator  end_operator  begin_name get action command  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name j combo box  end_name  end_type  begin_name lst  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name j combo box  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ae  end_name  begin_operator  end_operator  begin_name get source  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name s type vs  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name string  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name lst  end_name  begin_operator  end_operator  begin_name get selected item  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name create value specification  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name s type vs  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name create field  end_name  begin_argument_list  begin_argument  begin_expr  begin_name s type vs  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo when the attribute isn t in the diagram  end_comment  begin_comment for exemple select attribut by explorer  end_comment  begin_comment then the refresh isn t auto we had to click  end_comment  end_block  end_then  end_if  end_block  end_function  end_block  end_class  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name type instance value list  end_name  end_expr  end_return  end_block 
begin_comment todo is is really used see javax swing j component remove notify end_comment begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name remove notify  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name remove change listener  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name remove notify  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment todo is is really used see javax swing j component remove notify end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name state changed  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name change event  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name log  end_name  begin_operator  end_operator  begin_name debug  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment see javax swing event document listener changed update javax swing event document event todo are the 3 methods uses end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name changed update  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name document event  end_name  end_type  begin_name p 1  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name update model  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment see org argouml core propertypanels ui uml value specification value field build panel end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name build panel  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_name current text  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_comment create the body and language field  end_comment  begin_expr_stmt  begin_expr  begin_name cur body  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name j text area  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cur body  end_name  begin_operator  end_operator  begin_name set tool tip text  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cur body  end_name  begin_operator  end_operator  begin_name set rows  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment make it stretch vertically  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cur body  end_name  begin_operator  end_operator  begin_name get document  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add document listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name cur language  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name j text field  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cur language  end_name  begin_operator  end_operator  begin_name set tool tip text  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cur language  end_name  begin_operator  end_operator  begin_name get document  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add document listener  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment create other panel element  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name j button  end_name  end_type  begin_name button  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name j button  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name button  end_name  begin_operator  end_operator  begin_name add action listener  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name action listener  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name action performed  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name action event  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name uml value specification value field opaque expression dialog  end_name  end_type  begin_name dialog  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name uml value specification value field opaque expression dialog  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get model  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name current text  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name dialog  end_name  begin_operator  end_operator  begin_name set visible  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo if this class listen the model it will be able to  end_comment  begin_comment change in live as it is done in the figs diagram  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name update fields  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment create panel containing the previous field  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name j panel  end_name  end_type  begin_name panel  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name j panel  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name panel  end_name  begin_operator  end_operator  begin_name set font  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name look and feel mgr  end_name  begin_operator  end_operator  begin_name get instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get standard font  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name grid bag layout  end_name  end_type  begin_name layout  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name grid bag layout  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name panel  end_name  begin_operator  end_operator  begin_name set layout  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name layout  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo redo it cur body should be as long as cur language button  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name grid bag constraints  end_name  end_type  begin_name c  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name grid bag constraints  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name fill  end_name  end_name  begin_operator  end_operator  begin_name  begin_name grid bag constraints  end_name  begin_operator  end_operator  begin_name horizontal  end_name  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name insets  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name insets  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridx  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridy  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name weightx  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name panel  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cur language  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name c  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name grid bag constraints  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name fill  end_name  end_name  begin_operator  end_operator  begin_name  begin_name grid bag constraints  end_name  begin_operator  end_operator  begin_name none  end_name  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name insets  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name insets  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridx  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridy  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name weightx  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name panel  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name button  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name c  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name grid bag constraints  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name fill  end_name  end_name  begin_operator  end_operator  begin_name  begin_name grid bag constraints  end_name  begin_operator  end_operator  begin_name both  end_name  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name insets  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name insets  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridx  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridy  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridwidth  end_name  end_name  begin_operator  end_operator  begin_name  begin_name grid bag constraints  end_name  begin_operator  end_operator  begin_name relative  end_name  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridheight  end_name  end_name  begin_operator  end_operator  begin_name  begin_name grid bag constraints  end_name  begin_operator  end_operator  begin_name relative  end_name  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name weightx  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name weighty  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name panel  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cur body  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name all field  end_name  end_name  begin_operator  end_operator  begin_name panel  end_name  end_expr  end_expr_stmt  end_block 
begin_comment todo are the 3 methods uses end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name changed update  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name document event  end_name  end_type  begin_name arg 0  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name update model  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name j panel  end_name  end_type  begin_name build bouton panel  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name j panel  end_name  end_type  begin_name pane btn  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name j panel  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name grid bag layout  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment save the model current  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name j button  end_name  end_type  begin_name btn apply  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name j button  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name btn apply  end_name  begin_operator  end_operator  begin_name add action listener  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name action listener  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name action performed  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name action event  end_name  end_type  begin_name arg 0  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  begin_index  end_index  end_type  begin_name tab values  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name string  end_name  begin_index  end_index  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name b continue  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name cur language  end_name  begin_operator  end_operator  begin_name get text  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name tab values  end_name  begin_index  begin_expr  begin_operator  end_operator  begin_name current index  end_name  begin_operator  end_operator  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment language has changed  end_comment  begin_expr_stmt  begin_expr  begin_name b continue  end_name  begin_operator  end_operator  begin_call  begin_name is unique language  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tab values  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name cur language  end_name  begin_operator  end_operator  begin_name get text  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name b continue  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name  begin_name tab values  end_name  begin_index  begin_expr  begin_operator  end_operator  begin_name current index  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name cur body  end_name  begin_operator  end_operator  begin_name get text  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name tab values  end_name  begin_index  begin_expr  begin_operator  end_operator  begin_name current index  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name cur language  end_name  begin_operator  end_operator  begin_name get text  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name set value  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tab values  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name update fields  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment todo else alert  end_comment  end_block  end_function  end_block  end_class  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment add a new entry in the list and select it  end_comment  begin_comment translator localize button add  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name j button  end_name  end_type  begin_name btn add  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name j button  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment   end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name btn add  end_name  begin_operator  end_operator  begin_name add action listener  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name action listener  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name action performed  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name action event  end_name  end_type  begin_name arg 0  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  begin_index  end_index  end_type  begin_name tab values  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name string  end_name  begin_index  end_index  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name num  end_name  begin_init  begin_expr  begin_call  begin_name get empty language  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tab values  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name num  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  begin_index  end_index  end_type  begin_name new tab values  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name string  end_name  begin_index  begin_expr  begin_name  begin_name tab values  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name arraycopy  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tab values  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name new tab values  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name tab values  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name new tab values  end_name  begin_index  begin_expr  begin_name  begin_name tab values  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name new tab values  end_name  begin_index  begin_expr  begin_name  begin_name tab values  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name set value  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new tab values  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name current index  end_name  begin_operator  end_operator  begin_name  begin_name new tab values  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name update fields  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_comment a language must be unique  end_comment  begin_comment so select the current empty language  end_comment  begin_comment todo alert  end_comment  begin_expr_stmt  begin_expr  begin_name current index  end_name  begin_operator  end_operator  begin_name num  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name update fields  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_function  end_block  end_class  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment translator localize button delete  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name j button  end_name  end_type  begin_name btn del  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name j button  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name btn del  end_name  begin_operator  end_operator  begin_name add action listener  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name action listener  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name action performed  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name action event  end_name  end_type  begin_name arg 0  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  begin_index  end_index  end_type  begin_name tab values  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name string  end_name  begin_index  end_index  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name  begin_name tab values  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  begin_index  end_index  end_type  begin_name new tab values  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name string  end_name  begin_index  begin_expr  begin_name  begin_name tab values  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name current index  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment copy previous element  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name arraycopy  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tab values  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name new tab values  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name current index  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name current index  end_name  begin_operator  end_operator  begin_name  begin_name tab values  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment copy next element  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name arraycopy  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tab values  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name current index  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name new tab values  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name current index  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name tab values  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name current index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name set value  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new tab values  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name current index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name new tab values  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name current index  end_name  begin_operator  end_operator  begin_name  begin_name new tab values  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name update fields  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  begin_index  end_index  end_type  begin_name new tab values  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name string  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name new tab values  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name new tab values  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name set value  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new tab values  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name update fields  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_function  end_block  end_class  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment translator localize button move up  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name j button  end_name  end_type  begin_name btn up  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name j button  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name btn up  end_name  begin_operator  end_operator  begin_name add action listener  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name action listener  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name action performed  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name action event  end_name  end_type  begin_name arg 0  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name current index  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  begin_index  end_index  end_type  begin_name tab values  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name string  end_name  begin_index  end_index  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  begin_index  end_index  end_type  begin_name sav tab values  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name string  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_comment copy in memory the current  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name arraycopy  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tab values  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name current index  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name sav tab values  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment copy the previous value in the current  end_comment  begin_expr_stmt  begin_expr  begin_name  begin_name tab values  end_name  begin_index  begin_expr  begin_name current index  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_name  begin_name tab values  end_name  begin_index  begin_expr  begin_name current index  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_index  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name tab values  end_name  begin_index  begin_expr  begin_name current index  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_name  begin_name tab values  end_name  begin_index  begin_expr  begin_name current index  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_index  end_name  end_expr  end_expr_stmt  begin_comment copy the current in the previous  end_comment  begin_expr_stmt  begin_expr  begin_name  begin_name tab values  end_name  begin_index  begin_expr  begin_operator  end_operator  begin_name current index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_name  begin_name sav tab values  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name tab values  end_name  begin_index  begin_expr  begin_operator  end_operator  begin_name current index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_name  begin_name sav tab values  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name set value  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tab values  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name current index  end_name  begin_operator  end_operator  begin_name current index  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name update fields  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_function  end_block  end_class  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment translator localize button move down  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name j button  end_name  end_type  begin_name btn down  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name j button  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name btn down  end_name  begin_operator  end_operator  begin_name add action listener  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name action listener  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name action performed  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name action event  end_name  end_type  begin_name arg 0  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name current index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name list model  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  begin_index  end_index  end_type  begin_name tab values  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name string  end_name  begin_index  end_index  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  begin_index  end_index  end_type  begin_name sav tab values  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name string  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_comment copy in memory the current  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name arraycopy  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tab values  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name current index  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name sav tab values  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment copy the next value in the current  end_comment  begin_expr_stmt  begin_expr  begin_name  begin_name tab values  end_name  begin_index  begin_expr  begin_name current index  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_name  begin_name tab values  end_name  begin_index  begin_expr  begin_operator  end_operator  begin_name current index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_index  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name tab values  end_name  begin_index  begin_expr  begin_name current index  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_name  begin_name tab values  end_name  begin_index  begin_expr  begin_operator  end_operator  begin_name current index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_index  end_name  end_expr  end_expr_stmt  begin_comment copy the current in the next  end_comment  begin_expr_stmt  begin_expr  begin_name  begin_name tab values  end_name  begin_index  begin_expr  begin_operator  end_operator  begin_name current index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_name  begin_name sav tab values  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name tab values  end_name  begin_index  begin_expr  begin_operator  end_operator  begin_name current index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_name  begin_name sav tab values  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name set value  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tab values  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name current index  end_name  begin_operator  end_operator  begin_name current index  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name update fields  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_function  end_block  end_class  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment layout  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name grid bag constraints  end_name  end_type  begin_name c  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name grid bag constraints  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name fill  end_name  end_name  begin_operator  end_operator  begin_name  begin_name grid bag constraints  end_name  begin_operator  end_operator  begin_name none  end_name  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridx  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridy  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name pane btn  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name btn apply  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name c  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name grid bag constraints  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name fill  end_name  end_name  begin_operator  end_operator  begin_name  begin_name grid bag constraints  end_name  begin_operator  end_operator  begin_name none  end_name  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridx  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridy  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name pane btn  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name btn add  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name c  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name grid bag constraints  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name fill  end_name  end_name  begin_operator  end_operator  begin_name  begin_name grid bag constraints  end_name  begin_operator  end_operator  begin_name none  end_name  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridx  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridy  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name pane btn  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name btn del  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name c  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name grid bag constraints  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name fill  end_name  end_name  begin_operator  end_operator  begin_name  begin_name grid bag constraints  end_name  begin_operator  end_operator  begin_name none  end_name  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridx  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridy  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name pane btn  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name btn up  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name c  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name grid bag constraints  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name fill  end_name  end_name  begin_operator  end_operator  begin_name  begin_name grid bag constraints  end_name  begin_operator  end_operator  begin_name none  end_name  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridx  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name gridy  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name pane btn  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name btn down  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name pane btn  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name action performed  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name action event  end_name  end_type  begin_name arg 0  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  begin_index  end_index  end_type  begin_name tab values  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name string  end_name  begin_index  end_index  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name b continue  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name cur language  end_name  begin_operator  end_operator  begin_name get text  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name tab values  end_name  begin_index  begin_expr  begin_operator  end_operator  begin_name current index  end_name  begin_operator  end_operator  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment language has changed  end_comment  begin_expr_stmt  begin_expr  begin_name b continue  end_name  begin_operator  end_operator  begin_call  begin_name is unique language  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tab values  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name cur language  end_name  begin_operator  end_operator  begin_name get text  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name b continue  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name  begin_name tab values  end_name  begin_index  begin_expr  begin_operator  end_operator  begin_name current index  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name cur body  end_name  begin_operator  end_operator  begin_name get text  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name tab values  end_name  begin_index  begin_expr  begin_operator  end_operator  begin_name current index  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name cur language  end_name  begin_operator  end_operator  begin_name get text  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name set value  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tab values  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name update fields  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment todo else alert  end_comment  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name action performed  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name action event  end_name  end_type  begin_name arg 0  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  begin_index  end_index  end_type  begin_name tab values  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name string  end_name  begin_index  end_index  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name num  end_name  begin_init  begin_expr  begin_call  begin_name get empty language  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tab values  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name num  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  begin_index  end_index  end_type  begin_name new tab values  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name string  end_name  begin_index  begin_expr  begin_name  begin_name tab values  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name arraycopy  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tab values  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name new tab values  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name tab values  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name new tab values  end_name  begin_index  begin_expr  begin_name  begin_name tab values  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name new tab values  end_name  begin_index  begin_expr  begin_name  begin_name tab values  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name set value  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new tab values  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name current index  end_name  begin_operator  end_operator  begin_name  begin_name new tab values  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name update fields  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_comment a language must be unique  end_comment  begin_comment so select the current empty language  end_comment  begin_comment todo alert  end_comment  begin_expr_stmt  begin_expr  begin_name current index  end_name  begin_operator  end_operator  begin_name num  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name update fields  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name action performed  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name action event  end_name  end_type  begin_name arg 0  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  begin_index  end_index  end_type  begin_name tab values  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name string  end_name  begin_index  end_index  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name  begin_name tab values  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  begin_index  end_index  end_type  begin_name new tab values  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name string  end_name  begin_index  begin_expr  begin_name  begin_name tab values  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name current index  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment copy previous element  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name arraycopy  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tab values  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name new tab values  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name current index  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name current index  end_name  begin_operator  end_operator  begin_name  begin_name tab values  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment copy next element  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name arraycopy  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tab values  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name current index  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name new tab values  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name current index  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name tab values  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name current index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name set value  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new tab values  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name current index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name new tab values  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name current index  end_name  begin_operator  end_operator  begin_name  begin_name new tab values  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name update fields  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  begin_index  end_index  end_type  begin_name new tab values  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name string  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name new tab values  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name new tab values  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name set value  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new tab values  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name update fields  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name action performed  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name action event  end_name  end_type  begin_name arg 0  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name current index  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  begin_index  end_index  end_type  begin_name tab values  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name string  end_name  begin_index  end_index  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  begin_index  end_index  end_type  begin_name sav tab values  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name string  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_comment copy in memory the current  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name arraycopy  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tab values  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name current index  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name sav tab values  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment copy the previous value in the current  end_comment  begin_expr_stmt  begin_expr  begin_name  begin_name tab values  end_name  begin_index  begin_expr  begin_name current index  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_name  begin_name tab values  end_name  begin_index  begin_expr  begin_name current index  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_index  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name tab values  end_name  begin_index  begin_expr  begin_name current index  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_name  begin_name tab values  end_name  begin_index  begin_expr  begin_name current index  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_index  end_name  end_expr  end_expr_stmt  begin_comment copy the current in the previous  end_comment  begin_expr_stmt  begin_expr  begin_name  begin_name tab values  end_name  begin_index  begin_expr  begin_operator  end_operator  begin_name current index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_name  begin_name sav tab values  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name tab values  end_name  begin_index  begin_expr  begin_operator  end_operator  begin_name current index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_name  begin_name sav tab values  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name set value  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tab values  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name current index  end_name  begin_operator  end_operator  begin_name current index  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name update fields  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name action performed  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name action event  end_name  end_type  begin_name arg 0  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name current index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name list model  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  begin_index  end_index  end_type  begin_name tab values  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name string  end_name  begin_index  end_index  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  begin_index  end_index  end_type  begin_name sav tab values  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name string  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_comment copy in memory the current  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name arraycopy  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tab values  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name current index  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name sav tab values  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment copy the next value in the current  end_comment  begin_expr_stmt  begin_expr  begin_name  begin_name tab values  end_name  begin_index  begin_expr  begin_name current index  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_name  begin_name tab values  end_name  begin_index  begin_expr  begin_operator  end_operator  begin_name current index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_index  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name tab values  end_name  begin_index  begin_expr  begin_name current index  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_name  begin_name tab values  end_name  begin_index  begin_expr  begin_operator  end_operator  begin_name current index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_index  end_name  end_expr  end_expr_stmt  begin_comment copy the current in the next  end_comment  begin_expr_stmt  begin_expr  begin_name  begin_name tab values  end_name  begin_index  begin_expr  begin_operator  end_operator  begin_name current index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_name  begin_name sav tab values  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name tab values  end_name  begin_index  begin_expr  begin_operator  end_operator  begin_name current index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_name  begin_name sav tab values  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name model  end_name  begin_operator  end_operator  begin_name set value  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tab values  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name current index  end_name  begin_operator  end_operator  begin_name current index  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name update fields  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block 
 begin_specifier  end_specifier  begin_name uml value specification value field opaque expression dialog  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name uml value specification model  end_name  end_type  begin_name a model  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name current index  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name super  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment non nls 1  end_comment  begin_expr_stmt  begin_expr  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name model  end_name  end_name  begin_operator  end_operator  begin_name a model  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name current index call  end_name  end_name  begin_operator  end_operator  begin_name current index  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name current index  end_name  end_name  begin_operator  end_operator  begin_name current index  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set size  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name build first panel  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name update fields  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_specifier  end_specifier  begin_name base profile  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  end_type  begin_name the models  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name this  end_name  begin_argument_list  begin_argument  begin_expr  begin_name the models  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name load profile models  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name iterator  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name next  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_specifier  end_specifier  begin_name base profile  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  end_type  begin_name the models  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name profile model  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_name models  end_name  begin_operator  end_operator  begin_name the models  end_name  end_expr  end_expr_stmt  begin_assert  begin_expr  begin_call  begin_name  begin_name models  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_assert  begin_comment non nls 1  end_comment  begin_assert  begin_expr  begin_name profile model  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_assert  begin_comment non nls 1  end_comment  begin_expr_stmt  begin_expr  begin_name profile  end_name  begin_operator  end_operator  begin_name profile model  end_name  end_expr  end_expr_stmt  end_block 
begin_comment non nls 1 end_comment begin_name default type strategy cpp  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name profile models  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name profile models  end_name  begin_operator  end_operator  begin_name is empty  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_comment non nls 1  end_comment  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  begin_comment non nls 1  end_comment  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name profile models  end_name  end_name  begin_operator  end_operator  begin_name profile models  end_name  end_expr  end_expr_stmt  end_block 
begin_comment return gui identifier of the profile see org argouml profile profile get display name end_comment begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name get display name  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  end_expr  end_return  begin_comment non nls 1  end_comment  end_block 
begin_comment non nls 1 end_commentbegin_comment return a collection which contains the profile model see org argouml profile profile get profile packages end_comment begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name collection  end_name  end_type  begin_name get profile packages  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name collections  end_name  begin_operator  end_operator  begin_name unmodifiable collection  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get profile models  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_specifier  end_specifier  begin_name normal profile cpp  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name profile  end_name  end_type  begin_name uml profile  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name profile facade  end_name  begin_operator  end_operator  begin_name get manager  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get uml profile  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_assert  begin_expr  begin_name uml profile  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_assert  begin_comment non nls 1  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name add profile dependency  end_name  begin_argument_list  begin_argument  begin_expr  begin_name uml profile  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment process a type specification by stripping pointer operators from the type name and processing them to tagged values that are added to the provide list param type name unprocessed c type name param tagged values list of tagged values where any processing result is added to return the stripped type name end_comment begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name process ptr operators  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name type name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name list  end_name  end_type  begin_name tagged values  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo implement  end_comment  begin_return  begin_expr  begin_name type name  end_name  end_expr  end_return  end_block 
begin_comment see org argouml moduleloader module interface get info int end_comment begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name get info  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_switch  begin_condition  begin_expr  begin_name type  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  begin_name  begin_name module interface  end_name  begin_operator  end_operator  begin_name author  end_name  end_name  end_expr  begin_return  begin_expr  end_expr  end_return  begin_comment non nls 1  end_comment  end_case  begin_case  begin_expr  begin_name  begin_name module interface  end_name  begin_operator  end_operator  begin_name description  end_name  end_name  end_expr  begin_comment todo i 18 n  end_comment  begin_return  begin_expr  end_expr  end_return  end_case  begin_case  begin_expr  begin_name  begin_name module interface  end_name  begin_operator  end_operator  begin_name version  end_name  end_name  end_expr  begin_return  begin_expr  begin_comment todo i 18 n  end_comment  begin_operator  end_operator  begin_name revision date  end_name  end_expr  end_return  begin_comment todo remove duplication here and in profile module get info  end_comment  end_case  begin_case  begin_expr  begin_name  begin_name module interface  end_name  begin_operator  end_operator  begin_name downloadsite  end_name  end_name  end_expr  begin_return  begin_expr  end_expr  end_return  begin_comment non nls 1  end_comment  end_case  begin_default  begin_return  begin_expr  end_expr  end_return  end_default  end_block  end_switch  end_block 
begin_comment see org argouml uml reveng import interface get suffix filters end_comment begin_type  begin_specifier  end_specifier  begin_name suffix filter  end_name  begin_index  end_index  end_type  begin_name get suffix filters  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name suffix filter  end_name  begin_index  end_index  end_type  begin_name result  end_name  begin_init  begin_expr  begin_block  begin_comment todo i 18 n  end_comment  begin_expr  begin_operator  end_operator  begin_call  begin_name suffix filter  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_block  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_name result  end_name  end_expr  end_return  end_block 
begin_comment see org argouml uml reveng import interface parse files org argouml kernel project java util collection org argouml uml reveng import settings org argouml application api progress monitor end_comment begin_type  begin_specifier  end_specifier  begin_name collection  end_name  end_type  begin_name parse files  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name project  end_name  end_type  begin_name p  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name file  end_name  end_argument  end_argument_list  end_name  end_type  begin_name files  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name import settings  end_name  end_type  begin_name settings  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name progress monitor  end_name  end_type  begin_name monitor  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name import exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_expr_stmt  begin_expr  begin_name second pass files  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name array list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name new elements  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name hash set  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment get the java profile from project if available  end_comment  begin_expr_stmt  begin_expr  begin_name java profile  end_name  begin_operator  end_operator  begin_call  begin_name get java profile  end_name  begin_argument_list  begin_argument  begin_expr  begin_name p  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name monitor  end_name  begin_operator  end_operator  begin_name set maximum progress  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name count files  end_name  begin_argument_list  begin_argument  begin_expr  begin_name files  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name file  end_name  begin_range  begin_expr  begin_name files  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name monitor  end_name  begin_operator  end_operator  begin_name update main task  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name file  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name monitor  end_name  begin_operator  end_operator  begin_name is canceled  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_break  end_break  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name process file  end_name  begin_argument_list  begin_argument  begin_expr  begin_name p  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name file  end_name  begin_operator  end_operator  begin_name file  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name monitor  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name monitor  end_name  begin_operator  end_operator  begin_name update progress  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name file count  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_if  begin_condition  begin_expr  begin_call  begin_name count 2 nd pass files  end_name  begin_argument_list  begin_argument  begin_expr  begin_name second pass files  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name monitor  end_name  begin_operator  end_operator  begin_name is canceled  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment process all the files that need a second pass  end_comment  begin_for  begin_init  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name next  end_name  begin_range  begin_expr  begin_name second pass files  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_try  begin_block  begin_if  begin_condition  begin_expr  begin_name next  end_name  begin_operator  end_operator  begin_name collection  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name do 2 nd jar pass  end_name  begin_argument_list  begin_argument  begin_expr  begin_name p  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name collection  end_name  begin_operator  end_operator  begin_name next  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name monitor  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name next file  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name file  end_name  begin_operator  end_operator  begin_name next  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name file name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name next file  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name file input stream  end_name  end_type  begin_name fis  end_name  end_decl  end_decl_stmt  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_name fis  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name file input stream  end_name  begin_argument_list  begin_argument  begin_expr  begin_name next file  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name file not found exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name import exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  begin_comment todo i 18 n  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name monitor  end_name  begin_operator  end_operator  begin_name update sub task  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name file name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name monitor  end_name  begin_operator  end_operator  begin_name is canceled  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_break  end_break  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name parse file  end_name  begin_argument_list  begin_argument  begin_expr  begin_name p  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name fis  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name file name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name monitor  end_name  begin_operator  end_operator  begin_name update progress  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name file count  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name antlr exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name import exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name io exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name import exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  end_block  end_for  end_block  end_then  end_if  begin_return  begin_expr  begin_name new elements  end_name  end_expr  end_return  end_block 
begin_comment the main method for all parsing actions it calls the actual parser methods depending on the type of the file param f the file or directory we want to parse throws import exception containing nested exception with original error end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name process file  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name project  end_name  end_type  begin_name p  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name f  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name progress monitor  end_name  end_type  begin_name monitor  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name import exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name monitor  end_name  begin_operator  end_operator  begin_name update main task  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name f  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment is this file a jarfile  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name f  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name ends with  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment non nls 1  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name process jar file  end_name  begin_argument_list  begin_argument  begin_expr  begin_name p  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name f  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name monitor  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name file name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name f  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_comment try to parse this file  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name input stream  end_name  end_type  begin_name is  end_name  end_decl  end_decl_stmt  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_name is  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name file input stream  end_name  begin_argument_list  begin_argument  begin_expr  begin_name f  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name file not found exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name import exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  begin_expr_stmt  begin_expr  begin_call  begin_name parse file  end_name  begin_argument_list  begin_argument  begin_expr  begin_name p  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name is  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name file name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name antlr exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo is this still needed appropriate it looks like  end_comment  begin_comment modeller has been changed so that it no longer throws  end_comment  begin_comment exceptions tfm  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name second pass files  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name f  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  end_try  end_block  end_else  end_if  end_block 
begin_comment process a jar file that contains classfiles param f the jar file end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name process jar file  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name project  end_name  end_type  begin_name p  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name f  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name progress monitor  end_name  end_type  begin_name monitor  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name import exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name jar file  end_name  end_type  begin_name jarfile  end_name  end_decl  end_decl_stmt  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_name jarfile  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name jar file  end_name  begin_argument_list  begin_argument  begin_expr  begin_name f  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name io exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name import exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name f  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  begin_comment a second pass buffer just for this jar  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name jar second pass files  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name array list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name  begin_name enumeration  end_name  begin_argument_list  begin_argument  begin_name jar entry  end_name  end_argument  end_argument_list  end_name  end_type  begin_name e  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name jarfile  end_name  begin_operator  end_operator  begin_name entries  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name has more elements  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_incr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name jar entry  end_name  end_type  begin_name entry  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name next element  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name entry name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name entry  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name entry  end_name  begin_operator  end_operator  begin_name is directory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name entry name  end_name  begin_operator  end_operator  begin_name ends with  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment non nls 1  end_comment  begin_try  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name input stream  end_name  end_type  begin_name is  end_name  end_decl  end_decl_stmt  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_name is  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name jarfile  end_name  begin_operator  end_operator  begin_name get input stream  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name entry  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name io exception  end_name  end_type  begin_name e 1  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment if this happens something bad is going on  end_comment  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name import exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e 1  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  begin_comment todo i 18 n  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name monitor  end_name  begin_operator  end_operator  begin_name update sub task  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name entry name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name monitor  end_name  begin_operator  end_operator  begin_name is canceled  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_break  end_break  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name parse file  end_name  begin_argument_list  begin_argument  begin_expr  begin_name p  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name is  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name entry name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name monitor  end_name  begin_operator  end_operator  begin_name update progress  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name file count  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name antlr exception  end_name  end_type  begin_name e 1  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name jar second pass files  end_name  begin_operator  end_operator  begin_name is empty  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment if there are no files tagged for a second pass  end_comment  begin_comment add the jar file as the 1 st element  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name jar second pass files  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name f  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment store the entry to be parsed a 2 nd time  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name jar second pass files  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name entry name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  end_try  end_block  end_then  end_if  end_block  end_for  begin_comment if there are files to parse again add the jar to the 2 nd pass  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name jar second pass files  end_name  begin_operator  end_operator  begin_name is empty  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name second pass files  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name jar second pass files  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name jarfile  end_name  begin_operator  end_operator  begin_name close  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name io exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name import exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name f  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  end_block 
begin_comment do a 2 nd pass on a jar file param second pass buffer a buffer that holds the jarfile and the names of the entries to parse again throws token stream exception throws recognition exception end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name do 2 nd jar pass  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name project  end_name  end_type  begin_name p  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name second pass buffer  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name progress monitor  end_name  end_type  begin_name monitor  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name io exception  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name recognition exception  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name token stream exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name second pass buffer  end_name  begin_operator  end_operator  begin_name is empty  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name iterator  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name second pass buffer  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name jar file  end_name  end_type  begin_name jarfile  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name jar file  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name file  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name iterator  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name iterator  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name filename  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name string  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name iterator  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo i 18 n  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name monitor  end_name  begin_operator  end_operator  begin_name update sub task  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name filename  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name monitor  end_name  begin_operator  end_operator  begin_name is canceled  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_break  end_break  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name parse file  end_name  begin_argument_list  begin_argument  begin_expr  begin_name p  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name jarfile  end_name  begin_operator  end_operator  begin_name get input stream  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name jarfile  end_name  begin_operator  end_operator  begin_name get entry  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name filename  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name filename  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name monitor  end_name  begin_operator  end_operator  begin_name update progress  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name file count  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_while  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name jarfile  end_name  begin_operator  end_operator  begin_name close  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block 
begin_comment see org argouml uml reveng file import support get name end_comment begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name get name  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment todo i 18 n  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
begin_comment see org argouml uml reveng file import support get suffix filters end_comment begin_type  begin_specifier  end_specifier  begin_name suffix filter  end_name  begin_index  end_index  end_type  begin_name get suffix filters  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name suffix filter  end_name  begin_index  end_index  end_type  begin_name result  end_name  begin_init  begin_expr  begin_block  begin_comment todo i 18 n  end_comment  begin_expr  begin_operator  end_operator  begin_call  begin_name suffix filter  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name string  end_name  begin_index  end_index  end_name  begin_block  begin_expr  end_expr  begin_expr  end_expr  end_block  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name suffix filter  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name suffix filter  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_block  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_name result  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name do import pass  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name project  end_name  end_type  begin_name p  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name collection  end_name  begin_argument_list  begin_argument  begin_name file  end_name  end_argument  end_argument_list  end_name  end_type  begin_name files  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name import settings  end_name  end_type  begin_name settings  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name progress monitor  end_name  end_type  begin_name monitor  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name start count  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name pass  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name count  end_name  begin_init  begin_expr  begin_name start count  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name file  end_name  begin_range  begin_expr  begin_name files  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name monitor  end_name  begin_operator  end_operator  begin_name is canceled  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name monitor  end_name  begin_operator  end_operator  begin_name update sub task  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_then  end_if  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name parse file  end_name  begin_argument_list  begin_argument  begin_expr  begin_name p  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name file  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name settings  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name pass  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string writer  end_name  end_type  begin_name sw  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name string writer  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name print writer  end_name  end_type  begin_name pw  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name java  end_name  begin_operator  end_operator  begin_name io  end_name  begin_operator  end_operator  begin_name print writer  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name sw  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name print stack trace  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name pw  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name monitor  end_name  begin_operator  end_operator  begin_name notify message  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_comment non nls 1  end_comment  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_comment non nls 1  end_comment  begin_argument  begin_expr  begin_call  begin_name  begin_name sw  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name monitor  end_name  begin_operator  end_operator  begin_name is canceled  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_break  end_break  end_block  end_then  end_if  end_block  end_catch  end_try  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name monitor  end_name  begin_operator  end_operator  begin_name update progress  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name count  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name monitor  end_name  begin_operator  end_operator  begin_name update sub task  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name translator  end_name  begin_operator  end_operator  begin_name localize  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name object  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_call  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name get absolute path  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_block  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_return  end_return  end_block 
begin_comment add an annotation declaration param name identifier for annotation definition param modifiers a sequence of modifiers param javadoc the javadoc comment null or if no comment available param force it force addition by creating all that s missing end_comment begin_type  begin_name void  end_name  end_type  begin_name add annotation definition  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name short  end_name  end_type  begin_name modifiers  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name javadoc  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name force it  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo not implemented  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name log error  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment called from the parser when an annotation declaration is found param name identifier for annotation end_comment begin_type  begin_name void  end_name  end_type  begin_name add annotation  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo not implemented  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name log error  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name get module root  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment use a little trick to find out where this module is being loaded  end_comment  begin_comment from code was stolen from module loader 2 and modified  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name res name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name utils  end_name  begin_operator  end_operator  begin_name  begin_name class  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name res name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name res name  end_name  begin_operator  end_operator  begin_name replace  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_name class suffix  end_name  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name ext form  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name utils  end_name  begin_operator  end_operator  begin_name  begin_name class  end_name  begin_operator  end_operator  begin_name get resource  end_name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name res name  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to external form  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name module root  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ext form  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name ext form  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name res name  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment if it s a jar clean it up and make it look like a file url  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name module root  end_name  begin_operator  end_operator  begin_name starts with  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name jar prefix  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name module root  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name module root  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name jar prefix  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name module root  end_name  begin_operator  end_operator  begin_name ends with  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name module root  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name module root  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name module root  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name p  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name module root  end_name  begin_operator  end_operator  begin_name last index of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name module root  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name module root  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name p  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name module root  end_name  begin_operator  end_operator  begin_name starts with  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name file prefix  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name module root  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name module root  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name file prefix  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_name module root  end_name  end_expr  end_return  end_block 
