 begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name calculate actual required  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name params length  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name optional  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name rest  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name is static  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name has context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name has block  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name actual required  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name optional  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name rest  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name args  end_name  begin_init  begin_expr  begin_name params length  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name args  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name actual required  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_if  begin_condition  begin_expr  begin_name is static  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name args  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name has context  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name args  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name has block  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name args  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_comment todo confirm expected args are i ruby object or similar  end_comment  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name actual required  end_name  begin_operator  end_operator  begin_name args  end_name  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  begin_else  begin_block  begin_comment optional args so we have i ruby object  end_comment  begin_comment todo confirm  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name args  end_name  begin_init  begin_expr  begin_name params length  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name args  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name actual required  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_if  begin_condition  begin_expr  begin_name is static  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name args  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name has context  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name args  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name has block  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name args  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_comment minus one more for i ruby object  end_comment  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name args  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_comment todo confirm expected args are i ruby object or similar  end_comment  begin_expr_stmt  begin_expr  begin_name actual required  end_name  begin_operator  end_operator  begin_name args  end_name  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_if  begin_condition  begin_expr  begin_name actual required  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name runtime exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  end_block  end_else  end_if  begin_return  begin_expr  begin_name actual required  end_name  end_expr  end_return  end_block 
 begin_specifier  end_specifier  begin_name java method descriptor  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name method  end_name  end_type  begin_name method  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_name anno  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name get annotation  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name j ruby method  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name modifiers  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name get modifiers  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name declaring class  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name get declaring class  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name declaring class name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name declaring class  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name declaring class path  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name codegen utils  end_name  begin_operator  end_operator  begin_name p  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name declaring class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name is static  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name modifier  end_name  begin_operator  end_operator  begin_name is static  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name modifiers  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name parameters  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name get parameter types  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name return class  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name get return type  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name  begin_name parameters  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name has context  end_name  begin_operator  end_operator  begin_name  begin_name parameters  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_name  begin_name thread context  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name has block  end_name  begin_operator  end_operator  begin_name  begin_name parameters  end_name  begin_index  begin_expr  begin_name  begin_name parameters  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name has context  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name has block  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_if  begin_condition  begin_expr  begin_name has context  end_name  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name has block  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment args should be before block  end_comment  begin_expr_stmt  begin_expr  begin_name has var args  end_name  begin_operator  end_operator  begin_name  begin_name parameters  end_name  begin_index  begin_expr  begin_name  begin_name parameters  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  begin_operator  end_operator  begin_name class  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_comment args should be at end  end_comment  begin_expr_stmt  begin_expr  begin_name has var args  end_name  begin_operator  end_operator  begin_name  begin_name parameters  end_name  begin_index  begin_expr  begin_name  begin_name parameters  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  begin_operator  end_operator  begin_name class  end_name  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  begin_else  begin_block  begin_if  begin_condition  begin_expr  begin_name has block  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name has var args  end_name  begin_operator  end_operator  begin_name  begin_name parameters  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name parameters  end_name  begin_index  begin_expr  begin_name  begin_name parameters  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  begin_operator  end_operator  begin_name class  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name has var args  end_name  begin_operator  end_operator  begin_name  begin_name parameters  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name parameters  end_name  begin_index  begin_expr  begin_name  begin_name parameters  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  begin_operator  end_operator  begin_name class  end_name  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_else  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name start  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name has context  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name is static  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name end  end_name  begin_init  begin_expr  begin_name  begin_name parameters  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name has block  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name argument types  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name class  end_name  begin_index  begin_expr  begin_name end  end_name  begin_operator  end_operator  begin_name start  end_name  end_expr  end_index  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name arraycopy  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name parameters  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name start  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name argument types  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name end  end_name  begin_operator  end_operator  begin_name start  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name optional  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name anno  end_name  begin_operator  end_operator  begin_name optional  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name rest  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name anno  end_name  begin_operator  end_operator  begin_name rest  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name required  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name anno  end_name  begin_operator  end_operator  begin_name required  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name optional  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name rest  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name args  end_name  begin_init  begin_expr  begin_name  begin_name parameters  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name args  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name actual required  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_if  begin_condition  begin_expr  begin_name is static  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_name args  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name has context  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_name args  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name has block  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_name args  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_then  end_if  begin_comment todo confirm expected args are i ruby object or similar  end_comment  begin_expr_stmt  begin_expr  begin_name actual required  end_name  begin_operator  end_operator  begin_name args  end_name  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  begin_else  begin_block  begin_comment optional args so we have i ruby object  end_comment  begin_comment todo confirm  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name args  end_name  begin_init  begin_expr  begin_name  begin_name parameters  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name args  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name actual required  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_if  begin_condition  begin_expr  begin_name is static  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_name args  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name has context  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_name args  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name has block  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_name args  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_then  end_if  begin_comment minus one more for i ruby object  end_comment  begin_expr_stmt  begin_expr  begin_name args  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_comment todo confirm expected args are i ruby object or similar  end_comment  begin_expr_stmt  begin_expr  begin_name actual required  end_name  begin_operator  end_operator  begin_name args  end_name  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_if  begin_condition  begin_expr  begin_name actual required  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name runtime exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  end_block  end_else  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name arity required  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name max  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name required  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name actual required  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name arity  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name optional  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name rest  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name arity required  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name arity required  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name signature  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name codegen utils  end_name  begin_operator  end_operator  begin_name sig  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name get return type  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name get parameter types  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name interpret  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name block  end_name  end_type  begin_name a block  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name enclosing class  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name cpath  end_name  begin_operator  end_operator  begin_name get enclosing module  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name a block  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo figure out how this can happen and possibly remove  end_comment  begin_if  begin_condition  begin_expr  begin_name enclosing class  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new type error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name ruby class  end_name  end_type  begin_name super class  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name super node  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name super obj  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name super node  end_name  begin_operator  end_operator  begin_name interpret  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name a block  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ruby class  end_name  begin_operator  end_operator  begin_name check inheritable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name super obj  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name super class  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name ruby class  end_name  begin_operator  end_operator  begin_name super obj  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name defined already  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name enclosing class  end_name  begin_operator  end_operator  begin_name is constant defined  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name cpath  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name ruby class  end_name  end_type  begin_name clazz  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name enclosing class  end_name  begin_operator  end_operator  begin_name define or get class under  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name cpath  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name super class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name scope  end_name  begin_operator  end_operator  begin_name set module  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name clazz  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name class body result  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ast interpreter  end_name  begin_operator  end_operator  begin_name eval class definition body  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name scope  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name body node  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name clazz  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name a block  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment experimental class reification support to create real java classes  end_comment  begin_comment for ruby classes after the first opening  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name defined already  end_name  begin_operator  end_operator  begin_name  begin_name ruby instance config  end_name  begin_operator  end_operator  begin_name reify ruby classes  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name clazz  end_name  begin_operator  end_operator  begin_name reify  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_name class body result  end_name  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name assign  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name value  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name block  end_name  end_type  begin_name block  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name check arity  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name module  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name const node  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name module  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get current scope  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get static scope  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get module  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name module  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment todo wire into new exception handling mechanism  end_comment  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new type error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name const node  end_name  begin_operator  end_operator  begin_name colon 2 node  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name left node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name colon 2 node  end_name  begin_operator  end_operator  begin_name const node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get left node  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name left node  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name module  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name module  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name left node  end_name  begin_operator  end_operator  begin_name interpret  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name block  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  begin_else  begin_block  begin_comment colon 3  end_comment  begin_expr_stmt  begin_expr  begin_name module  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get object  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_else  end_if  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name ruby module  end_name  begin_operator  end_operator  begin_name module  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name fast set constant  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment todo split this into two sub classes so that name and const node can be specified seperately end_comment begin_specifier  end_specifier  begin_name const decl node  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name i source position  end_name  end_type  begin_name position  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i name node  end_name  end_type  begin_name const node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name value node  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name super  end_name  begin_argument_list  begin_argument  begin_expr  begin_name position  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name value node  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name name  end_name  end_name  begin_operator  end_operator  begin_name name  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name const node  end_name  end_name  begin_operator  end_operator  begin_name const node  end_name  end_expr  end_expr_stmt  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name interpret  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name block  end_name  end_type  begin_name a block  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment system out println d getting i visited get name at index i visited get index and at depth i visited get depth  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name obj  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get current scope  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get value  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get index  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get depth  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment fixme null check is removable once we figure out how to assign to unset named block args  end_comment  begin_return  begin_expr  begin_name obj  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name obj  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name block body  end_name  end_type  begin_name create block body  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name script object  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name index  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name descriptor  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name number format exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  begin_index  end_index  end_type  begin_name first split  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name descriptor  end_name  begin_operator  end_operator  begin_name split  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  begin_index  end_index  end_type  begin_name second split  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name  begin_name first split  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name length  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name second split  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name string  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name second split  end_name  begin_operator  end_operator  begin_name  begin_name first split  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name split  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment fixme big fat hack here because scope names are expected to be interned strings by the parser  end_comment  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name  begin_name second split  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_expr_stmt  begin_expr  begin_name  begin_name second split  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_name  begin_name second split  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name intern  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  end_block  end_else  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name block body  end_name  end_type  begin_name body  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name runtime helpers  end_name  begin_operator  end_operator  begin_name create compiled block body  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name script object  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name first split  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name integer  end_name  begin_operator  end_operator  begin_name parse int  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name first split  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name second split  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name boolean  end_name  begin_operator  end_operator  begin_name value of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name first split  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name integer  end_name  begin_operator  end_operator  begin_name parse int  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name first split  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name boolean  end_name  begin_operator  end_operator  begin_name value of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name first split  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_name  begin_name block bodies  end_name  begin_index  begin_expr  begin_name index  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_name body  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name block body  end_name  end_type  begin_name create block body 19  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name script object  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name index  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name descriptor  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name number format exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  begin_index  end_index  end_type  begin_name first split  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name descriptor  end_name  begin_operator  end_operator  begin_name split  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  begin_index  end_index  end_type  begin_name second split  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name  begin_name first split  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name length  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name second split  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name string  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name second split  end_name  begin_operator  end_operator  begin_name  begin_name first split  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name split  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment fixme big fat hack here because scope names are expected to be interned strings by the parser  end_comment  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name  begin_name second split  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_expr_stmt  begin_expr  begin_name  begin_name second split  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_name  begin_name second split  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name intern  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  end_block  end_else  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name block body  end_name  end_type  begin_name body  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name runtime helpers  end_name  begin_operator  end_operator  begin_name create compiled block body 19  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name script object  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name first split  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name integer  end_name  begin_operator  end_operator  begin_name parse int  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name first split  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name second split  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name boolean  end_name  begin_operator  end_operator  begin_name value of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name first split  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name integer  end_name  begin_operator  end_operator  begin_name parse int  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name first split  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name boolean  end_name  begin_operator  end_operator  begin_name value of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name first split  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_name  begin_name block bodies  end_name  begin_index  begin_expr  begin_name index  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_name body  end_name  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name interpret  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name block  end_name  end_type  begin_name a block  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name i source position  end_name  end_type  begin_name position  end_name  begin_init  begin_expr  begin_call  begin_name get position  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name set file  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name position  end_name  begin_operator  end_operator  begin_name get file  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name set line  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name position  end_name  begin_operator  end_operator  begin_name get start line  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name result  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name condition  end_name  begin_operator  end_operator  begin_name interpret  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name a block  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo put these nil guards into tree bigger than i want to do right now  end_comment  begin_comment fixme jruby 3188 ends up with condition returning null quick fix until i can dig into it  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name is true  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name then body  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name then body  end_name  begin_operator  end_operator  begin_name interpret  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name a block  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_return  begin_expr  begin_name else body  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name else body  end_name  begin_operator  end_operator  begin_name interpret  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name a block  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_else  end_if  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name interpret  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name block  end_name  end_type  begin_name a block  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name i source position  end_name  end_type  begin_name position  end_name  begin_init  begin_expr  begin_call  begin_name get position  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment something in here is used to build up ruby stack trace  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name set file  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name position  end_name  begin_operator  end_operator  begin_name get file  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name set line  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name position  end_name  begin_operator  end_operator  begin_name get start line  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name has event hooks  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ast interpreter  end_name  begin_operator  end_operator  begin_name call trace function  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name ruby event  end_name  begin_operator  end_operator  begin_name line  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment todo do above but not below for additional newline nodes  end_comment  begin_return  begin_expr  begin_call  begin_name  begin_name next node  end_name  begin_operator  end_operator  begin_name interpret  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name a block  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name execute body  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name block  end_name  end_type  begin_name a block  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment fixme make body node non null in parser  end_comment  begin_if  begin_condition  begin_expr  begin_name body node  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_comment execute rescue block  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name result  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name body node  end_name  begin_operator  end_operator  begin_name interpret  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name a block  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment if no exception is thrown execute else block  end_comment  begin_if  begin_condition  begin_expr  begin_name else node  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name rescue node  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get warnings  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name warn  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name id  end_name  begin_operator  end_operator  begin_name else without rescue  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name else node  end_name  begin_operator  end_operator  begin_name get position  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name result  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name else node  end_name  begin_operator  end_operator  begin_name interpret  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name a block  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_name result  end_name  end_expr  end_return  end_block 
begin_comment fixme can get optimized for i eql node end_comment begin_type  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name when no test  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name block  end_name  end_type  begin_name a block  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name expression nodes  end_name  begin_operator  end_operator  begin_name interpret  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name a block  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is true  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name body node  end_name  begin_operator  end_operator  begin_name interpret  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name a block  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile alias  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name alias node  end_name  end_type  begin_name alias  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name alias node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name define alias  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name alias  end_name  begin_operator  end_operator  begin_name get new name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name alias  end_name  begin_operator  end_operator  begin_name get old name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name and node  end_name  begin_operator  end_operator  begin_name get second node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name next value  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name source array  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name index  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  begin_init  begin_expr  begin_call  begin_name node  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name object  end_name  begin_index  end_index  end_name  begin_operator  end_operator  begin_name source array  end_name  end_expr  end_argument  end_argument_list  end_call  begin_index  begin_expr  begin_name index  end_name  end_expr  end_index  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_name node  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile args cat  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name args cat node  end_name  end_type  begin_name args cat node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name args cat node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name args cat node  end_name  begin_operator  end_operator  begin_name get first node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name ensure ruby array  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name args cat node  end_name  begin_operator  end_operator  begin_name get second node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name splat current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name concat arrays  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile attr assign  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name attr assign node  end_name  end_type  begin_name attr assign node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name attr assign node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name compiler callback  end_name  end_type  begin_name receiver callback  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name compiler callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name attr assign node  end_name  begin_operator  end_operator  begin_name get receiver node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name arguments callback  end_name  end_type  begin_name args callback  end_name  begin_init  begin_expr  begin_call  begin_name get args callback  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name attr assign node  end_name  begin_operator  end_operator  begin_name get args node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get invocation compiler  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name invoke attr assign  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name attr assign node  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name receiver callback  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name args callback  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile attr assign assignment  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name attr assign node  end_name  end_type  begin_name attr assign node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name attr assign node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name compiler callback  end_name  end_type  begin_name receiver callback  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name compiler callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name attr assign node  end_name  begin_operator  end_operator  begin_name get receiver node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name arguments callback  end_name  end_type  begin_name args callback  end_name  begin_init  begin_expr  begin_call  begin_name get args callback  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name attr assign node  end_name  begin_operator  end_operator  begin_name get args node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get invocation compiler  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name invoke attr assign masgn  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name attr assign node  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name receiver callback  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name args callback  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile backref  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name back ref node  end_name  end_type  begin_name i visited  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name back ref node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name perform backref  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name i visited  end_name  begin_operator  end_operator  begin_name get type  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile break  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name break node  end_name  end_type  begin_name break node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name break node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name compiler callback  end_name  end_type  begin_name value callback  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name compiler callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name break node  end_name  begin_operator  end_operator  begin_name get value node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name break node  end_name  begin_operator  end_operator  begin_name get value node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name load nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name issue break event  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name value callback  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name call node  end_name  end_type  begin_name call node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name call node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name compiler callback  end_name  end_type  begin_name receiver callback  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name compiler callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name call node  end_name  begin_operator  end_operator  begin_name get receiver node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name arguments callback  end_name  end_type  begin_name args callback  end_name  begin_init  begin_expr  begin_call  begin_name get args callback  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name call node  end_name  begin_operator  end_operator  begin_name get args node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name compiler callback  end_name  end_type  begin_name closure arg  end_name  begin_init  begin_expr  begin_call  begin_name get block  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name call node  end_name  begin_operator  end_operator  begin_name get iter node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name call node  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name call type  end_name  end_type  begin_name call type  end_name  begin_init  begin_expr  begin_name  begin_name call type  end_name  begin_operator  end_operator  begin_name normal  end_name  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name args callback  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name args callback  end_name  begin_operator  end_operator  begin_name get arity  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name argument  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name call node  end_name  begin_operator  end_operator  begin_name get args node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name child nodes  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_switch  begin_condition  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name char at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_if  begin_condition  begin_expr  begin_name argument  end_name  begin_operator  end_operator  begin_name fixnum node  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get invocation compiler  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name invoke binary fixnum rhs  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name receiver callback  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name fixnum node  end_name  begin_operator  end_operator  begin_name argument  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get value  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  begin_return  end_return  end_block  end_then  end_if  end_case  end_block  end_switch  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name argument  end_name  begin_operator  end_operator  begin_name fixnum node  end_name  end_expr  end_condition  begin_then  begin_block  begin_switch  begin_condition  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name char at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_switch  begin_condition  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name char at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get invocation compiler  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name invoke binary fixnum rhs  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name receiver callback  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name fixnum node  end_name  begin_operator  end_operator  begin_name argument  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get value  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  begin_return  end_return  end_case  end_block  end_switch  end_case  end_block  end_switch  end_block  end_then  end_if  end_block  end_then  end_if  end_else  end_if  end_block  end_then  end_if  begin_comment if send with a literal symbol compile it as a direct fcall  end_comment  begin_if  begin_condition  begin_expr  begin_name  begin_name ruby instance config  end_name  begin_operator  end_operator  begin_name fastsend compile enabled  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name literal send  end_name  begin_init  begin_expr  begin_call  begin_name get literal send  end_name  begin_argument_list  begin_argument  begin_expr  begin_name call node  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name literal send  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name name  end_name  begin_operator  end_operator  begin_name literal send  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name call type  end_name  begin_operator  end_operator  begin_name  begin_name call type  end_name  begin_operator  end_operator  begin_name functional  end_name  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get invocation compiler  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name invoke dynamic  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name receiver callback  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name args callback  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name call type  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name closure arg  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name call node  end_name  begin_operator  end_operator  begin_name get iter node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name iter node  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile class  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name class node  end_name  end_type  begin_name class node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name class node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name node  end_name  end_type  begin_name super node  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name class node  end_name  begin_operator  end_operator  begin_name get super node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name node  end_name  end_type  begin_name cpath node  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name class node  end_name  begin_operator  end_operator  begin_name get c path  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name compiler callback  end_name  end_type  begin_name super callback  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name compiler callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_name super node  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name super node  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name super callback  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name compiler callback  end_name  end_type  begin_name body callback  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name compiler callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name old is at root  end_name  begin_init  begin_expr  begin_name is at root  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name is at root  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name class node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name class node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name load nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_name is at root  end_name  begin_operator  end_operator  begin_name old is at root  end_name  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name compiler callback  end_name  end_type  begin_name path callback  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name compiler callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name cpath node  end_name  begin_operator  end_operator  begin_name colon 2 node  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name left node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name colon 2 node  end_name  begin_operator  end_operator  begin_name cpath node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get left node  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name left node  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name left node  end_name  begin_operator  end_operator  begin_name nil node  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name raise type error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_name left node  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name load nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name cpath node  end_name  begin_operator  end_operator  begin_name colon 3 node  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name load object  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name load nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_else  end_if  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name ast inspector  end_name  end_type  begin_name inspector  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name ast inspector  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name inspector  end_name  begin_operator  end_operator  begin_name inspect  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name class node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name define class  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name class node  end_name  begin_operator  end_operator  begin_name get c path  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name class node  end_name  begin_operator  end_operator  begin_name get scope  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name super callback  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name path callback  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name body callback  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name inspector  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile s class  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name s class node  end_name  end_type  begin_name sclass node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name s class node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name compiler callback  end_name  end_type  begin_name receiver callback  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name compiler callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name sclass node  end_name  begin_operator  end_operator  begin_name get receiver node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name compiler callback  end_name  end_type  begin_name body callback  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name compiler callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name old is at root  end_name  begin_init  begin_expr  begin_name is at root  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name is at root  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name sclass node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name sclass node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name load nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_name is at root  end_name  begin_operator  end_operator  begin_name old is at root  end_name  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name ast inspector  end_name  end_type  begin_name inspector  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name ast inspector  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name inspector  end_name  begin_operator  end_operator  begin_name inspect  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name sclass node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name define class  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name sclass node  end_name  begin_operator  end_operator  begin_name get scope  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name body callback  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name receiver callback  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name inspector  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile class var asgn  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name class var asgn node  end_name  end_type  begin_name class var asgn node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name class var asgn node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name compiler callback  end_name  end_type  begin_name value  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name compiler callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name class var asgn node  end_name  begin_operator  end_operator  begin_name get value node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name assign class variable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name class var asgn node  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile class var asgn assignment  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name class var asgn node  end_name  end_type  begin_name class var asgn node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name class var asgn node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name assign class variable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name class var asgn node  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile class var decl  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name class var decl node  end_name  end_type  begin_name class var decl node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name class var decl node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name compiler callback  end_name  end_type  begin_name value  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name compiler callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name class var decl node  end_name  begin_operator  end_operator  begin_name get value node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name declare class variable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name class var decl node  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile class var decl assignment  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name class var decl node  end_name  end_type  begin_name class var decl node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name class var decl node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name declare class variable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name class var decl node  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile const decl  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo callback for value would be more efficient but unlikely to be a big cost constants are rarely assigned  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name const decl node  end_name  end_type  begin_name const decl node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name const decl node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name const node  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name const decl node  end_name  begin_operator  end_operator  begin_name get const node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name const node  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name const decl node  end_name  begin_operator  end_operator  begin_name get value node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name assign constant in current  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name const decl node  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name const node  end_name  begin_operator  end_operator  begin_name get node type  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name  begin_name node type  end_name  begin_operator  end_operator  begin_name colon 2 node  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name colon 2 node  end_name  begin_operator  end_operator  begin_name const node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get left node  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name const decl node  end_name  begin_operator  end_operator  begin_name get value node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name assign constant in module  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name const decl node  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_comment colon 3 assign in object  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name const decl node  end_name  begin_operator  end_operator  begin_name get value node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name assign constant in object  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name const decl node  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_else  end_if  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile const decl assignment  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo callback for value would be more efficient but unlikely to be a big cost constants are rarely assigned  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name const decl node  end_name  end_type  begin_name const decl node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name const decl node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name const node  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name const decl node  end_name  begin_operator  end_operator  begin_name get const node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name const node  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name assign constant in current  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name const decl node  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name const node  end_name  begin_operator  end_operator  begin_name get node type  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name  begin_name node type  end_name  begin_operator  end_operator  begin_name colon 2 node  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name colon 2 node  end_name  begin_operator  end_operator  begin_name const node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get left node  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name swap values  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name assign constant in module  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name const decl node  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_comment colon 3 assign in object  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name assign constant in object  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name const decl node  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_else  end_if  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile const  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name const node  end_name  end_type  begin_name const node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name const node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name retrieve constant  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name const node  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  begin_comment xxx const lookup can trigger const missing is that enough to warrant it always being executed  end_comment  end_block 
begin_comment xxx const lookup can trigger const missing is that enough to warrant it always being executed end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile colon 2  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name colon 2 node  end_name  end_type  begin_name i visited  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name colon 2 node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name left node  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name i visited  end_name  begin_operator  end_operator  begin_name get left node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name i visited  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name left node  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name load object  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name retrieve constant from module  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_if  begin_condition  begin_expr  begin_name node  end_name  begin_operator  end_operator  begin_name colon 2 const node  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name i visited  end_name  begin_operator  end_operator  begin_name get left node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name retrieve constant from module  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name node  end_name  begin_operator  end_operator  begin_name colon 2 method node  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name compiler callback  end_name  end_type  begin_name receiver callback  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name compiler callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name i visited  end_name  begin_operator  end_operator  begin_name get left node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get invocation compiler  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name invoke dynamic  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name receiver callback  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name call type  end_name  begin_operator  end_operator  begin_name functional  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_block  end_else  end_if  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile colon 3  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name colon 3 node  end_name  end_type  begin_name i visited  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name colon 3 node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name i visited  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name retrieve constant from object  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name in defined  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name compile get definition  end_name  begin_argument_list  begin_argument  begin_expr  begin_name node  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name out defined  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name push string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name back ref node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get type  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name push null  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name push string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name nth ref node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get match number  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name push null  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name push string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name push null  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name push string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name push null  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name push string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name push null  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name push string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name push null  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name push string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name push null  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile get argument definition  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name f call node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get args node  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name push null  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name i visited  end_name  begin_operator  end_operator  begin_name colon 2 node  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name node  end_name  end_type  begin_name left node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name colon 2 node  end_name  begin_operator  end_operator  begin_name i visited  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get left node  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_name left node  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name load object  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name push string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name push string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name push null  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name i visited  end_name  begin_operator  end_operator  begin_name get receiver node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment i ruby object  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name duplicate current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment i ruby object i ruby object  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name metaclass  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment i ruby object ruby class  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name duplicate current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment i ruby object ruby class ruby class  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get visibility for  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name i visited  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment i ruby object ruby class visibility  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name duplicate current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment i ruby object ruby class visibility visibility  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name isfalse  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get new ending  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name isreal  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get new ending  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name ending  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get new ending  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name is private  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name isfalse  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment i ruby object ruby class visibility  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name is not protected  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name isreal  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment i ruby object ruby class  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name self is kind of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name isreal  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment i ruby object  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name go  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name isfalse  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name set ending  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name isreal  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment   end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name is method bound  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name i visited  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name branch callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile get argument definition  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name i visited  end_name  begin_operator  end_operator  begin_name get args node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name branch callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name go  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name isfalse  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name go  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ending  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name set ending  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name isfalse  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name push null  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name set ending  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ending  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile get argument definition  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name i visited  end_name  begin_operator  end_operator  begin_name get args node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name go  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name isfalse  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name push null  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name push string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name go  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ending  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name push string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name go  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ending  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name i visited  end_name  begin_operator  end_operator  begin_name get receiver node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment i ruby object  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name duplicate current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment i ruby object i ruby object  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name metaclass  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment i ruby object ruby class  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name duplicate current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment i ruby object ruby class ruby class  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get visibility for  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name i visited  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment i ruby object ruby class visibility  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name duplicate current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment i ruby object ruby class visibility visibility  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name isfalse  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get new ending  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name isreal  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get new ending  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name ending  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get new ending  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name is private  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name isfalse  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment i ruby object ruby class visibility  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name is not protected  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name isreal  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment i ruby object ruby class  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name self is kind of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name isreal  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment i ruby object  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name go  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name isfalse  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name set ending  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name isreal  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment   end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name is method bound  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name i visited  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name branch callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile get argument definition  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name i visited  end_name  begin_operator  end_operator  begin_name get args node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name branch callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name go  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name isfalse  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name go  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ending  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name set ending  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name isfalse  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name push null  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name set ending  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ending  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile get argument definition  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name i visited  end_name  begin_operator  end_operator  begin_name get args node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name go  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name isfalse  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name push null  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_name node  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name push null  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name push null  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile defn  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name defn node  end_name  end_type  begin_name defn node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name defn node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name args node  end_name  end_type  begin_name args node  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name defn node  end_name  begin_operator  end_operator  begin_name get args node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name compiler callback  end_name  end_type  begin_name body  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name compiler callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name defn node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name defn node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name rescue node  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment if root of method is rescue compile as a light rescue  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name compile rescue internal  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name defn node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name defn node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name load nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name compiler callback  end_name  end_type  begin_name args  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name compiler callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile args  end_name  begin_argument_list  begin_argument  begin_expr  begin_name args node  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_comment inspect body and args  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name ast inspector  end_name  end_type  begin_name inspector  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name ast inspector  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment check args first since body inspection can depend on args  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name inspector  end_name  begin_operator  end_operator  begin_name inspect  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name defn node  end_name  begin_operator  end_operator  begin_name get args node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment if body is a rescue node inspect its pieces separately to avoid it disabling all optz  end_comment  begin_comment todo this is gross  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name defn node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name rescue node  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name rescue node  end_name  end_type  begin_name rescue node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name rescue node  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name defn node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name inspector  end_name  begin_operator  end_operator  begin_name inspect  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name rescue node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name inspector  end_name  begin_operator  end_operator  begin_name inspect  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name rescue node  end_name  begin_operator  end_operator  begin_name get else node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name inspector  end_name  begin_operator  end_operator  begin_name inspect  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name rescue node  end_name  begin_operator  end_operator  begin_name get rescue node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name inspector  end_name  begin_operator  end_operator  begin_name inspect  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name defn node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name define new method  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name defn node  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name defn node  end_name  begin_operator  end_operator  begin_name get args node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get arity  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get value  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name defn node  end_name  begin_operator  end_operator  begin_name get scope  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name body  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name inspector  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name is at root  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile defs  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name defs node  end_name  end_type  begin_name defs node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name defs node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name args node  end_name  end_type  begin_name args node  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name defs node  end_name  begin_operator  end_operator  begin_name get args node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name compiler callback  end_name  end_type  begin_name receiver  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name compiler callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name defs node  end_name  begin_operator  end_operator  begin_name get receiver node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name compiler callback  end_name  end_type  begin_name body  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name compiler callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name defs node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name defs node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name rescue node  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment if root of method is rescue compile as light rescue  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name compile rescue internal  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name defs node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name defs node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name load nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name compiler callback  end_name  end_type  begin_name args  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name compiler callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile args  end_name  begin_argument_list  begin_argument  begin_expr  begin_name args node  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_comment inspect body and args  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name ast inspector  end_name  end_type  begin_name inspector  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name ast inspector  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name inspector  end_name  begin_operator  end_operator  begin_name inspect  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name defs node  end_name  begin_operator  end_operator  begin_name get args node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment if body is a rescue node inspect its pieces separately to avoid it disabling all optz  end_comment  begin_comment todo this is gross  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name defs node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name rescue node  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name rescue node  end_name  end_type  begin_name rescue node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name rescue node  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name defs node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name inspector  end_name  begin_operator  end_operator  begin_name inspect  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name rescue node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name inspector  end_name  begin_operator  end_operator  begin_name inspect  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name rescue node  end_name  begin_operator  end_operator  begin_name get else node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name inspector  end_name  begin_operator  end_operator  begin_name inspect  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name rescue node  end_name  begin_operator  end_operator  begin_name get rescue node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name inspector  end_name  begin_operator  end_operator  begin_name inspect  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name defs node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name define new method  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name defs node  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name defs node  end_name  begin_operator  end_operator  begin_name get args node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get arity  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get value  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name defs node  end_name  begin_operator  end_operator  begin_name get scope  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name body  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name receiver  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name inspector  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile args  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name args node  end_name  end_type  begin_name args node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name args node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name required  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name args node  end_name  begin_operator  end_operator  begin_name get required args count  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name opt  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name args node  end_name  begin_operator  end_operator  begin_name get optional args count  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name rest  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name args node  end_name  begin_operator  end_operator  begin_name get rest arg  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name array callback  end_name  end_type  begin_name required assignment  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name array callback  end_name  end_type  begin_name optional given  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name array callback  end_name  end_type  begin_name optional not given  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name compiler callback  end_name  end_type  begin_name rest assignment  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name compiler callback  end_name  end_type  begin_name block assignment  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name required  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name required assignment  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_class  begin_super  begin_name array callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name next value  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name object  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name index  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment fixme somehow i d feel better if this could get the appropriate var index from the argument node  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get variable compiler  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name assign local variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_name index  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name opt  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name optional given  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_class  begin_super  begin_name array callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name next value  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name object  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name index  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name opt arg  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name list node  end_name  begin_operator  end_operator  begin_name object  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  begin_name index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name compile assignment  end_name  begin_argument_list  begin_argument  begin_expr  begin_name opt arg  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name optional not given  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_class  begin_super  begin_name array callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name next value  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name object  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name index  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name opt arg  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name list node  end_name  begin_operator  end_operator  begin_name object  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  begin_name index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_name opt arg  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name rest  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name rest assignment  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_class  begin_super  begin_name compiler callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get variable compiler  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name assign local variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name args node  end_name  begin_operator  end_operator  begin_name get rest arg  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name args node  end_name  begin_operator  end_operator  begin_name get block  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name block assignment  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_class  begin_super  begin_name compiler callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get variable compiler  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name assign local variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name args node  end_name  begin_operator  end_operator  begin_name get block  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get count  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get variable compiler  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name check method arity  end_name  begin_argument_list  begin_argument  begin_expr  begin_name required  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name opt  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name rest  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get variable compiler  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name assign method arguments  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name args node  end_name  begin_operator  end_operator  begin_name get pre  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name args node  end_name  begin_operator  end_operator  begin_name get required args count  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name args node  end_name  begin_operator  end_operator  begin_name get opt args  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name args node  end_name  begin_operator  end_operator  begin_name get optional args count  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name required assignment  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name optional given  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name optional not given  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name rest assignment  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name block assignment  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name next value  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name object  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name index  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment fixme somehow i d feel better if this could get the appropriate var index from the argument node  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get variable compiler  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name assign local variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_name index  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name next value  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name object  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name index  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name opt arg  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name list node  end_name  begin_operator  end_operator  begin_name object  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  begin_name index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name compile assignment  end_name  begin_argument_list  begin_argument  begin_expr  begin_name opt arg  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name next value  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name object  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name index  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name opt arg  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name list node  end_name  begin_operator  end_operator  begin_name object  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  begin_name index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_name opt arg  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name next value  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name source array  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name index  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name dregexp node  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name next value  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name source array  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name index  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name dstr node  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name next value  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name source array  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name index  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name dsymbol node  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile dx str  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name dx str node  end_name  end_type  begin_name dxstr node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name dx str node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name array callback  end_name  end_type  begin_name dstr callback  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name array callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name next value  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name source array  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name index  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name dxstr node  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name arguments callback  end_name  end_type  begin_name args callback  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name arguments callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name get arity  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_function  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name create new string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dstr callback  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name dxstr node  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get invocation compiler  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name invoke dynamic  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name args callback  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name call type  end_name  begin_operator  end_operator  begin_name functional  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name next value  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name source array  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name index  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name dxstr node  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile ensure node  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name ensure node  end_name  end_type  begin_name ensure node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name ensure node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name ensure node  end_name  begin_operator  end_operator  begin_name get ensure node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name perform ensure  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name branch callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name ensure node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name ensure node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name load nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_function  end_block  end_class  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name branch callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name ensure node  end_name  begin_operator  end_operator  begin_name get ensure node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name ensure node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name ensure node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name load nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_else  end_if  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name ensure node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name ensure node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name load nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name ensure node  end_name  begin_operator  end_operator  begin_name get ensure node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile ev str  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name ev str node  end_name  end_type  begin_name ev str node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name ev str node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name ev str node  end_name  begin_operator  end_operator  begin_name get body  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name as string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile f call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name f call node  end_name  end_type  begin_name fcall node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name f call node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name arguments callback  end_name  end_type  begin_name args callback  end_name  begin_init  begin_expr  begin_call  begin_name get args callback  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name fcall node  end_name  begin_operator  end_operator  begin_name get args node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name compiler callback  end_name  end_type  begin_name closure arg  end_name  begin_init  begin_expr  begin_call  begin_name get block  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name fcall node  end_name  begin_operator  end_operator  begin_name get iter node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get invocation compiler  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name invoke dynamic  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name fcall node  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name args callback  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name call type  end_name  begin_operator  end_operator  begin_name functional  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name closure arg  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name fcall node  end_name  begin_operator  end_operator  begin_name get iter node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name iter node  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile flip  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name flip node  end_name  end_type  begin_name flip node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name flip node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get variable compiler  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name retrieve local variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name flip node  end_name  begin_operator  end_operator  begin_name get index  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name flip node  end_name  begin_operator  end_operator  begin_name get depth  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name flip node  end_name  begin_operator  end_operator  begin_name is exclusive  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name perform boolean branch  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name branch callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name flip node  end_name  begin_operator  end_operator  begin_name get end node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name perform boolean branch  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name branch callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name load false  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get variable compiler  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name assign local variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name flip node  end_name  begin_operator  end_operator  begin_name get index  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name flip node  end_name  begin_operator  end_operator  begin_name get depth  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name branch callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  end_block  end_function  end_block  end_class  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name load true  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name branch callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name flip node  end_name  begin_operator  end_operator  begin_name get begin node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name become true or false  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get variable compiler  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name assign local variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name flip node  end_name  begin_operator  end_operator  begin_name get index  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name flip node  end_name  begin_operator  end_operator  begin_name get depth  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name perform boolean branch  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name branch callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name flip node  end_name  begin_operator  end_operator  begin_name get end node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name perform boolean branch  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name branch callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name load false  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get variable compiler  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name assign local variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name flip node  end_name  begin_operator  end_operator  begin_name get index  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name flip node  end_name  begin_operator  end_operator  begin_name get depth  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name branch callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  end_block  end_function  end_block  end_class  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name load true  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name branch callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name flip node  end_name  begin_operator  end_operator  begin_name get begin node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name perform boolean branch  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name branch callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name flip node  end_name  begin_operator  end_operator  begin_name get end node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name flip true or false  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get variable compiler  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name assign local variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name flip node  end_name  begin_operator  end_operator  begin_name get index  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name flip node  end_name  begin_operator  end_operator  begin_name get depth  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name load true  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name branch callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name load false  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name flip node  end_name  begin_operator  end_operator  begin_name get end node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name perform boolean branch  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name branch callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name load false  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get variable compiler  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name assign local variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name flip node  end_name  begin_operator  end_operator  begin_name get index  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name flip node  end_name  begin_operator  end_operator  begin_name get depth  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name branch callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  end_block  end_function  end_block  end_class  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name load true  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name load false  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get variable compiler  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name assign local variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name flip node  end_name  begin_operator  end_operator  begin_name get index  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name flip node  end_name  begin_operator  end_operator  begin_name get depth  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name flip node  end_name  begin_operator  end_operator  begin_name get begin node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name become true or false  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get variable compiler  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name assign local variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name flip node  end_name  begin_operator  end_operator  begin_name get index  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name flip node  end_name  begin_operator  end_operator  begin_name get depth  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name flip node  end_name  begin_operator  end_operator  begin_name get end node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name perform boolean branch  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name branch callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name load false  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get variable compiler  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name assign local variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name flip node  end_name  begin_operator  end_operator  begin_name get index  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name flip node  end_name  begin_operator  end_operator  begin_name get depth  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name branch callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  end_block  end_function  end_block  end_class  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name load true  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name load false  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get variable compiler  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name assign local variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name flip node  end_name  begin_operator  end_operator  begin_name get index  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name flip node  end_name  begin_operator  end_operator  begin_name get depth  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name flip node  end_name  begin_operator  end_operator  begin_name get begin node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name perform boolean branch  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name branch callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name flip node  end_name  begin_operator  end_operator  begin_name get end node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name flip true or false  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get variable compiler  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name assign local variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name flip node  end_name  begin_operator  end_operator  begin_name get index  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name flip node  end_name  begin_operator  end_operator  begin_name get depth  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name load true  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name branch callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name load false  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name flip node  end_name  begin_operator  end_operator  begin_name get end node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name flip true or false  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get variable compiler  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name assign local variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name flip node  end_name  begin_operator  end_operator  begin_name get index  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name flip node  end_name  begin_operator  end_operator  begin_name get depth  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name load true  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name load false  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name load true  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name load false  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name load false  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name load true  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile for  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name for node  end_name  end_type  begin_name for node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name for node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name compiler callback  end_name  end_type  begin_name receiver callback  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name compiler callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name for node  end_name  begin_operator  end_operator  begin_name get iter node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name compiler callback  end_name  end_type  begin_name closure arg  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name compiler callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile for iter  end_name  begin_argument_list  begin_argument  begin_expr  begin_name for node  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get invocation compiler  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name invoke dynamic  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name receiver callback  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name call type  end_name  begin_operator  end_operator  begin_name normal  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name closure arg  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile global asgn  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name global asgn node  end_name  end_type  begin_name global asgn node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name global asgn node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name compiler callback  end_name  end_type  begin_name value  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name compiler callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name global asgn node  end_name  begin_operator  end_operator  begin_name get value node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name global asgn node  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name length  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_switch  begin_condition  begin_expr  begin_call  begin_name  begin_name global asgn node  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name char at  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get variable compiler  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name assign last line  end_name  begin_argument_list  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get variable compiler  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name assign back ref  end_name  begin_argument_list  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_default  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name assign global variable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name global asgn node  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_default  end_block  end_switch  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name assign global variable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name global asgn node  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile global asgn assignment  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name global asgn node  end_name  end_type  begin_name global asgn node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name global asgn node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name global asgn node  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name length  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_switch  begin_condition  begin_expr  begin_call  begin_name  begin_name global asgn node  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name char at  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get variable compiler  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name assign last line  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get variable compiler  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name assign back ref  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_default  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name assign global variable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name global asgn node  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_default  end_block  end_switch  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name assign global variable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name global asgn node  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name next value  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name source array  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name index  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name list node  end_name  end_type  begin_name list node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name list node  end_name  begin_operator  end_operator  begin_name source array  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name key index  end_name  begin_init  begin_expr  begin_name index  end_name  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name list node  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name key index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name list node  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name key index  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name if node  end_name  begin_operator  end_operator  begin_name get then body  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name if node  end_name  begin_operator  end_operator  begin_name get then body  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name expr  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_if  begin_condition  begin_expr  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name load nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block  end_else  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name if node  end_name  begin_operator  end_operator  begin_name get else body  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name if node  end_name  begin_operator  end_operator  begin_name get else body  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name expr  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_if  begin_condition  begin_expr  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name load nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block  end_else  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile inst asgn  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name inst asgn node  end_name  end_type  begin_name inst asgn node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name inst asgn node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name compiler callback  end_name  end_type  begin_name value  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name compiler callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name inst asgn node  end_name  begin_operator  end_operator  begin_name get value node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name assign instance variable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name inst asgn node  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile inst asgn assignment  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name inst asgn node  end_name  end_type  begin_name inst asgn node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name inst asgn node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name assign instance variable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name inst asgn node  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile match  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name match node  end_name  end_type  begin_name match node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name match node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name match node  end_name  begin_operator  end_operator  begin_name get regexp node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name match  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile match 2  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name match 2 node  end_name  end_type  begin_name match node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name match 2 node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name match node  end_name  begin_operator  end_operator  begin_name get receiver node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name compiler callback  end_name  end_type  begin_name value  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name compiler callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name match node  end_name  begin_operator  end_operator  begin_name get value node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name match 2  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile match 3  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name match 3 node  end_name  end_type  begin_name match node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name match 3 node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name match node  end_name  begin_operator  end_operator  begin_name get receiver node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name match node  end_name  begin_operator  end_operator  begin_name get value node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name match 3  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile module  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name module node  end_name  end_type  begin_name module node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name module node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name node  end_name  end_type  begin_name cpath node  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name module node  end_name  begin_operator  end_operator  begin_name get c path  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name compiler callback  end_name  end_type  begin_name body callback  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name compiler callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name module node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name module node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name load nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name compiler callback  end_name  end_type  begin_name path callback  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name compiler callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name cpath node  end_name  begin_operator  end_operator  begin_name colon 2 node  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name left node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name colon 2 node  end_name  begin_operator  end_operator  begin_name cpath node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get left node  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name left node  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_name left node  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name load nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name cpath node  end_name  begin_operator  end_operator  begin_name colon 3 node  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name load object  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name load nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_else  end_if  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name ast inspector  end_name  end_type  begin_name inspector  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name ast inspector  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name inspector  end_name  begin_operator  end_operator  begin_name inspect  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name module node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name define module  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name module node  end_name  begin_operator  end_operator  begin_name get c path  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name module node  end_name  begin_operator  end_operator  begin_name get scope  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name path callback  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name body callback  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name inspector  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile multiple asgn assignment  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name multiple asgn node  end_name  end_type  begin_name multiple asgn node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name multiple asgn node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_comment normal items at the head of the masgn  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name array callback  end_name  end_type  begin_name head assign callback  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name array callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name next value  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name source array  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name index  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name list node  end_name  end_type  begin_name head node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name list node  end_name  begin_operator  end_operator  begin_name source array  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name assign node  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name head node  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment perform assignment for the next node  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name compile assignment  end_name  begin_argument_list  begin_argument  begin_expr  begin_name assign node  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name compiler callback  end_name  end_type  begin_name args callback  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name compiler callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name args node  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name multiple asgn node  end_name  begin_operator  end_operator  begin_name get args node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name args node  end_name  begin_operator  end_operator  begin_name star node  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment done processing args  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_comment assign to appropriate variable  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name compile assignment  end_name  begin_argument_list  begin_argument  begin_expr  begin_name args node  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name multiple asgn node  end_name  begin_operator  end_operator  begin_name get head node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name multiple asgn node  end_name  begin_operator  end_operator  begin_name get args node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not compilable exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name multiple asgn node  end_name  begin_operator  end_operator  begin_name get position  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  begin_else  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name multiple asgn node  end_name  begin_operator  end_operator  begin_name get args node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name star node  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment do nothing  end_comment  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name ensure multiple assignable ruby array  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name multiple asgn node  end_name  begin_operator  end_operator  begin_name get head node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name for each in value array  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name args callback  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_else  end_if  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name ensure multiple assignable ruby array  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name multiple asgn node  end_name  begin_operator  end_operator  begin_name get head node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name multiple asgn node  end_name  begin_operator  end_operator  begin_name get args node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name for each in value array  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name multiple asgn node  end_name  begin_operator  end_operator  begin_name get head node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name size  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name multiple asgn node  end_name  begin_operator  end_operator  begin_name get head node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name head assign callback  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name for each in value array  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name multiple asgn node  end_name  begin_operator  end_operator  begin_name get head node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name size  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name multiple asgn node  end_name  begin_operator  end_operator  begin_name get head node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name head assign callback  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name args callback  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_else  end_if  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name next value  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name source array  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name index  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name list node  end_name  end_type  begin_name head node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name list node  end_name  begin_operator  end_operator  begin_name source array  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name assign node  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name head node  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment perform assignment for the next node  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name compile assignment  end_name  begin_argument_list  begin_argument  begin_expr  begin_name assign node  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile newline  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo add trace call  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name line number  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get position  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name set line position  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get position  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name newline node  end_name  end_type  begin_name newline node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name newline node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name newline node  end_name  begin_operator  end_operator  begin_name get next node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name expr  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile next  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name next node  end_name  end_type  begin_name next node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name next node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name compiler callback  end_name  end_type  begin_name value callback  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name compiler callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name next node  end_name  begin_operator  end_operator  begin_name get value node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name next node  end_name  begin_operator  end_operator  begin_name get value node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name load nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name poll thread events  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name issue next event  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name value callback  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile not  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name not node  end_name  end_type  begin_name not node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name not node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name not node  end_name  begin_operator  end_operator  begin_name get condition node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name negate current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile op asgn and  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name binary operator node  end_name  end_type  begin_name and node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name binary operator node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name and node  end_name  begin_operator  end_operator  begin_name get first node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name branch callback  end_name  end_type  begin_name long callback  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name branch callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name and node  end_name  begin_operator  end_operator  begin_name get second node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name perform logical and  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name long callback  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name poll thread events  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name and node  end_name  begin_operator  end_operator  begin_name get second node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile op asgn or  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name op asgn or node  end_name  end_type  begin_name or node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name op asgn or node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name needs definition check  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name or node  end_name  begin_operator  end_operator  begin_name get first node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile get definition base  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name or node  end_name  begin_operator  end_operator  begin_name get first node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name is null  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name branch callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name or node  end_name  begin_operator  end_operator  begin_name get second node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name branch callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name or node  end_name  begin_operator  end_operator  begin_name get first node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name duplicate current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name perform boolean branch  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name branch callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment do nothing  end_comment  end_block  end_function  end_block  end_class  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name branch callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name or node  end_name  begin_operator  end_operator  begin_name get second node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name or node  end_name  begin_operator  end_operator  begin_name get first node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name duplicate current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name perform boolean branch  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name branch callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment do nothing  end_comment  end_block  end_function  end_block  end_class  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name branch callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name or node  end_name  begin_operator  end_operator  begin_name get second node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name poll thread events  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name or node  end_name  begin_operator  end_operator  begin_name get second node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name or node  end_name  begin_operator  end_operator  begin_name get first node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name duplicate current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name perform boolean branch  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name branch callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment do nothing  end_comment  end_block  end_function  end_block  end_class  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name branch callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name or node  end_name  begin_operator  end_operator  begin_name get second node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment do nothing  end_comment  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name or node  end_name  begin_operator  end_operator  begin_name get second node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment do nothing  end_comment  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name or node  end_name  begin_operator  end_operator  begin_name get second node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile op asgn  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name op asgn node  end_name  end_type  begin_name op asgn node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name op asgn node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name op asgn node  end_name  begin_operator  end_operator  begin_name get operator name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile op asgn with or  end_name  begin_argument_list  begin_argument  begin_expr  begin_name op asgn node  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name op asgn node  end_name  begin_operator  end_operator  begin_name get operator name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile op asgn with and  end_name  begin_argument_list  begin_argument  begin_expr  begin_name op asgn node  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile op asgn with method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name op asgn node  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name poll thread events  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile op asgn with or  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name op asgn node  end_name  end_type  begin_name op asgn node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name op asgn node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name compiler callback  end_name  end_type  begin_name receiver callback  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name compiler callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name op asgn node  end_name  begin_operator  end_operator  begin_name get receiver node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment recv  end_comment  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name arguments callback  end_name  end_type  begin_name args callback  end_name  begin_init  begin_expr  begin_call  begin_name get args callback  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name op asgn node  end_name  begin_operator  end_operator  begin_name get value node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get invocation compiler  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name invoke op asgn with or  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name op asgn node  end_name  begin_operator  end_operator  begin_name get variable name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name op asgn node  end_name  begin_operator  end_operator  begin_name get variable name asgn  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name receiver callback  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name args callback  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile op asgn with and  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name op asgn node  end_name  end_type  begin_name op asgn node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name op asgn node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name compiler callback  end_name  end_type  begin_name receiver callback  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name compiler callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name op asgn node  end_name  begin_operator  end_operator  begin_name get receiver node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment recv  end_comment  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name arguments callback  end_name  end_type  begin_name args callback  end_name  begin_init  begin_expr  begin_call  begin_name get args callback  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name op asgn node  end_name  begin_operator  end_operator  begin_name get value node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get invocation compiler  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name invoke op asgn with and  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name op asgn node  end_name  begin_operator  end_operator  begin_name get variable name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name op asgn node  end_name  begin_operator  end_operator  begin_name get variable name asgn  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name receiver callback  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name args callback  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile op asgn with method  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name op asgn node  end_name  end_type  begin_name op asgn node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name op asgn node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name compiler callback  end_name  end_type  begin_name receiver callback  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name compiler callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name op asgn node  end_name  begin_operator  end_operator  begin_name get receiver node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment recv  end_comment  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_comment eval new value call operator on old value and assign  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name arguments callback  end_name  end_type  begin_name args callback  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name arguments callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name get arity  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_function  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name op asgn node  end_name  begin_operator  end_operator  begin_name get value node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get invocation compiler  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name invoke op asgn with method  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name op asgn node  end_name  begin_operator  end_operator  begin_name get operator name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name op asgn node  end_name  begin_operator  end_operator  begin_name get variable name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name op asgn node  end_name  begin_operator  end_operator  begin_name get variable name asgn  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name receiver callback  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name args callback  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile op element asgn with or  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name op element asgn node  end_name  end_type  begin_name op element asgn node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name op element asgn node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name compiler callback  end_name  end_type  begin_name receiver callback  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name compiler callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name op element asgn node  end_name  begin_operator  end_operator  begin_name get receiver node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name arguments callback  end_name  end_type  begin_name args callback  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name op element asgn arguments callback  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name op element asgn node  end_name  begin_operator  end_operator  begin_name get args node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name compiler callback  end_name  end_type  begin_name value callback  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name compiler callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name op element asgn node  end_name  begin_operator  end_operator  begin_name get value node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get invocation compiler  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name op element asgn with or  end_name  begin_argument_list  begin_argument  begin_expr  begin_name receiver callback  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name args callback  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name value callback  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile op element asgn with and  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name op element asgn node  end_name  end_type  begin_name op element asgn node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name op element asgn node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name compiler callback  end_name  end_type  begin_name receiver callback  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name compiler callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name op element asgn node  end_name  begin_operator  end_operator  begin_name get receiver node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name arguments callback  end_name  end_type  begin_name args callback  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name op element asgn arguments callback  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name op element asgn node  end_name  begin_operator  end_operator  begin_name get args node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name compiler callback  end_name  end_type  begin_name value callback  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name compiler callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name op element asgn node  end_name  begin_operator  end_operator  begin_name get value node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get invocation compiler  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name op element asgn with and  end_name  begin_argument_list  begin_argument  begin_expr  begin_name receiver callback  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name args callback  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name value callback  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile op element asgn with method  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name op element asgn node  end_name  end_type  begin_name op element asgn node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name op element asgn node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name compiler callback  end_name  end_type  begin_name receiver callback  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name compiler callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name op element asgn node  end_name  begin_operator  end_operator  begin_name get receiver node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name arguments callback  end_name  end_type  begin_name args callback  end_name  begin_init  begin_expr  begin_call  begin_name get args callback  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name op element asgn node  end_name  begin_operator  end_operator  begin_name get args node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name compiler callback  end_name  end_type  begin_name value callback  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name compiler callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name op element asgn node  end_name  begin_operator  end_operator  begin_name get value node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get invocation compiler  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name op element asgn with method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name receiver callback  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name args callback  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name value callback  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name op element asgn node  end_name  begin_operator  end_operator  begin_name get operator name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile or  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name or node  end_name  end_type  begin_name or node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name or node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name or node  end_name  begin_operator  end_operator  begin_name get first node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get node type  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name always true  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment compile first node only  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name or node  end_name  begin_operator  end_operator  begin_name get first node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name expr  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name or node  end_name  begin_operator  end_operator  begin_name get first node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get node type  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name always false  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment compile first node as non expr and compile second node  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name or node  end_name  begin_operator  end_operator  begin_name get first node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name or node  end_name  begin_operator  end_operator  begin_name get second node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name expr  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name or node  end_name  begin_operator  end_operator  begin_name get first node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name branch callback  end_name  end_type  begin_name long callback  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name branch callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name or node  end_name  begin_operator  end_operator  begin_name get second node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name perform logical or  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name long callback  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block  end_else  end_if  end_else  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name or node  end_name  begin_operator  end_operator  begin_name get second node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile post exe  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name post exe node  end_name  end_type  begin_name post exe node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name post exe node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_comment create the closure class and instantiate it  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name compiler callback  end_name  end_type  begin_name closure body  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name compiler callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name post exe node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name post exe node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name load nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name create new end block  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name closure body  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile pre exe  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name pre exe node  end_name  end_type  begin_name pre exe node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name pre exe node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_comment create the closure class and instantiate it  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name compiler callback  end_name  end_type  begin_name closure body  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name compiler callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name pre exe node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name pre exe node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name load nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name run begin block  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name pre exe node  end_name  begin_operator  end_operator  begin_name get scope  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name closure body  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile redo  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment redo node redo node redo node node  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name issue redo event  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile rescue  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile rescue internal  end_name  begin_argument_list  begin_argument  begin_expr  begin_name node  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name rescue node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name rescue node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name load nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name rescue node  end_name  begin_operator  end_operator  begin_name get else node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name rescue node  end_name  begin_operator  end_operator  begin_name get else node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile rescue body internal  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name rescue node  end_name  begin_operator  end_operator  begin_name get rescue node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name light  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile rescue body internal  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name light  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name rescue body node  end_name  end_type  begin_name rescue body node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name rescue body node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name load exception  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name node  end_name  end_type  begin_name exception list  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name rescue body node  end_name  begin_operator  end_operator  begin_name get exception nodes  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name arguments callback  end_name  end_type  begin_name rescue args  end_name  begin_init  begin_expr  begin_call  begin_name get args callback  end_name  begin_argument_list  begin_argument  begin_expr  begin_name exception list  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name rescue args  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_name rescue args  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_class  begin_super  begin_name arguments callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name get arity  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_function  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name load standard error  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_expr_stmt  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name check is exception handled  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name rescue args  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name branch callback  end_name  end_type  begin_name true branch  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name branch callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment check if it s an immediate and don t outline  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name real body  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name rescue body node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name real body  end_name  begin_operator  end_operator  begin_name newline node  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name set line position  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name real body  end_name  begin_operator  end_operator  begin_name get position  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_while  begin_condition  begin_expr  begin_name real body  end_name  begin_operator  end_operator  begin_name newline node  end_name  end_expr  end_condition  begin_block  begin_expr_stmt  begin_expr  begin_name real body  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name newline node  end_name  begin_operator  end_operator  begin_name real body  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get next node  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_while  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name real body  end_name  begin_operator  end_operator  begin_name get node type  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is immediate  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_name real body  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name clear error info  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name store exception in error info  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name light  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name rescue body node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name nested body  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name outline  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name rescue body node  end_name  begin_operator  end_operator  begin_name get position  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get start line  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name rescue body node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name nested body  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name nested body  end_name  begin_operator  end_operator  begin_name end body  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_comment fixme this should reset to what it was before  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name clear error info  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name branch callback  end_name  end_type  begin_name false branch  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name branch callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name rescue body node  end_name  begin_operator  end_operator  begin_name get opt rescue node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile rescue body internal  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name rescue body node  end_name  begin_operator  end_operator  begin_name get opt rescue node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name light  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name rethrow exception  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name perform boolean branch  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name true branch  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name false branch  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment check if it s an immediate and don t outline  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name real body  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name rescue body node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name real body  end_name  begin_operator  end_operator  begin_name newline node  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name set line position  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name real body  end_name  begin_operator  end_operator  begin_name get position  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_while  begin_condition  begin_expr  begin_name real body  end_name  begin_operator  end_operator  begin_name newline node  end_name  end_expr  end_condition  begin_block  begin_expr_stmt  begin_expr  begin_name real body  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name newline node  end_name  begin_operator  end_operator  begin_name real body  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get next node  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_while  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name real body  end_name  begin_operator  end_operator  begin_name get node type  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is immediate  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_name real body  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name clear error info  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name store exception in error info  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name light  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name rescue body node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name nested body  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name outline  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name rescue body node  end_name  begin_operator  end_operator  begin_name get position  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get start line  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name rescue body node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name nested body  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name nested body  end_name  begin_operator  end_operator  begin_name end body  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_comment fixme this should reset to what it was before  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name clear error info  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name rescue body node  end_name  begin_operator  end_operator  begin_name get opt rescue node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile rescue body internal  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name rescue body node  end_name  begin_operator  end_operator  begin_name get opt rescue node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name light  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name rethrow exception  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile retry  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name poll thread events  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name issue retry event  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile return  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name return node  end_name  end_type  begin_name return node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name return node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name return node  end_name  begin_operator  end_operator  begin_name get value node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name return node  end_name  begin_operator  end_operator  begin_name get value node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name load nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name perform return  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile splat  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name splat node  end_name  end_type  begin_name splat node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name splat node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name splat node  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name splat current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile super  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name super node  end_name  end_type  begin_name super node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name super node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name arguments callback  end_name  end_type  begin_name args callback  end_name  begin_init  begin_expr  begin_call  begin_name get args callback  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name super node  end_name  begin_operator  end_operator  begin_name get args node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name compiler callback  end_name  end_type  begin_name closure arg  end_name  begin_init  begin_expr  begin_call  begin_name get block  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name super node  end_name  begin_operator  end_operator  begin_name get iter node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get invocation compiler  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name invoke dynamic  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name args callback  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name call type  end_name  begin_operator  end_operator  begin_name super  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name closure arg  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name super node  end_name  begin_operator  end_operator  begin_name get iter node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name iter node  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile s value  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name s value node  end_name  end_type  begin_name svalue node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name s value node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name svalue node  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name singlify splatted value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile symbol  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name create new symbol  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name symbol node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile to ary  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name to ary node  end_name  end_type  begin_name to ary node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name to ary node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name to ary node  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name ary to ary  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile undef  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name undef method  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name undef node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile until  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name until node  end_name  end_type  begin_name until node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name until node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name until node  end_name  begin_operator  end_operator  begin_name get condition node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get node type  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name always true  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name until node  end_name  begin_operator  end_operator  begin_name evaluate at start  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment condition is always true just compile it and not body  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name until node  end_name  begin_operator  end_operator  begin_name get condition node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name load nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block  end_then  begin_else  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name branch callback  end_name  end_type  begin_name condition  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name branch callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name until node  end_name  begin_operator  end_operator  begin_name get condition node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name negate current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name branch callback  end_name  end_type  begin_name body  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name branch callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name until node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name until node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name  begin_name until node  end_name  begin_operator  end_operator  begin_name contains nonlocal flow  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name perform boolean loop safe  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name condition  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name body  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name until node  end_name  begin_operator  end_operator  begin_name evaluate at start  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name perform boolean loop light  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name condition  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name body  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name until node  end_name  begin_operator  end_operator  begin_name evaluate at start  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name poll thread events  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block  end_else  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name until node  end_name  begin_operator  end_operator  begin_name get condition node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name negate current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name until node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name until node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile v alias  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name v alias node  end_name  end_type  begin_name valias node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name v alias node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name alias global  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name valias node  end_name  begin_operator  end_operator  begin_name get new name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name valias node  end_name  begin_operator  end_operator  begin_name get old name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile v call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name v call node  end_name  end_type  begin_name vcall node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name v call node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get invocation compiler  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name invoke dynamic  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name vcall node  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name call type  end_name  begin_operator  end_operator  begin_name variable  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile while  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name while node  end_name  end_type  begin_name while node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name while node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name while node  end_name  begin_operator  end_operator  begin_name get condition node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get node type  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name always false  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name while node  end_name  begin_operator  end_operator  begin_name evaluate at start  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment do nothing  end_comment  begin_if  begin_condition  begin_expr  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name load nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block  end_then  begin_else  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name branch callback  end_name  end_type  begin_name condition  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name branch callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name while node  end_name  begin_operator  end_operator  begin_name get condition node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name branch callback  end_name  end_type  begin_name body  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name branch callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name while node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name while node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name  begin_name while node  end_name  begin_operator  end_operator  begin_name contains nonlocal flow  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name perform boolean loop safe  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name condition  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name body  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name while node  end_name  begin_operator  end_operator  begin_name evaluate at start  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name perform boolean loop light  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name condition  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name body  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name while node  end_name  begin_operator  end_operator  begin_name evaluate at start  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name poll thread events  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block  end_else  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name while node  end_name  begin_operator  end_operator  begin_name get condition node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name while node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name while node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile x str  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name x str node  end_name  end_type  begin_name xstr node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name x str node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name arguments callback  end_name  end_type  begin_name args callback  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name arguments callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name get arity  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_function  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name create new string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name xstr node  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get invocation compiler  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name invoke dynamic  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name args callback  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name call type  end_name  begin_operator  end_operator  begin_name functional  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile yield  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name yield node  end_name  end_type  begin_name yield node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name yield node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name arguments callback  end_name  end_type  begin_name args callback  end_name  begin_init  begin_expr  begin_call  begin_name get args callback  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name yield node  end_name  begin_operator  end_operator  begin_name get args node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo this filtering is kind of gross it would be nice to get some parser help here  end_comment  begin_if  begin_condition  begin_expr  begin_name args callback  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name args callback  end_name  begin_operator  end_operator  begin_name get arity  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get invocation compiler  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name yield specific  end_name  begin_argument_list  begin_argument  begin_expr  begin_name args callback  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name args callback  end_name  begin_operator  end_operator  begin_name get arity  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name args callback  end_name  begin_operator  end_operator  begin_name get arity  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name args callback  end_name  begin_operator  end_operator  begin_name get arity  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name yield node  end_name  begin_operator  end_operator  begin_name get expand arguments  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment send it along as arity specific we don t need the array  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get invocation compiler  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name yield specific  end_name  begin_argument_list  begin_argument  begin_expr  begin_name args callback  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name compiler callback  end_name  end_type  begin_name args callback 2  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name yield node  end_name  begin_operator  end_operator  begin_name get args node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name args callback 2  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_class  begin_super  begin_name compiler callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name yield node  end_name  begin_operator  end_operator  begin_name get args node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get invocation compiler  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name yield  end_name  begin_argument_list  begin_argument  begin_expr  begin_name args callback 2  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name yield node  end_name  begin_operator  end_operator  begin_name get expand arguments  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_else  end_if  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile z super  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name z super node  end_name  end_type  begin_name zsuper node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name z super node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name compiler callback  end_name  end_type  begin_name closure  end_name  begin_init  begin_expr  begin_call  begin_name get block  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name zsuper node  end_name  begin_operator  end_operator  begin_name get iter node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name call z super  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name closure  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile args cat arguments  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name args cat node  end_name  end_type  begin_name args cat node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name args cat node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name compile arguments  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name args cat node  end_name  begin_operator  end_operator  begin_name get first node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment arguments compilers always create i ruby object but we want to use ruby array concat here  end_comment  begin_comment fixme as a result this is not efficient since it creates and then later unwraps an array  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name create new array  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name args cat node  end_name  begin_operator  end_operator  begin_name get second node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name splat current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name concat arrays  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name convert to java array  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile args push arguments  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name args push node  end_name  end_type  begin_name args push node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name args push node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name args push node  end_name  begin_operator  end_operator  begin_name get first node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name args push node  end_name  begin_operator  end_operator  begin_name get second node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name append to array  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name convert to java array  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile array arguments  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name array node  end_name  end_type  begin_name array node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name array node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name array callback  end_name  end_type  begin_name callback  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name array callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name next value  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name source array  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name index  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  begin_init  begin_expr  begin_call  begin_name node  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name object  end_name  begin_index  end_index  end_name  begin_operator  end_operator  begin_name source array  end_name  end_expr  end_argument  end_argument_list  end_call  begin_index  begin_expr  begin_name index  end_name  end_expr  end_index  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_name node  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name set line position  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name array node  end_name  begin_operator  end_operator  begin_name get position  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name create object array  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name array node  end_name  begin_operator  end_operator  begin_name child nodes  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to array  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name callback  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  begin_comment leave as a normal array  end_comment  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name next value  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name source array  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name index  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  begin_init  begin_expr  begin_call  begin_name node  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name object  end_name  begin_index  end_index  end_name  begin_operator  end_operator  begin_name source array  end_name  end_expr  end_argument  end_argument_list  end_call  begin_index  begin_expr  begin_name index  end_name  end_expr  end_index  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_name node  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment leave as a normal array end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile splat arguments  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name splat node  end_name  end_type  begin_name splat node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name splat node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name splat node  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name splat current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name convert to java array  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile method args  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name args node  end_name  end_type  begin_name args node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name args node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name required  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name args node  end_name  begin_operator  end_operator  begin_name get required args count  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name opt  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name args node  end_name  begin_operator  end_operator  begin_name get optional args count  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name rest  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name args node  end_name  begin_operator  end_operator  begin_name get rest arg  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name array callback  end_name  end_type  begin_name required assignment  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name array callback  end_name  end_type  begin_name optional given  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name array callback  end_name  end_type  begin_name optional not given  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name compiler callback  end_name  end_type  begin_name rest assignment  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name compiler callback  end_name  end_type  begin_name block assignment  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name required  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name required assignment  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_class  begin_super  begin_name array callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name next value  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name object  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name index  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment fixme somehow i d feel better if this could get the appropriate var index from the argument node  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get variable compiler  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name assign local variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_name index  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name opt  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name optional given  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_class  begin_super  begin_name array callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name next value  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name object  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name index  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name opt arg node  end_name  end_type  begin_name opt arg  end_name  begin_init  begin_expr  begin_call  begin_name opt arg node  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name list node  end_name  begin_operator  end_operator  begin_name object  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  begin_name index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name compile assignment  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name opt arg  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name optional not given  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_class  begin_super  begin_name array callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name next value  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name object  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name index  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name opt arg node  end_name  end_type  begin_name opt arg  end_name  begin_init  begin_expr  begin_call  begin_name opt arg node  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name list node  end_name  begin_operator  end_operator  begin_name object  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  begin_name index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name opt arg  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name rest  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name rest assignment  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_class  begin_super  begin_name compiler callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get variable compiler  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name assign local variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name args node  end_name  begin_operator  end_operator  begin_name get rest arg  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name args node  end_name  begin_operator  end_operator  begin_name get block  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name block assignment  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_class  begin_super  begin_name compiler callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get variable compiler  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name assign local variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name args node  end_name  begin_operator  end_operator  begin_name get block  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get count  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get variable compiler  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name assign method arguments 19  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name args node  end_name  begin_operator  end_operator  begin_name get pre  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name args node  end_name  begin_operator  end_operator  begin_name get pre count  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name args node  end_name  begin_operator  end_operator  begin_name get post  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name args node  end_name  begin_operator  end_operator  begin_name get post count  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name args node  end_name  begin_operator  end_operator  begin_name get post index  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name args node  end_name  begin_operator  end_operator  begin_name get opt args  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name args node  end_name  begin_operator  end_operator  begin_name get optional args count  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name required assignment  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name optional given  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name optional not given  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name rest assignment  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name block assignment  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name next value  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name object  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name index  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment fixme somehow i d feel better if this could get the appropriate var index from the argument node  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get variable compiler  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name assign local variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_name index  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name next value  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name object  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name index  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name opt arg node  end_name  end_type  begin_name opt arg  end_name  begin_init  begin_expr  begin_call  begin_name opt arg node  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name list node  end_name  begin_operator  end_operator  begin_name object  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  begin_name index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name compile assignment  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name opt arg  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name next value  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name object  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name index  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name opt arg node  end_name  end_type  begin_name opt arg  end_name  begin_init  begin_expr  begin_call  begin_name opt arg node  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name list node  end_name  begin_operator  end_operator  begin_name object  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  begin_name index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name opt arg  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile args push  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name args push node  end_name  end_type  begin_name args push  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name args push node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name args push  end_name  begin_operator  end_operator  begin_name get first node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name compile  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name args push  end_name  begin_operator  end_operator  begin_name get second node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name append to array  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name compile multiple asgn 19 assignment  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name expr  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name multiple asgn 19 node  end_name  end_type  begin_name multiple asgn 19 node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name multiple asgn 19 node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_comment normal items at the front or back of the masgn  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name array callback  end_name  end_type  begin_name pre assign callback  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name array callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name next value  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name source array  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name index  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name list node  end_name  end_type  begin_name nodes  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name list node  end_name  begin_operator  end_operator  begin_name source array  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name assign node  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name nodes  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment perform assignment for the next node  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name compile assignment  end_name  begin_argument_list  begin_argument  begin_expr  begin_name assign node  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name compiler callback  end_name  end_type  begin_name rest callback  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name compiler callback  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name args node  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name multiple asgn 19 node  end_name  begin_operator  end_operator  begin_name get rest  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name args node  end_name  begin_operator  end_operator  begin_name star node  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment done processing args  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_comment assign to appropriate variable  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name compile assignment  end_name  begin_argument_list  begin_argument  begin_expr  begin_name args node  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name multiple asgn 19 node  end_name  begin_operator  end_operator  begin_name get pre count  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name multiple asgn 19 node  end_name  begin_operator  end_operator  begin_name get post count  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name multiple asgn 19 node  end_name  begin_operator  end_operator  begin_name get rest  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not compilable exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name multiple asgn 19 node  end_name  begin_operator  end_operator  begin_name get position  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  begin_else  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name multiple asgn 19 node  end_name  begin_operator  end_operator  begin_name get rest  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name star node  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment do nothing  end_comment  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name ensure multiple assignable ruby array  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name multiple asgn 19 node  end_name  begin_operator  end_operator  begin_name get pre count  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name multiple asgn 19 node  end_name  begin_operator  end_operator  begin_name get post count  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name for each in value array  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name rest callback  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_else  end_if  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name ensure multiple assignable ruby array  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name multiple asgn 19 node  end_name  begin_operator  end_operator  begin_name get pre count  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name multiple asgn 19 node  end_name  begin_operator  end_operator  begin_name get post count  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name multiple asgn 19 node  end_name  begin_operator  end_operator  begin_name get rest  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name for each in value array  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name multiple asgn 19 node  end_name  begin_operator  end_operator  begin_name get pre count  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name multiple asgn 19 node  end_name  begin_operator  end_operator  begin_name get pre  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name multiple asgn 19 node  end_name  begin_operator  end_operator  begin_name get post count  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name multiple asgn 19 node  end_name  begin_operator  end_operator  begin_name get post  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name pre assign callback  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name for each in value array  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name multiple asgn 19 node  end_name  begin_operator  end_operator  begin_name get pre count  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name multiple asgn 19 node  end_name  begin_operator  end_operator  begin_name get pre  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name multiple asgn 19 node  end_name  begin_operator  end_operator  begin_name get post count  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name multiple asgn 19 node  end_name  begin_operator  end_operator  begin_name get post  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name pre assign callback  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name rest callback  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_else  end_if  begin_comment todo don t require pop  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name expr  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name consume current value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name next value  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name source array  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name index  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name list node  end_name  end_type  begin_name nodes  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name list node  end_name  begin_operator  end_operator  begin_name source array  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name assign node  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name nodes  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment perform assignment for the next node  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name compile assignment  end_name  begin_argument_list  begin_argument  begin_expr  begin_name assign node  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name inspect  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo this code effectively disables all inspection based optimizations none of them are 100 safe yet  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name enabled  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name disable  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name node  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_return  end_return  end_then  end_if  begin_switch  begin_condition  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get node type  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_case  begin_expr  begin_name aliasnode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name set flag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name andnode  end_name  end_expr  begin_decl_stmt  begin_decl  begin_type  begin_name and node  end_name  end_type  begin_name and node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name and node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name and node  end_name  begin_operator  end_operator  begin_name get first node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name and node  end_name  begin_operator  end_operator  begin_name get second node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name argscatnode  end_name  end_expr  begin_decl_stmt  begin_decl  begin_type  begin_name args cat node  end_name  end_type  begin_name args cat node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name args cat node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name args cat node  end_name  begin_operator  end_operator  begin_name get first node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name args cat node  end_name  begin_operator  end_operator  begin_name get second node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name argspushnode  end_name  end_expr  begin_decl_stmt  begin_decl  begin_type  begin_name args push node  end_name  end_type  begin_name args push node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name args push node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name args push node  end_name  begin_operator  end_operator  begin_name get first node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name args push node  end_name  begin_operator  end_operator  begin_name get second node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name argumentnode  end_name  end_expr  begin_break  end_break  end_case  begin_case  begin_expr  begin_name arraynode  end_name  end_expr  end_case  begin_case  begin_expr  begin_name blocknode  end_name  end_expr  end_case  begin_case  begin_expr  begin_name dregexpnode  end_name  end_expr  end_case  begin_case  begin_expr  begin_name dstrnode  end_name  end_expr  end_case  begin_case  begin_expr  begin_name dsymbolnode  end_name  end_expr  end_case  begin_case  begin_expr  begin_name dxstrnode  end_name  end_expr  end_case  begin_case  begin_expr  begin_name listnode  end_name  end_expr  begin_decl_stmt  begin_decl  begin_type  begin_name list node  end_name  end_type  begin_name list node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name list node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name list node  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name list node  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_break  end_break  end_case  begin_case  begin_expr  begin_name argsnode  end_name  end_expr  begin_decl_stmt  begin_decl  begin_type  begin_name args node  end_name  end_type  begin_name args node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name args node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name args node  end_name  begin_operator  end_operator  begin_name get block  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name set flag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name block arg  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name args node  end_name  begin_operator  end_operator  begin_name get opt args  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name set flag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name opt args  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name args node  end_name  begin_operator  end_operator  begin_name get opt args  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name args node  end_name  begin_operator  end_operator  begin_name get rest arg  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name args node  end_name  begin_operator  end_operator  begin_name get rest arg  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name set flag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name rest arg  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  begin_break  end_break  end_case  begin_case  begin_expr  begin_name attrassignnode  end_name  end_expr  begin_decl_stmt  begin_decl  begin_type  begin_name attr assign node  end_name  end_type  begin_name attr assign node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name attr assign node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set flag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name frame self  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name attr assign node  end_name  begin_operator  end_operator  begin_name get args node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name attr assign node  end_name  begin_operator  end_operator  begin_name get receiver node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name backrefnode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name set flag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name backref  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name beginnode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name begin node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get body node  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name bignumnode  end_name  end_expr  begin_break  end_break  end_case  begin_case  begin_expr  begin_name binaryoperatornode  end_name  end_expr  begin_decl_stmt  begin_decl  begin_type  begin_name binary operator node  end_name  end_type  begin_name binary operator node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name binary operator node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name binary operator node  end_name  begin_operator  end_operator  begin_name get first node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name binary operator node  end_name  begin_operator  end_operator  begin_name get second node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name blockargnode  end_name  end_expr  begin_break  end_break  end_case  begin_case  begin_expr  begin_name blockpassnode  end_name  end_expr  begin_decl_stmt  begin_decl  begin_type  begin_name block pass node  end_name  end_type  begin_name block pass node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name block pass node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name block pass node  end_name  begin_operator  end_operator  begin_name get args node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name block pass node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name breaknode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name break node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get value node  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name callnode  end_name  end_expr  begin_decl_stmt  begin_decl  begin_type  begin_name call node  end_name  end_type  begin_name call node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name call node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name call node  end_name  begin_operator  end_operator  begin_name get receiver node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment check for proc new an especially magic method  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name call node  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name call node  end_name  begin_operator  end_operator  begin_name get receiver node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name const node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name const node  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name call node  end_name  begin_operator  end_operator  begin_name get receiver node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment proc new needs the caller s block to instantiate a proc  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name set flag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name frame block  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_case  begin_case  begin_expr  begin_name fcallnode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name i argument node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get args node  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name block accepting node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get iter node  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_case  begin_case  begin_expr  begin_name vcallnode  end_name  end_expr  begin_decl_stmt  begin_decl  begin_type  begin_name i name node  end_name  end_type  begin_name name node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name i name node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name frame aware methods  end_name  begin_operator  end_operator  begin_name contains  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name name node  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name set flag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name frame aware  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name name node  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name index of  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name set flag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name eval  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name scope aware methods  end_name  begin_operator  end_operator  begin_name contains  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name name node  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name set flag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name scope aware  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_break  end_break  end_case  begin_case  begin_expr  begin_name casenode  end_name  end_expr  begin_decl_stmt  begin_decl  begin_type  begin_name case node  end_name  end_type  begin_name case node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name case node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name case node  end_name  begin_operator  end_operator  begin_name get case node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name when  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name case node  end_name  begin_operator  end_operator  begin_name get cases  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name child nodes  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_name when  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name case node  end_name  begin_operator  end_operator  begin_name get else node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name classnode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name set flag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name class node  end_name  end_type  begin_name class node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name class node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name class node  end_name  begin_operator  end_operator  begin_name get c path  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name class node  end_name  begin_operator  end_operator  begin_name get super node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name classvarnode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name set flag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name class var  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name constdeclnode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name assignable node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get value node  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set flag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name constant  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name classvarasgnnode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name assignable node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get value node  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set flag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name class var  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name classvardeclnode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name assignable node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get value node  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set flag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name class var  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name colon 2 node  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name colon 2 node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get left node  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name colon 3 node  end_name  end_expr  begin_break  end_break  end_case  begin_case  begin_expr  begin_name constnode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name set flag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name constant  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name defnnode  end_name  end_expr  end_case  begin_case  begin_expr  begin_name defsnode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name set flag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set flag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name frame visibility  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name definednode  end_name  end_expr  begin_switch  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name defined node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get expression node  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get node type  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_case  begin_expr  begin_name classvarasgnnode  end_name  end_expr  end_case  begin_case  begin_expr  begin_name classvardeclnode  end_name  end_expr  end_case  begin_case  begin_expr  begin_name constdeclnode  end_name  end_expr  end_case  begin_case  begin_expr  begin_name dasgnnode  end_name  end_expr  end_case  begin_case  begin_expr  begin_name globalasgnnode  end_name  end_expr  end_case  begin_case  begin_expr  begin_name localasgnnode  end_name  end_expr  end_case  begin_case  begin_expr  begin_name multipleasgnnode  end_name  end_expr  end_case  begin_case  begin_expr  begin_name opasgnnode  end_name  end_expr  end_case  begin_case  begin_expr  begin_name opelementasgnnode  end_name  end_expr  end_case  begin_case  begin_expr  begin_name dvarnode  end_name  end_expr  end_case  begin_case  begin_expr  begin_name falsenode  end_name  end_expr  end_case  begin_case  begin_expr  begin_name truenode  end_name  end_expr  end_case  begin_case  begin_expr  begin_name localvarnode  end_name  end_expr  end_case  begin_case  begin_expr  begin_name instvarnode  end_name  end_expr  end_case  begin_case  begin_expr  begin_name backrefnode  end_name  end_expr  end_case  begin_case  begin_expr  begin_name selfnode  end_name  end_expr  end_case  begin_case  begin_expr  begin_name vcallnode  end_name  end_expr  end_case  begin_case  begin_expr  begin_name yieldnode  end_name  end_expr  end_case  begin_case  begin_expr  begin_name globalvarnode  end_name  end_expr  end_case  begin_case  begin_expr  begin_name constnode  end_name  end_expr  end_case  begin_case  begin_expr  begin_name fcallnode  end_name  end_expr  end_case  begin_case  begin_expr  begin_name classvarnode  end_name  end_expr  begin_comment ok we have fast paths  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name defined node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get expression node  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_default  begin_comment long slow way causes disabling  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name disable  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_default  end_block  end_switch  begin_break  end_break  end_case  begin_case  begin_expr  begin_name dotnode  end_name  end_expr  begin_decl_stmt  begin_decl  begin_type  begin_name dot node  end_name  end_type  begin_name dot node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name dot node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name dot node  end_name  begin_operator  end_operator  begin_name get begin node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name dot node  end_name  begin_operator  end_operator  begin_name get end node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name dasgnnode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name assignable node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get value node  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name dvarnode  end_name  end_expr  begin_break  end_break  end_case  begin_case  begin_expr  begin_name ensurenode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name disable  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name evstrnode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name ev str node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get body  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name falsenode  end_name  end_expr  begin_break  end_break  end_case  begin_case  begin_expr  begin_name fixnumnode  end_name  end_expr  begin_break  end_break  end_case  begin_case  begin_expr  begin_name flipnode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name flip node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get begin node  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name flip node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get end node  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name floatnode  end_name  end_expr  begin_break  end_break  end_case  begin_case  begin_expr  begin_name fornode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name set flag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name closure  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set flag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name scope aware  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name for node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get iter node  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name for node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get body node  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name for node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get var node  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name globalasgnnode  end_name  end_expr  begin_decl_stmt  begin_decl  begin_type  begin_name global asgn node  end_name  end_type  begin_name global asgn node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name global asgn node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name global asgn node  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name set flag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name lastline  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name global asgn node  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name set flag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name backref  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name global asgn node  end_name  begin_operator  end_operator  begin_name get value node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name globalvarnode  end_name  end_expr  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name global var node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name set flag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name lastline  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name global var node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name set flag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name backref  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  begin_break  end_break  end_case  begin_case  begin_expr  begin_name hashnode  end_name  end_expr  begin_decl_stmt  begin_decl  begin_type  begin_name hash node  end_name  end_type  begin_name hash node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name hash node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name hash node  end_name  begin_operator  end_operator  begin_name get list node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name ifnode  end_name  end_expr  begin_decl_stmt  begin_decl  begin_type  begin_name if node  end_name  end_type  begin_name if node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name if node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name if node  end_name  begin_operator  end_operator  begin_name get condition  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name if node  end_name  begin_operator  end_operator  begin_name get then body  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name if node  end_name  begin_operator  end_operator  begin_name get else body  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name instasgnnode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name assignable node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get value node  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name instvarnode  end_name  end_expr  begin_break  end_break  end_case  begin_case  begin_expr  begin_name iscopingnode  end_name  end_expr  begin_decl_stmt  begin_decl  begin_type  begin_name i scoping node  end_name  end_type  begin_name iscoping node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name i scoping node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name iscoping node  end_name  begin_operator  end_operator  begin_name get c path  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name iternode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name set flag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name closure  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name lambdanode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name set flag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name closure  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name localasgnnode  end_name  end_expr  begin_decl_stmt  begin_decl  begin_type  begin_name local asgn node  end_name  end_type  begin_name local asgn node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name local asgn node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name pragmas  end_name  begin_operator  end_operator  begin_name contains  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name local asgn node  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name local asgn node  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name no frame  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name local asgn node  end_name  begin_operator  end_operator  begin_name get value node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name true node  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_break  end_break  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name local asgn node  end_name  begin_operator  end_operator  begin_name get value node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name localvarnode  end_name  end_expr  begin_break  end_break  end_case  begin_case  begin_expr  begin_name matchnode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name match node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get regexp node  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set flag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name backref  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name match 2 node  end_name  end_expr  begin_decl_stmt  begin_decl  begin_type  begin_name match 2 node  end_name  end_type  begin_name match 2 node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name match 2 node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name match 2 node  end_name  begin_operator  end_operator  begin_name get receiver node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name match 2 node  end_name  begin_operator  end_operator  begin_name get value node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set flag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name backref  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name match 3 node  end_name  end_expr  begin_decl_stmt  begin_decl  begin_type  begin_name match 3 node  end_name  end_type  begin_name match 3 node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name match 3 node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name match 3 node  end_name  begin_operator  end_operator  begin_name get receiver node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name match 3 node  end_name  begin_operator  end_operator  begin_name get value node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set flag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name backref  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name modulenode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name set flag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name module node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get c path  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name multipleasgn 19 node  end_name  end_expr  begin_decl_stmt  begin_decl  begin_type  begin_name multiple asgn 19 node  end_name  end_type  begin_name multiple asgn 19 node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name multiple asgn 19 node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name multiple asgn 19 node  end_name  begin_operator  end_operator  begin_name get pre  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name multiple asgn 19 node  end_name  begin_operator  end_operator  begin_name get post  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name multiple asgn 19 node  end_name  begin_operator  end_operator  begin_name get rest  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name multiple asgn 19 node  end_name  begin_operator  end_operator  begin_name get value node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name multipleasgnnode  end_name  end_expr  begin_decl_stmt  begin_decl  begin_type  begin_name multiple asgn node  end_name  end_type  begin_name multiple asgn node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name multiple asgn node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name multiple asgn node  end_name  begin_operator  end_operator  begin_name get args node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name multiple asgn node  end_name  begin_operator  end_operator  begin_name get head node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name multiple asgn node  end_name  begin_operator  end_operator  begin_name get value node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name newlinenode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name newline node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get next node  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name nextnode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name next node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get value node  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name nilnode  end_name  end_expr  begin_break  end_break  end_case  begin_case  begin_expr  begin_name notnode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name not node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get condition node  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name nthrefnode  end_name  end_expr  begin_break  end_break  end_case  begin_case  begin_expr  begin_name opasgnandnode  end_name  end_expr  begin_decl_stmt  begin_decl  begin_type  begin_name op asgn and node  end_name  end_type  begin_name op asgn and node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name op asgn and node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name op asgn and node  end_name  begin_operator  end_operator  begin_name get first node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name op asgn and node  end_name  begin_operator  end_operator  begin_name get second node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name opasgnnode  end_name  end_expr  begin_decl_stmt  begin_decl  begin_type  begin_name op asgn node  end_name  end_type  begin_name op asgn node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name op asgn node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name op asgn node  end_name  begin_operator  end_operator  begin_name get receiver node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name op asgn node  end_name  begin_operator  end_operator  begin_name get value node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name opasgnornode  end_name  end_expr  begin_switch  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name op asgn or node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get first node  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get node type  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_case  begin_expr  begin_name classvarasgnnode  end_name  end_expr  end_case  begin_case  begin_expr  begin_name classvardeclnode  end_name  end_expr  end_case  begin_case  begin_expr  begin_name constdeclnode  end_name  end_expr  end_case  begin_case  begin_expr  begin_name dasgnnode  end_name  end_expr  end_case  begin_case  begin_expr  begin_name globalasgnnode  end_name  end_expr  end_case  begin_case  begin_expr  begin_name localasgnnode  end_name  end_expr  end_case  begin_case  begin_expr  begin_name multipleasgnnode  end_name  end_expr  end_case  begin_case  begin_expr  begin_name opasgnnode  end_name  end_expr  end_case  begin_case  begin_expr  begin_name opelementasgnnode  end_name  end_expr  end_case  begin_case  begin_expr  begin_name dvarnode  end_name  end_expr  end_case  begin_case  begin_expr  begin_name falsenode  end_name  end_expr  end_case  begin_case  begin_expr  begin_name truenode  end_name  end_expr  end_case  begin_case  begin_expr  begin_name localvarnode  end_name  end_expr  end_case  begin_case  begin_expr  begin_name instvarnode  end_name  end_expr  end_case  begin_case  begin_expr  begin_name backrefnode  end_name  end_expr  end_case  begin_case  begin_expr  begin_name selfnode  end_name  end_expr  end_case  begin_case  begin_expr  begin_name vcallnode  end_name  end_expr  end_case  begin_case  begin_expr  begin_name yieldnode  end_name  end_expr  end_case  begin_case  begin_expr  begin_name globalvarnode  end_name  end_expr  end_case  begin_case  begin_expr  begin_name constnode  end_name  end_expr  end_case  begin_case  begin_expr  begin_name fcallnode  end_name  end_expr  end_case  begin_case  begin_expr  begin_name classvarnode  end_name  end_expr  begin_comment ok we have fast paths  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name op asgn or node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get second node  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_default  begin_comment long slow way causes disabling for defined  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name disable  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_default  end_block  end_switch  begin_break  end_break  end_case  begin_case  begin_expr  begin_name opelementasgnnode  end_name  end_expr  begin_decl_stmt  begin_decl  begin_type  begin_name op element asgn node  end_name  end_type  begin_name op element asgn node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name op element asgn node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set flag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name frame self  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name op element asgn node  end_name  begin_operator  end_operator  begin_name get args node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name op element asgn node  end_name  begin_operator  end_operator  begin_name get receiver node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name op element asgn node  end_name  begin_operator  end_operator  begin_name get value node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name optargnode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name opt arg node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get value  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name ornode  end_name  end_expr  begin_decl_stmt  begin_decl  begin_type  begin_name or node  end_name  end_type  begin_name or node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name or node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name or node  end_name  begin_operator  end_operator  begin_name get first node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name or node  end_name  begin_operator  end_operator  begin_name get second node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name postexenode  end_name  end_expr  begin_decl_stmt  begin_decl  begin_type  begin_name post exe node  end_name  end_type  begin_name post exe node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name post exe node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set flag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name closure  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set flag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name scope aware  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name post exe node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name post exe node  end_name  begin_operator  end_operator  begin_name get var node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name preexenode  end_name  end_expr  begin_decl_stmt  begin_decl  begin_type  begin_name pre exe node  end_name  end_type  begin_name pre exe node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name pre exe node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set flag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name closure  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set flag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name scope aware  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name pre exe node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name pre exe node  end_name  begin_operator  end_operator  begin_name get var node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name redonode  end_name  end_expr  begin_break  end_break  end_case  begin_case  begin_expr  begin_name regexpnode  end_name  end_expr  begin_break  end_break  end_case  begin_case  begin_expr  begin_name rootnode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name root node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get body node  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name root node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get body node  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name block node  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name block node  end_name  end_type  begin_name block node  end_name  begin_init  begin_expr  begin_call  begin_name block node  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name root node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get body node  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name block node  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment method has more than 500 lines we ll need to split it  end_comment  begin_comment and therefore need to use a heap based scope  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name set flag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name scope aware  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  begin_break  end_break  end_case  begin_case  begin_expr  begin_name rescuebodynode  end_name  end_expr  begin_decl_stmt  begin_decl  begin_type  begin_name rescue body node  end_name  end_type  begin_name rescue body  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name rescue body node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name rescue body  end_name  begin_operator  end_operator  begin_name get exception nodes  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name rescue body  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name rescue body  end_name  begin_operator  end_operator  begin_name get opt rescue node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name rescuenode  end_name  end_expr  begin_decl_stmt  begin_decl  begin_type  begin_name rescue node  end_name  end_type  begin_name rescue node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name rescue node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name rescue node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name rescue node  end_name  begin_operator  end_operator  begin_name get else node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name rescue node  end_name  begin_operator  end_operator  begin_name get rescue node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name disable  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name retrynode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name set flag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name retry  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name returnnode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name return node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get value node  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name sclassnode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name set flag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name s class node  end_name  end_type  begin_name sclass node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name s class node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name sclass node  end_name  begin_operator  end_operator  begin_name get receiver node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name scopenode  end_name  end_expr  begin_break  end_break  end_case  begin_case  begin_expr  begin_name selfnode  end_name  end_expr  begin_break  end_break  end_case  begin_case  begin_expr  begin_name splatnode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name splat node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get value  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name starnode  end_name  end_expr  begin_break  end_break  end_case  begin_case  begin_expr  begin_name strnode  end_name  end_expr  begin_break  end_break  end_case  begin_case  begin_expr  begin_name supernode  end_name  end_expr  begin_decl_stmt  begin_decl  begin_type  begin_name super node  end_name  end_type  begin_name super node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name super node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name super node  end_name  begin_operator  end_operator  begin_name get args node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name super node  end_name  begin_operator  end_operator  begin_name get iter node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set flag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name super  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name svaluenode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name s value node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get value  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name symbolnode  end_name  end_expr  begin_break  end_break  end_case  begin_case  begin_expr  begin_name toarynode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name to ary node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get value  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name truenode  end_name  end_expr  begin_break  end_break  end_case  begin_case  begin_expr  begin_name undefnode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name set flag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name untilnode  end_name  end_expr  begin_decl_stmt  begin_decl  begin_type  begin_name until node  end_name  end_type  begin_name until node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name until node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name ast inspector  end_name  end_type  begin_name until inspector  end_name  begin_init  begin_expr  begin_call  begin_name sub inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name until node  end_name  begin_operator  end_operator  begin_name get condition node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name until node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment a while node could receive non local flow control from any of these  end_comment  begin_comment a closure within the loop  end_comment  begin_comment an eval within the loop  end_comment  begin_comment a block arg based proc called within the loop  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name until inspector  end_name  begin_operator  end_operator  begin_name get flag  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name closure  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name until inspector  end_name  begin_operator  end_operator  begin_name get flag  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name eval  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name  begin_name until node  end_name  begin_operator  end_operator  begin_name contains nonlocal flow  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_comment we set scope aware to true to force heap based locals  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name set flag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name scope aware  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name integrate  end_name  begin_argument_list  begin_argument  begin_expr  begin_name until inspector  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name valiasnode  end_name  end_expr  begin_break  end_break  end_case  begin_case  begin_expr  begin_name whennode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name when node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get body node  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name when node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get expression nodes  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name when node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get next case  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment because regexp sets backref we have to make this backref aware  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name set flag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name backref  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name whilenode  end_name  end_expr  begin_decl_stmt  begin_decl  begin_type  begin_name while node  end_name  end_type  begin_name while node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name while node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name ast inspector  end_name  end_type  begin_name while inspector  end_name  begin_init  begin_expr  begin_call  begin_name sub inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name while node  end_name  begin_operator  end_operator  begin_name get condition node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name while node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment a while node could receive non local flow control from any of these  end_comment  begin_comment a closure within the loop  end_comment  begin_comment an eval within the loop  end_comment  begin_comment a block arg based proc called within the loop  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name while inspector  end_name  begin_operator  end_operator  begin_name get flag  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name closure  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name while inspector  end_name  begin_operator  end_operator  begin_name get flag  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name eval  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get flag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name block arg  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name  begin_name while node  end_name  begin_operator  end_operator  begin_name contains nonlocal flow  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_comment we set scope aware to true to force heap based locals  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name set flag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name scope aware  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name integrate  end_name  begin_argument_list  begin_argument  begin_expr  begin_name while inspector  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name xstrnode  end_name  end_expr  begin_break  end_break  end_case  begin_case  begin_expr  begin_name yieldnode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name yield node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get args node  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name zarraynode  end_name  end_expr  begin_break  end_break  end_case  begin_case  begin_expr  begin_name zeroargnode  end_name  end_expr  begin_break  end_break  end_case  begin_case  begin_expr  begin_name zsupernode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name set flag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name scope aware  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set flag  end_name  begin_argument_list  begin_argument  begin_expr  begin_name zsuper  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name z super node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get iter node  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_default  begin_comment encountered a node we don t recognize set everything to true to disable optz  end_comment  begin_assert  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name node  end_name  end_expr  end_assert  begin_expr_stmt  begin_expr  begin_call  begin_name disable  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_default  end_block  end_switch  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name perform boolean branch  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name branch callback  end_name  end_type  begin_name true branch  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name branch callback  end_name  end_type  begin_name false branch  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name label  end_name  end_type  begin_name after jmp  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name label  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name label  end_name  end_type  begin_name false jmp  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name label  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment call is true on the result  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name is true  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name ifeq  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name false jmp  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment eq 0 i e false  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name true branch  end_name  begin_operator  end_operator  begin_name branch  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name go to  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name after jmp  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment fixme optimize for cases where we have no false branch  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name label  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name false jmp  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name false branch  end_name  begin_operator  end_operator  begin_name branch  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name label  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name after jmp  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name load false  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment todo cache  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name load runtime  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name invoke ruby  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name sig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name ruby boolean  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name load true  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment todo cache  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name load runtime  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name invoke ruby  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name sig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name ruby boolean  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name define new method  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name method arity  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name static scope  end_name  end_type  begin_name scope  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name compiler callback  end_name  end_type  begin_name body  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name compiler callback  end_name  end_type  begin_name args  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name compiler callback  end_name  end_type  begin_name receiver  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ast inspector  end_name  end_type  begin_name inspector  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name root  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo build arg list based on number of args optionals etc  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name new method name  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name root  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name boolean  end_name  begin_operator  end_operator  begin_name get boolean  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name new method name  end_name  begin_operator  end_operator  begin_name name  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name mangled name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name java name mangler  end_name  begin_operator  end_operator  begin_name mangle string for clean java identifier  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name new method name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name script  end_name  begin_operator  end_operator  begin_name get and increment method index  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_name mangled name  end_name  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name body compiler  end_name  end_type  begin_name method compiler  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name script  end_name  begin_operator  end_operator  begin_name start method  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name new method name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name scope  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name inspector  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment callbacks to fill in method body  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name body  end_name  begin_operator  end_operator  begin_name call  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name method compiler  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method compiler  end_name  begin_operator  end_operator  begin_name end body  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment prepare to call def utility method to handle def logic  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name load thread context  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name load self  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name receiver  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name receiver  end_name  begin_operator  end_operator  begin_name call  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment script object  end_comment  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name standard asm compiler  end_name  begin_operator  end_operator  begin_name this  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name ldc  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name ldc  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new method name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name standard asm compiler  end_name  begin_operator  end_operator  begin_name build static scope names  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name scope  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name push int  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name method arity  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment arities  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name push int  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name scope  end_name  begin_operator  end_operator  begin_name get required args  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name push int  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name scope  end_name  begin_operator  end_operator  begin_name get optional args  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name push int  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name scope  end_name  begin_operator  end_operator  begin_name get rest arg  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name getstatic  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name p  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name call configuration  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name inspector  end_name  begin_operator  end_operator  begin_name get call config  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name ci  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name call configuration  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name receiver  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name invoke utility method  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name sig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name i ruby object  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name params  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name thread context  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name i ruby object  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name i ruby object  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name object  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name string  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name string  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name string  end_name  begin_index  end_index  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name int  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name int  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name int  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name int  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name call configuration  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name invoke utility method  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name sig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name i ruby object  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name params  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name thread context  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name i ruby object  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name object  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name string  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name string  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name string  end_name  begin_index  end_index  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name int  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name int  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name int  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name int  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name call configuration  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name issue redo event  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment fixme this isn t right for within ensured rescued code  end_comment  begin_if  begin_condition  begin_expr  begin_name current loop labels  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name issue loop redo  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name in nested method  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name invoke utility method  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name sig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name i ruby object  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_comment jump back to the top of the main body of this closure  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name go to  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name scope start  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_else  end_if  end_block 
 begin_specifier  end_specifier  begin_name invoke dynamic invocation compiler  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name base body compiler  end_name  end_type  begin_name method compiler  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name skinny method adapter  end_name  end_type  begin_name method  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name super  end_name  begin_argument_list  begin_argument  begin_expr  begin_name method compiler  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment hack force clinit to be created  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method compiler  end_name  begin_operator  end_operator  begin_name get script compiler  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get class init method  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name end body  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment return last value from execution  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name areturn  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment end of variable scope  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name label  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name scope end  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment method is done declare all variables  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name variable compiler  end_name  begin_operator  end_operator  begin_name declare locals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name scope  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name scope start  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name scope end  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment define the annotation for the method  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name annotation visitor  end_name  end_type  begin_name annotation  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name visit annotation  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name ci  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name j ruby method  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name annotation  end_name  begin_operator  end_operator  begin_name visit  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name ruby name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name annotation  end_name  begin_operator  end_operator  begin_name visit  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name annotation  end_name  begin_operator  end_operator  begin_name visit  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name scope  end_name  begin_operator  end_operator  begin_name get required args  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name annotation  end_name  begin_operator  end_operator  begin_name visit  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name scope  end_name  begin_operator  end_operator  begin_name get optional args  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name annotation  end_name  begin_operator  end_operator  begin_name visit  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name scope  end_name  begin_operator  end_operator  begin_name get rest arg  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo reads writes from frame  end_comment  begin_comment todo information on scoping  end_comment  begin_comment todo visibility  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name end  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name specific arity  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name method  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name skinny method adapter  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name script  end_name  begin_operator  end_operator  begin_name get class visitor  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name visit method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name acc public  end_name  begin_operator  end_operator  begin_name acc static  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name method name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name standard asm compiler  end_name  begin_operator  end_operator  begin_name get static method signature  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name script  end_name  begin_operator  end_operator  begin_name get classname  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name start  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment check arity in the variable arity version  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name invokevirtual  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name p  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name thread context  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name sig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name ruby  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name push int  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name scope  end_name  begin_operator  end_operator  begin_name get required args  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name push int  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name scope  end_name  begin_operator  end_operator  begin_name get required args  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name invokestatic  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name p  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name arity  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name sig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name int  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name ruby  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name int  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name int  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name pop  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name load this  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name load thread context  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name load self  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment fixme missing arity check  end_comment  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name scope  end_name  begin_operator  end_operator  begin_name get required args  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name standard asm compiler  end_name  begin_operator  end_operator  begin_name args index  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name ldc  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name arrayload  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name standard asm compiler  end_name  begin_operator  end_operator  begin_name args index  end_name  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment load block from version of method  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name invokestatic  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name script  end_name  begin_operator  end_operator  begin_name get classname  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name method name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get signature  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name areturn  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name end  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name end body  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment return last value from execution  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name areturn  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment end of variable scope  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name label  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name scope end  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment method is done declare all variables  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name variable compiler  end_name  begin_operator  end_operator  begin_name declare locals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name scope  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name scope start  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name scope end  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name end  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name specific arity  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name method  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name skinny method adapter  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name script  end_name  begin_operator  end_operator  begin_name get class visitor  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name visit method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name acc public  end_name  begin_operator  end_operator  begin_name acc static  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name method name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name standard asm compiler  end_name  begin_operator  end_operator  begin_name get static method signature  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name script  end_name  begin_operator  end_operator  begin_name get classname  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name start  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment check arity in the variable arity version  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name invokevirtual  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name p  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name thread context  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name sig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name ruby  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name push int  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name scope  end_name  begin_operator  end_operator  begin_name get required args  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name push int  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name scope  end_name  begin_operator  end_operator  begin_name get required args  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name invokestatic  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name p  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name arity  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name sig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name int  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name ruby  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name int  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name int  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name pop  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name load this  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name load thread context  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name load self  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment fixme missing arity check  end_comment  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name scope  end_name  begin_operator  end_operator  begin_name get required args  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name standard asm compiler  end_name  begin_operator  end_operator  begin_name args index  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name ldc  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name arrayload  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name standard asm compiler  end_name  begin_operator  end_operator  begin_name args index  end_name  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment load block from version of method  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name invokestatic  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name script  end_name  begin_operator  end_operator  begin_name get classname  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name method name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get signature  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name areturn  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name end  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name begin init  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name class visitor  end_name  end_type  begin_name cv  end_name  begin_init  begin_expr  begin_call  begin_name get class visitor  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name init method  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name skinny method adapter  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name cv  end_name  begin_operator  end_operator  begin_name visit method  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name acc public  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name sig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name void  end_name  begin_operator  end_operator  begin_name type  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name init method  end_name  begin_operator  end_operator  begin_name start  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name init method  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name init method  end_name  begin_operator  end_operator  begin_name invokespecial  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name p  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name abstract script  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name sig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name void  end_name  begin_operator  end_operator  begin_name type  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cv  end_name  begin_operator  end_operator  begin_name visit field  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name acc private  end_name  begin_operator  end_operator  begin_name acc final  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name ci  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name class  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment fixme this really ought to be in clinit but it doesn t matter much  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name init method  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name init method  end_name  begin_operator  end_operator  begin_name ldc  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name c  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get classname  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name init method  end_name  begin_operator  end_operator  begin_name invokestatic  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name p  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name class  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name sig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name class  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name params  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name string  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name init method  end_name  begin_operator  end_operator  begin_name putfield  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get classname  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name ci  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name class  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment jruby 3014 make file dynamically determined at load time but  end_comment  begin_comment we provide a reasonable default here  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name init method  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name init method  end_name  begin_operator  end_operator  begin_name ldc  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get sourcename  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name init method  end_name  begin_operator  end_operator  begin_name putfield  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get classname  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name ci  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name string  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment sss fixme correct where does closure arg come from end_comment begin_specifier  end_specifier  begin_name yield instr  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name variable  end_name  end_type  begin_name result  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name operand  end_name  begin_index  end_index  end_name  end_type  begin_name args  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name super  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name operation  end_name  begin_operator  end_operator  begin_name yield  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name result  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name operand  end_name  end_argument  end_argument_list  end_name  end_type  begin_name setup call args  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name receiver  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name args  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ir scope  end_name  end_type  begin_name s  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name operand  end_name  end_argument  end_argument_list  end_name  end_type  begin_name args list  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name operand  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name args list  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name build  end_name  begin_argument_list  begin_argument  begin_expr  begin_name receiver  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment sss fixme i added this in is this correct  end_comment  begin_if  begin_condition  begin_expr  begin_name args  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment unwrap newline nodes to get their actual type  end_comment  begin_expr_stmt  begin_expr  begin_name args  end_name  begin_operator  end_operator  begin_call  begin_name skip over newlines  end_name  begin_argument_list  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name build args  end_name  begin_argument_list  begin_argument  begin_expr  begin_name args list  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_name args list  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name operand  end_name  end_argument  end_argument_list  end_name  end_type  begin_name setup call args  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name args  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ir scope  end_name  end_type  begin_name s  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name operand  end_name  end_argument  end_argument_list  end_name  end_type  begin_name args list  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name operand  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name args list  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name get self  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name args  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment unwrap newline nodes to get their actual type  end_comment  begin_expr_stmt  begin_expr  begin_name args  end_name  begin_operator  end_operator  begin_call  begin_name skip over newlines  end_name  begin_argument_list  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name build args  end_name  begin_argument_list  begin_argument  begin_expr  begin_name args list  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_name args list  end_name  end_expr  end_return  end_block 
begin_comment this method is called to build assignments for a multiple assignment instruction end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name build assignment  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ir scope  end_name  end_type  begin_name s  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name operand  end_name  end_type  begin_name values  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name arg index  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name is splat  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name variable  end_name  end_type  begin_name v  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name get new variable  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name add instr  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name get array instr  end_name  begin_argument_list  begin_argument  begin_expr  begin_name v  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name values  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg index  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name is splat  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_switch  begin_condition  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get node type  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_case  begin_expr  begin_name attrassignnode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name build attr assign assignment  end_name  begin_argument_list  begin_argument  begin_expr  begin_name node  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name v  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  begin_comment sss fixme what is the difference between class var asgn node class var decl node  end_comment  end_case  begin_case  begin_expr  begin_name classvarasgnnode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name add instr  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name put cvar instr  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name meta object  end_name  begin_argument_list  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name class var asgn node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name v  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name classvardeclnode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name add instr  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name put cvar instr  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name meta object  end_name  begin_argument_list  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name class var decl node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name v  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name constdeclnode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name build const decl assignment  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name const decl node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name v  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name globalasgnnode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name add instr  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name put global var instr  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name global asgn node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name v  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name instasgnnode  end_name  end_expr  begin_comment note if s happens to the a class this is effectively an assignment of a class instance variable  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name add instr  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name put field instr  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name get self  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name inst asgn node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name v  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name localasgnnode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name add instr  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name copy instr  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name local asgn node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name v  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name multipleasgnnode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name build multiple asgn assignment  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name multiple asgn node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name v  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name zeroargnode  end_name  end_expr  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not compilable exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name node  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_case  begin_default  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not compilable exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name node  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_default  end_block  end_switch  end_block 
begin_comment this method is called to build arguments for a block end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name build block args assignment  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ir scope  end_name  end_type  begin_name s  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name arg index  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name is splat  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name variable  end_name  end_type  begin_name v  end_name  end_decl  end_decl_stmt  begin_switch  begin_condition  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get node type  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_case  begin_expr  begin_name attrassignnode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_name v  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name get new variable  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name add instr  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name recv closure arg instr  end_name  begin_argument_list  begin_argument  begin_expr  begin_name v  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg index  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name is splat  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name build attr assign assignment  end_name  begin_argument_list  begin_argument  begin_expr  begin_name node  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name v  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  begin_comment sss fixme  end_comment  begin_comment   end_comment  begin_comment there are also differences in variable scoping between 1 8 and 1 9  end_comment  begin_comment ruby 1 8 is the buggy semantics if i understand correctly  end_comment  begin_comment   end_comment  begin_comment the semantics of how this shadows other variables outside the block needs  end_comment  begin_comment to be figured out during live var analysis  end_comment  end_case  begin_case  begin_expr  begin_name dasgnnode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_name v  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name d asgn node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name add instr  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name recv closure arg instr  end_name  begin_argument_list  begin_argument  begin_expr  begin_name v  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg index  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name is splat  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  begin_comment sss fixme what is the difference between class var asgn node class var decl node  end_comment  end_case  begin_case  begin_expr  begin_name classvarasgnnode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_name v  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name get new variable  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name add instr  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name recv closure arg instr  end_name  begin_argument_list  begin_argument  begin_expr  begin_name v  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg index  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name is splat  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name add instr  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name put cvar instr  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name meta object  end_name  begin_argument_list  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name class var asgn node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name v  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name classvardeclnode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_name v  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name get new variable  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name add instr  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name recv closure arg instr  end_name  begin_argument_list  begin_argument  begin_expr  begin_name v  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg index  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name is splat  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name add instr  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name put cvar instr  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name meta object  end_name  begin_argument_list  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name class var decl node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name v  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name constdeclnode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_name v  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name get new variable  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name add instr  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name recv closure arg instr  end_name  begin_argument_list  begin_argument  begin_expr  begin_name v  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg index  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name is splat  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name build const decl assignment  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name const decl node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name v  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name globalasgnnode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_name v  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name get new variable  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name add instr  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name recv closure arg instr  end_name  begin_argument_list  begin_argument  begin_expr  begin_name v  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg index  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name is splat  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name add instr  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name put global var instr  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name global asgn node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name v  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name instasgnnode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_name v  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name get new variable  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name add instr  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name recv closure arg instr  end_name  begin_argument_list  begin_argument  begin_expr  begin_name v  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg index  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name is splat  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment note if s happens to the a class this is effectively an assignment of a class instance variable  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name add instr  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name put field instr  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name get self  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name inst asgn node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name v  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name localasgnnode  end_name  end_expr  begin_expr_stmt  begin_expr  begin_name v  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name local asgn node  end_name  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name add instr  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name recv closure arg instr  end_name  begin_argument_list  begin_argument  begin_expr  begin_name v  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg index  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name is splat  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name multipleasgnnode  end_name  end_expr  begin_comment sss fixme are we guaranteed that we splats dont head to multiple assignment nodes i e a b  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name build multiple asgn assignment  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name multiple asgn node  end_name  begin_operator  end_operator  begin_name node  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name zeroargnode  end_name  end_expr  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not compilable exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name node  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_case  begin_default  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name not compilable exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name node  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_default  end_block  end_switch  end_block 
 begin_type  begin_specifier  end_specifier  begin_name operand  end_name  end_type  begin_name build alias  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name alias node  end_name  end_type  begin_name alias  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ir scope  end_name  end_type  begin_name s  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name operand  end_name  begin_index  end_index  end_type  begin_name args  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name operand  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_operator  end_operator  begin_call  begin_name meta object  end_name  begin_argument_list  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name meth addr  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name alias  end_name  begin_operator  end_operator  begin_name get new name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  begin_expr  begin_operator  end_operator  begin_call  begin_name meth addr  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name alias  end_name  begin_operator  end_operator  begin_name get old name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_block  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name add instr  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name ruby internals call instr  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name meth addr  end_name  begin_operator  end_operator  begin_name define alias  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment sss fixme can this return anything other than nil  end_comment  begin_return  begin_expr  begin_name  begin_name nil  end_name  begin_operator  end_operator  begin_name nil  end_name  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name operand  end_name  end_type  begin_name build break  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name break node  end_name  end_type  begin_name break node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ir scope  end_name  end_type  begin_name s  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name operand  end_name  end_type  begin_name rv  end_name  begin_init  begin_expr  begin_call  begin_name build  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name break node  end_name  begin_operator  end_operator  begin_name get value node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment if this is not a closure the break is equivalent to jumping to the loop end label  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name add instr  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name s  end_name  begin_operator  end_operator  begin_name ir closure  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name break instr  end_name  begin_argument_list  begin_argument  begin_expr  begin_name rv  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name jump instr  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name get current loop  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name loop end label  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment sss fixme should i be returning the operand constructed here  end_comment  begin_return  begin_expr  begin_name  begin_name nil  end_name  begin_operator  end_operator  begin_name nil  end_name  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name operand  end_name  end_type  begin_name build class  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name class node  end_name  end_type  begin_name class node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ir scope  end_name  end_type  begin_name s  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name node  end_name  end_type  begin_name super node  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name class node  end_name  begin_operator  end_operator  begin_name get super node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name colon 3 node  end_name  end_type  begin_name cpath node  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name class node  end_name  begin_operator  end_operator  begin_name get c path  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name operand  end_name  end_type  begin_name super class  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name super node  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_name super class  end_name  begin_operator  end_operator  begin_call  begin_name build  end_name  begin_argument_list  begin_argument  begin_expr  begin_name super node  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  begin_comment by default the container for this class is s  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name operand  end_name  end_type  begin_name container  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_comment do we have a dynamic container  end_comment  begin_if  begin_condition  begin_expr  begin_name cpath node  end_name  begin_operator  end_operator  begin_name colon 2 node  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name left node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name colon 2 node  end_name  begin_operator  end_operator  begin_name cpath node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get left node  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name left node  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_name container  end_name  begin_operator  end_operator  begin_call  begin_name build  end_name  begin_argument_list  begin_argument  begin_expr  begin_name left node  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name cpath node  end_name  begin_operator  end_operator  begin_name colon 3 node  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name container  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name meta object  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name ir class  end_name  begin_operator  end_operator  begin_name get core class  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  begin_comment build a new class and add it to the current scope could be a script module class  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name class name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name cpath node  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name ir class  end_name  end_type  begin_name c  end_name  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name operand  end_name  end_type  begin_name c meta obj  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name container  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name c  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name ir class  end_name  begin_argument_list  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name super class  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name class name  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name c meta obj  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name meta object  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name add class  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name container  end_name  begin_operator  end_operator  begin_name meta object  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ir scope  end_name  end_type  begin_name container scope  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name meta object  end_name  begin_operator  end_operator  begin_name container  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name scope  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name c  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name ir class  end_name  begin_argument_list  begin_argument  begin_expr  begin_name container scope  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name super class  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name class name  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name c meta obj  end_name  begin_operator  end_operator  begin_name container  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name container scope  end_name  begin_operator  end_operator  begin_name add class  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name c  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name ir class  end_name  begin_argument_list  begin_argument  begin_expr  begin_name container  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name super class  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name class name  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name c meta obj  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name meta object  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name add instr  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name put const instr  end_name  begin_argument_list  begin_argument  begin_expr  begin_name container  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name class name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name c meta obj  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment sss fixme what happens to the add class in this case  end_comment  end_block  end_else  end_if  end_else  end_if  begin_comment build the class body  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name class node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name build  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name class node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name get root method  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  begin_comment return a meta object corresponding to the class  end_comment  begin_return  begin_expr  begin_name c meta obj  end_name  end_expr  end_return  end_block 
begin_comment sss fixme where is this set up how is this diff from class var decl node end_comment begin_type  begin_specifier  end_specifier  begin_name operand  end_name  end_type  begin_name build class var asgn  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name class var asgn node  end_name  end_type  begin_name class var asgn node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ir scope  end_name  end_type  begin_name s  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name operand  end_name  end_type  begin_name val  end_name  begin_init  begin_expr  begin_call  begin_name build  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name class var asgn node  end_name  begin_operator  end_operator  begin_name get value node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name add instr  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name put cvar instr  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name meta object  end_name  begin_argument_list  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name class var asgn node  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name val  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name val  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name operand  end_name  end_type  begin_name build colon 3  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name colon 3 node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ir scope  end_name  end_type  begin_name s  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name variable  end_name  end_type  begin_name cv  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name get new variable  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment sss fixme is this correct  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name add instr  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name get const instr  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cv  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name get self  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name cv  end_name  end_expr  end_return  end_block 
begin_comment sss fixme receiver this is the class meta object basically end_commentbegin_comment operand receiver build defs node get receiver node s end_comment begin_type  begin_specifier  end_specifier  begin_name operand  end_name  end_type  begin_name receive args  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name args node  end_name  end_type  begin_name args node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ir scope  end_name  end_type  begin_name s  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name required  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name args node  end_name  begin_operator  end_operator  begin_name get required args count  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name opt  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name args node  end_name  begin_operator  end_operator  begin_name get optional args count  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name rest  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name args node  end_name  begin_operator  end_operator  begin_name get rest arg  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo add ir instructions for checking method arity  end_comment  begin_comment s get variable compiler check method arity required opt rest  end_comment  begin_comment self args 0  end_comment  begin_comment sss fixme verify that this is correct  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name add instr  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name recv arg instr  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name get self  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment other args begin at index 1  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name arg index  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_comment both for fixed arity and variable arity methods  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name list node  end_name  end_type  begin_name pre args  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name args node  end_name  begin_operator  end_operator  begin_name get pre  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name required  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  begin_operator  end_operator  begin_expr  begin_name arg index  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name argument node  end_name  end_type  begin_name a  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name argument node  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name pre args  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name a  end_name  begin_operator  end_operator  begin_name typed argument node  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name typed argument node  end_name  end_type  begin_name t  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name typed argument node  end_name  begin_operator  end_operator  begin_name a  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name add instr  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name declare local type instr  end_name  begin_argument_list  begin_argument  begin_expr  begin_name arg index  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name build type  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name t  end_name  begin_operator  end_operator  begin_name get type node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name add instr  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name recv arg instr  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name a  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name arg index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_comment important receive the block argument before the opt and splat args  end_comment  begin_comment this is so that the arg can be encoded as rest of the array this  end_comment  begin_comment won t work if the block argument hasn t been received yet  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name args node  end_name  begin_operator  end_operator  begin_name get block  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name add instr  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name recv closure instr  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name args node  end_name  begin_operator  end_operator  begin_name get block  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  begin_comment now for the rest  end_comment  begin_if  begin_condition  begin_expr  begin_name opt  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name rest  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name list node  end_name  end_type  begin_name opt args  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name args node  end_name  begin_operator  end_operator  begin_name get opt args  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name j  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name j  end_name  begin_operator  end_operator  begin_name opt  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name j  end_name  begin_operator  end_operator  end_expr  begin_operator  end_operator  begin_expr  begin_name arg index  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_comment jump to l if this arg is not null if null fall through and build the default value  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name label  end_name  end_type  begin_name l  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name get new label  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name local asgn node  end_name  end_type  begin_name n  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name local asgn node  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name opt args  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name j  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name add instr  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name recv opt arg instr  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name n  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name arg index  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name l  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name build  end_name  begin_argument_list  begin_argument  begin_expr  begin_name n  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name add instr  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name label instr  end_name  begin_argument_list  begin_argument  begin_expr  begin_name l  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_if  begin_condition  begin_expr  begin_name rest  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name add instr  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name recv arg instr  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name args node  end_name  begin_operator  end_operator  begin_name get rest arg node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name arg index  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name arg index  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  begin_comment fixme ruby 1 9 post args code needs to come here  end_comment  begin_comment this is not an expression that computes anything  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
begin_comment public operand build ensure node node node ir scope m final ensure node ensure node ensure node node if ensure node get ensure node null m perform ensure new branch callback public void branch ir scope m if ensure node get body node null build ensure node get body node m true else m load nil new branch callback public void branch ir scope m build ensure node get ensure node m false else if ensure node get body node null build ensure node get body node m true else m load nil todo don t require pop if expr m consume current value end_comment begin_type  begin_specifier  end_specifier  begin_name operand  end_name  end_type  begin_name build ev str  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ev str node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ir scope  end_name  end_type  begin_name s  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment sss fixme somewhere here we need to record information the type of this operand as string  end_comment  begin_return  begin_expr  begin_call  begin_name build  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get body  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name operand  end_name  end_type  begin_name build module  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name module node  end_name  end_type  begin_name module node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ir scope  end_name  end_type  begin_name s  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name colon 3 node  end_name  end_type  begin_name cpath node  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name module node  end_name  begin_operator  end_operator  begin_name get c path  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment by default the container for this class is s  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name operand  end_name  end_type  begin_name container  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_comment get the container for this new module  end_comment  begin_if  begin_condition  begin_expr  begin_name cpath node  end_name  begin_operator  end_operator  begin_name colon 2 node  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name left node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name colon 2 node  end_name  begin_operator  end_operator  begin_name cpath node  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get left node  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name left node  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_name container  end_name  begin_operator  end_operator  begin_call  begin_name build  end_name  begin_argument_list  begin_argument  begin_expr  begin_name left node  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name cpath node  end_name  begin_operator  end_operator  begin_name colon 3 node  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name container  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name meta object  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name ir class  end_name  begin_operator  end_operator  begin_name get core class  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment sss fixme is this correct  end_comment  end_block  end_then  end_if  end_else  end_if  begin_comment build the new module  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name module name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name module node  end_name  begin_operator  end_operator  begin_name get c path  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name ir module  end_name  end_type  begin_name m  end_name  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name operand  end_name  end_type  begin_name m meta obj  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name container  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name m  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name ir module  end_name  begin_argument_list  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name module name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name m meta obj  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name meta object  end_name  begin_argument_list  begin_argument  begin_expr  begin_name m  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name add module  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name m  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name m  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name ir module  end_name  begin_argument_list  begin_argument  begin_expr  begin_name container  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name module name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name m meta obj  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name meta object  end_name  begin_argument_list  begin_argument  begin_expr  begin_name m  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name add instr  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name put const instr  end_name  begin_argument_list  begin_argument  begin_expr  begin_name container  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name module name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name m meta obj  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_comment build the module body  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name module node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name build  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name module node  end_name  begin_operator  end_operator  begin_name get body node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name m  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  begin_return  begin_expr  begin_name m meta obj  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name operand  end_name  end_type  begin_name build next  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name next node  end_name  end_type  begin_name next node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ir scope  end_name  end_type  begin_name s  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name operand  end_name  end_type  begin_name rv  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name next node  end_name  begin_operator  end_operator  begin_name get value node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name nil  end_name  begin_operator  end_operator  begin_name nil  end_name  end_name  begin_operator  end_operator  begin_call  begin_name build  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name next node  end_name  begin_operator  end_operator  begin_name get value node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment sss fixme 1 is the ordering correct poll before next  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name add instr  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name thread poll instr  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment if a closure the next is simply a return from the closure  end_comment  begin_comment if a regular loop the next is simply a jump to the end of the iteration  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name add instr  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name s  end_name  begin_operator  end_operator  begin_name ir closure  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name closure return instr  end_name  begin_argument_list  begin_argument  begin_expr  begin_name rv  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name jump instr  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name get current loop  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name iter end label  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name rv  end_name  end_expr  end_return  end_block 
begin_comment public operand build undef node node ir scope m m undef method undef node node get name end_comment begin_type  begin_specifier  end_specifier  begin_name operand  end_name  end_type  begin_name build conditional loop  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ir scope  end_name  end_type  begin_name s  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name condition node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name body node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name is while  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name is loop head condition  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name is loop head condition  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name is while  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name condition node  end_name  begin_operator  end_operator  begin_name get node type  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name always false  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name is while  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name condition node  end_name  begin_operator  end_operator  begin_name get node type  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name always true  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment we won t enter the loop just build the condition node  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name build  end_name  begin_argument_list  begin_argument  begin_expr  begin_name condition node  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ir loop  end_name  end_type  begin_name loop  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name ir loop  end_name  begin_argument_list  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name start loop  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name loop  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name add instr  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name label instr  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name loop  end_name  begin_operator  end_operator  begin_name loop start label  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name is loop head condition  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name operand  end_name  end_type  begin_name cv  end_name  begin_init  begin_expr  begin_call  begin_name build  end_name  begin_argument_list  begin_argument  begin_expr  begin_name condition node  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name add instr  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name beq instr  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cv  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name is while  end_name  begin_operator  end_operator  begin_name  begin_name boolean literal  end_name  begin_operator  end_operator  begin_name false  end_name  end_name  begin_operator  end_operator  begin_name  begin_name boolean literal  end_name  begin_operator  end_operator  begin_name true  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name loop  end_name  begin_operator  end_operator  begin_name loop end label  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name add instr  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name label instr  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name loop  end_name  begin_operator  end_operator  begin_name iter start label  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name body node  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name build  end_name  begin_argument_list  begin_argument  begin_expr  begin_name body node  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  begin_comment sss fixme is this correctly placed at the end of the loop iteration  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name add instr  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name thread poll instr  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name add instr  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name label instr  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name loop  end_name  begin_operator  end_operator  begin_name iter end label  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name is loop head condition  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name operand  end_name  end_type  begin_name cv  end_name  begin_init  begin_expr  begin_call  begin_name build  end_name  begin_argument_list  begin_argument  begin_expr  begin_name condition node  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name add instr  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name beq instr  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cv  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name is while  end_name  begin_operator  end_operator  begin_name  begin_name boolean literal  end_name  begin_operator  end_operator  begin_name true  end_name  end_name  begin_operator  end_operator  begin_name  begin_name boolean literal  end_name  begin_operator  end_operator  begin_name false  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name loop  end_name  begin_operator  end_operator  begin_name iter start label  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name add instr  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name label instr  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name loop  end_name  begin_operator  end_operator  begin_name loop end label  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name end loop  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name loop  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_return  begin_expr  begin_name  begin_name nil  end_name  begin_operator  end_operator  begin_name nil  end_name  end_name  end_expr  end_return  end_block 
begin_comment sss fixme incorect end_comment begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name get fully qualified name  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ir module  end_name  end_type  begin_name m  end_name  begin_init  begin_expr  begin_call  begin_name get defining module  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_operator  end_operator  begin_name m  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name m  end_name  begin_operator  end_operator  begin_name name  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name name  end_name  end_expr  end_return  end_block 
begin_comment sss fixme deprecated going forward all instructions should come from the cfg end_comment begin_type  begin_specifier  end_specifier  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name ir instr  end_name  end_argument  end_argument_list  end_name  end_type  begin_name get instrs  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  begin_name instrs  end_name  end_expr  end_return  end_block 
begin_comment sometimes the value can be retrieved at compile time if we succeed nothing like it end_commentbegin_comment we might not for the following reasons end_commentbegin_comment 1 the constant is missing end_commentbegin_comment 2 the reference is a forward reference end_commentbegin_comment 3 the constant s value is only known at run time on first access but this is runtime isn t it end_commentbegin_comment 4 our compiler isn t able to right away infer that this is a constant end_commentbegin_comment  end_commentbegin_comment sss fixme end_commentbegin_comment 1 the operand can be a literal array range or hash hence operand end_commentbegin_comment because array range and hash derive from operand and not constant end_commentbegin_comment is there a way to fix this impedance mismatch end_commentbegin_comment 2 it should be possible to handle the forward reference case by creating a new end_commentbegin_comment forward reference operand and then inform the scope of the forward reference end_commentbegin_comment which the scope can fix up when the reference gets defined at code gen time end_commentbegin_comment if the reference is unresolved when a value is retrieved for the forward ref end_commentbegin_comment and we get a null we can throw a const missing exception not sure end_commentbegin_comment  end_comment begin_type  begin_specifier  end_specifier  begin_name operand  end_name  end_type  begin_name get constant value  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name const ref  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment system out println looking in this for constant const ref  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name operand  end_name  end_type  begin_name cv  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name const map  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name const ref  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name operand  end_name  end_type  begin_name p  end_name  begin_init  begin_expr  begin_name parent  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_comment sss fixme traverse up the scope hierarchy to find the constant as long as the parent is a static scope  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name cv  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name p  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name p  end_name  begin_operator  end_operator  begin_name meta object  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_name cv  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name meta object  end_name  begin_operator  end_operator  begin_name p  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name scope  end_name  begin_operator  end_operator  begin_name get constant value  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name const ref  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  begin_return  begin_expr  begin_name cv  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name operand  end_name  end_type  begin_name fetch compile time array element  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name arg index  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name get sub array  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment sss fixme for constant arrays we should never get here  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
begin_comment sss fixme incomplete end_comment begin_type  begin_specifier  end_specifier  begin_name ir class  end_name  end_type  begin_name get target class  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_name scope  end_name  begin_operator  end_operator  begin_name ir module  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name ir class  end_name  begin_operator  end_operator  begin_name get core class  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name operand  end_name  end_type  begin_name fetch compile time array element  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name arg index  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name get sub array  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment sss fixme this should never get called for constant svalues  end_comment  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name build  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name ir instr  end_name  end_argument  end_argument_list  end_name  end_type  begin_name instrs  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment map of label basic blocks which are waiting for a bb with that label  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name map  end_name  begin_argument_list  begin_argument  begin_name label  end_name  end_argument  begin_argument  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name basic block  end_name  end_argument  end_argument_list  end_name  end_argument  end_argument_list  end_name  end_type  begin_name forward refs  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name hash map  end_name  begin_argument_list  begin_argument  begin_name label  end_name  end_argument  begin_argument  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name basic block  end_name  end_argument  end_argument_list  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment map of label basic blocks with that label  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name map  end_name  begin_argument_list  begin_argument  begin_name label  end_name  end_argument  begin_argument  begin_name basic block  end_name  end_argument  end_argument_list  end_name  end_type  begin_name bb map  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name hash map  end_name  begin_argument_list  begin_argument  begin_name label  end_name  end_argument  begin_argument  begin_name basic block  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name bb map  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name entry bb  end_name  begin_operator  end_operator  begin_name label  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name entry bb  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name bb map  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name exit bb  end_name  begin_operator  end_operator  begin_name label  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name exit bb  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name directed graph  end_name  begin_argument_list  begin_argument  begin_name basic block  end_name  end_argument  begin_argument  begin_name cfg edge  end_name  end_argument  end_argument_list  end_name  end_type  begin_name g  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name default directed graph  end_name  begin_argument_list  begin_argument  begin_name basic block  end_name  end_argument  begin_argument  begin_name cfg edge  end_name  end_argument  end_argument_list  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name  begin_name edge factory  end_name  begin_argument_list  begin_argument  begin_name basic block  end_name  end_argument  begin_argument  begin_name cfg edge  end_name  end_argument  end_argument_list  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name cfg edge  end_name  end_type  begin_name create edge  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name basic block  end_name  end_type  begin_name s  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name basic block  end_name  end_type  begin_name d  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name cfg edge  end_name  begin_argument_list  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name d  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_function  end_block  end_class  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name g  end_name  begin_operator  end_operator  begin_name add vertex  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name entry bb  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name g  end_name  begin_operator  end_operator  begin_name add vertex  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name exit bb  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name basic block  end_name  end_type  begin_name curr bb  end_name  begin_init  begin_expr  begin_name entry bb  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name basic block  end_name  end_type  begin_name new bb  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name bb ended  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name bb ended with jump  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name ir instr  end_name  end_type  begin_name i  end_name  begin_range  begin_expr  begin_name instrs  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name operation  end_name  end_type  begin_name iop  end_name  begin_init  begin_expr  begin_name  begin_name i  end_name  begin_operator  end_operator  begin_name op  end_name  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name iop  end_name  begin_operator  end_operator  begin_name starts basic block  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name label  end_name  end_type  begin_name l  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name label instr  end_name  begin_operator  end_operator  begin_name i  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name lbl  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name new bb  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name basic block  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name l  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name bb map  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name l  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name new bb  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name g  end_name  begin_operator  end_operator  begin_name add vertex  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new bb  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name bb ended with jump  end_name  end_expr  end_condition  begin_then  begin_comment jump instruction bbs dont add an edge to the succeeding bb by default  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name g  end_name  begin_operator  end_operator  begin_name add edge  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name curr bb  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name new bb  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  begin_expr_stmt  begin_expr  begin_name curr bb  end_name  begin_operator  end_operator  begin_name new bb  end_name  end_expr  end_expr_stmt  begin_comment add forward ref edges  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name basic block  end_name  end_argument  end_argument_list  end_name  end_type  begin_name readers  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name forward refs  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name l  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name readers  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_for  begin_init  begin_decl  begin_type  begin_name basic block  end_name  end_type  begin_name b  end_name  begin_range  begin_expr  begin_name readers  end_name  end_expr  end_range  end_decl  end_init  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name g  end_name  begin_operator  end_operator  begin_name add edge  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name b  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name new bb  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_for  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name bb ended  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name bb ended with jump  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name bb ended  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name new bb  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name basic block  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get new label  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name g  end_name  begin_operator  end_operator  begin_name add vertex  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new bb  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name g  end_name  begin_operator  end_operator  begin_name add edge  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name curr bb  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name new bb  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment curr bb cannot be null  end_comment  begin_expr_stmt  begin_expr  begin_name curr bb  end_name  begin_operator  end_operator  begin_name new bb  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name bb ended  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name bb ended with jump  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name iop  end_name  begin_operator  end_operator  begin_name ends basic block  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name curr bb  end_name  begin_operator  end_operator  begin_name add instr  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name label  end_name  end_type  begin_name tgt  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name branch instr  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name tgt  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name branch instr  end_name  begin_operator  end_operator  begin_name i  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get jump target  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name jump instr  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name tgt  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name jump instr  end_name  begin_operator  end_operator  begin_name i  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get jump target  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name bb ended with jump  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_comment case ir instructions are dummy instructions  end_comment  begin_comment all when then clauses have been converted into if then else blocks  end_comment  begin_else  begin_if  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name case instr  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name tgt  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_comment sss fixme to be done  end_comment  begin_else  begin_if  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name break instr  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name tgt  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name tgt  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  begin_if  begin_condition  begin_expr  begin_name tgt  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name basic block  end_name  end_type  begin_name tgt bb  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name bb map  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tgt  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name tgt bb  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name g  end_name  begin_operator  end_operator  begin_name add edge  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name curr bb  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name tgt bb  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_comment add a forward reference from tgt curr bb  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name basic block  end_name  end_argument  end_argument_list  end_name  end_type  begin_name frefs  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name forward refs  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tgt  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name frefs  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name frefs  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name basic block  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name forward refs  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name tgt  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name frefs  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name frefs  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name curr bb  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name bb ended  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name curr bb  end_name  begin_operator  end_operator  begin_name add instr  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_else  end_if  end_else  end_if  end_block  end_for  begin_expr_stmt  begin_expr  begin_name cfg  end_name  begin_operator  end_operator  begin_name g  end_name  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name emit recv arg  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name recv arg instr  end_name  end_type  begin_name recv arg  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name index  end_name  begin_init  begin_expr  begin_call  begin_name get variable index  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name recv arg  end_name  begin_operator  end_operator  begin_name result  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo need to get this back into the method signature now is too late  end_comment  end_block 
begin_comment todo need to get this back into the method signature now is too late end_comment begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name get variable index  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name variable  end_name  end_type  begin_name variable  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name integer  end_name  end_type  begin_name index  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name cls stack  end_name  begin_operator  end_operator  begin_name peek  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name method stack  end_name  begin_operator  end_operator  begin_name peek  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name var map  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name variable  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name index  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name index  end_name  begin_operator  end_operator  begin_call  begin_name method  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new local  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name type  end_name  begin_operator  end_operator  begin_name get type  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name object  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cls stack  end_name  begin_operator  end_operator  begin_name peek  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name method stack  end_name  begin_operator  end_operator  begin_name peek  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name var map  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name variable  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_name index  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name complete action  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name key event  end_name  end_type  begin_name event  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name readline  end_name  begin_operator  end_operator  begin_name get completor  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name readline  end_name  begin_operator  end_operator  begin_name get holder  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_return  end_return  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name event  end_name  begin_operator  end_operator  begin_name consume  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name complete popup  end_name  begin_operator  end_operator  begin_name is visible  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_return  end_return  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name list  end_name  end_type  begin_name candidates  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name linked list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name bufstr  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_name bufstr  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name area  end_name  begin_operator  end_operator  begin_name get text  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name start pos  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name area  end_name  begin_operator  end_operator  begin_name get caret position  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name start pos  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name bad location exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  end_return  end_block  end_catch  end_try  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name cursor  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name area  end_name  begin_operator  end_operator  begin_name get caret position  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name start pos  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name position  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name readline  end_name  begin_operator  end_operator  begin_name get completor  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name readline  end_name  begin_operator  end_operator  begin_name get holder  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name complete  end_name  begin_argument_list  begin_argument  begin_expr  begin_name bufstr  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name cursor  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name candidates  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment no candidates fail  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name candidates  end_name  begin_operator  end_operator  begin_name is empty  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_return  end_return  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name candidates  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name replace text  end_name  begin_argument_list  begin_argument  begin_expr  begin_name start pos  end_name  begin_operator  end_operator  begin_name position  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name area  end_name  begin_operator  end_operator  begin_name get caret position  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name string  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name candidates  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name start  end_name  begin_operator  end_operator  begin_name start pos  end_name  begin_operator  end_operator  begin_name position  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name end  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name area  end_name  begin_operator  end_operator  begin_name get caret position  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name point  end_name  end_type  begin_name pos  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name area  end_name  begin_operator  end_operator  begin_name get caret  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get magic caret position  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment bit risky if someone changes completor but useful for method calls  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name cutoff  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name bufstr  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name position  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name last index of  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name start  end_name  begin_operator  end_operator  begin_name cutoff  end_name  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name candidates  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name complete popup  end_name  begin_operator  end_operator  begin_name get list  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set visible row count  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name candidates  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  begin_else  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name complete popup  end_name  begin_operator  end_operator  begin_name get list  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set visible row count  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name complete combo  end_name  begin_operator  end_operator  begin_name remove all items  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name candidates  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_call  begin_name  begin_name i  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_incr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name item  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name string  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name i  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name cutoff  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_name item  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name item  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cutoff  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name complete combo  end_name  begin_operator  end_operator  begin_name add item  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name item  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name complete popup  end_name  begin_operator  end_operator  begin_name show  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name area  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name pos  end_name  begin_operator  end_operator  begin_name x  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name pos  end_name  begin_operator  end_operator  begin_name y  end_name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name area  end_name  begin_operator  end_operator  begin_name get font metrics  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name area  end_name  begin_operator  end_operator  begin_name get font  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get height  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name read line  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name prompt  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name event queue  end_name  begin_operator  end_operator  begin_name is dispatch thread  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new thread error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name event queue  end_name  begin_operator  end_operator  begin_name invoke later  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name runnable  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name append  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name prompt  end_name  begin_operator  end_operator  begin_name trim  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name prompt style  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name append  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name input style  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment hack to get right style for input  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name area  end_name  begin_operator  end_operator  begin_name set caret position  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name area  end_name  begin_operator  end_operator  begin_name get document  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get length  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name start pos  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name area  end_name  begin_operator  end_operator  begin_name get document  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get length  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name readline  end_name  begin_operator  end_operator  begin_name get history  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name readline  end_name  begin_operator  end_operator  begin_name get holder  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name move to end  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_function  end_block  end_class  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name line  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name string  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name input join  end_name  begin_operator  end_operator  begin_name call  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name channel  end_name  begin_operator  end_operator  begin_name get line  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name line  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name line  end_name  begin_operator  end_operator  begin_name trim  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_else  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name append  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name prompt  end_name  begin_operator  end_operator  begin_name trim  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name prompt style  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name append  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name input style  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment hack to get right style for input  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name area  end_name  begin_operator  end_operator  begin_name set caret position  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name area  end_name  begin_operator  end_operator  begin_name get document  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get length  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name start pos  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name area  end_name  begin_operator  end_operator  begin_name get document  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get length  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name readline  end_name  begin_operator  end_operator  begin_name get history  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name readline  end_name  begin_operator  end_operator  begin_name get holder  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name move to end  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name write line unsafe  end_name  begin_argument_list  begin_argument  begin_expr  begin_name line  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name multi assign  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name multiple asgn 19 node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby array  end_name  end_type  begin_name value  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name check arity  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment assign the values  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name value len  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name get length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name var len  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get pre  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get pre  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name size  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name j  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  end_init  begin_condition  begin_expr  begin_name j  end_name  begin_operator  end_operator  begin_name value len  end_name  begin_operator  end_operator  begin_name j  end_name  begin_operator  end_operator  begin_name var len  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name j  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get pre  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  begin_name j  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name assign  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name elt internal  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name j  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name null block  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name check arity  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_if  begin_condition  begin_expr  begin_name check arity  end_name  begin_operator  end_operator  begin_name j  end_name  begin_operator  end_operator  begin_name var len  end_name  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new argument error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name value len  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name var len  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name rest argument  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get rest  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name rest argument  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name var len  end_name  begin_operator  end_operator  begin_name value len  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name rest argument  end_name  begin_operator  end_operator  begin_name assign  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name subseq light  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name var len  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name value len  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name null block  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name check arity  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name rest argument  end_name  begin_operator  end_operator  begin_name assign  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name ruby array  end_name  begin_operator  end_operator  begin_name new array light  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name null block  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name check arity  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name check arity  end_name  begin_operator  end_operator  begin_name value len  end_name  begin_operator  end_operator  begin_name var len  end_name  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new argument error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name value len  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name var len  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  end_else  end_if  begin_while  begin_condition  begin_expr  begin_name j  end_name  begin_operator  end_operator  begin_name var len  end_name  end_expr  end_condition  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get pre  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  begin_name j  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name assign  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name null block  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name check arity  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_while  begin_return  begin_expr  begin_name value  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name multi assign  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name multiple asgn node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby array  end_name  end_type  begin_name value  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name check arity  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment assign the values  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name value len  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name get length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name var len  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get head node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get head node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name size  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name j  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  end_init  begin_condition  begin_expr  begin_name j  end_name  begin_operator  end_operator  begin_name value len  end_name  begin_operator  end_operator  begin_name j  end_name  begin_operator  end_operator  begin_name var len  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name j  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get head node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  begin_name j  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name assign  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name elt internal  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name j  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name null block  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name check arity  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_if  begin_condition  begin_expr  begin_name check arity  end_name  begin_operator  end_operator  begin_name j  end_name  begin_operator  end_operator  begin_name var len  end_name  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new argument error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name value len  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name var len  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name args node  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get args node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name args node  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name args node  end_name  begin_operator  end_operator  begin_name get node type  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name  begin_name node type  end_name  begin_operator  end_operator  begin_name starnode  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment no check for  end_comment  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name var len  end_name  begin_operator  end_operator  begin_name value len  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name args node  end_name  begin_operator  end_operator  begin_name assign  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name subseq light  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name var len  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name value len  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name null block  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name check arity  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name args node  end_name  begin_operator  end_operator  begin_name assign  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name ruby array  end_name  begin_operator  end_operator  begin_name new array light  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name null block  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name check arity  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_else  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name check arity  end_name  begin_operator  end_operator  begin_name value len  end_name  begin_operator  end_operator  begin_name var len  end_name  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new argument error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name value len  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name var len  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  end_else  end_if  begin_while  begin_condition  begin_expr  begin_name j  end_name  begin_operator  end_operator  begin_name var len  end_name  end_expr  end_condition  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get head node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  begin_name j  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name assign  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name null block  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name check arity  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_while  begin_return  begin_expr  begin_name value  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name multi assign  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name multiple asgn 19 node  end_name  end_type  begin_name node  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby array  end_name  end_type  begin_name value  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment assign the values  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name value len  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name get length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name post count  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get post count  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name pre count  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get pre count  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name list node  end_name  end_type  begin_name pre  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get pre  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name list node  end_name  end_type  begin_name post  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get post  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name j  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  end_init  begin_condition  begin_expr  begin_name j  end_name  begin_operator  end_operator  begin_name value len  end_name  begin_operator  end_operator  begin_name j  end_name  begin_operator  end_operator  begin_name pre count  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name j  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name pre  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name j  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name assign  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name elt internal  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name j  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name null block  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_decl_stmt  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name rest  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name get rest  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name rest  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name rest  end_name  begin_operator  end_operator  begin_name get node type  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name  begin_name node type  end_name  begin_operator  end_operator  begin_name starnode  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment no check for  end_comment  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name pre count  end_name  begin_operator  end_operator  begin_name post count  end_name  begin_operator  end_operator  begin_name value len  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name rest  end_name  begin_operator  end_operator  begin_name assign  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name subseq light  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name pre count  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name value len  end_name  begin_operator  end_operator  begin_name pre count  end_name  begin_operator  end_operator  begin_name post count  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name null block  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name rest  end_name  begin_operator  end_operator  begin_name assign  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name ruby array  end_name  begin_operator  end_operator  begin_name new array light  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name null block  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_else  end_if  begin_comment fixme this is wrong  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name post index base  end_name  begin_init  begin_expr  begin_name value len  end_name  begin_operator  end_operator  begin_name post count  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name value len  end_name  begin_operator  end_operator  begin_name i  end_name  begin_operator  end_operator  begin_name post count  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name post  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name assign  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name elt internal  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name post index base  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name null block  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  end_block  end_then  end_if  begin_while  begin_condition  begin_expr  begin_name j  end_name  begin_operator  end_operator  begin_name pre count  end_name  end_expr  end_condition  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name pre  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name j  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name assign  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name null block  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_while  begin_return  begin_expr  begin_name value  end_name  end_expr  end_return  end_block 
begin_comment evaluate the given string under the specified binding object if the binding is not a proc or binding object ruby proc or ruby binding throw an appropriate type error param context todo param eval string the string containing the text to be evaluated param binding the binding object under which to perform the evaluation param file the filename to use when reporting errors during the evaluation param line number is the line number to pretend we are starting from return an i ruby object result from the evaluation end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name eval with binding  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name src  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name binding  end_name  end_type  begin_name binding  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name src  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name dynamic scope  end_name  end_type  begin_name eval scope  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name binding  end_name  begin_operator  end_operator  begin_name get dynamic scope  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get eval scope  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment fixme this determine module is in a strange location and should somehow be in block  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name eval scope  end_name  begin_operator  end_operator  begin_name get static scope  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name determine module  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name frame  end_name  end_type  begin_name last frame  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name pre eval with binding  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name binding  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_comment binding provided for scope use it  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name new self  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name binding  end_name  begin_operator  end_operator  begin_name get self  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name ruby string  end_name  end_type  begin_name source  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name src  end_name  begin_operator  end_operator  begin_name convert to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name node  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name parse eval  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name source  end_name  begin_operator  end_operator  begin_name get byte list  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name binding  end_name  begin_operator  end_operator  begin_name get file  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name eval scope  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name binding  end_name  begin_operator  end_operator  begin_name get line  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_call  begin_name  begin_name node  end_name  begin_operator  end_operator  begin_name interpret  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name new self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name binding  end_name  begin_operator  end_operator  begin_name get frame  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get block  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name  begin_name jump exception  end_name  begin_operator  end_operator  begin_name break jump  end_name  end_name  end_type  begin_name bj  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new local jump error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name ruby local jump error  end_name  begin_operator  end_operator  begin_name reason  end_name  begin_operator  end_operator  begin_name break  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name i ruby object  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name bj  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name  begin_name jump exception  end_name  begin_operator  end_operator  begin_name redo jump  end_name  end_name  end_type  begin_name rj  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new local jump error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name ruby local jump error  end_name  begin_operator  end_operator  begin_name reason  end_name  begin_operator  end_operator  begin_name redo  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name i ruby object  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name rj  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name stack overflow error  end_name  end_type  begin_name soe  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new system stack error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name soe  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_finally  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name post eval with binding  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name binding  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name last frame  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_finally  end_try  end_block 
 begin_type  begin_annotation  begin_name deprecated  end_name  end_annotation  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name getnameinfo  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name recv  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  end_type  begin_name args  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name getnameinfo  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name recv  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get current context  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name recv  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name required  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name optional  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name meta  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name getnameinfo  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name recv  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  end_type  begin_name args  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name argc  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name arity  end_name  begin_operator  end_operator  begin_name check argument count  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name flags  end_name  begin_init  begin_expr  begin_name argc  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name ruby numeric  end_name  begin_operator  end_operator  begin_name num 2 int  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name arg 0  end_name  begin_init  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name host  end_name  end_decl  begin_operator  end_operator  begin_decl  begin_type  end_type  begin_name port  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name arg 0  end_name  begin_operator  end_operator  begin_name ruby array  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name list  end_name  end_type  begin_name list  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name ruby array  end_name  begin_operator  end_operator  begin_name arg 0  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name len  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name list  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name  begin_name len  end_name  begin_argument_list  begin_argument  begin_operator  end_operator  begin_name len  end_name  end_argument  end_argument_list  end_name  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new argument error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name len  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_comment todo validate port as numeric  end_comment  begin_expr_stmt  begin_expr  begin_name host  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name list  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to string  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name port  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name list  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to string  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name arg 0  end_name  begin_operator  end_operator  begin_name ruby string  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name arg  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name ruby string  end_name  begin_operator  end_operator  begin_name arg 0  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name to string  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name matcher  end_name  end_type  begin_name m  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name string address pattern  end_name  begin_operator  end_operator  begin_name matcher  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name arg  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name m  end_name  begin_operator  end_operator  begin_name matches  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name obj  end_name  begin_init  begin_expr  begin_call  begin_name unpack sockaddr in  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name recv  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg 0  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name obj  end_name  begin_operator  end_operator  begin_name ruby array  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name list  end_name  end_type  begin_name list  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name ruby array  end_name  begin_operator  end_operator  begin_name obj  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name len  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name list  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name len  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new argument error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name host  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name list  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to string  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name port  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name list  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to string  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new argument error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_else  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name host  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name m  end_name  begin_operator  end_operator  begin_name group  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name host group  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name host  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name port  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name m  end_name  begin_operator  end_operator  begin_name group  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name port group  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name port  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new argument error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  end_else  end_if  end_block  end_then  begin_else  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new argument error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_else  end_if  end_else  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name inet address  end_name  end_type  begin_name addr  end_name  end_decl  end_decl_stmt  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_name addr  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name inet address  end_name  begin_operator  end_operator  begin_name get by name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name host  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name unknown host exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name sockerr  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name host  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name flags  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ni numerichost  end_name  begin_operator  end_operator  begin_name value  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name host  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name addr  end_name  begin_operator  end_operator  begin_name get canonical host name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name host  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name addr  end_name  begin_operator  end_operator  begin_name get host address  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name flags  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ni numericserv  end_name  begin_operator  end_operator  begin_name value  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name serv  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name iana  end_name  begin_operator  end_operator  begin_name port to service  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name integer  end_name  begin_operator  end_operator  begin_name parse int  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name port  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name serv  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name port  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name serv  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name serv  end_name  begin_operator  end_operator  begin_name index of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  begin_return  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new array  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name host  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name port  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name visibility  end_name  begin_operator  end_operator  begin_name  begin_name visibility  end_name  begin_operator  end_operator  begin_name private  end_name  end_name  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name initialize  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_try  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name datagram channel  end_name  end_type  begin_name channel  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name datagram channel  end_name  begin_operator  end_operator  begin_name open  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name init socket  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name channel descriptor  end_name  begin_argument_list  begin_argument  begin_expr  begin_name channel  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name ruby io  end_name  begin_operator  end_operator  begin_name get new fileno  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name mode flags  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name mode flags  end_name  begin_operator  end_operator  begin_name rdwr  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name file descriptor  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name jruby  end_name  begin_operator  end_operator  begin_name util  end_name  begin_operator  end_operator  begin_name io  end_name  begin_operator  end_operator  begin_name invalid value exception  end_name  end_name  end_type  begin_name ex  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new errno einval error  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name connect exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new errno econnrefused error  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name unknown host exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name sockerr  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name io exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name sockerr  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  begin_return  begin_expr  begin_name this  end_name  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name visibility  end_name  begin_operator  end_operator  begin_name  begin_name visibility  end_name  begin_operator  end_operator  begin_name private  end_name  end_name  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name initialize  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name protocol  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment we basically ignore protocol let someone report it  end_comment  begin_return  begin_expr  begin_call  begin_name initialize  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name j ruby method  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name send io  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name path  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo implement won t do this now  end_comment  begin_return  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get nil  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name rest  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name recv io  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  end_type  begin_name args  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo implement won t do this now  end_comment  begin_return  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get nil  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name getobj  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name obj  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ref  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name obj  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment fixme weakref rb also does caller 2 here for the backtrace  end_comment  begin_throw  begin_expr  begin_call  begin_name new ref error  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_return  begin_expr  begin_name obj  end_name  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name constant table store  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name value  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment fixme legal here may want unsupported operation exception  end_comment  begin_return  begin_expr  begin_call  begin_name  begin_name delegate  end_name  begin_operator  end_operator  begin_name constant table store  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name constant table fast store  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name interned name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name value  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment fixme legal here may want unsupported operation exception  end_comment  begin_return  begin_expr  begin_call  begin_name  begin_name delegate  end_name  begin_operator  end_operator  begin_name constant table fast store  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name interned name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment use code generation to provide a method handle for a compiled ruby method see org jruby internal runtime methods method factory get compiled method end_comment begin_type  begin_specifier  end_specifier  begin_name dynamic method  end_name  end_type  begin_name get compiled method  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name implementation class  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name method  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name arity  end_name  end_type  begin_name arity  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name visibility  end_name  end_type  begin_name visibility  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name static scope  end_name  end_type  begin_name scope  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name script object  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name call configuration  end_name  end_type  begin_name call config  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name sup  end_name  begin_init  begin_expr  begin_name compiled super class  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name class  end_name  end_type  begin_name script class  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name script object  end_name  begin_operator  end_operator  begin_name get class  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name mname  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name script class  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_name method  end_name  begin_operator  end_operator  begin_name arity  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_synchronized  begin_expr  begin_name class loader  end_name  end_expr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name class  end_name  end_type  begin_name generated class  end_name  begin_init  begin_expr  begin_call  begin_name try class  end_name  begin_argument_list  begin_argument  begin_expr  begin_name mname  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name script class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_if  begin_condition  begin_expr  begin_name generated class  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name type path  end_name  begin_init  begin_expr  begin_call  begin_name p  end_name  begin_argument_list  begin_argument  begin_expr  begin_name script class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name mname path  end_name  begin_init  begin_expr  begin_name type path  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name method  end_name  begin_operator  end_operator  begin_name arity  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name class writer  end_name  end_type  begin_name cw  end_name  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name dot index  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name type path  end_name  begin_operator  end_operator  begin_name last index of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name cw  end_name  begin_operator  end_operator  begin_call  begin_name create compiled ctor  end_name  begin_argument_list  begin_argument  begin_expr  begin_name mname path  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name type path  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dot index  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name last index of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name sup  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name skinny method adapter  end_name  end_type  begin_name mv  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name signature  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name specific arity  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name scope  end_name  begin_operator  end_operator  begin_name get rest arg  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name scope  end_name  begin_operator  end_operator  begin_name get optional args  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name scope  end_name  begin_operator  end_operator  begin_name get required args  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name signature  end_name  begin_operator  end_operator  begin_name compiled call sig block  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name mv  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name skinny method adapter  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name cw  end_name  begin_operator  end_operator  begin_name visit method  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name acc public  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name signature  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name specific arity  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name mv  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name skinny method adapter  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name cw  end_name  begin_operator  end_operator  begin_name visit method  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name acc public  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name compiled call sig block  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name start  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment check arity  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name push int  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name scope  end_name  begin_operator  end_operator  begin_name get required args  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name invokestatic  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name p  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name java method  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name sig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name void  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name java method  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name thread context  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name string  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name int  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name scope  end_name  begin_operator  end_operator  begin_name get required args  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name ldc  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name arrayload  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_switch  begin_condition  begin_expr  begin_call  begin_name  begin_name scope  end_name  begin_operator  end_operator  begin_name get required args  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name signature  end_name  begin_operator  end_operator  begin_name compiled call sig zero block  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name signature  end_name  begin_operator  end_operator  begin_name compiled call sig one block  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name signature  end_name  begin_operator  end_operator  begin_name compiled call sig two block  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name signature  end_name  begin_operator  end_operator  begin_name compiled call sig three block  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  end_block  end_switch  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name invokevirtual  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name mname path  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name signature  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name areturn  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name end  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment define a second version that doesn t take a block so we have unique code paths for both cases  end_comment  begin_switch  begin_condition  begin_expr  begin_call  begin_name  begin_name scope  end_name  begin_operator  end_operator  begin_name get required args  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name signature  end_name  begin_operator  end_operator  begin_name compiled call sig zero  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name signature  end_name  begin_operator  end_operator  begin_name compiled call sig one  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name signature  end_name  begin_operator  end_operator  begin_name compiled call sig two  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name signature  end_name  begin_operator  end_operator  begin_name compiled call sig three  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  end_block  end_switch  begin_expr_stmt  begin_expr  begin_name mv  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name skinny method adapter  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name cw  end_name  begin_operator  end_operator  begin_name visit method  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name acc public  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name signature  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name start  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name scope  end_name  begin_operator  end_operator  begin_name get required args  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name getstatic  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name p  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name ci  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_switch  begin_condition  begin_expr  begin_call  begin_name  begin_name scope  end_name  begin_operator  end_operator  begin_name get required args  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name signature  end_name  begin_operator  end_operator  begin_name compiled call sig zero block  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name signature  end_name  begin_operator  end_operator  begin_name compiled call sig one block  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name signature  end_name  begin_operator  end_operator  begin_name compiled call sig two block  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name signature  end_name  begin_operator  end_operator  begin_name compiled call sig three block  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  end_block  end_switch  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name invokevirtual  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name mname path  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name signature  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name areturn  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name end  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name mv  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name skinny method adapter  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name cw  end_name  begin_operator  end_operator  begin_name visit method  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name acc public  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name signature  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name visit code  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name label  end_name  end_type  begin_name line  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name label  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name visit line number  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name line  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment check arity  end_comment  begin_comment check arity mv scope  end_comment  begin_comment invoke pre method stuff  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name call config  end_name  begin_operator  end_operator  begin_name is noop  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name specific arity  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name invoke call config pre  end_name  begin_argument_list  begin_argument  begin_expr  begin_name mv  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name compiled super class  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name scope  end_name  begin_operator  end_operator  begin_name get required args  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name call config  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name invoke call config pre  end_name  begin_argument_list  begin_argument  begin_expr  begin_name mv  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name compiled super class  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name call config  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name label  end_name  end_type  begin_name try begin  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name label  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name label  end_name  end_type  begin_name try end  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name label  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name label  end_name  end_type  begin_name do finally  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name label  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name label  end_name  end_type  begin_name do return finally  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name label  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name label  end_name  end_type  begin_name do redo finally  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name label  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name label  end_name  end_type  begin_name catch return jump  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name label  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name label  end_name  end_type  begin_name catch redo jump  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name label  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name heap scoped  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name call config  end_name  begin_operator  end_operator  begin_name scoping  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name  begin_name scoping  end_name  begin_operator  end_operator  begin_name full  end_name  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name framed  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name call config  end_name  begin_operator  end_operator  begin_name framing  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name  begin_name framing  end_name  begin_operator  end_operator  begin_name full  end_name  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name heap scoped  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name trycatch  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name try begin  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name try end  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name catch return jump  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name p  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name jump exception  end_name  begin_operator  end_operator  begin_name return jump  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name framed  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name trycatch  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name try begin  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name try end  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name catch redo jump  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name p  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name jump exception  end_name  begin_operator  end_operator  begin_name redo jump  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name framed  end_name  begin_operator  end_operator  begin_name heap scoped  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name trycatch  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name try begin  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name try end  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name do finally  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name heap scoped  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name trycatch  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name catch return jump  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name do return finally  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name do finally  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name framed  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name trycatch  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name catch redo jump  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name do redo finally  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name do finally  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name framed  end_name  begin_operator  end_operator  begin_name heap scoped  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name label  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name try begin  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  begin_comment main body  end_comment  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment fixme we want to eliminate these type casts when possible  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name getfield  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name mname path  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name ci  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name object  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name checkcast  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name type path  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name threadcontext index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name receiver index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name specific arity  end_name  end_expr  end_condition  begin_then  begin_block  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name scope  end_name  begin_operator  end_operator  begin_name get required args  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name args index  end_name  begin_operator  end_operator  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name args index  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name scope  end_name  begin_operator  end_operator  begin_name get required args  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name invokestatic  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name type path  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name standard asm compiler  end_name  begin_operator  end_operator  begin_name get static method signature  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name type path  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name scope  end_name  begin_operator  end_operator  begin_name get required args  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name args index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name block index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name invokestatic  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name type path  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name standard asm compiler  end_name  begin_operator  end_operator  begin_name get static method signature  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name type path  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  begin_if  begin_condition  begin_expr  begin_name framed  end_name  begin_operator  end_operator  begin_name heap scoped  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name label  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name try end  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment normal exit perform finally and return  end_comment  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name call config  end_name  begin_operator  end_operator  begin_name is noop  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name invoke call config post  end_name  begin_argument_list  begin_argument  begin_expr  begin_name mv  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name compiled super class  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name call config  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name visit insn  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name areturn  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_comment return jump handling  end_comment  begin_if  begin_condition  begin_expr  begin_name heap scoped  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name label  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name catch return jump  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name swap  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name swap  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name invokevirtual  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name compiled super class  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name sig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name i ruby object  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name thread context  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name jump exception  end_name  begin_operator  end_operator  begin_name return jump  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name label  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name do return finally  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment finally  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name call config  end_name  begin_operator  end_operator  begin_name is noop  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name invoke call config post  end_name  begin_argument_list  begin_argument  begin_expr  begin_name mv  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name compiled super class  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name call config  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment return result if we re still good  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name areturn  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name framed  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment redo jump handling  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name label  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name catch redo jump  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_block  begin_comment clear the redo  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name pop  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment get runtime create jump error and throw it  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name invokevirtual  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name p  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name thread context  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name sig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name ruby  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name invokevirtual  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name p  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name ruby  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name sig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name raise exception  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name label  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name do redo finally  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment finally  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name call config  end_name  begin_operator  end_operator  begin_name is noop  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name invoke call config post  end_name  begin_argument_list  begin_argument  begin_expr  begin_name mv  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name compiled super class  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name call config  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment throw redo error if we re still good  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name athrow  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_block  end_then  end_if  begin_comment finally handling for abnormal exit  end_comment  begin_if  begin_condition  begin_expr  begin_name framed  end_name  begin_operator  end_operator  begin_name heap scoped  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name label  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name do finally  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment call post method stuff exception raised  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name call config  end_name  begin_operator  end_operator  begin_name is noop  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name invoke call config post  end_name  begin_argument_list  begin_argument  begin_expr  begin_name mv  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name compiled super class  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name call config  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment rethrow exception  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name athrow  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment rethrow it  end_comment  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name generated class  end_name  begin_operator  end_operator  begin_call  begin_name end call  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cw  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name mv  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name mname  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name compiled method  end_name  end_type  begin_name compiled method  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name compiled method  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name generated class  end_name  begin_operator  end_operator  begin_name new instance  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name compiled method  end_name  begin_operator  end_operator  begin_name init  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name implementation class  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arity  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name visibility  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name scope  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name script object  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name call config  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name compiled method  end_name  end_expr  end_return  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name print stack trace  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_throw  begin_expr  begin_call  begin_name  begin_name implementation class  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new load error  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name get message  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  end_block  end_synchronized  end_block 
begin_comment constructor for method method param visibility end_comment begin_specifier  end_specifier  begin_name method method  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name implementation class  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby unbound method  end_name  end_type  begin_name method  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name visibility  end_name  end_type  begin_name visibility  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment fixme set up a call configuration for this  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name super  end_name  begin_argument_list  begin_argument  begin_expr  begin_name implementation class  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name visibility  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name method  end_name  end_name  begin_operator  end_operator  begin_name method  end_name  end_expr  end_expr_stmt  end_block 
begin_comment constructor for proc method param visibility end_comment begin_specifier  end_specifier  begin_name proc method  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name implementation class  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby proc  end_name  end_type  begin_name proc  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name visibility  end_name  end_type  begin_name visibility  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment fixme set up a call configuration for this  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name super  end_name  begin_argument_list  begin_argument  begin_expr  begin_name implementation class  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name visibility  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name proc  end_name  end_name  begin_operator  end_operator  begin_name proc  end_name  end_expr  end_expr_stmt  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name clazz  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  end_type  begin_name args  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name block  end_name  end_type  begin_name block  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name call config  end_name  begin_operator  end_operator  begin_name pre  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get implementation class  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name block  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name static scope  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name is trace  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name has event hooks  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_if  begin_condition  begin_expr  begin_name is trace  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment xxx wrong but will have to do for now  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name call event hooks  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name ruby event  end_name  begin_operator  end_operator  begin_name call  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get file  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get line  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get implementation class  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_operator  end_operator  begin_name i ruby object  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name invoke  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name script object  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name block  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  begin_finally  begin_block  begin_if  begin_condition  begin_expr  begin_name is trace  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name frame  end_name  end_type  begin_name frame  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get previous frame  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name call event hooks  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name ruby event  end_name  begin_operator  end_operator  begin_name return  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name frame  end_name  begin_operator  end_operator  begin_name get file  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name frame  end_name  begin_operator  end_operator  begin_name get line  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get implementation class  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_finally  end_try  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name illegal argument exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name raise exception  end_name  begin_operator  end_operator  begin_name create native raise exception  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name illegal access exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name raise exception  end_name  begin_operator  end_operator  begin_name create native raise exception  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name invocation target exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name throwable  end_name  end_type  begin_name cause  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name get cause  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name cause  end_name  begin_operator  end_operator  begin_name  begin_name jump exception  end_name  begin_operator  end_operator  begin_name return jump  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name handle return  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name jump exception  end_name  begin_operator  end_operator  begin_name return jump  end_name  end_name  begin_operator  end_operator  begin_name cause  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name cause  end_name  begin_operator  end_operator  begin_name  begin_name jump exception  end_name  begin_operator  end_operator  begin_name redo jump  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name handle redo  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name cause  end_name  begin_operator  end_operator  begin_name runtime exception  end_name  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_name runtime exception  end_name  begin_operator  end_operator  begin_name cause  end_name  end_expr  end_throw  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name cause  end_name  begin_operator  end_operator  begin_name error  end_name  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_name error  end_name  begin_operator  end_operator  begin_name cause  end_name  end_expr  end_throw  end_block  end_then  begin_else  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name raise exception  end_name  begin_operator  end_operator  begin_name create native raise exception  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name cause  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_block  end_catch  begin_finally  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name call config  end_name  begin_operator  end_operator  begin_name post  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_finally  end_try  end_block 
begin_comment in order to provide an appropriate execution context for a given thread we store thread context instances in a threadlocal this method is a utility to get at that threadlocal context from anywhere in the program it may not be immediately available this method should be used sparingly and if it is possible to pass thread context on the argument list it is preferable b description of behavior b the threadlocal does not actually contain the thread context directly instead it contains a soft reference that holds the thread context this is to allow new threads to enter the system and execute ruby code with a valid context but still allow that context to garbage collect if the thread stays alive much longer we use soft reference here because weak reference is collected too quickly resulting in very expensive thread context churn and this originally lead to jruby 2261 s leak of adopted ruby thread instances return the thread context instance for the current thread or a new one if none has previously been created or the old thread context has been collected end_comment begin_type  begin_specifier  end_specifier  begin_name thread context  end_name  end_type  begin_name get current context  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name soft reference  end_name  end_type  begin_name sr  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_name context  end_name  begin_operator  end_operator  end_expr  end_condition  begin_block  begin_comment loop until a context is available to clean up softrefs that might have been collected  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name sr  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name soft reference  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name local context  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name sr  end_name  begin_operator  end_operator  begin_call  begin_name adopt current thread  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name context  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name thread context  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name sr  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name context  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name thread context  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name sr  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_comment context is null wipe out the soft reference this could be done with a reference queue  end_comment  begin_if  begin_condition  begin_expr  begin_name context  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name local context  end_name  begin_operator  end_operator  begin_name set  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_while  begin_return  begin_expr  begin_name context  end_name  end_expr  end_return  end_block 
 begin_specifier  end_specifier  begin_name thread service  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name runtime  end_name  end_name  begin_operator  end_operator  begin_name runtime  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name main context  end_name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name thread context  end_name  begin_operator  end_operator  begin_name new context  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name local context  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name thread local  end_name  begin_argument_list  begin_argument  begin_name  begin_name soft reference  end_name  begin_argument_list  begin_argument  begin_name thread context  end_name  end_argument  end_argument_list  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name ruby thread group  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name thread group  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name hash code  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name security exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name ruby thread group  end_name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name thread  end_name  begin_operator  end_operator  begin_name current thread  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get thread group  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  end_try  begin_expr_stmt  begin_expr  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name ruby thread map  end_name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name collections  end_name  begin_operator  end_operator  begin_name synchronized map  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name weak hash map  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  begin_argument  begin_name ruby thread  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name thread context map  end_name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name collections  end_name  begin_operator  end_operator  begin_name synchronized map  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name weak hash map  end_name  begin_argument_list  begin_argument  begin_name ruby thread  end_name  end_argument  begin_argument  begin_name thread context  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment must be called from main thread it is currently but this bothers me  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name local context  end_name  begin_operator  end_operator  begin_name set  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name soft reference  end_name  begin_argument_list  begin_argument  begin_name thread context  end_name  end_argument  end_argument_list  end_name  begin_argument_list  begin_argument  begin_expr  begin_name main context  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name frame  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name any to inputstream  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment using io input stream may not be the most performance way but it s easy  end_comment  begin_return  begin_expr  begin_call  begin_name  begin_name java util  end_name  begin_operator  end_operator  begin_name convert java to usable ruby object  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name io input stream  end_name  begin_argument_list  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name frame  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name any to outputstream  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment using io output stream may not be the most performance way but it s easy  end_comment  begin_return  begin_expr  begin_call  begin_name  begin_name java util  end_name  begin_operator  end_operator  begin_name convert java to usable ruby object  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name io output stream  end_name  begin_argument_list  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name frame  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name any to channel  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment using io channel may not be the most performant way but it s easy  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name io channel  end_name  end_type  begin_name channel  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name self  end_name  begin_operator  end_operator  begin_name responds to  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name self  end_name  begin_operator  end_operator  begin_name responds to  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name self  end_name  begin_operator  end_operator  begin_name responds to  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name channel  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name io channel  end_name  begin_operator  end_operator  begin_name io readable writable byte channel  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name channel  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name io channel  end_name  begin_operator  end_operator  begin_name io readable byte channel  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  begin_else  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name self  end_name  begin_operator  end_operator  begin_name responds to  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name self  end_name  begin_operator  end_operator  begin_name responds to  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name channel  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name io channel  end_name  begin_operator  end_operator  begin_name io writable byte channel  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new type error  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_else  end_if  end_block  end_else  end_if  begin_return  begin_expr  begin_call  begin_name  begin_name java util  end_name  begin_operator  end_operator  begin_name convert java to usable ruby object  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name channel  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment todo varargs end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name create java callables  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name initialized  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment read volatile  end_comment  begin_if  begin_condition  begin_expr  begin_name ctors  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name  begin_name ctors  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name java callable  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name java constructor  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name ctors  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name map  end_name  end_type  begin_name methods map  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name hash map  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name max arity  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name constructor  end_name  end_type  begin_name ctor  end_name  begin_range  begin_expr  begin_name ctors  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_comment todo deal with varargs  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name arity  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ctor  end_name  begin_operator  end_operator  begin_name get parameter types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name length  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name max arity  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name max  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name arity  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name max arity  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name java constructor  end_name  end_argument  end_argument_list  end_name  end_type  begin_name methods for arity  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name java constructor  end_name  end_argument  end_argument_list  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name methods map  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name arity  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name methods for arity  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name methods for arity  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name java constructor  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name methods map  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name arity  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name methods for arity  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name methods for arity  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name java constructor  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name ctor  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_name java callables  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name java constructor  end_name  begin_index  begin_expr  begin_name max arity  end_name  begin_operator  end_operator  end_expr  end_index  begin_index  end_index  end_name  end_expr  end_expr_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name  begin_name iterator  end_name  begin_argument_list  begin_argument  begin_name  begin_name map  end_name  begin_operator  end_operator  begin_name entry  end_name  end_name  end_argument  end_argument_list  end_name  end_type  begin_name iter  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name methods map  end_name  begin_operator  end_operator  begin_name entry set  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name iterator  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_call  begin_name  begin_name iter  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_incr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name map  end_name  begin_operator  end_operator  begin_name entry  end_name  end_name  end_type  begin_name entry  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name iter  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name java constructor  end_name  end_argument  end_argument_list  end_name  end_type  begin_name ctors for arity  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name java constructor  end_name  end_argument  end_argument_list  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name entry  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name java constructor  end_name  begin_index  end_index  end_type  begin_name methods array  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ctors for arity  end_name  begin_operator  end_operator  begin_name to array  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name java constructor  end_name  begin_index  begin_expr  begin_call  begin_name  begin_name ctors for arity  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name java callables  end_name  begin_index  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name integer  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name entry  end_name  begin_operator  end_operator  begin_name get key  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name int value  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_index  end_name  begin_operator  end_operator  begin_name methods array  end_name  end_expr  end_expr_stmt  end_block  end_for  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_name ctors  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_comment initialize cache of parameter types to method  end_comment  begin_expr_stmt  begin_expr  begin_name cache  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name concurrent hash map  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name initialized  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_comment write volatile  end_comment  end_block  end_then  end_if  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name clazz  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  end_type  begin_name args  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name create java methods  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name java proxy  end_name  end_type  begin_name proxy  end_name  begin_init  begin_expr  begin_call  begin_name cast java proxy  end_name  begin_argument_list  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name len  end_name  begin_init  begin_expr  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  begin_index  end_index  end_type  begin_name converted args  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name object  end_name  begin_index  begin_expr  begin_name len  end_name  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name java method  end_name  end_type  begin_name method  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name java method  end_name  begin_operator  end_operator  begin_call  begin_name find callable  end_name  begin_argument_list  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name len  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name len  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_expr_stmt  begin_expr  begin_name  begin_name converted args  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name convert arg  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_return  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name invoke direct  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name proxy  end_name  begin_operator  end_operator  begin_name get object  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name converted args  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name clazz  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name create java methods  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name self  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name java proxy  end_name  end_type  begin_name proxy  end_name  begin_init  begin_expr  begin_call  begin_name cast java proxy  end_name  begin_argument_list  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name java method  end_name  end_type  begin_name method  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name java method  end_name  begin_operator  end_operator  begin_call  begin_name find callable arity zero  end_name  begin_argument_list  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name invoke direct  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name proxy  end_name  begin_operator  end_operator  begin_name get object  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name clazz  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name arg 0  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name create java methods  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name self  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name java proxy  end_name  end_type  begin_name proxy  end_name  begin_init  begin_expr  begin_call  begin_name cast java proxy  end_name  begin_argument_list  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name java method  end_name  end_type  begin_name method  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name java method  end_name  begin_operator  end_operator  begin_call  begin_name find callable arity one  end_name  begin_argument_list  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg 0  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name c arg 0  end_name  begin_init  begin_expr  begin_call  begin_name convert arg  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg 0  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name invoke direct  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name proxy  end_name  begin_operator  end_operator  begin_name get object  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name c arg 0  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name clazz  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name arg 0  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name arg 1  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name create java methods  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name self  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name java proxy  end_name  end_type  begin_name proxy  end_name  begin_init  begin_expr  begin_call  begin_name cast java proxy  end_name  begin_argument_list  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name java method  end_name  end_type  begin_name method  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name java method  end_name  begin_operator  end_operator  begin_call  begin_name find callable arity two  end_name  begin_argument_list  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg 0  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg 1  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name c arg 0  end_name  begin_init  begin_expr  begin_call  begin_name convert arg  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg 0  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name c arg 1  end_name  begin_init  begin_expr  begin_call  begin_name convert arg  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg 1  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name invoke direct  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name proxy  end_name  begin_operator  end_operator  begin_name get object  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name c arg 0  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name c arg 1  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name clazz  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name arg 0  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name arg 1  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name arg 2  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name create java methods  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name self  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name java proxy  end_name  end_type  begin_name proxy  end_name  begin_init  begin_expr  begin_call  begin_name cast java proxy  end_name  begin_argument_list  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name java method  end_name  end_type  begin_name method  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name java method  end_name  begin_operator  end_operator  begin_call  begin_name find callable arity three  end_name  begin_argument_list  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg 0  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg 1  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg 2  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name c arg 0  end_name  begin_init  begin_expr  begin_call  begin_name convert arg  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg 0  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name c arg 1  end_name  begin_init  begin_expr  begin_call  begin_name convert arg  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg 1  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name c arg 2  end_name  begin_init  begin_expr  begin_call  begin_name convert arg  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg 2  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name invoke direct  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name proxy  end_name  begin_operator  end_operator  begin_name get object  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name c arg 0  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name c arg 1  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name c arg 2  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name clazz  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  end_type  begin_name args  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name block  end_name  end_type  begin_name block  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name is given  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name create java methods  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name self  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name java proxy  end_name  end_type  begin_name proxy  end_name  begin_init  begin_expr  begin_call  begin_name cast java proxy  end_name  begin_argument_list  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name len  end_name  begin_init  begin_expr  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_comment these extra arrays are really unfortunate split some of these paths out to eliminate  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  begin_index  end_index  end_type  begin_name converted args  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name object  end_name  begin_index  begin_expr  begin_name len  end_name  begin_operator  end_operator  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  begin_index  end_index  end_type  begin_name intermediate  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name i ruby object  end_name  begin_index  begin_expr  begin_name len  end_name  begin_operator  end_operator  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name arraycopy  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name intermediate  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name len  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name intermediate  end_name  begin_index  begin_expr  begin_name len  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ruby proc  end_name  begin_operator  end_operator  begin_name new proc  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name self  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name block  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name lambda  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name java method  end_name  end_type  begin_name method  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name java method  end_name  begin_operator  end_operator  begin_call  begin_name find callable  end_name  begin_argument_list  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name intermediate  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name len  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name len  end_name  begin_operator  end_operator  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_expr_stmt  begin_expr  begin_name  begin_name converted args  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name convert arg  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name intermediate  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_return  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name invoke direct  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name proxy  end_name  begin_operator  end_operator  begin_name get object  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name converted args  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_return  begin_expr  begin_call  begin_name call  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name clazz  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_else  end_if  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name clazz  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name block  end_name  end_type  begin_name block  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name is given  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name create java methods  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name self  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name java proxy  end_name  end_type  begin_name proxy  end_name  begin_init  begin_expr  begin_call  begin_name cast java proxy  end_name  begin_argument_list  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name ruby proc  end_name  end_type  begin_name proc  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ruby proc  end_name  begin_operator  end_operator  begin_name new proc  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name self  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name block  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name lambda  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name java method  end_name  end_type  begin_name method  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name java method  end_name  begin_operator  end_operator  begin_call  begin_name find callable arity one  end_name  begin_argument_list  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name proc  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name c arg 0  end_name  begin_init  begin_expr  begin_call  begin_name convert arg  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name proc  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name invoke direct  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name proxy  end_name  begin_operator  end_operator  begin_name get object  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name c arg 0  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_return  begin_expr  begin_call  begin_name call  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name clazz  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_else  end_if  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name clazz  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name arg 0  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name block  end_name  end_type  begin_name block  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name is given  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name create java methods  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name self  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name java proxy  end_name  end_type  begin_name proxy  end_name  begin_init  begin_expr  begin_call  begin_name cast java proxy  end_name  begin_argument_list  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name ruby proc  end_name  end_type  begin_name proc  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ruby proc  end_name  begin_operator  end_operator  begin_name new proc  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name self  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name block  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name lambda  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name java method  end_name  end_type  begin_name method  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name java method  end_name  begin_operator  end_operator  begin_call  begin_name find callable arity two  end_name  begin_argument_list  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg 0  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name proc  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name c arg 0  end_name  begin_init  begin_expr  begin_call  begin_name convert arg  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg 0  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name c arg 1  end_name  begin_init  begin_expr  begin_call  begin_name convert arg  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name proc  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name invoke direct  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name proxy  end_name  begin_operator  end_operator  begin_name get object  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name c arg 0  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name c arg 1  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_return  begin_expr  begin_call  begin_name call  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name clazz  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg 0  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_else  end_if  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name clazz  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name arg 0  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name arg 1  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name block  end_name  end_type  begin_name block  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name is given  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name create java methods  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name self  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name java proxy  end_name  end_type  begin_name proxy  end_name  begin_init  begin_expr  begin_call  begin_name cast java proxy  end_name  begin_argument_list  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name ruby proc  end_name  end_type  begin_name proc  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ruby proc  end_name  begin_operator  end_operator  begin_name new proc  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name self  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name block  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name lambda  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name java method  end_name  end_type  begin_name method  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name java method  end_name  begin_operator  end_operator  begin_call  begin_name find callable arity three  end_name  begin_argument_list  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg 0  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg 1  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name proc  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name c arg 0  end_name  begin_init  begin_expr  begin_call  begin_name convert arg  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg 0  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name c arg 1  end_name  begin_init  begin_expr  begin_call  begin_name convert arg  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg 1  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name c arg 2  end_name  begin_init  begin_expr  begin_call  begin_name convert arg  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name proc  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name invoke direct  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name proxy  end_name  begin_operator  end_operator  begin_name get object  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name c arg 0  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name c arg 1  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name c arg 2  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_return  begin_expr  begin_call  begin_name call  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name clazz  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg 0  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg 1  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_else  end_if  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name clazz  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name arg 0  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name arg 1  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name arg 2  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name block  end_name  end_type  begin_name block  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name is given  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name create java methods  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name self  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name java proxy  end_name  end_type  begin_name proxy  end_name  begin_init  begin_expr  begin_call  begin_name cast java proxy  end_name  begin_argument_list  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name ruby proc  end_name  end_type  begin_name proc  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ruby proc  end_name  begin_operator  end_operator  begin_name new proc  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name self  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name block  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name lambda  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name java method  end_name  end_type  begin_name method  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name java method  end_name  begin_operator  end_operator  begin_call  begin_name find callable arity four  end_name  begin_argument_list  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg 0  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg 1  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg 2  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name proc  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name c arg 0  end_name  begin_init  begin_expr  begin_call  begin_name convert arg  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg 0  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name c arg 1  end_name  begin_init  begin_expr  begin_call  begin_name convert arg  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg 1  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name c arg 2  end_name  begin_init  begin_expr  begin_call  begin_name convert arg  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg 2  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name c arg 3  end_name  begin_init  begin_expr  begin_call  begin_name convert arg  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name proc  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name invoke direct  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name proxy  end_name  begin_operator  end_operator  begin_name get object  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name c arg 0  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name c arg 1  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name c arg 2  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name c arg 3  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_return  begin_expr  begin_call  begin_name call  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name clazz  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg 0  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg 1  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg 2  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_else  end_if  end_block 
begin_comment todo varargs end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name create java methods  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name initialized  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment read volatile  end_comment  begin_if  begin_condition  begin_expr  begin_name methods  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name  begin_name methods  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name java callable  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name java method  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name methods  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name map  end_name  end_type  begin_name methods map  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name hash map  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name max arity  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name method  end_name  end_type  begin_name method  end_name  begin_range  begin_expr  begin_name methods  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_comment todo deal with varargs  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name arity  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name get parameter types  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name length  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name max arity  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name max  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name arity  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name max arity  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name java method  end_name  end_argument  end_argument_list  end_name  end_type  begin_name methods for arity  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name java method  end_name  end_argument  end_argument_list  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name methods map  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name arity  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name methods for arity  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name methods for arity  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name java method  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name methods map  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name arity  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name methods for arity  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name methods for arity  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name java method  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_name java callables  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name java method  end_name  begin_index  begin_expr  begin_name max arity  end_name  begin_operator  end_operator  end_expr  end_index  begin_index  end_index  end_name  end_expr  end_expr_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name  begin_name iterator  end_name  begin_argument_list  begin_argument  begin_name  begin_name map  end_name  begin_operator  end_operator  begin_name entry  end_name  end_name  end_argument  end_argument_list  end_name  end_type  begin_name iter  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name methods map  end_name  begin_operator  end_operator  begin_name entry set  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name iterator  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_call  begin_name  begin_name iter  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_incr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name map  end_name  begin_operator  end_operator  begin_name entry  end_name  end_name  end_type  begin_name entry  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name iter  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name java method  end_name  end_argument  end_argument_list  end_name  end_type  begin_name methods for arity  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name java method  end_name  end_argument  end_argument_list  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name entry  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name java method  end_name  begin_index  end_index  end_type  begin_name methods array  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name methods for arity  end_name  begin_operator  end_operator  begin_name to array  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name java method  end_name  begin_index  begin_expr  begin_call  begin_name  begin_name methods for arity  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name java callables  end_name  begin_index  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name integer  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name entry  end_name  begin_operator  end_operator  begin_name get key  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name int value  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_index  end_name  begin_operator  end_operator  begin_name methods array  end_name  end_expr  end_expr_stmt  end_block  end_for  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_name methods  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_comment initialize cache of parameter types to method  end_comment  begin_expr_stmt  begin_expr  begin_name cache  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name concurrent hash map  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name initialized  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_comment write volatile  end_comment  end_block  end_then  end_if  end_block 
begin_comment this variation on define impl class uses all the classic type coercion logic for passing args and returning results param ruby param name param super type names param simple to all return end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name class  end_name  end_type  begin_name define old style impl class  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name ruby  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name string  end_name  begin_index  end_index  end_name  end_type  begin_name super type names  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name map  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  begin_argument  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name method  end_name  end_argument  end_argument_list  end_name  end_argument  end_argument_list  end_name  end_type  begin_name simple to all  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name class writer  end_name  end_type  begin_name cw  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name class writer  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name class writer  end_name  begin_operator  end_operator  begin_name compute maxs  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name path name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name replace  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment construct the class implementing all supertypes  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cw  end_name  begin_operator  end_operator  begin_name visit  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name v 1 5  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name acc public  end_name  begin_operator  end_operator  begin_name acc super  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name path name  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name p  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name object  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name super type names  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cw  end_name  begin_operator  end_operator  begin_name visit source  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name path name  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment fields needed for dispatch and such  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cw  end_name  begin_operator  end_operator  begin_name visit field  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name acc static  end_name  begin_operator  end_operator  begin_name acc final  end_name  begin_operator  end_operator  begin_name acc private  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name ci  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name object  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name visit end  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cw  end_name  begin_operator  end_operator  begin_name visit field  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name acc private  end_name  begin_operator  end_operator  begin_name acc final  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name ci  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name i ruby object  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name visit end  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment create static init for a monitor object  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name skinny method adapter  end_name  end_type  begin_name clinit method  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name skinny method adapter  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name cw  end_name  begin_operator  end_operator  begin_name visit method  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name acc public  end_name  begin_operator  end_operator  begin_name acc static  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name sig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name void  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name clinit method  end_name  begin_operator  end_operator  begin_name newobj  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name p  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name object  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name clinit method  end_name  begin_operator  end_operator  begin_name dup  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name clinit method  end_name  begin_operator  end_operator  begin_name invokespecial  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name p  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name object  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name sig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name void  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name clinit method  end_name  begin_operator  end_operator  begin_name putstatic  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name path name  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name ci  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name object  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment create constructor  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name skinny method adapter  end_name  end_type  begin_name init method  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name skinny method adapter  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name cw  end_name  begin_operator  end_operator  begin_name visit method  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name acc public  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name sig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name void  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name i ruby object  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name init method  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name init method  end_name  begin_operator  end_operator  begin_name invokespecial  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name p  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name object  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name sig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name void  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment store the wrapper  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name init method  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name init method  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name init method  end_name  begin_operator  end_operator  begin_name putfield  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name path name  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name ci  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name i ruby object  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment end constructor  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name init method  end_name  begin_operator  end_operator  begin_name voidreturn  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name init method  end_name  begin_operator  end_operator  begin_name end  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment for each simple method name implement the complex methods calling the simple version  end_comment  begin_for  begin_init  begin_decl  begin_type  begin_name  begin_name map  end_name  begin_operator  end_operator  begin_name  begin_name entry  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  begin_argument  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name method  end_name  end_argument  end_argument_list  end_name  end_argument  end_argument_list  end_name  end_name  end_type  begin_name entry  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name simple to all  end_name  begin_operator  end_operator  begin_name entry set  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name simple name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name entry  end_name  begin_operator  end_operator  begin_name get key  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name set  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  end_type  begin_name name set  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name java util  end_name  begin_operator  end_operator  begin_name get ruby names for java name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name simple name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name entry  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment set up a field for the cache entry  end_comment  begin_comment todo make this an array so it s not as much class metadata similar to abstract script stuff  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cw  end_name  begin_operator  end_operator  begin_name visit field  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name acc static  end_name  begin_operator  end_operator  begin_name acc public  end_name  begin_operator  end_operator  begin_name acc volatile  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name simple name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name ci  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name cache entry  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name visit end  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name clinit method  end_name  begin_operator  end_operator  begin_name getstatic  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name p  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name cache entry  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name ci  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name cache entry  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name clinit method  end_name  begin_operator  end_operator  begin_name putstatic  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name path name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name simple name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name ci  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name cache entry  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name set  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  end_type  begin_name implemented names  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name hash set  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name method  end_name  end_type  begin_name method  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name entry  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name class  end_name  begin_index  end_index  end_type  begin_name param types  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name get parameter types  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name class  end_name  end_type  begin_name return type  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name get return type  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name full name  end_name  begin_init  begin_expr  begin_name simple name  end_name  begin_operator  end_operator  begin_call  begin_name pretty params  end_name  begin_argument_list  begin_argument  begin_expr  begin_name param types  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name implemented names  end_name  begin_operator  end_operator  begin_name contains  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name full name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_continue  end_continue  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name implemented names  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name full name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment indices for temp values  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name base index  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name class  end_name  end_type  begin_name param type  end_name  begin_range  begin_expr  begin_name param types  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_name param type  end_name  begin_operator  end_operator  begin_name  begin_name double  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  begin_operator  end_operator  begin_name param type  end_name  begin_operator  end_operator  begin_name  begin_name long  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name base index  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name base index  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_for  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name self index  end_name  begin_init  begin_expr  begin_name base index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name ruby index  end_name  begin_init  begin_expr  begin_name self index  end_name  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name skinny method adapter  end_name  end_type  begin_name mv  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name skinny method adapter  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name cw  end_name  begin_operator  end_operator  begin_name visit method  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name acc public  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name simple name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name sig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name return type  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name param types  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name start  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name line  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo this code should really check if a ruby equals method is implemented or not  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name simple name  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_name  begin_name param types  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name param types  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_name  begin_name object  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  begin_operator  end_operator  begin_name return type  end_name  begin_operator  end_operator  begin_name  begin_name boolean  end_name  begin_operator  end_operator  begin_name type  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name line  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name invokespecial  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name p  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name object  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name sig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name boolean  end_name  begin_operator  end_operator  begin_name type  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name params  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name object  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name ireturn  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name simple name  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_name  begin_name param types  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name return type  end_name  begin_operator  end_operator  begin_name  begin_name integer  end_name  begin_operator  end_operator  begin_name type  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name line  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name invokespecial  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name p  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name object  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name sig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name integer  end_name  begin_operator  end_operator  begin_name type  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name ireturn  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name simple name  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_name  begin_name param types  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name return type  end_name  begin_operator  end_operator  begin_name  begin_name string  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name line  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name invokespecial  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name p  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name object  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name sig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name string  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name areturn  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name line  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name label  end_name  end_type  begin_name dispatch  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name label  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name label  end_name  end_type  begin_name end  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name label  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name label  end_name  end_type  begin_name recheck method  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name label  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment prepare temp locals  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name getfield  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name path name  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name ci  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name i ruby object  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name astore  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name self index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name self index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name invokeinterface  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name p  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name i ruby object  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name sig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name ruby  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name astore  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ruby index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment try to look up field for simple name  end_comment  begin_comment get field if nonnull go straight to dispatch  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name getstatic  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name path name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name simple name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name ci  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name cache entry  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name dup  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name self index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name invokestatic  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name p  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name mini java  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name sig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name boolean  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name params  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name cache entry  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name i ruby object  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name iftrue  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dispatch  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment field is null lock class and try to populate  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name line  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name pop  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name getstatic  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name path name  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name ci  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name object  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name monitorenter  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment try finally block to ensure unlock  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name label  end_name  end_type  begin_name try start  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name label  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name label  end_name  end_type  begin_name try end  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name label  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name label  end_name  end_type  begin_name finally start  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name label  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name label  end_name  end_type  begin_name finally end  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name label  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name line  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name label  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name try start  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name self index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name each name  end_name  begin_range  begin_expr  begin_name name set  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name ldc  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name each name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name invokestatic  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name p  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name mini java  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name sig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name cache entry  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name params  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name i ruby object  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name string  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name name set  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment store it  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name putstatic  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name path name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name simple name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name ci  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name cache entry  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment all done with lookup attempts release monitor  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name getstatic  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name path name  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name ci  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name object  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name monitorexit  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name go to  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name recheck method  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment end of try block  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name label  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name try end  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment finally block to release monitor  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name label  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name finally start  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name line  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name getstatic  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name path name  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name ci  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name object  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name monitorexit  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name label  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name finally end  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name athrow  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment exception handling for monitor release  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name trycatch  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name try start  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name try end  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name finally start  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name trycatch  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name finally start  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name finally end  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name finally start  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment re get re check method if not null now go to dispatch  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name label  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name recheck method  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name line  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name getstatic  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name path name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name simple name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name ci  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name cache entry  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name dup  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name getfield  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name p  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name cache entry  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name ci  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name dynamic method  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name invokevirtual  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name p  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name dynamic method  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name sig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name boolean  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name iffalse  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dispatch  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment method still not available call method missing  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name line  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name pop  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment exit monitor before making call  end_comment  begin_comment fixme this not being in a finally is a little worrisome  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name self index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name ldc  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name simple name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name coerce arguments to ruby  end_name  begin_argument_list  begin_argument  begin_expr  begin_name mv  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name param types  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name ruby index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name invokestatic  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name p  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name runtime helpers  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name sig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name i ruby object  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name i ruby object  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name string  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name go to  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name end  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment perform the dispatch  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name label  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dispatch  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name line  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name dispatch  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment get current context  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name getfield  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name p  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name cache entry  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name ci  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name dynamic method  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ruby index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name invokevirtual  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name p  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name ruby  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name sig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name thread context  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment load self class and name  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name self index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name self index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name invokeinterface  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name p  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name i ruby object  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name sig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name ruby class  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name ldc  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name simple name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment coerce arguments  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name coerce arguments to ruby  end_name  begin_argument_list  begin_argument  begin_expr  begin_name mv  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name param types  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name ruby index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment load null block  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name getstatic  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name p  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name ci  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment invoke method  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name line  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name invokevirtual  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name p  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name dynamic method  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name sig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name i ruby object  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name thread context  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name i ruby object  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name ruby module  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name string  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name label  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name end  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name coerce result and return  end_name  begin_argument_list  begin_argument  begin_expr  begin_name mv  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name return type  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_else  end_if  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name end  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  end_block  end_for  begin_comment end setup method  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name clinit method  end_name  begin_operator  end_operator  begin_name voidreturn  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name clinit method  end_name  begin_operator  end_operator  begin_name end  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment end class  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name cw  end_name  begin_operator  end_operator  begin_name visit end  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment create the class  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name byte  end_name  begin_index  end_index  end_type  begin_name bytes  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name cw  end_name  begin_operator  end_operator  begin_name to byte array  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name class  end_name  end_type  begin_name new class  end_name  end_decl  end_decl_stmt  begin_synchronized  begin_expr  begin_call  begin_name  begin_name ruby  end_name  begin_operator  end_operator  begin_name get j ruby class loader  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_block  begin_comment try to load the specified name only if that fails try to define the class  end_comment  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_name new class  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ruby  end_name  begin_operator  end_operator  begin_name get j ruby class loader  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name load class  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name class not found exception  end_name  end_type  begin_name cnfe  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_name new class  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ruby  end_name  begin_operator  end_operator  begin_name get j ruby class loader  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name define class  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name cw  end_name  begin_operator  end_operator  begin_name to byte array  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  end_try  end_block  end_synchronized  begin_if  begin_condition  begin_expr  begin_name debug  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name file output stream  end_name  end_type  begin_name fos  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_name fos  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name file output stream  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name fos  end_name  begin_operator  end_operator  begin_name write  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name bytes  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name io exception  end_name  end_type  begin_name ioe  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ioe  end_name  begin_operator  end_operator  begin_name print stack trace  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  begin_finally  begin_block  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name fos  end_name  begin_operator  end_operator  begin_name close  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  end_block  end_catch  end_try  end_block  end_finally  end_try  end_block  end_then  end_if  begin_return  begin_expr  begin_name new class  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name coerce arguments to ruby  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name skinny method adapter  end_name  end_type  begin_name mv  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_index  end_index  end_name  end_type  begin_name param types  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name ruby index  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment load arguments into i ruby object for dispatch  end_comment  begin_if  begin_condition  begin_expr  begin_name  begin_name param types  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name push int  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name param types  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name anewarray  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name p  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name i ruby object  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo make this do specific arity calling  end_comment  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  begin_operator  end_operator  begin_name arg index  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name  begin_name param types  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name class  end_name  end_type  begin_name param type  end_name  begin_init  begin_expr  begin_name  begin_name param types  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name dup  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name push int  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment convert to i ruby object  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ruby index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name  begin_name param types  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name is primitive  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name param type  end_name  begin_operator  end_operator  begin_name  begin_name byte  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  begin_operator  end_operator  begin_name param type  end_name  begin_operator  end_operator  begin_name  begin_name short  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  begin_operator  end_operator  begin_name param type  end_name  begin_operator  end_operator  begin_name  begin_name char  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  begin_operator  end_operator  begin_name param type  end_name  begin_operator  end_operator  begin_name  begin_name int  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name iload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name arg index  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name invokestatic  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name p  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name java util  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name sig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name i ruby object  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name ruby  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name int  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name param type  end_name  begin_operator  end_operator  begin_name  begin_name long  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name lload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name arg index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name arg index  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_comment up two slots for long s two halves  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name invokestatic  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name p  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name java util  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name sig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name i ruby object  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name ruby  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name long  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name param type  end_name  begin_operator  end_operator  begin_name  begin_name float  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name fload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name arg index  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name invokestatic  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name p  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name java util  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name sig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name i ruby object  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name ruby  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name float  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name param type  end_name  begin_operator  end_operator  begin_name  begin_name double  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name dload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name arg index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name arg index  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_comment up two slots for long s two halves  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name invokestatic  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name p  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name java util  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name sig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name i ruby object  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name ruby  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name double  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name param type  end_name  begin_operator  end_operator  begin_name  begin_name boolean  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name iload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name arg index  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name invokestatic  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name p  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name java util  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name sig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name i ruby object  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name ruby  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name boolean  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_else  end_if  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name aload  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name arg index  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name invokestatic  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name p  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name java util  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name sig  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name i ruby object  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name ruby  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name object  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name aastore  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name mv  end_name  begin_operator  end_operator  begin_name getstatic  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name p  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name i ruby object  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name ci  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name clazz  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  end_type  begin_name args  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name block  end_name  end_type  begin_name block  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment dummy bodies for default impls  end_comment  begin_return  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get nil  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name append features to class  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby class  end_name  end_type  begin_name clazz  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name java class obj  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name self  end_name  begin_operator  end_operator  begin_name get instance variables  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name fast get instance variable  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment initialize this if it hasn t been  end_comment  begin_if  begin_condition  begin_expr  begin_name java class obj  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name java class obj  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name self  end_name  begin_operator  end_operator  begin_name get instance variables  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set instance variable  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name java class obj  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment initialize these if they haven t been  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name java class  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name clazz  end_name  begin_operator  end_operator  begin_name get instance variables  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name fast get instance variable  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name java class  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name java class  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name clazz  end_name  begin_operator  end_operator  begin_name get instance variables  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name fast set instance variable  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name java class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name java proxy class  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name clazz  end_name  begin_operator  end_operator  begin_name get instance variables  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name fast get instance variable  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name java proxy class  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name java proxy class  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name clazz  end_name  begin_operator  end_operator  begin_name get instance variables  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name fast set instance variable  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name java proxy class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment not allowed for original non generated java classes  end_comment  begin_comment note not allowing for any previously created class right now  end_comment  begin_comment this restriction might be loosened later for generated classes  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name java class  end_name  begin_operator  end_operator  begin_name is true  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name clazz  end_name  begin_operator  end_operator  begin_name get singleton class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is method bound  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name java proxy class  end_name  begin_operator  end_operator  begin_name is true  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new argument error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name java interfaces  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name clazz  end_name  begin_operator  end_operator  begin_name get instance variables  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name fast get instance variable  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name java interfaces  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name java interfaces  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ruby array  end_name  begin_operator  end_operator  begin_name new array  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name java class obj  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name clazz  end_name  begin_operator  end_operator  begin_name get instance variables  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name fast set instance variable  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name java interfaces  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment setup new etc unless this is a concrete java proxy subclass  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name clazz  end_name  begin_operator  end_operator  begin_name is method bound  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment first we make modifications to the class to adapt it to being  end_comment  begin_comment both a ruby class and a proxy for a java type  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name ruby class  end_name  end_type  begin_name singleton  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name clazz  end_name  begin_operator  end_operator  begin_name get singleton class  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment list of interfaces we implement  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name singleton  end_name  begin_operator  end_operator  begin_name add read attribute  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment we capture the original new and make it private  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name dynamic method  end_name  end_type  begin_name new method  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name singleton  end_name  begin_operator  end_operator  begin_name search method  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name dup  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name singleton  end_name  begin_operator  end_operator  begin_name add method  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name new method  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name new method  end_name  begin_operator  end_operator  begin_name set visibility  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name visibility  end_name  begin_operator  end_operator  begin_name private  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment the replacement new allocates and inits the ruby object as before but  end_comment  begin_comment also instantiates our proxified java object by calling jcreate  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name singleton  end_name  begin_operator  end_operator  begin_name add method  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name jruby  end_name  begin_operator  end_operator  begin_name internal  end_name  begin_operator  end_operator  begin_name runtime  end_name  begin_operator  end_operator  begin_name methods  end_name  begin_operator  end_operator  begin_name java method  end_name  end_name  end_super  begin_argument_list  begin_argument  begin_expr  begin_name singleton  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name visibility  end_name  begin_operator  end_operator  begin_name public  end_name  end_name  end_expr  end_argument  end_argument_list  begin_block  begin_function  begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name clazz  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  end_type  begin_name args  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name block  end_name  end_type  begin_name block  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_assert  begin_expr  begin_name self  end_name  begin_operator  end_operator  begin_name ruby class  end_name  begin_operator  end_operator  end_expr  end_assert  begin_decl_stmt  begin_decl  begin_type  begin_name ruby class  end_name  end_type  begin_name clazz self  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name ruby class  end_name  begin_operator  end_operator  begin_name self  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name new obj  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name clazz self  end_name  begin_operator  end_operator  begin_name allocate  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime helpers  end_name  begin_operator  end_operator  begin_name invoke  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name new obj  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name block  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime helpers  end_name  begin_operator  end_operator  begin_name invoke  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name new obj  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name block  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name new obj  end_name  end_expr  end_return  end_block  end_function  end_block  end_class  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment next we define a few private methods that we ll use to manipulate  end_comment  begin_comment the java object contained within this ruby object  end_comment  begin_comment jcreate instantiates the proxy object which implements all interfaces  end_comment  begin_comment and which is wrapped and implemented by this object  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name clazz  end_name  begin_operator  end_operator  begin_name add method  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name java method n  end_name  end_super  begin_argument_list  begin_argument  begin_expr  begin_name clazz  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name visibility  end_name  begin_operator  end_operator  begin_name private  end_name  end_name  end_expr  end_argument  end_argument_list  begin_block  begin_function  begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name clazz  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  end_type  begin_name args  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name jcreate proxy  end_name  begin_argument_list  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_function  end_block  end_class  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment used by our duck typification of proc into interface types to allow  end_comment  begin_comment coercing a simple proc into an interface parameter  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name clazz  end_name  begin_operator  end_operator  begin_name add method  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name java method n  end_name  end_super  begin_argument_list  begin_argument  begin_expr  begin_name clazz  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name visibility  end_name  begin_operator  end_operator  begin_name private  end_name  end_name  end_expr  end_argument  end_argument_list  begin_block  begin_function  begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name clazz  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  end_type  begin_name args  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name result  end_name  begin_init  begin_expr  begin_call  begin_name jcreate proxy  end_name  begin_argument_list  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_name result  end_name  end_expr  end_return  end_block  end_function  end_block  end_class  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name clazz  end_name  begin_operator  end_operator  begin_name include module  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get module  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment if we hold a java object we need a java class accessor  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name clazz  end_name  begin_operator  end_operator  begin_name add method  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name java method zero  end_name  end_super  begin_argument_list  begin_argument  begin_expr  begin_name clazz  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name visibility  end_name  begin_operator  end_operator  begin_name public  end_name  end_name  end_expr  end_argument  end_argument_list  begin_block  begin_function  begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name clazz  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name java object  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name self  end_name  begin_operator  end_operator  begin_name data get struct  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name java class  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_function  end_block  end_class  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment because we implement java interfaces now we need a new that s  end_comment  begin_comment aware of those additional virtual supertypes  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name clazz  end_name  begin_operator  end_operator  begin_name define alias  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name clazz  end_name  begin_operator  end_operator  begin_name add method  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name java method one  end_name  end_super  begin_argument_list  begin_argument  begin_expr  begin_name clazz  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name visibility  end_name  begin_operator  end_operator  begin_name public  end_name  end_name  end_expr  end_argument  end_argument_list  begin_block  begin_function  begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name clazz  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name arg  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo wrong get interfaces from class  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name arg  end_name  begin_operator  end_operator  begin_name responds to  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name interfaces  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name self  end_name  begin_operator  end_operator  begin_name get meta class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get instance variables  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name fast get instance variable  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_assert  begin_expr  begin_name interfaces  end_name  begin_operator  end_operator  begin_name ruby array  end_name  begin_operator  end_operator  end_expr  end_assert  begin_return  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new boolean  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name ruby array  end_name  begin_operator  end_operator  begin_name interfaces  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name op diff  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name java class  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name java object  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name arg  end_name  begin_operator  end_operator  begin_name data get struct  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name java class  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name interfaces  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name ruby array  end_name  begin_operator  end_operator  begin_name new array  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name runtime helpers  end_name  begin_operator  end_operator  begin_name invoke  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name arg  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_else  end_if  end_block  end_function  end_block  end_class  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment now we add an implement and implement all methods to the class  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name clazz  end_name  begin_operator  end_operator  begin_name is method bound  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby class  end_name  end_type  begin_name singleton  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name clazz  end_name  begin_operator  end_operator  begin_name get singleton class  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment implement is called to force this class to create stubs for all  end_comment  begin_comment methods in the given interface so they ll show up in the list  end_comment  begin_comment of methods and be invocable without passing through method missing  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name singleton  end_name  begin_operator  end_operator  begin_name add method  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name java method one  end_name  end_super  begin_argument_list  begin_argument  begin_expr  begin_name clazz  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name visibility  end_name  begin_operator  end_operator  begin_name private  end_name  end_name  end_expr  end_argument  end_argument_list  begin_block  begin_function  begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name clazz  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name arg  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name java interfaces  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name self  end_name  begin_operator  end_operator  begin_name get instance variables  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name fast get instance variable  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name java interfaces  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name ruby array  end_name  begin_operator  end_operator  begin_name java interfaces  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name includes  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name runtime helpers  end_name  begin_operator  end_operator  begin_name invoke  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_return  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get nil  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_function  end_block  end_class  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment implement all forces implementation of all interfaces we intend  end_comment  begin_comment for this class to implement  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name singleton  end_name  begin_operator  end_operator  begin_name add method  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name java method one  end_name  end_super  begin_argument_list  begin_argument  begin_expr  begin_name clazz  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name visibility  end_name  begin_operator  end_operator  begin_name private  end_name  end_name  end_expr  end_argument  end_argument_list  begin_block  begin_function  begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name clazz  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name arg  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby array  end_name  end_type  begin_name java interfaces  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name ruby array  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name self  end_name  begin_operator  end_operator  begin_name get instance variables  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name fast get instance variable  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name java interfaces  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime helpers  end_name  begin_operator  end_operator  begin_name invoke  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name java utilities  end_name  begin_operator  end_operator  begin_name get interface module  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name java interfaces  end_name  begin_operator  end_operator  begin_name elt internal  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_return  begin_expr  begin_name java interfaces  end_name  end_expr  end_return  end_block  end_function  end_block  end_class  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  begin_else  begin_block  begin_comment we ve already done the above priming logic just add another interface  end_comment  begin_comment to the list of intentions unless we re past the point of no return or  end_comment  begin_comment already intend to implement the given interface  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name java interfaces  end_name  begin_operator  end_operator  begin_name is frozen  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name ruby array  end_name  begin_operator  end_operator  begin_name java interfaces  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name includes  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name java class obj  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name ruby array  end_name  begin_operator  end_operator  begin_name java interfaces  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name append  end_name  begin_argument_list  begin_argument  begin_expr  begin_name java class obj  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_else  end_if  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name clazz  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  end_type  begin_name args  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name block  end_name  end_type  begin_name block  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_assert  begin_expr  begin_name self  end_name  begin_operator  end_operator  begin_name ruby class  end_name  begin_operator  end_operator  end_expr  end_assert  begin_decl_stmt  begin_decl  begin_type  begin_name ruby class  end_name  end_type  begin_name clazz self  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name ruby class  end_name  begin_operator  end_operator  begin_name self  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name new obj  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name clazz self  end_name  begin_operator  end_operator  begin_name allocate  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime helpers  end_name  begin_operator  end_operator  begin_name invoke  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name new obj  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name block  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime helpers  end_name  begin_operator  end_operator  begin_name invoke  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name new obj  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name block  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name new obj  end_name  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name clazz  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  end_type  begin_name args  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name jcreate proxy  end_name  begin_argument_list  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name clazz  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  end_type  begin_name args  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name result  end_name  begin_init  begin_expr  begin_call  begin_name jcreate proxy  end_name  begin_argument_list  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_name result  end_name  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name clazz  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name java object  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name self  end_name  begin_operator  end_operator  begin_name data get struct  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name java class  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name clazz  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name arg  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo wrong get interfaces from class  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name arg  end_name  begin_operator  end_operator  begin_name responds to  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name interfaces  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name self  end_name  begin_operator  end_operator  begin_name get meta class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get instance variables  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name fast get instance variable  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_assert  begin_expr  begin_name interfaces  end_name  begin_operator  end_operator  begin_name ruby array  end_name  begin_operator  end_operator  end_expr  end_assert  begin_return  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new boolean  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name ruby array  end_name  begin_operator  end_operator  begin_name interfaces  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name op diff  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name java class  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name java object  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name arg  end_name  begin_operator  end_operator  begin_name data get struct  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name java class  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name interfaces  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name ruby array  end_name  begin_operator  end_operator  begin_name new array  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name runtime helpers  end_name  begin_operator  end_operator  begin_name invoke  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name arg  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_else  end_if  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name clazz  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name arg  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name java interfaces  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name self  end_name  begin_operator  end_operator  begin_name get instance variables  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name fast get instance variable  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name java interfaces  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name ruby array  end_name  begin_operator  end_operator  begin_name java interfaces  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name includes  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name runtime helpers  end_name  begin_operator  end_operator  begin_name invoke  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_return  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get nil  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name clazz  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name arg  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby array  end_name  end_type  begin_name java interfaces  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name ruby array  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name self  end_name  begin_operator  end_operator  begin_name get instance variables  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name fast get instance variable  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name java interfaces  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime helpers  end_name  begin_operator  end_operator  begin_name invoke  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name java utilities  end_name  begin_operator  end_operator  begin_name get interface module  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name java interfaces  end_name  begin_operator  end_operator  begin_name elt internal  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_return  begin_expr  begin_name java interfaces  end_name  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name clazz  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name arg  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name block  end_name  end_type  begin_name block  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name arg  end_name  begin_operator  end_operator  begin_name ruby class  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new type error  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name ruby class  end_name  end_type  begin_name target  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name ruby class  end_name  begin_operator  end_operator  begin_name arg  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name ruby array  end_name  end_type  begin_name java interface mods  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name ruby array  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name self  end_name  begin_operator  end_operator  begin_name get instance variables  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name fast get instance variable  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name target  end_name  begin_operator  end_operator  begin_name include  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name java interface mods  end_name  begin_operator  end_operator  begin_name to java array  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_call  begin_name  begin_name runtime helpers  end_name  begin_operator  end_operator  begin_name invoke as  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name clazz  end_name  begin_operator  end_operator  begin_name get super class  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name block  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name ruby class  end_name  end_type  begin_name define class under  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name pkg  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby class  end_name  end_type  begin_name super clazz  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment shouldn t happen but if a superclass is specified it s not ours  end_comment  begin_if  begin_condition  begin_expr  begin_name super clazz  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name package name  end_name  end_decl  end_decl_stmt  begin_comment again shouldn t happen todo might want to throw exception instead  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name package name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name pkg  end_name  begin_operator  end_operator  begin_name get instance variables  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name fast get instance variable  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name pkg  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_operator  end_operator  begin_name ruby class  end_name  begin_operator  end_operator  begin_call  begin_name get proxy class  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get java support  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get java utilities module  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name java class  end_name  begin_operator  end_operator  begin_name for name verbose  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name package name  end_name  begin_operator  end_operator  begin_name as java string  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name ruby module  end_name  end_type  begin_name define module under  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name pkg  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name package name  end_name  end_decl  end_decl_stmt  begin_comment again shouldn t happen todo might want to throw exception instead  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name package name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name pkg  end_name  begin_operator  end_operator  begin_name get instance variables  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name fast get instance variable  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name pkg  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_operator  end_operator  begin_name ruby module  end_name  begin_operator  end_operator  begin_call  begin_name get interface module  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name java class  end_name  begin_operator  end_operator  begin_name for name verbose  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name package name  end_name  begin_operator  end_operator  begin_name as java string  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name ruby class  end_name  end_type  begin_name create proxy class  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby class  end_name  end_type  begin_name base type  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name java class  end_name  end_type  begin_name java class  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name invoke inherited  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment jruby 2938 the proxy class might already exist  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name ruby class  end_name  end_type  begin_name proxy class  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name java class  end_name  begin_operator  end_operator  begin_name get proxy class  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name proxy class  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_return  begin_expr  begin_name proxy class  end_name  end_expr  end_return  end_then  end_if  begin_comment this needs to be split since conditional calling inherited doesn t fit standard ruby semantics  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ruby class  end_name  begin_operator  end_operator  begin_name check inheritable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name base type  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name ruby class  end_name  end_type  begin_name super class  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name ruby class  end_name  begin_operator  end_operator  begin_name base type  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name proxy class  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ruby class  end_name  begin_operator  end_operator  begin_name new class  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name super class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name proxy class  end_name  begin_operator  end_operator  begin_name make meta class  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name super class  end_name  begin_operator  end_operator  begin_name get meta class  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name proxy class  end_name  begin_operator  end_operator  begin_name set allocator  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name super class  end_name  begin_operator  end_operator  begin_name get allocator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name invoke inherited  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name proxy class  end_name  begin_operator  end_operator  begin_name inherit  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name super class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name proxy class  end_name  begin_operator  end_operator  begin_name call method  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get current context  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name java class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name java class  end_name  begin_operator  end_operator  begin_name setup proxy  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name proxy class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment add java method for unbound use  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name proxy class  end_name  begin_operator  end_operator  begin_name define annotated methods  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name java proxy class methods  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name proxy class  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name ruby module  end_name  end_type  begin_name get proxy or package under package  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name ruby  end_name  end_type  begin_name runtime  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name parent package  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name sym  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name package name obj  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name parent package  end_name  begin_operator  end_operator  begin_name fast get instance variable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name package name obj  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new argument error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name package name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name package name obj  end_name  begin_operator  end_operator  begin_name as java string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name sym  end_name  begin_operator  end_operator  begin_name trim  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name intern  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new argument error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name full name  end_name  begin_init  begin_expr  begin_name package name  end_name  begin_operator  end_operator  begin_name name  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name character  end_name  begin_operator  end_operator  begin_name is upper case  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name char at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment filter out any java primitive names  end_comment  begin_comment todo should check against all java reserved names here not just primitives  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name java primitives  end_name  begin_operator  end_operator  begin_name contains key  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new argument error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_comment this covers the rare case of lower case class names and thus will  end_comment  begin_comment fail 99 999 of the time fortunately we ll only do this once per  end_comment  begin_comment package name and seriously folks look into best practices  end_comment  begin_try  begin_block  begin_return  begin_expr  begin_call  begin_name get proxy class  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name java class  end_name  begin_operator  end_operator  begin_name for name quiet  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name full name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name raise exception  end_name  end_type  begin_name re  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment expected  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name ruby exception  end_name  end_type  begin_name ruby ex  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name re  end_name  begin_operator  end_operator  begin_name get exception  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name ruby ex  end_name  begin_operator  end_operator  begin_name kind of p  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get standard error  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is true  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime helpers  end_name  begin_operator  end_operator  begin_name set error info  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment expected  end_comment  end_block  end_catch  end_try  begin_comment haven t found a class continue on as though it were a package  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name package module  end_name  end_decl  end_decl_stmt  begin_comment todo decompose get java package module so we don t parse full name  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name package module  end_name  begin_operator  end_operator  begin_call  begin_name get java package module  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name full name  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_comment save package module as ivar in parent and add method to parent so  end_comment  begin_comment we don t have to come back here  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name ivar name  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name intern  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name parent package  end_name  begin_operator  end_operator  begin_name fast set instance variable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ivar name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name package module  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name ruby class  end_name  end_type  begin_name singleton  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name parent package  end_name  begin_operator  end_operator  begin_name get singleton class  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name singleton  end_name  begin_operator  end_operator  begin_name add method  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name jruby  end_name  begin_operator  end_operator  begin_name internal  end_name  begin_operator  end_operator  begin_name runtime  end_name  begin_operator  end_operator  begin_name methods  end_name  begin_operator  end_operator  begin_name java method  end_name  end_name  end_super  begin_argument_list  begin_argument  begin_expr  begin_name singleton  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name visibility  end_name  begin_operator  end_operator  begin_name public  end_name  end_name  end_expr  end_argument  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name clazz  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  end_type  begin_name args  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name block  end_name  end_type  begin_name block  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name arity  end_name  begin_operator  end_operator  begin_name raise argument error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name variable  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name variable  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name ruby module  end_name  begin_operator  end_operator  begin_name self  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name fast get instance variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ivar name  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name variable  end_name  end_expr  end_return  end_block  end_then  end_if  begin_return  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_function  begin_function  begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name arity  end_name  end_type  begin_name get arity  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name arity  end_name  begin_operator  end_operator  begin_name no arguments  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_function  end_block  end_class  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name package module  end_name  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_comment upper case name so most likely a class  end_comment  begin_return  begin_expr  begin_call  begin_name get proxy class  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name java class  end_name  begin_operator  end_operator  begin_name for name verbose  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name full name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  begin_comment fixme we should also support orgs that use capitalized package  end_comment  begin_comment names including embarrassingly the one i work for but this  end_comment  begin_comment should be enabled by a system property as the expected default  end_comment  begin_comment behavior for an upper case value should be and is to treat it  end_comment  begin_comment as a class name and raise an exception if it s not found  end_comment  begin_comment try  end_comment  begin_comment return get proxy class runtime java class for name runtime full name  end_comment  begin_comment catch exception e  end_comment  begin_comment but for those not hip to conventions and best practices  end_comment  begin_comment we ll try as a package  end_comment  begin_comment return get java package module runtime full name  end_comment  begin_comment   end_comment  end_block  end_else  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name ruby module  end_name  end_type  begin_name get top level proxy or package  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name ruby  end_name  end_type  begin_name runtime  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name sym  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name sym  end_name  begin_operator  end_operator  begin_name trim  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name intern  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new argument error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name character  end_name  begin_operator  end_operator  begin_name is lower case  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name char at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment this covers primitives and unlikely lower case class names  end_comment  begin_try  begin_block  begin_return  begin_expr  begin_call  begin_name get proxy class  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name java class  end_name  begin_operator  end_operator  begin_name for name quiet  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name raise exception  end_name  end_type  begin_name re  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not primitive or lc class  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name ruby exception  end_name  end_type  begin_name ruby ex  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name re  end_name  begin_operator  end_operator  begin_name get exception  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name ruby ex  end_name  begin_operator  end_operator  begin_name kind of p  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get standard error  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is true  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime helpers  end_name  begin_operator  end_operator  begin_name set error info  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not primitive or lc class  end_comment  end_block  end_catch  end_try  begin_comment todo check for java reserved names and raise exception if encountered  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name package module  end_name  end_decl  end_decl_stmt  begin_comment todo decompose get java package module so we don t parse full name  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name package module  end_name  begin_operator  end_operator  begin_call  begin_name get java package module  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name java module  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get java support  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get java module  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name java module  end_name  begin_operator  end_operator  begin_name get meta class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is method bound  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name package module  end_name  end_expr  end_return  begin_comment save package module as ivar in parent and add method to parent so  end_comment  begin_comment we don t have to come back here  end_comment  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name ivar name  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name intern  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name java module  end_name  begin_operator  end_operator  begin_name fast set instance variable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ivar name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name package module  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name ruby class  end_name  end_type  begin_name singleton  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name java module  end_name  begin_operator  end_operator  begin_name get singleton class  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name singleton  end_name  begin_operator  end_operator  begin_name add method  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name jruby  end_name  begin_operator  end_operator  begin_name internal  end_name  begin_operator  end_operator  begin_name runtime  end_name  begin_operator  end_operator  begin_name methods  end_name  begin_operator  end_operator  begin_name java method  end_name  end_name  end_super  begin_argument_list  begin_argument  begin_expr  begin_name singleton  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name visibility  end_name  begin_operator  end_operator  begin_name public  end_name  end_name  end_expr  end_argument  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name clazz  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  end_type  begin_name args  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name block  end_name  end_type  begin_name block  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name arity  end_name  begin_operator  end_operator  begin_name raise argument error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name variable  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name variable  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name ruby module  end_name  begin_operator  end_operator  begin_name self  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name fast get instance variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ivar name  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name variable  end_name  end_expr  end_return  end_block  end_then  end_if  begin_return  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_function  begin_function  begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name arity  end_name  end_type  begin_name get arity  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name arity  end_name  begin_operator  end_operator  begin_name no arguments  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_function  end_block  end_class  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name package module  end_name  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_try  begin_block  begin_return  begin_expr  begin_call  begin_name get proxy class  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name java class  end_name  begin_operator  end_operator  begin_name for name quiet  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name raise exception  end_name  end_type  begin_name re  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not a class  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name ruby exception  end_name  end_type  begin_name ruby ex  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name re  end_name  begin_operator  end_operator  begin_name get exception  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name ruby ex  end_name  begin_operator  end_operator  begin_name kind of p  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get standard error  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is true  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime helpers  end_name  begin_operator  end_operator  begin_name set error info  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment not a class  end_comment  end_block  end_catch  end_try  begin_comment upper case package name  end_comment  begin_comment todo top level upper case package was supported in the previous ruby based  end_comment  begin_comment implementation so leaving as is see note at get proxy or package under package  end_comment  begin_comment re future approach below the top level  end_comment  begin_return  begin_expr  begin_call  begin_name get package module  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_else  end_if  end_block 
begin_comment todo formalize conversion mechanisms between java and ruby end_commentbegin_comment high level object conversion utility end_comment begin_type  begin_annotation  begin_name deprecated  end_name  end_annotation  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name frame  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name module  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name visibility  end_name  begin_operator  end_operator  begin_name  begin_name visibility  end_name  begin_operator  end_operator  begin_name private  end_name  end_name  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name ruby to java  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name recv  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name object  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name block  end_name  end_type  begin_name unused block  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name java util  end_name  begin_operator  end_operator  begin_name ruby to java  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name recv  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name object  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name unused block  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name invoke  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name proxy  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name method  end_name  end_type  begin_name method  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name object  end_name  begin_index  end_index  end_name  end_type  begin_name nargs  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name throwable  end_name  end_expr  end_argument  end_throws  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name class  end_name  begin_index  end_index  end_type  begin_name parameter types  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name class  end_name  begin_index  end_index  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name parameter type cache  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name parameter types  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name parameter types  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name get parameter types  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name parameter type cache  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name parameter types  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name method args length  end_name  begin_init  begin_expr  begin_name  begin_name parameter types  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name method name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name method name  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_name method args length  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name proxy  end_name  begin_operator  end_operator  begin_name get class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name method name  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_name method args length  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name integer  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name proxy  end_name  begin_operator  end_operator  begin_name get class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name hash code  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name method name  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_name method args length  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name parameter types  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name object  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name boolean  end_name  begin_operator  end_operator  begin_name value of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name proxy  end_name  begin_operator  end_operator  begin_name  begin_name nargs  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_else  end_if  end_else  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name recv  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name length  end_name  begin_init  begin_expr  begin_name nargs  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name nargs  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  begin_index  end_index  end_type  begin_name ruby args  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name i ruby object  end_name  begin_index  begin_expr  begin_name length  end_name  begin_operator  end_operator  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name ruby args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name java util  end_name  begin_operator  end_operator  begin_name convert java to ruby  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name proxy  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name ruby args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name java method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name length  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_expr_stmt  begin_expr  begin_name  begin_name ruby args  end_name  begin_index  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name java util  end_name  begin_operator  end_operator  begin_name convert java to ruby  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name nargs  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_return  begin_expr  begin_call  begin_name  begin_name proc  end_name  begin_operator  end_operator  begin_name call  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get current context  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name ruby args  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to java  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name get return type  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name required  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name frame  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name module  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name visibility  end_name  begin_operator  end_operator  begin_name  begin_name visibility  end_name  begin_operator  end_operator  begin_name private  end_name  end_name  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name new proxy instance 2  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name recv  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name wrapper  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name ifcs  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name block  end_name  end_type  begin_name block  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  begin_index  end_index  end_type  begin_name java classes  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name ruby array  end_name  begin_operator  end_operator  begin_name ifcs  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name to java array  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name ruby  end_name  end_type  begin_name runtime  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name recv  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment create list of interface names to proxy and make sure they really are interfaces  end_comment  begin_comment also build a hashcode from all classes to use for retrieving previously created impl  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name class  end_name  begin_index  end_index  end_type  begin_name interfaces  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name class  end_name  begin_index  begin_expr  begin_name  begin_name java classes  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name  begin_name java classes  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name java classes  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_name java class  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name java class  end_name  begin_operator  end_operator  begin_name  begin_name java classes  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name interface p  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is true  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name recv  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new argument error  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name java classes  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name  begin_name interfaces  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name java class  end_name  begin_operator  end_operator  begin_name  begin_name java classes  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name java class  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_comment hashcode is a combination of the interfaces and the ruby class we re using  end_comment  begin_comment to implement them  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name safe property accessor  end_name  begin_operator  end_operator  begin_name get boolean  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name interfaces hash code  end_name  begin_init  begin_expr  begin_call  begin_name interfaces hash code  end_name  begin_argument_list  begin_argument  begin_expr  begin_name interfaces  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment if it s a singleton class and the real class is proc we re doing closure conversion  end_comment  begin_comment so just use proc s hashcode  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name wrapper  end_name  begin_operator  end_operator  begin_name get meta class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is singleton  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name wrapper  end_name  begin_operator  end_operator  begin_name get meta class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get real class  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get proc  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name interfaces hash code  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name interfaces hash code  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get proc  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name hash code  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_comment normal new class implementing interfaces  end_comment  begin_expr_stmt  begin_expr  begin_name interfaces hash code  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name interfaces hash code  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name wrapper  end_name  begin_operator  end_operator  begin_name get meta class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name hash code  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name impl class name  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name abs  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name interfaces hash code  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name class  end_name  end_type  begin_name proxy impl class  end_name  end_decl  end_decl_stmt  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_name proxy impl class  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name class  end_name  begin_operator  end_operator  begin_name for name  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name impl class name  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get j ruby class loader  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name class not found exception  end_name  end_type  begin_name cnfe  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_name proxy impl class  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name mini java  end_name  begin_operator  end_operator  begin_name create old style impl class  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name interfaces  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name wrapper  end_name  begin_operator  end_operator  begin_name get meta class  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name impl class name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  end_try  begin_try  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name constructor  end_name  end_type  begin_name proxy constructor  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name proxy impl class  end_name  begin_operator  end_operator  begin_name get constructor  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name i ruby object  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_call  begin_name  begin_name java object  end_name  begin_operator  end_operator  begin_name wrap  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name recv  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name proxy constructor  end_name  begin_operator  end_operator  begin_name new instance  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name wrapper  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name no such method exception  end_name  end_type  begin_name nsme  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new type error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name nsme  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name invocation target exception  end_name  end_type  begin_name ite  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new type error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name ite  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name instantiation exception  end_name  end_type  begin_name ie  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new type error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name ie  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name illegal access exception  end_name  end_type  begin_name iae  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new type error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name iae  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  end_block  end_then  begin_else  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name java object  end_name  begin_operator  end_operator  begin_name wrap  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name recv  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name proxy  end_name  begin_operator  end_operator  begin_name new proxy instance  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name recv  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get j ruby class loader  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name interfaces  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name invocation handler  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name map  end_name  end_type  begin_name parameter type cache  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name concurrent hash map  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_function  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name invoke  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name proxy  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name method  end_name  end_type  begin_name method  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name object  end_name  begin_index  end_index  end_name  end_type  begin_name nargs  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name throwable  end_name  end_expr  end_argument  end_throws  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name method name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name length  end_name  begin_init  begin_expr  begin_name nargs  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name nargs  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_comment fixme wtf is this why would these use the class  end_comment  begin_if  begin_condition  begin_expr  begin_name method name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name length  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name proxy  end_name  begin_operator  end_operator  begin_name get class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name method name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name length  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name integer  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name proxy  end_name  begin_operator  end_operator  begin_name get class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name hash code  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name method name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name length  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name class  end_name  begin_index  end_index  end_type  begin_name parameter types  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name class  end_name  begin_index  end_index  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name parameter type cache  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name parameter types  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name parameter types  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name get parameter types  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name parameter type cache  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name parameter types  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name  begin_name parameter types  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name object  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name boolean  end_name  begin_operator  end_operator  begin_name value of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name proxy  end_name  begin_operator  end_operator  begin_name  begin_name nargs  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  end_else  end_if  end_else  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  begin_index  end_index  end_type  begin_name ruby args  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name java util  end_name  begin_operator  end_operator  begin_name convert java array to ruby  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name nargs  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name runtime helpers  end_name  begin_operator  end_operator  begin_name invoke  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get current context  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name wrapper  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name method name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name ruby args  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to java  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name get return type  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name runtime exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name print stack trace  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_throw  begin_expr  begin_name e  end_name  end_expr  end_throw  end_block  end_catch  end_try  end_block  end_function  end_block  end_class  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_else  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name invoke  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name proxy  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name method  end_name  end_type  begin_name method  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name object  end_name  begin_index  end_index  end_name  end_type  begin_name nargs  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name throwable  end_name  end_expr  end_argument  end_throws  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name method name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name length  end_name  begin_init  begin_expr  begin_name nargs  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name nargs  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_comment fixme wtf is this why would these use the class  end_comment  begin_if  begin_condition  begin_expr  begin_name method name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name length  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name proxy  end_name  begin_operator  end_operator  begin_name get class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name method name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name length  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name integer  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name proxy  end_name  begin_operator  end_operator  begin_name get class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name hash code  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name method name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name length  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name class  end_name  begin_index  end_index  end_type  begin_name parameter types  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name class  end_name  begin_index  end_index  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name parameter type cache  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name parameter types  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name parameter types  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name get parameter types  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name parameter type cache  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name parameter types  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name  begin_name parameter types  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name object  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name boolean  end_name  begin_operator  end_operator  begin_name value of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name proxy  end_name  begin_operator  end_operator  begin_name  begin_name nargs  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  end_else  end_if  end_else  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  begin_index  end_index  end_type  begin_name ruby args  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name java util  end_name  begin_operator  end_operator  begin_name convert java array to ruby  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name nargs  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name runtime helpers  end_name  begin_operator  end_operator  begin_name invoke  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get current context  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name wrapper  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name method name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name ruby args  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to java  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name get return type  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name runtime exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name print stack trace  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_throw  begin_expr  begin_name e  end_name  end_expr  end_throw  end_block  end_catch  end_try  end_block 
begin_comment small hack to save a cast later on end_comment begin_type  begin_name boolean  end_name  end_type  begin_name has local method  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  end_expr  end_return  end_block 
begin_comment modified only by add method no synchronization required end_comment begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_name boolean  end_name  end_type  begin_name has local method  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  begin_name have local method  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name setup proxy  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name ruby class  end_name  end_type  begin_name proxy  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_assert  begin_expr  begin_call  begin_name  begin_name proxy lock  end_name  begin_operator  end_operator  begin_name is held by current thread  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_assert  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name proxy  end_name  begin_operator  end_operator  begin_name define fast method  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name jsend method  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name java class  end_name  begin_init  begin_expr  begin_call  begin_name java class  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name java class  end_name  begin_operator  end_operator  begin_name is interface  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name setup interface proxy  end_name  begin_argument_list  begin_argument  begin_expr  begin_name proxy  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_then  end_if  begin_assert  begin_expr  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name proxy class  end_name  end_name  begin_operator  end_operator  end_expr  end_assert  begin_expr_stmt  begin_expr  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name unfinished proxy class  end_name  end_name  begin_operator  end_operator  begin_name proxy  end_name  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name java class  end_name  begin_operator  end_operator  begin_name is array  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name java class  end_name  begin_operator  end_operator  begin_name is primitive  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment see note below re 2 field kludge  end_comment  begin_expr_stmt  begin_expr  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name proxy class  end_name  end_name  begin_operator  end_operator  begin_name proxy  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name proxy module  end_name  end_name  begin_operator  end_operator  begin_name proxy  end_name  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name install class fields  end_name  begin_argument_list  begin_argument  begin_expr  begin_name proxy  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name install class methods  end_name  begin_argument_list  begin_argument  begin_expr  begin_name proxy  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name install class constructors  end_name  begin_argument_list  begin_argument  begin_expr  begin_name proxy  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name install class constants  end_name  begin_argument_list  begin_argument  begin_expr  begin_name java class  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name proxy  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment fixme bit of a kludge here non interface classes assigned to both  end_comment  begin_comment class and module fields simplifies proxy extender code will go away  end_comment  begin_comment when ji is overhauled and proxy extenders are deprecated  end_comment  begin_expr_stmt  begin_expr  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name proxy class  end_name  end_name  begin_operator  end_operator  begin_name proxy  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name proxy module  end_name  end_name  begin_operator  end_operator  begin_name proxy  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name apply proxy extenders  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo we can probably release our references to the constant fields  end_comment  begin_comment array and static instance callback hashes at this point  end_comment  end_block 
 begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name add unassigned alias  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name map  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  begin_argument  begin_name assigned name  end_name  end_argument  end_argument_list  end_name  end_type  begin_name assigned names  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name method installer  end_name  end_type  begin_name installer  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_return  end_return  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name assigned name  end_name  end_type  begin_name assigned name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name assigned names  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo missing additional logic for dealing with conflicting protected fields  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name priority  end_name  begin_operator  end_operator  begin_name alias  end_name  begin_operator  end_operator  begin_name more important than  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name assigned name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name installer  end_name  begin_operator  end_operator  begin_name add alias  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name assigned names  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name assigned name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name priority  end_name  begin_operator  end_operator  begin_name alias  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name priority  end_name  begin_operator  end_operator  begin_name alias  end_name  begin_operator  end_operator  begin_name as important as  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name assigned name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name installer  end_name  begin_operator  end_operator  begin_name add alias  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name setup class methods  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name java class  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name map  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  begin_argument  begin_name assigned name  end_name  end_argument  end_argument_list  end_name  end_type  begin_name static names  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name map  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  begin_argument  begin_name named installer  end_name  end_argument  end_argument_list  end_name  end_type  begin_name static callbacks  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name map  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  begin_argument  begin_name assigned name  end_name  end_argument  end_argument_list  end_name  end_type  begin_name instance names  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name map  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  begin_argument  begin_name named installer  end_name  end_argument  end_argument_list  end_name  end_type  begin_name instance callbacks  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo protected methods this is going to require a rework of some of the mechanism  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name method  end_name  begin_index  end_index  end_type  begin_name methods  end_name  begin_init  begin_expr  begin_call  begin_name get methods  end_name  begin_argument_list  begin_argument  begin_expr  begin_name java class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  begin_name  begin_name methods  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_operator  end_operator  begin_name i  end_name  begin_operator  end_operator  end_expr  end_condition  begin_incr  end_incr  begin_block  begin_comment we need to collect all methods though we ll only  end_comment  begin_comment install the ones that are named in this class  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name method  end_name  end_type  begin_name method  end_name  begin_init  begin_expr  begin_name  begin_name methods  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name modifier  end_name  begin_operator  end_operator  begin_name is static  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name get modifiers  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment install direct java methods with mangled name so send can call them directly  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name install static methods  end_name  begin_argument_list  begin_argument  begin_expr  begin_name static callbacks  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name java class  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  begin_name method mangle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name assigned name  end_name  end_type  begin_name assigned name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name static names  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name assigned name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name static names  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name assigned name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name priority  end_name  begin_operator  end_operator  begin_name method  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name priority  end_name  begin_operator  end_operator  begin_name method  end_name  begin_operator  end_operator  begin_name less important than  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name assigned name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_continue  end_continue  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name priority  end_name  begin_operator  end_operator  begin_name method  end_name  begin_operator  end_operator  begin_name as important as  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name assigned name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name static callbacks  end_name  begin_operator  end_operator  begin_name remove  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name static callbacks  end_name  begin_operator  end_operator  begin_name remove  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name static names  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name assigned name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name priority  end_name  begin_operator  end_operator  begin_name method  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name install static methods  end_name  begin_argument_list  begin_argument  begin_expr  begin_name static callbacks  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name java class  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_comment install direct java methods with mangled name so send can call them directly  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name install instance methods  end_name  begin_argument_list  begin_argument  begin_expr  begin_name instance callbacks  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name java class  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  begin_name method mangle  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name assigned name  end_name  end_type  begin_name assigned name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name instance names  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name assigned name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name instance names  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name assigned name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name priority  end_name  begin_operator  end_operator  begin_name method  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name priority  end_name  begin_operator  end_operator  begin_name method  end_name  begin_operator  end_operator  begin_name less important than  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name assigned name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_continue  end_continue  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name priority  end_name  begin_operator  end_operator  begin_name method  end_name  begin_operator  end_operator  begin_name as important as  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name assigned name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name instance callbacks  end_name  begin_operator  end_operator  begin_name remove  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name instance callbacks  end_name  begin_operator  end_operator  begin_name remove  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name instance names  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name assigned name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name priority  end_name  begin_operator  end_operator  begin_name method  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name install instance methods  end_name  begin_argument_list  begin_argument  begin_expr  begin_name instance callbacks  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name java class  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_for  begin_comment now iterate over all installers and make sure they also have appropriate aliases  end_comment  begin_for  begin_init  begin_decl  begin_type  begin_name  begin_name map  end_name  begin_operator  end_operator  begin_name  begin_name entry  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  begin_argument  begin_name named installer  end_name  end_argument  end_argument_list  end_name  end_name  end_type  begin_name entry  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name static callbacks  end_name  begin_operator  end_operator  begin_name entry set  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name entry  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name  begin_name named installer  end_name  begin_operator  end_operator  begin_name static method  end_name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name entry  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name has local method  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name assign aliases  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name method installer  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name entry  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name static names  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  begin_for  begin_init  begin_decl  begin_type  begin_name  begin_name map  end_name  begin_operator  end_operator  begin_name  begin_name entry  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  begin_argument  begin_name named installer  end_name  end_argument  end_argument_list  end_name  end_name  end_type  begin_name entry  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name instance callbacks  end_name  begin_operator  end_operator  begin_name entry set  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name entry  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name  begin_name named installer  end_name  begin_operator  end_operator  begin_name instance method  end_name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name entry  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name has local method  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name assign aliases  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name method installer  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name entry  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name instance names  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  end_block 
 begin_specifier  end_specifier  begin_name java class  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  end_type  begin_name java class  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name super  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name ruby class  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get java support  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get java class class  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name java class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name java class  end_name  begin_operator  end_operator  begin_name is interface  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name initialize interface  end_name  begin_argument_list  begin_argument  begin_expr  begin_name java class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name java class  end_name  begin_operator  end_operator  begin_name is array  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name java class  end_name  begin_operator  end_operator  begin_name is primitive  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment todo public only  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name initialize class  end_name  begin_argument_list  begin_argument  begin_expr  begin_name java class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_block 
 begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name java object set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name recv  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name obj  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment xxx check if it s appropriate type  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name recv  end_name  begin_operator  end_operator  begin_name data wrap struct  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name obj  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name obj  end_name  end_expr  end_return  end_block 
begin_comment fixme this doesn t actually support anything but string end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name coerce string to type  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby string  end_name  end_type  begin_name string  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name class  end_name  end_type  begin_name target  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_try  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name byte list  end_name  end_type  begin_name bytes  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name string  end_name  begin_operator  end_operator  begin_name get byte list  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment 1 9 support for encodings  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name string  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is 1 9  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name string  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name bytes  end_name  begin_operator  end_operator  begin_name unsafe bytes  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name bytes  end_name  begin_operator  end_operator  begin_name begin  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name bytes  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name string  end_name  begin_operator  end_operator  begin_name get encoding  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to string  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name string  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name bytes  end_name  begin_operator  end_operator  begin_name unsafe bytes  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name bytes  end_name  begin_operator  end_operator  begin_name begin  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name bytes  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name unsupported encoding exception  end_name  end_type  begin_name uee  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name string  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_catch  end_try  end_block 
 begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name frame  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name rest  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_name ruby object  end_name  end_type  begin_name new instance 2  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  end_type  begin_name args  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name block  end_name  end_type  begin_name unused block  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name arity  end_name  begin_operator  end_operator  begin_name check argument count  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name self  end_name  begin_init  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name ruby  end_name  end_type  begin_name runtime  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name self  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name ruby array  end_name  end_type  begin_name constructor args  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name ruby array  end_name  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  begin_index  end_index  end_type  begin_name parameter types  end_name  begin_init  begin_expr  begin_call  begin_name get parameter types  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name count  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name int  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name constructor args  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get long value  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  begin_index  end_index  end_type  begin_name converted  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name object  end_name  begin_index  begin_expr  begin_name count  end_name  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name count  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_comment todo call ruby method  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name ith  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name constructor args  end_name  begin_operator  end_operator  begin_name aref  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new fixnum  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name converted  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ith  end_name  begin_operator  end_operator  begin_name to java  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name parameter types  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_decl_stmt  begin_decl  begin_type  begin_name java proxy invocation handler  end_name  end_type  begin_name handler  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name java proxy invocation handler  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name get orig  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  begin_name self  end_name  end_expr  end_return  end_block  end_function  begin_function  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name invoke  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name proxy  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name java proxy method  end_name  end_type  begin_name m  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name object  end_name  begin_index  end_index  end_name  end_type  begin_name nargs  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name throwable  end_name  end_expr  end_argument  end_throws  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name m  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name dynamic method  end_name  end_type  begin_name method  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name self  end_name  begin_operator  end_operator  begin_name get meta class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name search method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name v  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name get arity  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get value  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  begin_index  end_index  end_type  begin_name new args  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name i ruby object  end_name  begin_index  begin_expr  begin_name  begin_name nargs  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  begin_name  begin_name nargs  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_operator  end_operator  begin_name i  end_name  begin_operator  end_operator  end_expr  end_condition  begin_incr  end_incr  begin_block  begin_expr_stmt  begin_expr  begin_name  begin_name new args  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name java util  end_name  begin_operator  end_operator  begin_name convert java to usable ruby object  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name nargs  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_if  begin_condition  begin_expr  begin_name v  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name v  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name new args  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name runtime helpers  end_name  begin_operator  end_operator  begin_name invoke  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get current context  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name new args  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to java  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name m  end_name  begin_operator  end_operator  begin_name get return type  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby class  end_name  end_type  begin_name super class  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name self  end_name  begin_operator  end_operator  begin_name get meta class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get super class  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_call  begin_name  begin_name runtime helpers  end_name  begin_operator  end_operator  begin_name invoke as  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get current context  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name super class  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name new args  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name null block  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to java  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name m  end_name  begin_operator  end_operator  begin_name get return type  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_else  end_if  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name java object  end_name  begin_operator  end_operator  begin_name wrap  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name new instance  end_name  begin_argument_list  begin_argument  begin_expr  begin_name converted  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name handler  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name raise exception  end_name  end_type  begin_name ex  end_name  begin_init  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new argument error  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name get message  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ex  end_name  begin_operator  end_operator  begin_name init cause  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_throw  begin_expr  begin_name ex  end_name  end_expr  end_throw  end_block  end_catch  end_try  end_block 
 begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name required  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name optional  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name frame  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_name ruby object  end_name  end_type  begin_name new instance  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  end_type  begin_name args  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name block  end_name  end_type  begin_name block  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name size  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name arity  end_name  begin_operator  end_operator  begin_name check argument count  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name ruby proc  end_name  end_type  begin_name proc  end_name  end_decl  end_decl_stmt  begin_comment is there a supplied proc argument or do we assume a block was  end_comment  begin_comment supplied  end_comment  begin_if  begin_condition  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_name size  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_name ruby proc  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name proc  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name ruby proc  end_name  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_name size  end_name  end_expr  end_index  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name proc  end_name  begin_operator  end_operator  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new proc  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name proc  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name block  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name size  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name ruby array  end_name  end_type  begin_name constructor args  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name ruby array  end_name  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name class  end_name  begin_argument_list  begin_argument  begin_name   end_name  end_argument  end_argument_list  end_name  begin_index  end_index  end_type  begin_name parameter types  end_name  begin_init  begin_expr  begin_call  begin_name get parameter types  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name count  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name int  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name constructor args  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get long value  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  begin_index  end_index  end_type  begin_name converted  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name object  end_name  begin_index  begin_expr  begin_name count  end_name  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name count  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_comment todo call ruby method  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name ith  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name constructor args  end_name  begin_operator  end_operator  begin_name aref  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new fixnum  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name converted  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ith  end_name  begin_operator  end_operator  begin_name to java  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name parameter types  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name recv  end_name  begin_init  begin_expr  begin_name this  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name java proxy invocation handler  end_name  end_type  begin_name handler  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name java proxy invocation handler  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name get orig  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_function  begin_function  begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name invoke  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name proxy  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name java proxy method  end_name  end_type  begin_name method  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name object  end_name  begin_index  end_index  end_name  end_type  begin_name nargs  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name throwable  end_name  end_expr  end_argument  end_throws  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name length  end_name  begin_init  begin_expr  begin_name nargs  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name nargs  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  begin_index  end_index  end_type  begin_name ruby args  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name i ruby object  end_name  begin_index  begin_expr  begin_name length  end_name  begin_operator  end_operator  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name ruby args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name java object  end_name  begin_operator  end_operator  begin_name wrap  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name recv  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name proxy  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name ruby args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_name method  end_name  end_expr  end_expr_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name length  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_expr_stmt  begin_expr  begin_name  begin_name ruby args  end_name  begin_index  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name java util  end_name  begin_operator  end_operator  begin_name convert java to ruby  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name nargs  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name call result  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name proc  end_name  begin_operator  end_operator  begin_name call  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get current context  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name ruby args  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name converted result  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name call result  end_name  begin_operator  end_operator  begin_name to java  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name get return type  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_name converted result  end_name  end_expr  end_return  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name result  end_name  end_decl  end_decl_stmt  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_name result  end_name  begin_operator  end_operator  begin_call  begin_name new instance  end_name  begin_argument_list  begin_argument  begin_expr  begin_name converted  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name handler  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name raise exception  end_name  end_type  begin_name ex  end_name  begin_init  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new argument error  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name get message  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ex  end_name  begin_operator  end_operator  begin_name init cause  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_throw  begin_expr  begin_name ex  end_name  end_expr  end_throw  end_block  end_catch  end_try  begin_return  begin_expr  begin_call  begin_name  begin_name java object  end_name  begin_operator  end_operator  begin_name wrap  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name result  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment todo only used by interface implementation eliminate it end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name invoke method missing  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name receiver  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  end_type  begin_name args  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name receiver  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get current context  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment store call information so method missing impl can use it  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name set last call status and visibility  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name call type  end_name  begin_operator  end_operator  begin_name functional  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name visibility  end_name  begin_operator  end_operator  begin_name public  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name ruby kernel  end_name  begin_operator  end_operator  begin_name method missing  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name receiver  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name null block  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  begin_index  end_index  end_type  begin_name new args  end_name  begin_init  begin_expr  begin_call  begin_name prepare method missing args  end_name  begin_argument_list  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_call  begin_name invoke  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name receiver  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name new args  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name null block  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name declare class variable  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name value  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment fixme this isn t quite right it shouldn t evaluate the value if it s going to throw the error  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name ruby class  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ast interpreter  end_name  begin_operator  end_operator  begin_name get class variable base  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name ruby class  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new type error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ruby class  end_name  begin_operator  end_operator  begin_name set class var  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name value  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name fast declare class variable  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name interned name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name value  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment fixme this isn t quite right it shouldn t evaluate the value if it s going to throw the error  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name ruby class  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ast interpreter  end_name  begin_operator  end_operator  begin_name get class variable base  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name ruby class  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new type error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ruby class  end_name  begin_operator  end_operator  begin_name fast set class var  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name interned name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name value  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name block  end_name  end_type  begin_name get block from proc  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name block  end_name  end_type  begin_name current block  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name proc  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo add safety check for taintedness  end_comment  begin_if  begin_condition  begin_expr  begin_name current block  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name current block  end_name  begin_operator  end_operator  begin_name is given  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby proc  end_name  end_type  begin_name proc object  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name current block  end_name  begin_operator  end_operator  begin_name get proc object  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment the current block is already associated with proc no need to create a new one  end_comment  begin_if  begin_condition  begin_expr  begin_name proc object  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name proc object  end_name  begin_operator  end_operator  begin_name proc  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name current block  end_name  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name ruby proc  end_name  begin_operator  end_operator  begin_name proc  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get block  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name ruby module  end_name  end_type  begin_name find implementer if necessary  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name clazz  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name implementation class  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name implementation class  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name implementation class  end_name  begin_operator  end_operator  begin_name needs implementer  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment modules are included with a shim class we must find that shim to handle super appropriately  end_comment  begin_return  begin_expr  begin_call  begin_name  begin_name clazz  end_name  begin_operator  end_operator  begin_name find implementer  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name implementation class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_comment classes are directly in the hierarchy so no special logic is necessary for implementer  end_comment  begin_return  begin_expr  begin_name implementation class  end_name  end_expr  end_return  end_block  end_else  end_if  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name unread  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name c  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name c  end_name  begin_operator  end_operator  begin_name  begin_name ruby yacc lexer  end_name  begin_operator  end_operator  begin_name eof  end_name  end_name  end_expr  end_condition  begin_then  begin_return  end_return  end_then  end_if  begin_expr_stmt  begin_expr  begin_name index  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name c  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_name line  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_then  end_if  begin_comment fixme r logic needed  end_comment  end_block 
begin_comment fixme r logic needed end_comment begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name unread many  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name char sequence  end_name  end_type  begin_name line  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name length  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name line  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name index  end_name  begin_operator  end_operator  begin_name length  end_name  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name here document identifier  end_name  begin_parameter_list  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name io exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name c  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name src  end_name  begin_operator  end_operator  begin_name read  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name term  end_name  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name func  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name c  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name c  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name src  end_name  begin_operator  end_operator  begin_name read  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name func  end_name  begin_operator  end_operator  begin_name str func indent  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name byte list  end_name  end_type  begin_name marker value  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name c  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name c  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name c  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name c  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name func  end_name  begin_operator  end_operator  begin_name str squote  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name c  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name func  end_name  begin_operator  end_operator  begin_name str dquote  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name func  end_name  begin_operator  end_operator  begin_name str xquote  end_name  end_expr  end_expr_stmt  end_block  end_else  end_if  end_else  end_if  begin_expr_stmt  begin_expr  begin_name marker value  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name byte list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name term  end_name  begin_operator  end_operator  begin_name c  end_name  end_expr  end_expr_stmt  begin_while  begin_condition  begin_expr  begin_operator  end_operator  begin_name c  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name src  end_name  begin_operator  end_operator  begin_name read  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_name eof  end_name  begin_operator  end_operator  begin_name c  end_name  begin_operator  end_operator  begin_name term  end_name  end_expr  end_condition  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name marker value  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_while  begin_if  begin_condition  begin_expr  begin_name c  end_name  begin_operator  end_operator  begin_name eof  end_name  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name syntax exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name pid  end_name  begin_operator  end_operator  begin_name string marker missing  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get position  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get current line  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  end_block  end_then  begin_else  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name is identifier char  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name src  end_name  begin_operator  end_operator  begin_name unread  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name func  end_name  begin_operator  end_operator  begin_name str func indent  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name src  end_name  begin_operator  end_operator  begin_name unread  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name marker value  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name byte list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name term  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name func  end_name  begin_operator  end_operator  begin_name str dquote  end_name  end_expr  end_expr_stmt  begin_do  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name marker value  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_condition  begin_expr  begin_operator  end_operator  begin_name c  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name src  end_name  begin_operator  end_operator  begin_name read  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_name eof  end_name  begin_operator  end_operator  begin_call  begin_name is identifier char  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  end_do  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name src  end_name  begin_operator  end_operator  begin_name unread  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name byte list  end_name  end_type  begin_name last line  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name src  end_name  begin_operator  end_operator  begin_name read line bytes  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name last line  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name lex strterm  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name heredoc term  end_name  begin_argument_list  begin_argument  begin_expr  begin_name marker value  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name func  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name last line  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name term  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name yacc value  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name token  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get position  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name  begin_name tokens  end_name  begin_operator  end_operator  begin_name t xstring beg  end_name  end_name  end_expr  end_return  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name yacc value  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name token  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get position  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment hacky advance position to eat newline here  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name get position  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name  begin_name tokens  end_name  begin_operator  end_operator  begin_name t string beg  end_name  end_name  end_expr  end_return  end_block 
begin_comment returns the next token also sets yy val is needed return description of the returned value end_comment begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name yylex  end_name  begin_parameter_list  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name io exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name c  end_name  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name space seen  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name command state  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name lex strterm  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name tok  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name lex strterm  end_name  begin_operator  end_operator  begin_name parse string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name src  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name tok  end_name  begin_operator  end_operator  begin_name  begin_name tokens  end_name  begin_operator  end_operator  begin_name t string end  end_name  end_name  begin_operator  end_operator  begin_name tok  end_name  begin_operator  end_operator  begin_name  begin_name tokens  end_name  begin_operator  end_operator  begin_name t regexp end  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name lex strterm  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name lex state  end_name  begin_operator  end_operator  begin_name  begin_name lex state  end_name  begin_operator  end_operator  begin_name expr end  end_name  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_name tok  end_name  end_expr  end_return  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name command state  end_name  begin_operator  end_operator  begin_name command start  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name command start  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_label  begin_name loop  end_name  end_label  begin_for  begin_init  end_init  begin_condition  end_condition  begin_incr  end_incr  begin_block  begin_expr_stmt  begin_expr  begin_name c  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name src  end_name  begin_operator  end_operator  begin_name read  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_switch  begin_condition  begin_expr  begin_name c  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  begin_comment nul  end_comment  end_case  begin_case  begin_expr  end_expr  begin_comment d  end_comment  end_case  begin_case  begin_expr  end_expr  begin_comment z  end_comment  end_case  begin_case  begin_expr  begin_name eof  end_name  end_expr  begin_comment end of script  end_comment  begin_return  begin_expr  begin_name eof  end_name  end_expr  end_return  begin_comment white spaces  end_comment  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_comment v  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name get position  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name space seen  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_continue  end_continue  end_case  begin_case  begin_expr  end_expr  begin_comment it s a comment  end_comment  begin_comment fixme need to detect magic comment in 1 9 here for encoding  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name read comment  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_name eof  end_name  end_expr  end_condition  begin_then  begin_return  begin_expr  begin_name eof  end_name  end_expr  end_return  end_then  end_if  begin_comment fall through  end_comment  end_case  begin_case  begin_expr  end_expr  begin_if  begin_condition  begin_expr  begin_name is one eight  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment replace a string of newlines with a single one  end_comment  begin_while  begin_condition  begin_expr  begin_operator  end_operator  begin_name c  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name src  end_name  begin_operator  end_operator  begin_name read  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_empty_stmt  end_empty_stmt  end_while  end_block  end_then  begin_else  begin_block  begin_switch  begin_condition  begin_expr  begin_name lex state  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  begin_name expr beg  end_name  end_expr  end_case  begin_case  begin_expr  begin_name expr fname  end_name  end_expr  end_case  begin_case  begin_expr  begin_name expr dot  end_name  end_expr  end_case  begin_case  begin_expr  begin_name expr class  end_name  end_expr  end_case  begin_case  begin_expr  begin_name expr value  end_name  end_expr  begin_continue  end_continue  end_case  end_block  end_switch  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name done  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_operator  end_operator  begin_name done  end_name  end_expr  end_condition  begin_block  begin_expr_stmt  begin_expr  begin_name c  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name src  end_name  begin_operator  end_operator  begin_name read  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_switch  begin_condition  begin_expr  begin_name c  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_comment v  end_comment  begin_expr_stmt  begin_expr  begin_name space seen  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_continue  end_continue  end_case  begin_case  begin_expr  end_expr  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name c  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name src  end_name  begin_operator  end_operator  begin_name read  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name src  end_name  begin_operator  end_operator  begin_name unread  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name src  end_name  begin_operator  end_operator  begin_name unread  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_continue  end_continue  end_block  end_then  end_if  end_block  end_case  begin_default  end_default  begin_case  begin_expr  begin_operator  end_operator  end_expr  begin_comment eof enebo after default  end_comment  begin_expr_stmt  begin_expr  begin_name done  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_case  end_block  end_switch  end_block  end_while  end_block  end_else  end_if  begin_if  begin_condition  begin_expr  begin_name c  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_return  begin_expr  begin_name eof  end_name  end_expr  end_return  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name src  end_name  begin_operator  end_operator  begin_name unread  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get position  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_switch  begin_condition  begin_expr  begin_name lex state  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  begin_name expr beg  end_name  end_expr  end_case  begin_case  begin_expr  begin_name expr fname  end_name  end_expr  end_case  begin_case  begin_expr  begin_name expr dot  end_name  end_expr  end_case  begin_case  begin_expr  begin_name expr class  end_name  end_expr  begin_continue  end_continue  end_case  end_block  end_switch  begin_expr_stmt  begin_expr  begin_name command start  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name lex state  end_name  begin_operator  end_operator  begin_name  begin_name lex state  end_name  begin_operator  end_operator  begin_name expr beg  end_name  end_name  end_expr  end_expr_stmt  begin_return  begin_expr  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_return  begin_expr  begin_call  begin_name star  end_name  begin_argument_list  begin_argument  begin_expr  begin_name space seen  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_return  begin_expr  begin_call  begin_name bang  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_comment documentation nodes  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name src  end_name  begin_operator  end_operator  begin_name was begin of line  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name src  end_name  begin_operator  end_operator  begin_name match marker  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name begin doc marker  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name c  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name src  end_name  begin_operator  end_operator  begin_name read  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name character  end_name  begin_operator  end_operator  begin_name is whitespace  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment in case last next was the newline  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name src  end_name  begin_operator  end_operator  begin_name unread  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_for  begin_init  end_init  begin_condition  end_condition  begin_incr  end_incr  begin_block  begin_expr_stmt  begin_expr  begin_name c  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name src  end_name  begin_operator  end_operator  begin_name read  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment if a line is followed by a blank line put  end_comment  begin_comment it back  end_comment  begin_while  begin_condition  begin_expr  begin_name c  end_name  begin_operator  end_operator  end_expr  end_condition  begin_block  begin_expr_stmt  begin_expr  begin_name c  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name src  end_name  begin_operator  end_operator  begin_name read  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_while  begin_if  begin_condition  begin_expr  begin_name c  end_name  begin_operator  end_operator  begin_name eof  end_name  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name syntax exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name pid  end_name  begin_operator  end_operator  begin_name string hits eof  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get position  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get current line  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name c  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_continue  end_continue  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name src  end_name  begin_operator  end_operator  begin_name was begin of line  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name src  end_name  begin_operator  end_operator  begin_name match marker  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name end doc marker  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name byte list  end_name  end_type  begin_name list  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name src  end_name  begin_operator  end_operator  begin_name read line bytes  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name src  end_name  begin_operator  end_operator  begin_name unread  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_then  end_if  end_block  end_for  begin_continue  end_continue  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name src  end_name  begin_operator  end_operator  begin_name unread  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name determine expression state  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name c  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name src  end_name  begin_operator  end_operator  begin_name read  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name c  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name c  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name src  end_name  begin_operator  end_operator  begin_name read  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name c  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name yacc value  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name token  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get position  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name  begin_name tokens  end_name  begin_operator  end_operator  begin_name t eqq  end_name  end_name  end_expr  end_return  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name src  end_name  begin_operator  end_operator  begin_name unread  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name yacc value  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name token  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get position  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name  begin_name tokens  end_name  begin_operator  end_operator  begin_name t eq  end_name  end_name  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name c  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name yacc value  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name token  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get position  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name  begin_name tokens  end_name  begin_operator  end_operator  begin_name t match  end_name  end_name  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name c  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name yacc value  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name token  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get position  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name  begin_name tokens  end_name  begin_operator  end_operator  begin_name t assoc  end_name  end_name  end_expr  end_return  end_block  end_then  end_if  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name src  end_name  begin_operator  end_operator  begin_name unread  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name yacc value  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name token  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get position  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_return  begin_expr  begin_call  begin_name less than  end_name  begin_argument_list  begin_argument  begin_expr  begin_name space seen  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_return  begin_expr  begin_call  begin_name greater than  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_return  begin_expr  begin_call  begin_name double quote  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_return  begin_expr  begin_call  begin_name backtick  end_name  begin_argument_list  begin_argument  begin_expr  begin_name command state  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_return  begin_expr  begin_call  begin_name single quote  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_return  begin_expr  begin_call  begin_name question mark  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_return  begin_expr  begin_call  begin_name ampersand  end_name  begin_argument_list  begin_argument  begin_expr  begin_name space seen  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_return  begin_expr  begin_call  begin_name pipe  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_return  begin_expr  begin_call  begin_name plus  end_name  begin_argument_list  begin_argument  begin_expr  begin_name space seen  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_return  begin_expr  begin_call  begin_name minus  end_name  begin_argument_list  begin_argument  begin_expr  begin_name space seen  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_return  begin_expr  begin_call  begin_name dot  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_return  begin_expr  begin_call  begin_name parse number  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_return  begin_expr  begin_call  begin_name right paren  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_return  begin_expr  begin_call  begin_name right bracket  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_return  begin_expr  begin_call  begin_name right curly  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_return  begin_expr  begin_call  begin_name colon  end_name  begin_argument_list  begin_argument  begin_expr  begin_name space seen  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_return  begin_expr  begin_call  begin_name slash  end_name  begin_argument_list  begin_argument  begin_expr  begin_name space seen  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_return  begin_expr  begin_call  begin_name caret  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name command start  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name is one eight  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name lex state  end_name  begin_operator  end_operator  begin_name  begin_name lex state  end_name  begin_operator  end_operator  begin_name expr beg  end_name  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name yacc value  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name token  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get position  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  end_case  begin_case  begin_expr  end_expr  begin_return  begin_expr  begin_call  begin_name comma  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_return  begin_expr  begin_call  begin_name tilde  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_return  begin_expr  begin_call  begin_name left paren  end_name  begin_argument_list  begin_argument  begin_expr  begin_name space seen  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_return  begin_expr  begin_call  begin_name left bracket  end_name  begin_argument_list  begin_argument  begin_expr  begin_name space seen  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_return  begin_expr  begin_call  begin_name left curly  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name c  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name src  end_name  begin_operator  end_operator  begin_name read  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name c  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name space seen  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_continue  end_continue  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name src  end_name  begin_operator  end_operator  begin_name unread  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name yacc value  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name token  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get position  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_return  begin_expr  begin_call  begin_name percent  end_name  begin_argument_list  begin_argument  begin_expr  begin_name space seen  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_return  begin_expr  begin_call  begin_name dollar  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_return  begin_expr  begin_call  begin_name at  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name src  end_name  begin_operator  end_operator  begin_name was begin of line  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name src  end_name  begin_operator  end_operator  begin_name match marker  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name end marker  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name parser support  end_name  begin_operator  end_operator  begin_name get result  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set end offset  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name src  end_name  begin_operator  end_operator  begin_name get offset  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name eof  end_name  end_expr  end_return  end_block  end_then  end_if  begin_return  begin_expr  begin_call  begin_name identifier  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name command state  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_case  begin_default  begin_return  begin_expr  begin_call  begin_name identifier  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name command state  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_default  end_block  end_switch  end_block  end_for  end_block 
 begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name question mark  end_name  begin_parameter_list  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name io exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name c  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name lex state  end_name  begin_operator  end_operator  begin_name  begin_name lex state  end_name  begin_operator  end_operator  begin_name expr end  end_name  end_name  begin_operator  end_operator  begin_name lex state  end_name  begin_operator  end_operator  begin_name  begin_name lex state  end_name  begin_operator  end_operator  begin_name expr endarg  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name lex state  end_name  begin_operator  end_operator  begin_name is one eight  end_name  begin_operator  end_operator  begin_name  begin_name lex state  end_name  begin_operator  end_operator  begin_name expr beg  end_name  end_name  begin_operator  end_operator  begin_name  begin_name lex state  end_name  begin_operator  end_operator  begin_name expr value  end_name  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name yacc value  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name token  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get position  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name c  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name src  end_name  begin_operator  end_operator  begin_name read  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name c  end_name  begin_operator  end_operator  begin_name eof  end_name  end_expr  end_condition  begin_then  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name syntax exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name pid  end_name  begin_operator  end_operator  begin_name incomplete char syntax  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get position  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get current line  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name character  end_name  begin_operator  end_operator  begin_name is whitespace  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name is arg  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name c 2  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_switch  begin_condition  begin_expr  begin_name c  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name c 2  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name c 2  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name c 2  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_break  end_break  begin_comment what is v in c case v c 2 v break  end_comment  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name c 2  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name c 2  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_break  end_break  end_case  end_block  end_switch  begin_if  begin_condition  begin_expr  begin_name c 2  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name warnings  end_name  begin_operator  end_operator  begin_name warn  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name id  end_name  begin_operator  end_operator  begin_name invalid char sequence  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get position  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name c 2  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name src  end_name  begin_operator  end_operator  begin_name unread  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name lex state  end_name  begin_operator  end_operator  begin_name is one eight  end_name  begin_operator  end_operator  begin_name  begin_name lex state  end_name  begin_operator  end_operator  begin_name expr beg  end_name  end_name  begin_operator  end_operator  begin_name  begin_name lex state  end_name  begin_operator  end_operator  begin_name expr value  end_name  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name yacc value  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name token  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get position  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  end_expr  end_return  begin_comment else if ismbchar c ruby we don t support them either rb warn multibyte character literal not supported yet use c support unread c lex state lex state expr beg return  end_comment  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name is identifier char  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name src  end_name  begin_operator  end_operator  begin_name peek  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is next identchar  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name src  end_name  begin_operator  end_operator  begin_name unread  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name lex state  end_name  begin_operator  end_operator  begin_name is one eight  end_name  begin_operator  end_operator  begin_name  begin_name lex state  end_name  begin_operator  end_operator  begin_name expr beg  end_name  end_name  begin_operator  end_operator  begin_name  begin_name lex state  end_name  begin_operator  end_operator  begin_name expr value  end_name  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name yacc value  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name token  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get position  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name c  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment fixme peek u utf 8 stuff for 1 9  end_comment  begin_expr_stmt  begin_expr  begin_name c  end_name  begin_operator  end_operator  begin_call  begin_name read escape  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_else  end_if  begin_expr_stmt  begin_expr  begin_name c  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name lex state  end_name  begin_operator  end_operator  begin_name  begin_name lex state  end_name  begin_operator  end_operator  begin_name expr end  end_name  end_name  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name is one eight  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name yacc value  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name fixnum node  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get position  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_comment todo this isn t handling multibyte yet  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name byte list  end_name  end_type  begin_name one char bl  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name byte list  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name one char bl  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name yacc value  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name str node  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get position  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name one char bl  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_comment todo this should be something else like a t char  end_comment  begin_return  begin_expr  begin_name  begin_name tokens  end_name  begin_operator  end_operator  begin_name t integer  end_name  end_name  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name rest  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name visibility  end_name  begin_operator  end_operator  begin_name private  end_name  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name initialize  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  end_type  begin_name args  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name block  end_name  end_type  begin_name block  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name block  end_name  end_name  begin_operator  end_operator  begin_name block  end_name  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name ruby  end_name  end_type  begin_name runtime  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name result  end_name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name runnable  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_class  begin_super  begin_name runnable  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name run  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_synchronized  begin_expr  begin_name yield lock  end_name  end_expr  begin_block  begin_expr_stmt  begin_expr  begin_name alive  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get current context  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name set fiber  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name fiber  end_name  begin_operator  end_operator  begin_name this  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_name result  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name fiber  end_name  begin_operator  end_operator  begin_name this  end_name  begin_operator  end_operator  begin_name block  end_name  begin_operator  end_operator  begin_name yield  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get current context  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name result  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_finally  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name yield lock  end_name  begin_operator  end_operator  begin_name notify  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_finally  end_try  end_block  end_synchronized  end_block  end_function  end_block  end_class  end_expr  end_expr_stmt  begin_comment fixme make thread pool threads daemons if necessary  end_comment  begin_return  begin_expr  begin_name this  end_name  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name rest  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name compat  end_name  begin_operator  end_operator  begin_name  begin_name compat version  end_name  begin_operator  end_operator  begin_name ruby 1 9  end_name  end_name  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name resume  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  end_type  begin_name args  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name interrupted exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_synchronized  begin_expr  begin_name yield lock  end_name  end_expr  begin_block  begin_comment fixme broken but behaving  end_comment  begin_if  begin_condition  begin_expr  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name result  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get nil  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name result  end_name  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name result  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new array no copy light  end_name  begin_argument_list  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_else  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name alive  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name executor  end_name  begin_operator  end_operator  begin_name execute  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runnable  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name yield lock  end_name  begin_operator  end_operator  begin_name wait  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name yield lock  end_name  begin_operator  end_operator  begin_name notify  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name yield lock  end_name  begin_operator  end_operator  begin_name wait  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_synchronized  begin_return  begin_expr  begin_name result  end_name  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name compat  end_name  begin_operator  end_operator  begin_name  begin_name compat version  end_name  begin_operator  end_operator  begin_name ruby 1 9  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name rest  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name meta  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name yield  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name recv  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  end_type  begin_name args  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name interrupted exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name fiber  end_name  end_type  begin_name fiber  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get fiber  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment fixme broken but behaving  end_comment  begin_if  begin_condition  begin_expr  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name  begin_name fiber  end_name  begin_operator  end_operator  begin_name result  end_name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get nil  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name  begin_name fiber  end_name  begin_operator  end_operator  begin_name result  end_name  end_name  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name  begin_name fiber  end_name  begin_operator  end_operator  begin_name result  end_name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new array no copy light  end_name  begin_argument_list  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_else  end_if  begin_synchronized  begin_expr  begin_name  begin_name fiber  end_name  begin_operator  end_operator  begin_name yield lock  end_name  end_name  end_expr  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name fiber  end_name  begin_operator  end_operator  begin_name yield lock  end_name  begin_operator  end_operator  begin_name notify  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name fiber  end_name  begin_operator  end_operator  begin_name yield lock  end_name  begin_operator  end_operator  begin_name wait  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_synchronized  begin_return  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get nil  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment todo note lack of command com support for win 9 x end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name jruby shell  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name get property  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name platform  end_name  begin_operator  end_operator  begin_name is windows  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name replace  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name case 316 line 1193  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name yy val  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name object  end_name  begin_index  end_index  end_name  end_type  begin_name yy vals  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name yy top  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo we should use implicit nil for body but problem punt til later  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name body  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_name  begin_name yy vals  end_name  begin_index  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name yy top  end_name  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_comment 8 null nil implicit node nil 8  end_comment  begin_expr_stmt  begin_expr  begin_name yy val  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name defs node  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get position  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name token  end_name  begin_operator  end_operator  begin_name  begin_name yy vals  end_name  begin_index  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name yy top  end_name  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_name  begin_name yy vals  end_name  begin_index  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name yy top  end_name  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name argument node  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name token  end_name  begin_operator  end_operator  begin_name  begin_name yy vals  end_name  begin_index  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name yy top  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get position  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name string  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name token  end_name  begin_operator  end_operator  begin_name  begin_name yy vals  end_name  begin_index  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name yy top  end_name  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get value  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name args node  end_name  begin_operator  end_operator  begin_name  begin_name yy vals  end_name  begin_index  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name yy top  end_name  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name support  end_name  begin_operator  end_operator  begin_name get current scope  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name body  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name support  end_name  begin_operator  end_operator  begin_name pop current scope  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name support  end_name  begin_operator  end_operator  begin_name set in single  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name support  end_name  begin_operator  end_operator  begin_name get in single  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name yy val  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name case 313 line 1178  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name yy val  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name object  end_name  begin_index  end_index  end_name  end_type  begin_name yy vals  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name yy top  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo we should use implicit nil for body but problem punt til later  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name body  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_name  begin_name yy vals  end_name  begin_index  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name yy top  end_name  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_comment 5 null nil implicit node nil 5  end_comment  begin_comment noex private for toplevel  end_comment  begin_expr_stmt  begin_expr  begin_name yy val  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name defn node  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get position  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name token  end_name  begin_operator  end_operator  begin_name  begin_name yy vals  end_name  begin_index  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name yy top  end_name  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name argument node  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name token  end_name  begin_operator  end_operator  begin_name  begin_name yy vals  end_name  begin_index  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name yy top  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get position  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name string  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name token  end_name  begin_operator  end_operator  begin_name  begin_name yy vals  end_name  begin_index  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name yy top  end_name  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get value  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name args node  end_name  begin_operator  end_operator  begin_name  begin_name yy vals  end_name  begin_index  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name yy top  end_name  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name support  end_name  begin_operator  end_operator  begin_name get current scope  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name body  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name support  end_name  begin_operator  end_operator  begin_name pop current scope  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name support  end_name  begin_operator  end_operator  begin_name set in def  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name yy val  end_name  end_expr  end_return  end_block 
begin_comment fixme remove this from grammars end_comment begin_type  begin_specifier  end_specifier  begin_name i source position  end_name  end_type  begin_name create empty args node position  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name i source position  end_name  end_type  begin_name pos  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_name pos  end_name  end_expr  end_return  end_block 
begin_comment enebo totally weird naming in mri is not allocated and is a local var name end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is local id  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name token  end_name  end_type  begin_name identifier  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name string  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name identifier  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_call  begin_name get current scope  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get local scope  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is defined  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name case 306 line 1182  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name yy val  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name object  end_name  begin_index  end_index  end_name  end_type  begin_name yy vals  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name yy top  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo we should use implicit nil for body but problem punt til later  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name body  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_name  begin_name yy vals  end_name  begin_index  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name yy top  end_name  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_comment 5 null nil implicit node nil 5  end_comment  begin_expr_stmt  begin_expr  begin_name yy val  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name defn node  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get position  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name token  end_name  begin_operator  end_operator  begin_name  begin_name yy vals  end_name  begin_index  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name yy top  end_name  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name argument node  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name token  end_name  begin_operator  end_operator  begin_name  begin_name yy vals  end_name  begin_index  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name yy top  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get position  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name string  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name token  end_name  begin_operator  end_operator  begin_name  begin_name yy vals  end_name  begin_index  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name yy top  end_name  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get value  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name args node  end_name  begin_operator  end_operator  begin_name  begin_name yy vals  end_name  begin_index  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name yy top  end_name  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name support  end_name  begin_operator  end_operator  begin_name get current scope  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name body  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name support  end_name  begin_operator  end_operator  begin_name pop current scope  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name support  end_name  begin_operator  end_operator  begin_name set in def  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name yy val  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name case 309 line 1196  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name yy val  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name object  end_name  begin_index  end_index  end_name  end_type  begin_name yy vals  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name yy top  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo we should use implicit nil for body but problem punt til later  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name node  end_name  end_type  begin_name body  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_name  begin_name yy vals  end_name  begin_index  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name yy top  end_name  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_comment 8 null nil implicit node nil 8  end_comment  begin_expr_stmt  begin_expr  begin_name yy val  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name defs node  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get position  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name token  end_name  begin_operator  end_operator  begin_name  begin_name yy vals  end_name  begin_index  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name yy top  end_name  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name node  end_name  begin_operator  end_operator  begin_name  begin_name yy vals  end_name  begin_index  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name yy top  end_name  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name argument node  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name token  end_name  begin_operator  end_operator  begin_name  begin_name yy vals  end_name  begin_index  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name yy top  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get position  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name string  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name token  end_name  begin_operator  end_operator  begin_name  begin_name yy vals  end_name  begin_index  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name yy top  end_name  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get value  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name args node  end_name  begin_operator  end_operator  begin_name  begin_name yy vals  end_name  begin_index  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name yy top  end_name  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name support  end_name  begin_operator  end_operator  begin_name get current scope  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name body  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name support  end_name  begin_operator  end_operator  begin_name pop current scope  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name support  end_name  begin_operator  end_operator  begin_name set in single  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name support  end_name  begin_operator  end_operator  begin_name get in single  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name yy val  end_name  end_expr  end_return  end_block 
begin_comment add a new variable to this current scope unless it is already defined in the current scope param name of new variable return index depth merged location of scope end_comment begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name add variable this scope  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name slot  end_name  begin_init  begin_expr  begin_call  begin_name exists  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name slot  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_return  begin_expr  begin_name slot  end_name  end_expr  end_return  end_then  end_if  begin_comment this is perhaps innefficient timewise optimal spacewise  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name grow variable names  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment returns slot of variable  end_comment  begin_return  begin_expr  begin_name  begin_name variable names  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  end_expr  end_return  end_block 
begin_comment add a new variable to this current scope unless it is already defined in any reachable scope param name of new variable return index depth merged location of scope end_comment begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name add variable  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name slot  end_name  begin_init  begin_expr  begin_call  begin_name is defined  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name slot  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_return  begin_expr  begin_name slot  end_name  end_expr  end_return  end_then  end_if  begin_comment this is perhaps innefficient timewise optimal spacewise  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name grow variable names  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment returns slot of variable  end_comment  begin_return  begin_expr  begin_name  begin_name variable names  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name j ruby class loader  end_name  end_type  begin_name get j ruby class loader  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment fixme get rid of laziness and handle restricted access elsewhere  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name ruby  end_name  begin_operator  end_operator  begin_name is security restricted  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name jruby class loader  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name jruby class loader  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name j ruby class loader  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name config  end_name  begin_operator  end_operator  begin_name get loader  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_name jruby class loader  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name print stream  end_name  end_type  begin_name get error stream  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment fixme we can t guarantee this will always be a ruby io so the old code here is not safe  end_comment  begin_comment java io output stream os ruby io get global variables get stderr get out stream if null os return new print stream os else return new print stream new org jruby util swallowing output stream  end_comment  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name print stream  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name io output stream  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get global variables  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name raise exception  end_name  end_type  begin_name new frozen error  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name object type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo should frozen error have its own distinct class if not should more share  end_comment  begin_return  begin_expr  begin_call  begin_name new raise exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name is 1 9  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get runtime error  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get type error  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name object type  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name raise exception  end_name  end_type  begin_name new io error from exception  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name io exception  end_name  end_type  begin_name ioe  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo this is kinda gross  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name ioe  end_name  begin_operator  end_operator  begin_name get message  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name ioe  end_name  begin_operator  end_operator  begin_name get message  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_call  begin_name new errno epipe error  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name ioe  end_name  begin_operator  end_operator  begin_name get message  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_call  begin_name new errno econnreset error  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  end_else  end_if  begin_return  begin_expr  begin_call  begin_name new raise exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get io error  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name ioe  end_name  begin_operator  end_operator  begin_name get message  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_return  begin_expr  begin_call  begin_name new raise exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get io error  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_else  end_if  end_block 
begin_comment rb ary dup end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name ruby array  end_name  end_type  begin_name ary dup  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby array  end_name  end_type  begin_name dup  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name ruby array  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get meta class  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name dup  end_name  begin_operator  end_operator  begin_name flags  end_name  end_name  begin_operator  end_operator  begin_name flags  end_name  begin_operator  end_operator  begin_name tainted f  end_name  end_expr  end_expr_stmt  begin_comment from dup setup  end_comment  begin_expr_stmt  begin_expr  begin_name  begin_name dup  end_name  begin_operator  end_operator  begin_name flags  end_name  end_name  begin_operator  end_operator  begin_name flags  end_name  begin_operator  end_operator  begin_name untrusted f  end_name  end_expr  end_expr_stmt  begin_comment rb copy generic ivar from dup setup here unlikely  end_comment  begin_return  begin_expr  begin_name dup  end_name  end_expr  end_return  end_block 
begin_comment rb ary push m fixme whis is this named push m end_comment begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name rest  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name compat  end_name  begin_operator  end_operator  begin_name  begin_name compat version  end_name  begin_operator  end_operator  begin_name ruby 1 8  end_name  end_name  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_name ruby array  end_name  end_type  begin_name push m  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  end_type  begin_name items  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name  begin_name items  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name append  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name items  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_return  begin_expr  begin_name this  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name ruby boolean  end_name  end_type  begin_name compare  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name method  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name other  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name set  end_name  begin_argument_list  begin_argument  begin_name  begin_name recursive comparator  end_name  begin_operator  end_operator  begin_name pair  end_name  end_name  end_argument  end_argument_list  end_name  end_type  begin_name seen  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name other  end_name  begin_operator  end_operator  begin_name ruby array  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get false  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name ruby array  end_name  end_type  begin_name ary  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name ruby array  end_name  begin_operator  end_operator  begin_name other  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name real length  end_name  begin_operator  end_operator  begin_name  begin_name ary  end_name  begin_operator  end_operator  begin_name real length  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get false  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name real length  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name recursive comparator  end_name  begin_operator  end_operator  begin_name compare  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name elt  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name ary  end_name  begin_operator  end_operator  begin_name elt  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name seen  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is true  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get false  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_for  begin_return  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get true  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment rb ary reverse m end_comment begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name reverse  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name modify  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name ruby array  end_name  end_type  begin_name dup  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name real length  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name dup  end_name  begin_operator  end_operator  begin_call  begin_name safe reverse  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name dup  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name ruby array  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get meta class  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_name  begin_name dup  end_name  begin_operator  end_operator  begin_name flags  end_name  end_name  begin_operator  end_operator  begin_name flags  end_name  begin_operator  end_operator  begin_name tainted f  end_name  end_expr  end_expr_stmt  begin_comment from dup setup  end_comment  begin_comment rb copy generic ivar from dup setup here unlikely  end_comment  begin_return  begin_expr  begin_name dup  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name sort internal  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name qsort  end_name  begin_operator  end_operator  begin_name sort  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name values  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name begin  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name begin  end_name  begin_operator  end_operator  begin_name real length  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name comparator  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name compare  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o 1  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o 2  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name o 1  end_name  begin_operator  end_operator  begin_name ruby fixnum  end_name  begin_operator  end_operator  begin_name o 2  end_name  begin_operator  end_operator  begin_name ruby fixnum  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name compare fixnums  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name ruby fixnum  end_name  begin_operator  end_operator  begin_name o 1  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name ruby fixnum  end_name  begin_operator  end_operator  begin_name o 2  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name o 1  end_name  begin_operator  end_operator  begin_name ruby string  end_name  begin_operator  end_operator  begin_name o 2  end_name  begin_operator  end_operator  begin_name ruby string  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name ruby string  end_name  begin_operator  end_operator  begin_name o 1  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name op cmp  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name ruby string  end_name  begin_operator  end_operator  begin_name o 2  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_return  begin_expr  begin_call  begin_name compare others  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name i ruby object  end_name  begin_operator  end_operator  begin_name o 1  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name i ruby object  end_name  begin_operator  end_operator  begin_name o 2  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_function  end_block  end_class  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name this  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name compare  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o 1  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o 2  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name o 1  end_name  begin_operator  end_operator  begin_name ruby fixnum  end_name  begin_operator  end_operator  begin_name o 2  end_name  begin_operator  end_operator  begin_name ruby fixnum  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name compare fixnums  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name ruby fixnum  end_name  begin_operator  end_operator  begin_name o 1  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name ruby fixnum  end_name  begin_operator  end_operator  begin_name o 2  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name o 1  end_name  begin_operator  end_operator  begin_name ruby string  end_name  begin_operator  end_operator  begin_name o 2  end_name  begin_operator  end_operator  begin_name ruby string  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name ruby string  end_name  begin_operator  end_operator  begin_name o 1  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name op cmp  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name ruby string  end_name  begin_operator  end_operator  begin_name o 2  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_return  begin_expr  begin_call  begin_name compare others  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name i ruby object  end_name  begin_operator  end_operator  begin_name o 1  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name i ruby object  end_name  begin_operator  end_operator  begin_name o 2  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name compare others  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name o 1  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name o 2  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name ret  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name o 1  end_name  begin_operator  end_operator  begin_name call method  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name o 2  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name n  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ruby comparable  end_name  begin_operator  end_operator  begin_name cmpint  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name ret  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name o 1  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name o 2  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo ary sort check should be done here  end_comment  begin_return  begin_expr  begin_name n  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name sort internal  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name block  end_name  end_type  begin_name block  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name qsort  end_name  begin_operator  end_operator  begin_name sort  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name values  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name begin  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name begin  end_name  begin_operator  end_operator  begin_name real length  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name comparator  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name compare  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o 1  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o 2  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name obj 1  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name i ruby object  end_name  begin_operator  end_operator  begin_name o 1  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name obj 2  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name i ruby object  end_name  begin_operator  end_operator  begin_name o 2  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name ret  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name yield  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new array  end_name  begin_argument_list  begin_argument  begin_expr  begin_name obj 1  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name obj 2  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo ary sort check should be done here  end_comment  begin_return  begin_expr  begin_call  begin_name  begin_name ruby comparable  end_name  begin_operator  end_operator  begin_name cmpint  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name ret  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name obj 1  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name obj 2  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_function  end_block  end_class  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name this  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name compare  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o 1  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name o 2  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name obj 1  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name i ruby object  end_name  begin_operator  end_operator  begin_name o 1  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name obj 2  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name i ruby object  end_name  begin_operator  end_operator  begin_name o 2  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name ret  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name yield  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new array  end_name  begin_argument_list  begin_argument  begin_expr  begin_name obj 1  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name obj 2  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo ary sort check should be done here  end_comment  begin_return  begin_expr  begin_call  begin_name  begin_name ruby comparable  end_name  begin_operator  end_operator  begin_name cmpint  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name ret  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name obj 1  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name obj 2  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name add  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name append  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name java util  end_name  begin_operator  end_operator  begin_name convert java to usable ruby object  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name remove  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name deleted  end_name  begin_init  begin_expr  begin_call  begin_name delete  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get current context  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name java util  end_name  begin_operator  end_operator  begin_name convert java to usable ruby object  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name null block  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_call  begin_name  begin_name deleted  end_name  begin_operator  end_operator  begin_name is nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_return  begin_comment todo is this correct  end_comment  end_block 
begin_comment todo is this correct end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name contains all  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name collection  end_name  end_type  begin_name c  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_for  begin_init  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name iter  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name c  end_name  begin_operator  end_operator  begin_name iterator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_call  begin_name  begin_name iter  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_incr  end_incr  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name index of  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name iter  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  end_block  end_for  begin_return  begin_expr  end_expr  end_return  end_block 
begin_comment todo make more efficient by not creating i ruby array end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name add  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name index  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name element  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name insert  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_call  begin_name  begin_name ruby fixnum  end_name  begin_operator  end_operator  begin_name new fixnum  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  begin_operator  end_operator  begin_expr  begin_call  begin_name  begin_name java util  end_name  begin_operator  end_operator  begin_name convert java to usable ruby object  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_block  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name object  end_name  end_type  begin_name remove  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name index  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name delete at  end_name  begin_argument_list  begin_argument  begin_expr  begin_name index  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to java  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name object  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name remove  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name last  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal state exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name delete at  end_name  begin_argument_list  begin_argument  begin_expr  begin_name last  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name last  end_name  begin_operator  end_operator  begin_name index  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_name index  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_then  end_if  begin_expr_stmt  begin_expr  begin_name last  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name add  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name obj  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name insert  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_call  begin_name  begin_name ruby fixnum  end_name  begin_operator  end_operator  begin_name new fixnum  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name index  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  begin_operator  end_operator  begin_expr  begin_call  begin_name  begin_name java util  end_name  begin_operator  end_operator  begin_name convert java to usable ruby object  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name obj  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_block  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name last  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_expr_stmt  end_block 
begin_comment rb obj id return the internal id of an object fixme should this be renamed to match its ruby name end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name id  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new fixnum  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get object space  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name id of  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment gets a list of all variables in this object end_commentbegin_comment todo must override in ruby module to pick up constants end_comment begin_type  begin_specifier  end_specifier  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name  begin_name variable  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  end_argument  end_argument_list  end_name  end_type  begin_name get variable list  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name map  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  begin_argument  begin_name  begin_name ruby class  end_name  begin_operator  end_operator  begin_name variable accessor  end_name  end_name  end_argument  end_argument_list  end_name  end_type  begin_name ivar accessors  end_name  begin_init  begin_expr  begin_call  begin_name get meta class  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get real class  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get variable accessors for read  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name  begin_name variable  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  end_argument  end_argument_list  end_name  end_type  begin_name list  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name  begin_name variable  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name  begin_name map  end_name  begin_operator  end_operator  begin_name  begin_name entry  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  begin_argument  begin_name  begin_name ruby class  end_name  begin_operator  end_operator  begin_name variable accessor  end_name  end_name  end_argument  end_argument_list  end_name  end_name  end_type  begin_name entry  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name ivar accessors  end_name  begin_operator  end_operator  begin_name entry set  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name value  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name entry  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name value  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_continue  end_continue  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name list  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name variable entry  end_name  begin_argument_list  begin_argument  begin_name object  end_name  end_argument  end_argument_list  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name entry  end_name  begin_operator  end_operator  begin_name get key  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_return  begin_expr  begin_name list  end_name  end_expr  end_return  end_block 
begin_comment gets a name list of all variables in this object end_commentbegin_comment todo must override in ruby module to pick up constants end_comment begin_type  begin_specifier  end_specifier  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  end_type  begin_name get variable name list  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name map  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  begin_argument  begin_name  begin_name ruby class  end_name  begin_operator  end_operator  begin_name variable accessor  end_name  end_name  end_argument  end_argument_list  end_name  end_type  begin_name ivar accessors  end_name  begin_init  begin_expr  begin_call  begin_name get meta class  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get real class  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get variable accessors for read  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  end_type  begin_name list  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name  begin_name map  end_name  begin_operator  end_operator  begin_name  begin_name entry  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  begin_argument  begin_name  begin_name ruby class  end_name  begin_operator  end_operator  begin_name variable accessor  end_name  end_name  end_argument  end_argument_list  end_name  end_name  end_type  begin_name entry  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name ivar accessors  end_name  begin_operator  end_operator  begin_name entry set  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name value  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name entry  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name value  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_continue  end_continue  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name list  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name entry  end_name  begin_operator  end_operator  begin_name get key  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_return  begin_expr  begin_name list  end_name  end_expr  end_return  end_block 
begin_comment gets a list of all variables in this object end_commentbegin_comment todo must override in ruby module to pick up constants end_comment begin_type  begin_specifier  end_specifier  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name  begin_name variable  end_name  begin_argument_list  begin_argument  begin_name i ruby object  end_name  end_argument  end_argument_list  end_name  end_argument  end_argument_list  end_name  end_type  begin_name get instance variable list  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name map  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  begin_argument  begin_name  begin_name ruby class  end_name  begin_operator  end_operator  begin_name variable accessor  end_name  end_name  end_argument  end_argument_list  end_name  end_type  begin_name ivar accessors  end_name  begin_init  begin_expr  begin_call  begin_name get meta class  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get variable accessors for read  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name  begin_name variable  end_name  begin_argument_list  begin_argument  begin_name i ruby object  end_name  end_argument  end_argument_list  end_name  end_argument  end_argument_list  end_name  end_type  begin_name list  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name  begin_name variable  end_name  begin_argument_list  begin_argument  begin_name i ruby object  end_name  end_argument  end_argument_list  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name  begin_name map  end_name  begin_operator  end_operator  begin_name  begin_name entry  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  begin_argument  begin_name  begin_name ruby class  end_name  begin_operator  end_operator  begin_name variable accessor  end_name  end_name  end_argument  end_argument_list  end_name  end_name  end_type  begin_name entry  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name ivar accessors  end_name  begin_operator  end_operator  begin_name entry set  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name value  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name entry  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name value  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name value  end_name  begin_operator  end_operator  begin_name i ruby object  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name id util  end_name  begin_operator  end_operator  begin_name is instance variable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name entry  end_name  begin_operator  end_operator  begin_name get key  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_continue  end_continue  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name list  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name variable entry  end_name  begin_argument_list  begin_argument  begin_name i ruby object  end_name  end_argument  end_argument_list  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name entry  end_name  begin_operator  end_operator  begin_name get key  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name i ruby object  end_name  begin_operator  end_operator  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_return  begin_expr  begin_name list  end_name  end_expr  end_return  end_block 
begin_comment gets a name list of all variables in this object end_commentbegin_comment todo must override in ruby module to pick up constants end_comment begin_type  begin_specifier  end_specifier  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  end_type  begin_name get instance variable name list  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name map  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  begin_argument  begin_name  begin_name ruby class  end_name  begin_operator  end_operator  begin_name variable accessor  end_name  end_name  end_argument  end_argument_list  end_name  end_type  begin_name ivar accessors  end_name  begin_init  begin_expr  begin_call  begin_name get meta class  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get real class  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get variable accessors for read  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  end_type  begin_name list  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name array list  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name  begin_name map  end_name  begin_operator  end_operator  begin_name  begin_name entry  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  begin_argument  begin_name  begin_name ruby class  end_name  begin_operator  end_operator  begin_name variable accessor  end_name  end_name  end_argument  end_argument_list  end_name  end_name  end_type  begin_name entry  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name ivar accessors  end_name  begin_operator  end_operator  begin_name entry set  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name object  end_name  end_type  begin_name value  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name entry  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name value  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name value  end_name  begin_operator  end_operator  begin_name i ruby object  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name id util  end_name  begin_operator  end_operator  begin_name is instance variable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name entry  end_name  begin_operator  end_operator  begin_name get key  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_continue  end_continue  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name list  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name entry  end_name  begin_operator  end_operator  begin_name get key  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_return  begin_expr  begin_name list  end_name  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  begin_block  begin_expr  end_expr  begin_operator  end_operator  begin_argument  begin_expr  end_expr  end_argument  end_block  end_expr  end_argument  begin_argument  begin_expr  begin_name required  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name op mod  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name arg  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo full precision remainder is 1000 x slower than mri  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name is infinity  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is na n  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name new na n  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name ruby big decimal  end_name  end_type  begin_name val  end_name  begin_init  begin_expr  begin_call  begin_name get vp value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name arg  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name val  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name call coerced  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name arg  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name is infinity  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name is na n  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name is zero  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name new na n  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_comment java and mri definitions of modulo are different  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name big decimal  end_name  end_type  begin_name modulo  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name remainder  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name value  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name modulo  end_name  begin_operator  end_operator  begin_name signum  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name value  end_name  begin_operator  end_operator  begin_name signum  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name modulo  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name modulo  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name value  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name ruby big decimal  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name modulo  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set result  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name required  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name remainder  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name arg  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo full precision remainder is 1000 x slower than mri  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name is infinity  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is na n  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name new na n  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name ruby big decimal  end_name  end_type  begin_name val  end_name  begin_init  begin_expr  begin_call  begin_name get vp value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name arg  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name val  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name call coerced  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name arg  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name is infinity  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name is na n  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name is zero  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name new na n  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_comment java and mri definitions of remainder are the same  end_comment  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name ruby big decimal  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name remainder  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name value  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set result  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name required  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name mult 2  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name b  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name n  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name ruby big decimal  end_name  end_type  begin_name val  end_name  begin_init  begin_expr  begin_call  begin_name get vp value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name b  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name val  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment todo what about n arg  end_comment  begin_return  begin_expr  begin_call  begin_name call coerced  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name b  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name digits  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ruby numeric  end_name  begin_operator  end_operator  begin_name fix 2 int  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name n  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name is na n  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name is na n  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name new na n  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name is infinity  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name is zero  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name is zero  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name is infinity  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name new na n  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name is zero  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name is zero  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name sign 1  end_name  begin_init  begin_expr  begin_call  begin_name is zero  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name zero sign  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name signum  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name sign 2  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name is zero  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name zero sign  end_name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name value  end_name  begin_operator  end_operator  begin_name signum  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_call  begin_name new zero  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name sign 1  end_name  begin_operator  end_operator  begin_name sign 2  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name is infinity  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name is infinity  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name sign 1  end_name  begin_init  begin_expr  begin_call  begin_name is infinity  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name infinity sign  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name signum  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name sign 2  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name is infinity  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name infinity sign  end_name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name value  end_name  begin_operator  end_operator  begin_name signum  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_call  begin_name new infinity  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name sign 1  end_name  begin_operator  end_operator  begin_name sign 2  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name big decimal  end_name  end_type  begin_name res  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name multiply  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name value  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name res  end_name  begin_operator  end_operator  begin_name precision  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name digits  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment todo rounding mode should not be hard coded see mode  end_comment  begin_expr_stmt  begin_expr  begin_name res  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name res  end_name  begin_operator  end_operator  begin_name round  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name math context  end_name  begin_argument_list  begin_argument  begin_expr  begin_name digits  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name rounding mode  end_name  begin_operator  end_operator  begin_name half up  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name ruby big decimal  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name res  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set result  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name ruby big decimal  end_name  end_type  begin_name handle add special values  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby big decimal  end_name  end_type  begin_name val  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name is na n  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name is na n  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name new na n  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_comment todo don t calculate the same value 3 times  end_comment  begin_if  begin_condition  begin_expr  begin_name infinity sign  end_name  begin_operator  end_operator  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name infinity sign  end_name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name is infinity  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name this  end_name  begin_operator  end_operator  begin_name val  end_name  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name infinity sign  end_name  begin_operator  end_operator  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name infinity sign  end_name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name new na n  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name infinity sign  end_name  begin_operator  end_operator  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name infinity sign  end_name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name sign  end_name  begin_init  begin_expr  begin_name infinity sign  end_name  begin_operator  end_operator  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name infinity sign  end_name  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name sign  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name new infinity  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name sign  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name ruby big decimal  end_name  end_type  begin_name handle minus special values  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby big decimal  end_name  end_type  begin_name val  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name is na n  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name is na n  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name new na n  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_comment todo 3 times calculate the same value below  end_comment  begin_if  begin_condition  begin_expr  begin_name infinity sign  end_name  begin_operator  end_operator  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name infinity sign  end_name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name new na n  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name infinity sign  end_name  begin_operator  end_operator  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name infinity sign  end_name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name this  end_name  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name infinity sign  end_name  begin_operator  end_operator  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name infinity sign  end_name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name is infinity  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name this  end_name  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name is infinity  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name new infinity  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name infinity sign  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name sign  end_name  begin_init  begin_expr  begin_name infinity sign  end_name  begin_operator  end_operator  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name infinity sign  end_name  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name sign  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name new infinity  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name sign  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  end_if  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name op div  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name other  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment integer division  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name ruby big decimal  end_name  end_type  begin_name val  end_name  begin_init  begin_expr  begin_call  begin_name get vp value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name other  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name val  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name call coerced  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name other  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name is na n  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name is zero  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name is na n  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name new na n  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name is infinity  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name is infinity  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name new na n  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name ruby big decimal  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name value  end_name  begin_operator  end_operator  begin_name divide to integral value  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name value  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set result  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name op div  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name other  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name digits  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo take big decimal mode into account  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name scale  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ruby numeric  end_name  begin_operator  end_operator  begin_name fix 2 int  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name digits  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name ruby big decimal  end_name  end_type  begin_name val  end_name  begin_init  begin_expr  begin_call  begin_name get vp value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name other  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name val  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name call coerced  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name other  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name is na n  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name is zero  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name is zero  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name is na n  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name new na n  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name is zero  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name sign 1  end_name  begin_init  begin_expr  begin_call  begin_name is infinity  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name infinity sign  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name signum  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_call  begin_name new infinity  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name sign 1  end_name  begin_operator  end_operator  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name zero sign  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name is infinity  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name is infinity  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name new infinity  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name infinity sign  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name value  end_name  begin_operator  end_operator  begin_name signum  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name is infinity  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name is infinity  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name new zero  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name signum  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name infinity sign  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name is infinity  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name is infinity  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name new na n  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name scale  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment mri behavior if digits is 0 the result is the same as the operator  end_comment  begin_return  begin_expr  begin_call  begin_name op quo  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name other  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_comment todo better algorithm to set precision needed  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name prec  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name max  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name scale  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name ruby big decimal  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name divide  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name value  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name math context  end_name  begin_argument_list  begin_argument  begin_expr  begin_name prec  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name rounding mode  end_name  begin_operator  end_operator  begin_name half up  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set result  end_name  begin_argument_list  begin_argument  begin_expr  begin_name scale  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_else  end_if  end_block 
 begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name required  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name divmod  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name other  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo full precision divmod is 1000 x slower than mri  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name is infinity  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is na n  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name ruby array  end_name  begin_operator  end_operator  begin_name new array  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name new na n  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name new na n  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name ruby big decimal  end_name  end_type  begin_name val  end_name  begin_init  begin_expr  begin_call  begin_name get vp value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name other  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name val  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name call coerced  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name other  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name is infinity  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name is na n  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name is zero  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name ruby array  end_name  begin_operator  end_operator  begin_name new array  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name new na n  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name new na n  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_comment java and mri definitions of divmod are different  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name big decimal  end_name  begin_index  end_index  end_type  begin_name divmod  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name divide and remainder  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name value  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name big decimal  end_name  end_type  begin_name div  end_name  begin_init  begin_expr  begin_name  begin_name divmod  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name big decimal  end_name  end_type  begin_name mod  end_name  begin_init  begin_expr  begin_name  begin_name divmod  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name mod  end_name  begin_operator  end_operator  begin_name signum  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name value  end_name  begin_operator  end_operator  begin_name signum  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name div  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name div  end_name  begin_operator  end_operator  begin_name subtract  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name big decimal  end_name  begin_operator  end_operator  begin_name one  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name mod  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name mod  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name value  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_call  begin_name  begin_name ruby array  end_name  begin_operator  end_operator  begin_name new array  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name ruby big decimal  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name div  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name ruby big decimal  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name mod  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment it doesn t handle special cases end_comment begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name get significant digits  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment todo no need to calculate every time  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name big decimal  end_name  end_type  begin_name val  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name abs  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name strip trailing zeros  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_call  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name unscaled value  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to string  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name get all digits  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment todo no need to calculate every time  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name big decimal  end_name  end_type  begin_name val  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name abs  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_call  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name unscaled value  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to string  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment it doesn t handle special cases end_comment begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name get exponent  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment todo no need to calculate every time  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name is zero  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name big decimal  end_name  end_type  begin_name val  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name abs  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name strip trailing zeros  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_call  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name precision  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name val  end_name  begin_operator  end_operator  begin_name scale  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name j ruby method  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name truncate  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name truncate  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name ruby fixnum  end_name  begin_operator  end_operator  begin_name zero  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name j ruby method  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name truncate  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name arg  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name is na n  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name new na n  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name is infinity  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name new infinity  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name infinity sign  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name n  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ruby numeric  end_name  begin_operator  end_operator  begin_name fix 2 int  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name arg  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name precision  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name precision  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name scale  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name n  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name precision  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name ruby big decimal  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name round  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name math context  end_name  begin_argument_list  begin_argument  begin_expr  begin_name precision  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name rounding mode  end_name  begin_operator  end_operator  begin_name down  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_comment todo proper sign  end_comment  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name ruby big decimal  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name big decimal  end_name  begin_operator  end_operator  begin_name zero  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_else  end_if  end_block 
begin_comment f complex new bang 2 end_comment begin_type  begin_specifier  end_specifier  begin_name ruby complex  end_name  end_type  begin_name new complex bang  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name clazz  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name x  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name y  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment fixme what should these really be numeric assert x instanceof ruby complex y instanceof ruby complex  end_comment  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name ruby complex  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name clazz  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name x  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name y  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment f complex new bang 1 end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name ruby complex  end_name  end_type  begin_name new complex bang  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name clazz  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name x  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment fixme what should this really be assert x instanceof ruby complex  end_comment  begin_return  begin_expr  begin_call  begin_name new complex bang  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name clazz  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name x  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name ruby fixnum  end_name  begin_operator  end_operator  begin_name zero  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment changes the current directory to code path code end_comment begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name optional  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name frame  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name meta  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name chdir  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name recv  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  end_type  begin_name args  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name block  end_name  end_type  begin_name block  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name ruby string  end_name  end_type  begin_name path  end_name  begin_init  begin_expr  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name ruby string  end_name  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name convert to string  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get home directory path  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name adjusted path  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ruby file  end_name  begin_operator  end_operator  begin_name adjust root path on windows  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name path  end_name  begin_operator  end_operator  begin_name get unicode value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name check dir is two slashes on windows  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name adjusted path  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name j ruby file  end_name  end_type  begin_name dir  end_name  begin_init  begin_expr  begin_call  begin_name get dir  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name adjusted path  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name real path  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name old cwd  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get current directory  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment we get canonical path to try and flatten the path out  end_comment  begin_comment a dir subdir should return as  end_comment  begin_comment cnutter do we want to flatten path out  end_comment  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_name real path  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name dir  end_name  begin_operator  end_operator  begin_name get canonical path  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name io exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_name real path  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name dir  end_name  begin_operator  end_operator  begin_name get absolute path  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  end_try  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name result  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name is given  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment fixme don t allow multiple threads to do this at once  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name set current directory  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name real path  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_name result  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name yield  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name path  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_finally  begin_block  begin_expr_stmt  begin_expr  begin_name dir  end_name  begin_operator  end_operator  begin_call  begin_name get dir  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name old cwd  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name set current directory  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name old cwd  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_finally  end_try  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name set current directory  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name real path  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name result  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new fixnum  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_return  begin_expr  begin_name result  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name mkdir common  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name path  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  end_type  begin_name args  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name new dir  end_name  begin_init  begin_expr  begin_call  begin_name get dir  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name path  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name separator char  end_name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_name new dir  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name file  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name new dir  end_name  begin_operator  end_operator  begin_name get path  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name mode  end_name  begin_init  begin_expr  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name int  end_name  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name convert to integer  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get long value  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get posix  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name mkdir  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name new dir  end_name  begin_operator  end_operator  begin_name get absolute path  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name mode  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment fixme this is a system error based on errno  end_comment  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new system call error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_return  begin_expr  begin_call  begin_name  begin_name ruby fixnum  end_name  begin_operator  end_operator  begin_name zero  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment returns the home directory of the specified code user code on the system if the home directory of the specified user cannot be found an code argument error it thrown code end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name get home directory path  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name user  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo this version is better than the hackish previous one windows behavior needs to be defined though i suppose this version could be improved more too todo etc passwd is also inadequate for mac osx since it does not use etc passwd for regular user accounts  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_comment try to use posix for this first  end_comment  begin_return  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get posix  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name getpwnam  end_name  begin_argument_list  begin_argument  begin_expr  begin_name user  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get home  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment otherwise fall back on the old way  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name passwd  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name file input stream  end_name  end_type  begin_name stream  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name file input stream  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name total bytes  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name stream  end_name  begin_operator  end_operator  begin_name available  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name byte  end_name  begin_index  end_index  end_type  begin_name bytes  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name byte  end_name  begin_index  begin_expr  begin_name total bytes  end_name  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name stream  end_name  begin_operator  end_operator  begin_name read  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name bytes  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name stream  end_name  begin_operator  end_operator  begin_name close  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name passwd  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name string  end_name  begin_argument_list  begin_argument  begin_expr  begin_name bytes  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name io exception  end_name  end_type  begin_name ioe  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_catch  end_try  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  begin_index  end_index  end_type  begin_name rows  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name passwd  end_name  begin_operator  end_operator  begin_name split  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name row count  end_name  begin_init  begin_expr  begin_name  begin_name rows  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name row count  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  begin_index  end_index  end_type  begin_name fields  end_name  begin_init  begin_expr  begin_name  begin_name rows  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name split  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name  begin_name fields  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name user  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name fields  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_block  end_for  end_block  end_catch  end_try  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new argument error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name user  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name ruby string  end_name  end_type  begin_name get home directory path  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name ruby hash  end_name  end_type  begin_name system hash  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name ruby hash  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get object  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name fast get constant  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name ruby hash  end_name  end_type  begin_name env hash  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name ruby hash  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get object  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name fast get constant  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name home  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name env hash  end_name  begin_operator  end_operator  begin_name op aref  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name home  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name home  end_name  begin_operator  end_operator  begin_name is nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name home  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name system hash  end_name  begin_operator  end_operator  begin_name op aref  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name home  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name home  end_name  begin_operator  end_operator  begin_name is nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name home  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name env hash  end_name  begin_operator  end_operator  begin_name op aref  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name home  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name home  end_name  begin_operator  end_operator  begin_name is nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new argument error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_return  begin_expr  begin_operator  end_operator  begin_name ruby string  end_name  begin_operator  end_operator  begin_name home  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name encoding  end_name  end_type  begin_name get encoding  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment todo make threadsafe  end_comment  begin_if  begin_condition  begin_expr  begin_name encoding  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_name encoding  end_name  begin_operator  end_operator  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get encoding service  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name load encoding  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  begin_return  begin_expr  begin_name encoding  end_name  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name meta  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name find  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name recv  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name str  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name encoding service  end_name  end_type  begin_name service  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get encoding service  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo check for ascii string  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name byte list  end_name  end_type  begin_name name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name str  end_name  begin_operator  end_operator  begin_name convert to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get byte list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name entry  end_name  end_type  begin_name e  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name service  end_name  begin_operator  end_operator  begin_name find encoding or alias entry  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name e  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_throw  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new argument error  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_then  end_if  begin_return  begin_expr  begin_call  begin_name  begin_name service  end_name  begin_operator  end_operator  begin_name get encoding list  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_index  begin_expr  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name get index  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_index  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name enumeratorize  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name object  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name method  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name ruby enumerator  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name object  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name fast new symbol  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name i ruby object  end_name  begin_operator  end_operator  begin_name null array  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name enumeratorize  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name object  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name method  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name arg  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name ruby enumerator  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name object  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name fast new symbol  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_name arg  end_name  end_expr  end_block  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name enumeratorize  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name object  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name method  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  end_type  begin_name args  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name ruby enumerator  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name object  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name fast new symbol  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  begin_comment todo make sure it s really safe to not to copy it  end_comment  end_block 
begin_comment todo make sure it s really safe to not to copy it end_comment begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name visibility  end_name  begin_operator  end_operator  begin_name  begin_name visibility  end_name  begin_operator  end_operator  begin_name private  end_name  end_name  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name initialize  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new argument error  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name visibility  end_name  begin_operator  end_operator  begin_name  begin_name visibility  end_name  begin_operator  end_operator  begin_name private  end_name  end_name  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name initialize  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name object  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name initialize  end_name  begin_argument_list  begin_argument  begin_expr  begin_name object  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name fast new symbol  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name null array  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name visibility  end_name  begin_operator  end_operator  begin_name  begin_name visibility  end_name  begin_operator  end_operator  begin_name private  end_name  end_name  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name initialize  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name object  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name method  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name initialize  end_name  begin_argument_list  begin_argument  begin_expr  begin_name object  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name null array  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name initialize  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name object  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name method  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  end_type  begin_name method args  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name object  end_name  end_name  begin_operator  end_operator  begin_name object  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name method  end_name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name as java string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name method args  end_name  end_name  begin_operator  end_operator  begin_name method args  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set instance variable  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name object  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set instance variable  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name set instance variable  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name ruby array  end_name  begin_operator  end_operator  begin_name new array no copy light  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name method args  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name this  end_name  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name visibility  end_name  begin_operator  end_operator  begin_name  begin_name visibility  end_name  begin_operator  end_operator  begin_name private  end_name  end_name  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name initialize  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name object  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name method  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name method arg  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name initialize  end_name  begin_argument_list  begin_argument  begin_expr  begin_name object  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_name method arg  end_name  end_expr  end_block  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name required  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name rest  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name visibility  end_name  begin_operator  end_operator  begin_name  begin_name visibility  end_name  begin_operator  end_operator  begin_name private  end_name  end_name  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name initialize  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  end_type  begin_name args  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  begin_index  end_index  end_type  begin_name meth args  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name i ruby object  end_name  begin_index  begin_expr  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name arraycopy  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name meth args  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name meth args  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_call  begin_name initialize  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name meth args  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name ruby class  end_name  end_type  begin_name create file class  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby class  end_name  end_type  begin_name file class  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define class  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get io  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name file allocator  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment create constants class  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name constants  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name file class  end_name  begin_operator  end_operator  begin_name define module under  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name set file  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name file class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name ruby string  end_name  end_type  begin_name separator  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get current context  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name file class  end_name  begin_operator  end_operator  begin_name kind of  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_class  begin_super  begin_name  begin_name ruby module  end_name  begin_operator  end_operator  begin_name kind of  end_name  end_name  end_super  begin_argument_list  end_argument_list  begin_block  begin_function  begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is kind of  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name obj  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_name obj  end_name  begin_operator  end_operator  begin_name ruby file  end_name  end_expr  end_return  end_block  end_function  end_block  end_class  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name separator  end_name  begin_operator  end_operator  begin_name freeze  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name file class  end_name  begin_operator  end_operator  begin_name define constant  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name separator  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name file class  end_name  begin_operator  end_operator  begin_name define constant  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name separator  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name separator char  end_name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby string  end_name  end_type  begin_name alt separator  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name alt separator  end_name  begin_operator  end_operator  begin_name freeze  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name file class  end_name  begin_operator  end_operator  begin_name define constant  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name alt separator  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name file class  end_name  begin_operator  end_operator  begin_name define constant  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name ruby string  end_name  end_type  begin_name path separator  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name path separator  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name path separator  end_name  begin_operator  end_operator  begin_name freeze  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name file class  end_name  begin_operator  end_operator  begin_name define constant  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name path separator  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo why are we duplicating the constants here and then in  end_comment  begin_comment file constants below file constants is included in io  end_comment  begin_comment todo these were missing so we re not handling them elsewhere  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name file class  end_name  begin_operator  end_operator  begin_name fast set constant  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new fixnum  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name fnm noescape  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name file class  end_name  begin_operator  end_operator  begin_name fast set constant  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new fixnum  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name fnm casefold  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name file class  end_name  begin_operator  end_operator  begin_name fast set constant  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new fixnum  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name fnm syscase  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name file class  end_name  begin_operator  end_operator  begin_name fast set constant  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new fixnum  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name fnm dotmatch  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name file class  end_name  begin_operator  end_operator  begin_name fast set constant  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new fixnum  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name fnm pathname  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment create constants for open flags  end_comment  begin_for  begin_init  begin_decl  begin_type  begin_name open flags  end_name  end_type  begin_name f  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name open flags  end_name  begin_operator  end_operator  begin_name values  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_comment strip off the o prefix so they become file rdonly and so on  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name f  end_name  begin_operator  end_operator  begin_name name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name starts with  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name cname  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment special case for handling accmode since constantine will generate  end_comment  begin_comment an invalid value if it is not defined by the platform  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name ruby fixnum  end_name  end_type  begin_name cvalue  end_name  begin_init  begin_expr  begin_name f  end_name  begin_operator  end_operator  begin_name  begin_name open flags  end_name  begin_operator  end_operator  begin_name o accmode  end_name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new fixnum  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name mode flags  end_name  begin_operator  end_operator  begin_name accmode  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new fixnum  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name f  end_name  begin_operator  end_operator  begin_name value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name file class  end_name  begin_operator  end_operator  begin_name fast set constant  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cname  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name cvalue  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name constants  end_name  begin_operator  end_operator  begin_name fast set constant  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cname  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name cvalue  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  begin_comment create constants for flock  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name file class  end_name  begin_operator  end_operator  begin_name fast set constant  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new fixnum  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name ruby file  end_name  begin_operator  end_operator  begin_name lock sh  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name file class  end_name  begin_operator  end_operator  begin_name fast set constant  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new fixnum  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name ruby file  end_name  begin_operator  end_operator  begin_name lock ex  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name file class  end_name  begin_operator  end_operator  begin_name fast set constant  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new fixnum  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name ruby file  end_name  begin_operator  end_operator  begin_name lock nb  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name file class  end_name  begin_operator  end_operator  begin_name fast set constant  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new fixnum  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name ruby file  end_name  begin_operator  end_operator  begin_name lock un  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name constants  end_name  begin_operator  end_operator  begin_name fast set constant  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new fixnum  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name fnm noescape  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name constants  end_name  begin_operator  end_operator  begin_name fast set constant  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new fixnum  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name fnm casefold  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name constants  end_name  begin_operator  end_operator  begin_name fast set constant  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new fixnum  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name fnm syscase  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name constants  end_name  begin_operator  end_operator  begin_name fast set constant  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new fixnum  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name fnm dotmatch  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name constants  end_name  begin_operator  end_operator  begin_name fast set constant  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new fixnum  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name fnm pathname  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment create constants for flock  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name constants  end_name  begin_operator  end_operator  begin_name fast set constant  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new fixnum  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name ruby file  end_name  begin_operator  end_operator  begin_name lock sh  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name constants  end_name  begin_operator  end_operator  begin_name fast set constant  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new fixnum  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name ruby file  end_name  begin_operator  end_operator  begin_name lock ex  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name constants  end_name  begin_operator  end_operator  begin_name fast set constant  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new fixnum  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name ruby file  end_name  begin_operator  end_operator  begin_name lock nb  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name constants  end_name  begin_operator  end_operator  begin_name fast set constant  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new fixnum  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name ruby file  end_name  begin_operator  end_operator  begin_name lock un  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment file constants module is included in io  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get io  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name include module  end_name  begin_argument_list  begin_argument  begin_expr  begin_name constants  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get file test  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name extend object  end_name  begin_argument_list  begin_argument  begin_expr  begin_name file class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name file class  end_name  begin_operator  end_operator  begin_name define annotated methods  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name ruby file  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name file class  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name channel descriptor  end_name  end_type  begin_name sysopen  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name path  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name mode flags  end_name  end_type  begin_name modes  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name perm  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name invalid value exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_try  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name channel descriptor  end_name  end_type  begin_name descriptor  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name channel descriptor  end_name  begin_operator  end_operator  begin_name open  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get current directory  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name path  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name modes  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name perm  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get posix  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo check if too many open files gc and try again  end_comment  begin_return  begin_expr  begin_name descriptor  end_name  end_expr  end_return  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name file not found exception  end_name  end_type  begin_name fnfe  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new errno enoent error  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name directory as file exception  end_name  end_type  begin_name dafe  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new errno eis dir error  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name file exists exception  end_name  end_type  begin_name fee  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new errno eexist error  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name path  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name io exception  end_name  end_type  begin_name ioe  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new io error from exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ioe  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  end_block 
begin_comment todo this method is not present in mri end_comment begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name required  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name lchown  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name arg 1  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name arg 2  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name owner  end_name  begin_init  begin_expr  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name arg 1  end_name  begin_operator  end_operator  begin_name is nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name owner  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ruby numeric  end_name  begin_operator  end_operator  begin_name num 2 int  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name arg 1  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name group  end_name  begin_init  begin_expr  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name arg 2  end_name  begin_operator  end_operator  begin_name is nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name group  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ruby numeric  end_name  begin_operator  end_operator  begin_name num 2 int  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name arg 2  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name file  end_name  begin_argument_list  begin_argument  begin_expr  begin_name path  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name exists  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new errno enoent error  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name path  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_return  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new fixnum  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get posix  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name lchown  end_name  begin_argument_list  begin_argument  begin_expr  begin_name path  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name owner  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name group  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name required  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name truncate  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name arg  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby integer  end_name  end_type  begin_name new length  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name arg  end_name  begin_operator  end_operator  begin_name convert to integer  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name new length  end_name  begin_operator  end_operator  begin_name get long value  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new errno einval error  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name path  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name open file  end_name  begin_operator  end_operator  begin_name check writable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name open file  end_name  begin_operator  end_operator  begin_name get main stream  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name ftruncate  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name new length  end_name  begin_operator  end_operator  begin_name get long value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name bad descriptor exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new errno ebadf error  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name pipe exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new errno espipe error  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name invalid value exception  end_name  end_type  begin_name ex  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new errno einval error  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name io exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment should we do anything  end_comment  end_block  end_catch  end_try  begin_return  begin_expr  begin_call  begin_name  begin_name ruby fixnum  end_name  begin_operator  end_operator  begin_name zero  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment todo this is also defined in the meta class too consolidate somewhere end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name mode flags  end_name  end_type  begin_name get modes  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name object  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name invalid value exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_if  begin_condition  begin_expr  begin_name object  end_name  begin_operator  end_operator  begin_name ruby string  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name get io modes  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name ruby string  end_name  begin_operator  end_operator  begin_name object  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name to string  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name object  end_name  begin_operator  end_operator  begin_name ruby fixnum  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name mode flags  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name ruby fixnum  end_name  begin_operator  end_operator  begin_name object  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get long value  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_else  end_if  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new type error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block 
begin_comment file class methods end_comment begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name required  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name optional  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name meta  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name basename  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name recv  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  end_type  begin_name args  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  begin_init  begin_expr  begin_call  begin_name get path  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get unicode value  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment mri compatible basename handling for windows drive letter paths  end_comment  begin_if  begin_condition  begin_expr  begin_name  begin_name platform  end_name  begin_operator  end_operator  begin_name is windows  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name char at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name character  end_name  begin_operator  end_operator  begin_name is letter  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name char at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_switch  begin_condition  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  begin_return  begin_expr  begin_call  begin_name  begin_name ruby string  end_name  begin_operator  end_operator  begin_name new empty string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name infect by  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_return  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new string  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name infect by  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_case  begin_default  begin_switch  begin_condition  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name char at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_break  end_break  end_case  begin_default  begin_comment strip c away from relative pathed name  end_comment  begin_expr_stmt  begin_expr  begin_name name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_default  end_block  end_switch  begin_break  end_break  end_default  end_block  end_switch  end_block  end_then  end_if  end_block  end_then  end_if  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name char at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_block  begin_expr_stmt  begin_expr  begin_name name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_while  begin_comment paths which end in or must be stripped off  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name slash count  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name length  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  begin_name length  end_name  begin_operator  end_operator  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name char  end_name  end_type  begin_name c  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name char at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name c  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name c  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_break  end_break  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name slash count  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_for  begin_if  begin_condition  begin_expr  begin_name slash count  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name length  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name slash count  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name index  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name last index of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name index  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment xxx actually only on windows  end_comment  begin_expr_stmt  begin_expr  begin_name index  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name last index of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_name index  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name index  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name ext  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ruby string  end_name  begin_operator  end_operator  begin_name string value  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to string  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ext  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name index  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name last index of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name index  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment 1 no match 0 it is dot file not extension  end_comment  begin_expr_stmt  begin_expr  begin_name name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name ends with  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ext  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name ext  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_block  end_then  end_if  begin_return  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new string  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name infect by  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name required  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name meta  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name dirname  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name recv  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name arg  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby string  end_name  end_type  begin_name filename  end_name  begin_init  begin_expr  begin_call  begin_name get path  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name jfilename  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name filename  end_name  begin_operator  end_operator  begin_name get unicode value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name jfilename  end_name  begin_operator  end_operator  begin_name replace  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name min path length  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name trimmed slashes  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name starts with drive letter on windows  end_name  begin_init  begin_expr  begin_call  begin_name starts with drive letter on windows  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name starts with drive letter on windows  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name min path length  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name min path length  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name char at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_block  begin_expr_stmt  begin_expr  begin_name trimmed slashes  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_while  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name result  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name starts with drive letter on windows  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name trimmed slashes  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment c is returned unchanged  end_comment  begin_expr_stmt  begin_expr  begin_name result  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name jfilename  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name result  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name jfilename  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  begin_else  begin_block  begin_comment todo deal with unc names  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name index  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name last index of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name index  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name starts with drive letter on windows  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new string  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name jfilename  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new string  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_else  end_if  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name index  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_return  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new string  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name starts with drive letter on windows  end_name  begin_operator  end_operator  begin_name index  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment include additional path separator  end_comment  begin_comment so that dirname of c file txt is c not c  end_comment  begin_expr_stmt  begin_expr  begin_name index  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name result  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name jfilename  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name char  end_name  end_type  begin_name end char  end_name  end_decl  end_decl_stmt  begin_comment trim trailing slashes  end_comment  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name min path length  end_name  end_expr  end_condition  begin_block  begin_expr_stmt  begin_expr  begin_name end char  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name char at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name end char  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name end char  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name result  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_break  end_break  end_block  end_else  end_if  end_block  end_while  begin_return  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new string  end_name  begin_argument_list  begin_argument  begin_expr  begin_name result  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name infect by  end_name  begin_argument_list  begin_argument  begin_expr  begin_name filename  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment this method checks a path and if it starts with then it expands the path to the absolute path of the user s home directory if the string does not begin with then the string is simply returned unaltered param recv param path path to check return expanded path end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name expand user path  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name path  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name path length  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name path  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name path length  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name path  end_name  begin_operator  end_operator  begin_name char at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment enebo should frogger foo work it doesnt in linux ruby  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name user end  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name path  end_name  begin_operator  end_operator  begin_name index of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name user end  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name path length  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment single as whole path to expand  end_comment  begin_expr_stmt  begin_expr  begin_name path  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ruby dir  end_name  begin_operator  end_operator  begin_name get home directory path  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to string  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_comment no directory delimeter rest of string is username  end_comment  begin_expr_stmt  begin_expr  begin_name user end  end_name  begin_operator  end_operator  begin_name path length  end_name  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name user end  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment as path to expand  end_comment  begin_expr_stmt  begin_expr  begin_name path  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ruby dir  end_name  begin_operator  end_operator  begin_name get home directory path  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to string  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name path  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name user end  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment user as path to expand  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name user  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name path  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name user end  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name dir  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ruby dir  end_name  begin_operator  end_operator  begin_name get home directory path  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name user  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name dir  end_name  begin_operator  end_operator  begin_name is nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new argument error  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name user  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name path  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name dir  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name path length  end_name  begin_operator  end_operator  begin_name user end  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name path  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name user end  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_block  end_then  end_if  begin_return  begin_expr  begin_name path  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name ruby string  end_name  end_type  begin_name join  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name recv  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby array  end_name  end_type  begin_name ary  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  begin_index  end_index  end_type  begin_name args  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ary  end_name  begin_operator  end_operator  begin_name to java array  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name is tainted  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string builder  end_name  end_type  begin_name buffer  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name string builder  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_if  begin_condition  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name is taint  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name is tainted  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name element  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_name ruby string  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name element  end_name  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name convert to string  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get unicode value  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_name ruby array  end_name  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name is inspecting  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new argument error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name element  end_name  begin_operator  end_operator  begin_call  begin_name inspect join  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name recv  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name ary  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name ruby array  end_name  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  begin_else  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby string  end_name  end_type  begin_name path  end_name  begin_init  begin_expr  begin_call  begin_name get path  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name element  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name path  end_name  begin_operator  end_operator  begin_name get unicode value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name chomp  end_name  begin_argument_list  begin_argument  begin_expr  begin_name buffer  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name element  end_name  begin_operator  end_operator  begin_name starts with  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name element  end_name  begin_operator  end_operator  begin_name starts with  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buffer  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buffer  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name element  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_decl_stmt  begin_decl  begin_type  begin_name ruby string  end_name  end_type  begin_name fixed str  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ruby string  end_name  begin_operator  end_operator  begin_name new string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name buffer  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name fixed str  end_name  begin_operator  end_operator  begin_name set taint  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name is tainted  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name fixed str  end_name  end_expr  end_return  end_block 
begin_comment fixme this does not have exact same semantics as ruby array join but they probably could be consolidated perhaps as join args sep do chomp end_comment begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name rest  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name meta  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name ruby string  end_name  end_type  begin_name join  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name recv  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  end_type  begin_name args  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name join  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name recv  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name ruby array  end_name  begin_operator  end_operator  begin_name new array no copy light  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name required  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name rest  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name meta  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name lchown  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name recv  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  end_type  begin_name args  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name owner  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name is nil  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name ruby numeric  end_name  begin_operator  end_operator  begin_name num 2 int  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name group  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name is nil  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name ruby numeric  end_name  begin_operator  end_operator  begin_name num 2 int  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name count  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name filename  end_name  begin_init  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get posix  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name lchown  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name filename  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name owner  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name group  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new errno from last posix errno  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name count  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_for  begin_return  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new fixnum  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name count  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name required  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name meta  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name link  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name recv  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name from  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name to  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name ruby string  end_name  end_type  begin_name from str  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ruby string  end_name  begin_operator  end_operator  begin_name string value  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name from  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name ruby string  end_name  end_type  begin_name to str  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ruby string  end_name  begin_operator  end_operator  begin_name string value  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name to  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get posix  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name link  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name from str  end_name  begin_operator  end_operator  begin_name get unicode value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name to str  end_name  begin_operator  end_operator  begin_name get unicode value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment fixme when we get jna 3 we need to properly write this to errno  end_comment  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new errno eexist error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name from str  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name to str  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name  begin_name java  end_name  begin_operator  end_operator  begin_name lang  end_name  begin_operator  end_operator  begin_name unsatisfied link error  end_name  end_name  end_type  begin_name ule  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new not implemented error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  begin_return  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new fixnum  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name required  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name meta  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name symlink  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name recv  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name from  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name to  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name ruby string  end_name  end_type  begin_name from str  end_name  begin_init  begin_expr  begin_call  begin_name get path  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name from  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name ruby string  end_name  end_type  begin_name to str  end_name  begin_init  begin_expr  begin_call  begin_name get path  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name to  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name tovalue  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name to str  end_name  begin_operator  end_operator  begin_name get unicode value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name tovalue  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name j ruby file  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get current directory  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name tovalue  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get absolute path  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_try  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get posix  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name symlink  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name from str  end_name  begin_operator  end_operator  begin_name get unicode value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name tovalue  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment fixme when we get jna 3 we need to properly write this to errno  end_comment  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new errno eexist error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name from str  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name to str  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name  begin_name java  end_name  begin_operator  end_operator  begin_name lang  end_name  begin_operator  end_operator  begin_name unsatisfied link error  end_name  end_name  end_type  begin_name ule  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new not implemented error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  begin_return  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new fixnum  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name required  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name meta  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name readlink  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name recv  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name path  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name real path  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get posix  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name readlink  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name path  end_name  begin_operator  end_operator  begin_name convert to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get unicode value  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name ruby file test  end_name  begin_operator  end_operator  begin_name exist p  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name recv  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name path  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is true  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new errno enoent error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name path  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name ruby file test  end_name  begin_operator  end_operator  begin_name symlink p  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name recv  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name path  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is true  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new errno einval error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name path  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name real path  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment fixme when we get jna 3 we need to properly write this to errno  end_comment  end_block  end_then  end_if  begin_return  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name real path  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name io exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new io error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name get message  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  end_block 
begin_comment can we produce io error which bypasses a close end_comment begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name required  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name meta  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name truncate  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name recv  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name arg 1  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name arg 2  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name ruby string  end_name  end_type  begin_name filename  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name arg 1  end_name  begin_operator  end_operator  begin_name convert to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo safe string value here  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name ruby integer  end_name  end_type  begin_name new length  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name arg 2  end_name  begin_operator  end_operator  begin_name convert to integer  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name test file  end_name  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name file  end_name  end_type  begin_name child file  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name file  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name filename  end_name  begin_operator  end_operator  begin_name get unicode value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name child file  end_name  begin_operator  end_operator  begin_name is absolute  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name test file  end_name  begin_operator  end_operator  begin_name child file  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name test file  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name file  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get current directory  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name filename  end_name  begin_operator  end_operator  begin_name get byte list  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to string  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name test file  end_name  begin_operator  end_operator  begin_name exists  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new errno enoent error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name filename  end_name  begin_operator  end_operator  begin_name get byte list  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to string  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name new length  end_name  begin_operator  end_operator  begin_name get long value  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new errno einval error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name filename  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  begin_index  end_index  end_type  begin_name args  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_name filename  end_name  end_expr  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_block  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name ruby file  end_name  end_type  begin_name file  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name ruby file  end_name  begin_operator  end_operator  begin_call  begin_name open  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name recv  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name null block  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name truncate  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name new length  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name close  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_call  begin_name  begin_name ruby fixnum  end_name  begin_operator  end_operator  begin_name zero  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name ruby class  end_name  end_type  begin_name create file stat class  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo not allocatable allocator is probably ok here confirm jruby 415  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name ruby class  end_name  end_type  begin_name file stat class  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get file  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name define class under  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get object  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name allocator  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name set file stat  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name file stat class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name file stat class  end_name  begin_operator  end_operator  begin_name include module  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name fast get module  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name file stat class  end_name  begin_operator  end_operator  begin_name define annotated methods  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name ruby file stat  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name file stat class  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name long  end_name  end_type  begin_name size internal  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment workaround for jruby 4149  end_comment  begin_if  begin_condition  begin_expr  begin_name  begin_name platform  end_name  begin_operator  end_operator  begin_name is windows  end_name  end_name  begin_operator  end_operator  begin_name file  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_try  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name security exception  end_name  end_type  begin_name ex  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_catch  end_try  end_block  end_then  begin_else  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name stat  end_name  begin_operator  end_operator  begin_name st size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_else  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name create globals  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define global constant  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new binding  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define global constant  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get true  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define global constant  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get false  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define global constant  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment define argv and for this runtime  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name ruby array  end_name  end_type  begin_name argv array  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new array  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  begin_index  end_index  end_type  begin_name argv  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get instance config  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get argv  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name  begin_name argv  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name argv array  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name ruby string  end_name  begin_operator  end_operator  begin_name new string shared  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name argv  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name get bytes  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define global constant  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name argv array  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get global variables  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name define readonly  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name value accessor  end_name  begin_argument_list  begin_argument  begin_expr  begin_name argv array  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name i accessor  end_name  end_type  begin_name d  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name value accessor  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get instance config  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name displayed file name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get global variables  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name define  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name d  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get global variables  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name define  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name d  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment version information  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name version  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name patchlevel  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name release  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name constants  end_name  begin_operator  end_operator  begin_name compile date  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name freeze  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name platform  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name constants  end_name  begin_operator  end_operator  begin_name platform  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name freeze  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name engine  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name constants  end_name  begin_operator  end_operator  begin_name engine  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name freeze  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_switch  begin_condition  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get instance config  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get compat version  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_case  begin_expr  begin_name ruby 1 8  end_name  end_expr  begin_expr_stmt  begin_expr  begin_name version  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name constants  end_name  begin_operator  end_operator  begin_name ruby version  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name freeze  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name patchlevel  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new fixnum  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name constants  end_name  begin_operator  end_operator  begin_name ruby patchlevel  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name freeze  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name ruby 1 9  end_name  end_expr  begin_expr_stmt  begin_expr  begin_name version  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name constants  end_name  begin_operator  end_operator  begin_name ruby 1 9 version  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name freeze  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name patchlevel  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new fixnum  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name constants  end_name  begin_operator  end_operator  begin_name ruby 1 9 patchlevel  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name freeze  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  end_block  end_switch  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define global constant  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name version  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define global constant  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name patchlevel  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define global constant  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name release  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define global constant  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name platform  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define global constant  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name engine  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name description  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get instance config  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get version string  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name freeze  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define global constant  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name description  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name copyright  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get instance config  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get copyright string  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name freeze  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define global constant  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name copyright  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define global constant  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name version  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define global constant  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name release  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define global constant  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name platform  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name jruby version  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name constants  end_name  begin_operator  end_operator  begin_name version  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name freeze  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define global constant  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name jruby version  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name global variable  end_name  end_type  begin_name kcode gv  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name k code global variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define variable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name kcode gv  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define variable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name global variable  end_name  begin_operator  end_operator  begin_name copy  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name kcode gv  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name default rs  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get instance config  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get record separator  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name freeze  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name global variable  end_name  end_type  begin_name rs  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name string global variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name default rs  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define variable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name rs  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name set record separator var  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name rs  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get global variables  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set default separator  end_name  begin_argument_list  begin_argument  begin_expr  begin_name default rs  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define variable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name string global variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define variable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name string global variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define variable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name line number global variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name ruby fixnum  end_name  begin_operator  end_operator  begin_name one  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define variable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name lastline global variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define variable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name last exit status variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define variable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name error info global variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define variable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name non effective global variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get false  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get instance config  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get input field separator  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define variable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name global variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define variable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name global variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name ruby regexp  end_name  begin_operator  end_operator  begin_name new regexp  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get instance config  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get input field separator  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name verbose  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get instance config  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get verbose  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name verbose value  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name verbose  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name verbose value  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name verbose  end_name  begin_operator  end_operator  begin_name  begin_name boolean  end_name  begin_operator  end_operator  begin_name true  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name verbose value  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get true  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name verbose value  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get false  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define variable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name verbose global variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name verbose value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name debug  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new boolean  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get instance config  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is debug  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define variable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name debug global variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name debug  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define variable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name debug global variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name debug  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define variable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name safe global variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define variable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name backtrace global variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name stdin  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name ruby io  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name stdio  end_name  begin_operator  end_operator  begin_name in  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name stdout  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name ruby io  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name stdio  end_name  begin_operator  end_operator  begin_name out  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name stderr  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name ruby io  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name stdio  end_name  begin_operator  end_operator  begin_name err  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define variable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name input global variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name stdin  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define variable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name output global variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name stdout  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get global variables  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name alias  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get global variables  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name alias  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define variable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name output global variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name stderr  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get global variables  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name alias  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define global constant  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name stdin  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define global constant  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name stdout  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define global constant  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name stderr  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define variable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name loaded features  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define variable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name loaded features  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define variable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name load path  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define variable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name load path  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define variable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name load path  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define variable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name match match global variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define variable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name pre match global variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define variable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name post match global variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define variable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name last match global variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define variable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name back ref global variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment on platforms without a c library accessable through jna getpid will return hash code  end_comment  begin_comment as used to using to kill processes could take down many runtimes but by basing  end_comment  begin_comment on getpid where available we have the same semantics as mri  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get global variables  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name define readonly  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name value accessor  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new fixnum  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get posix  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name getpid  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment after defn of stderr as the call may produce warnings  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name define global env constants  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment fixme do we need the check or does main java not call this they should consolidate  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get global variables  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is nil  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get global variables  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name define readonly  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name value accessor  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new array  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get global variables  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name define readonly  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name value accessor  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get instance config  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is assume printing  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get true  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get global variables  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name define readonly  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name value accessor  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get instance config  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is assume loop  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get true  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get global variables  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name define readonly  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name value accessor  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get instance config  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is split  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get true  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get global variables  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name define readonly  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name value accessor  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get instance config  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is process line ends  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get true  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment argf object  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ruby args file  end_name  begin_operator  end_operator  begin_name init args file  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_specifier  end_specifier  begin_name ruby hash  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby class  end_name  end_type  begin_name klass  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby hash  end_name  end_type  begin_name other  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name super  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name klass  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name if none  end_name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name threshold  end_name  begin_operator  end_operator  begin_name initial threshold  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name table  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name other  end_name  begin_operator  end_operator  begin_name internal copy table  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name head  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name size  end_name  begin_operator  end_operator  begin_name  begin_name other  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  end_expr  end_expr_stmt  end_block 
 begin_specifier  end_specifier  begin_name ruby hash  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby class  end_name  end_type  begin_name klass  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name super  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name klass  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name if none  end_name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name alloc  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_specifier  end_specifier  begin_name ruby hash  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name this  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_specifier  end_specifier  begin_name ruby hash  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name default value  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name super  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get hash  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name if none  end_name  end_name  begin_operator  end_operator  begin_name default value  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name alloc  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment constructor for internal usage mainly for array array array and array uniq it doesn t initialize if none field end_comment begin_name ruby hash  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name object space  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name super  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get hash  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name object space  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name alloc  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment todo should this be deprecated to be efficient internals should deal with ruby hash directly end_comment begin_specifier  end_specifier  begin_name ruby hash  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name map  end_name  end_type  begin_name value map  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name default value  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name super  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get hash  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name if none  end_name  end_name  begin_operator  end_operator  begin_name default value  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name alloc  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name iter  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name value map  end_name  begin_operator  end_operator  begin_name entry set  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name iterator  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_call  begin_name  begin_name iter  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_incr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name map  end_name  begin_operator  end_operator  begin_name entry  end_name  end_name  end_type  begin_name e  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name map  end_name  begin_operator  end_operator  begin_name entry  end_name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name iter  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name internal put  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name i ruby object  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name get key  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name i ruby object  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  end_block 
begin_comment int downto end_commentbegin_comment todo make call coerced work in block context then fix downto step and upto end_comment begin_type  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name downto  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name to  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name block  end_name  end_type  begin_name block  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name this  end_name  begin_operator  end_operator  begin_name ruby fixnum  end_name  begin_operator  end_operator  begin_name to  end_name  begin_operator  end_operator  begin_name ruby fixnum  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name fixnum downto  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name ruby fixnum  end_name  begin_operator  end_operator  begin_name this  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get long value  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name ruby fixnum  end_name  begin_operator  end_operator  begin_name to  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get long value  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name block  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name duck downto  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name to  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name block  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_return  begin_expr  begin_name this  end_name  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name required  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name optional  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name reopen  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  end_type  begin_name args  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name invalid value exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new argument error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name tmp  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name type converter  end_name  begin_operator  end_operator  begin_name convert to type with check  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get io  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name tmp  end_name  begin_operator  end_operator  begin_name is nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_try  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby io  end_name  end_type  begin_name ios  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name ruby io  end_name  begin_operator  end_operator  begin_name tmp  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name  begin_name ios  end_name  begin_operator  end_operator  begin_name open file  end_name  end_name  begin_operator  end_operator  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name open file  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name this  end_name  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name open file  end_name  end_type  begin_name original file  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ios  end_name  begin_operator  end_operator  begin_name get open file checked  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name open file  end_name  end_type  begin_name self file  end_name  begin_init  begin_expr  begin_call  begin_name get open file checked  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name long  end_name  end_type  begin_name pos  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name original file  end_name  begin_operator  end_operator  begin_name is readable  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name pos  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name original file  end_name  begin_operator  end_operator  begin_name get main stream  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name fgetpos  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name original file  end_name  begin_operator  end_operator  begin_name get pipe stream  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name original file  end_name  begin_operator  end_operator  begin_name get pipe stream  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name fflush  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name original file  end_name  begin_operator  end_operator  begin_name is writable  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name original file  end_name  begin_operator  end_operator  begin_name get main stream  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name fflush  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name self file  end_name  begin_operator  end_operator  begin_name is writable  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name self file  end_name  begin_operator  end_operator  begin_name get write stream  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name fflush  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name self file  end_name  begin_operator  end_operator  begin_name set mode  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name original file  end_name  begin_operator  end_operator  begin_name get mode  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name self file  end_name  begin_operator  end_operator  begin_name set process  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name original file  end_name  begin_operator  end_operator  begin_name get process  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name self file  end_name  begin_operator  end_operator  begin_name set line number  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name original file  end_name  begin_operator  end_operator  begin_name get line number  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name self file  end_name  begin_operator  end_operator  begin_name set path  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name original file  end_name  begin_operator  end_operator  begin_name get path  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name self file  end_name  begin_operator  end_operator  begin_name set finalizer  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name original file  end_name  begin_operator  end_operator  begin_name get finalizer  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name channel descriptor  end_name  end_type  begin_name self descriptor  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name self file  end_name  begin_operator  end_operator  begin_name get main stream  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get descriptor  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name channel descriptor  end_name  end_type  begin_name original descriptor  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name original file  end_name  begin_operator  end_operator  begin_name get main stream  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get descriptor  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment confirm we re not reopening self s channel  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name self descriptor  end_name  begin_operator  end_operator  begin_name get channel  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name original descriptor  end_name  begin_operator  end_operator  begin_name get channel  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment check if we re a stdio io and ensure we re not badly mutilated  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name self descriptor  end_name  begin_operator  end_operator  begin_name get fileno  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name self descriptor  end_name  begin_operator  end_operator  begin_name get fileno  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name self file  end_name  begin_operator  end_operator  begin_name get main stream  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name clearerr  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment dup 2 new fd into self to preserve fileno and references to it  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name original descriptor  end_name  begin_operator  end_operator  begin_name dup 2 into  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name self descriptor  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment re register since fileno points at something new now  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name register descriptor  end_name  begin_argument_list  begin_argument  begin_expr  begin_name self descriptor  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name stream  end_name  end_type  begin_name pipe file  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name self file  end_name  begin_operator  end_operator  begin_name get pipe stream  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name mode  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name self file  end_name  begin_operator  end_operator  begin_name get mode  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name self file  end_name  begin_operator  end_operator  begin_name get main stream  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name fclose  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name self file  end_name  begin_operator  end_operator  begin_name set pipe stream  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo turn off readable am i reading this right  end_comment  begin_comment this only seems to be used while duping below since modes gets  end_comment  begin_comment reset to actual modes afterward  end_comment  begin_comment fptr mode m fmode readable fmode readable fmode writable  end_comment  begin_if  begin_condition  begin_expr  begin_name pipe file  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name self file  end_name  begin_operator  end_operator  begin_name set main stream  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name channel stream  end_name  begin_operator  end_operator  begin_name fdopen  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name original descriptor  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name mode flags  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name self file  end_name  begin_operator  end_operator  begin_name set pipe stream  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name pipe file  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name self file  end_name  begin_operator  end_operator  begin_name set main stream  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name channel stream  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name original descriptor  end_name  begin_operator  end_operator  begin_name dup 2  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name self descriptor  end_name  begin_operator  end_operator  begin_name get fileno  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment re register the descriptor  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name register descriptor  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name self file  end_name  begin_operator  end_operator  begin_name get main stream  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get descriptor  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment since we re not actually duping the incoming channel into our handler we need to  end_comment  begin_comment copy the original sync behavior from the other handler  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name self file  end_name  begin_operator  end_operator  begin_name get main stream  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set sync  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name self file  end_name  begin_operator  end_operator  begin_name get main stream  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is sync  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name self file  end_name  begin_operator  end_operator  begin_name set mode  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name mode  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_comment todo anything threads attached to original fd are notified of the close  end_comment  begin_comment see rb thread fd close  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name original file  end_name  begin_operator  end_operator  begin_name is readable  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name pos  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name self file  end_name  begin_operator  end_operator  begin_name seek  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name pos  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name stream  end_name  begin_operator  end_operator  begin_name seek set  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name original file  end_name  begin_operator  end_operator  begin_name seek  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name pos  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name stream  end_name  begin_operator  end_operator  begin_name seek set  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name self file  end_name  begin_operator  end_operator  begin_name get pipe stream  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name self descriptor  end_name  begin_operator  end_operator  begin_name get fileno  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name self file  end_name  begin_operator  end_operator  begin_name get pipe stream  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get descriptor  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get fileno  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name fd  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name self file  end_name  begin_operator  end_operator  begin_name get pipe stream  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get descriptor  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get fileno  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name original file  end_name  begin_operator  end_operator  begin_name get pipe stream  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name self file  end_name  begin_operator  end_operator  begin_name get pipe stream  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name fclose  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name self file  end_name  begin_operator  end_operator  begin_name set pipe stream  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name fd  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name original file  end_name  begin_operator  end_operator  begin_name get pipe stream  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get descriptor  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get fileno  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name self file  end_name  begin_operator  end_operator  begin_name get pipe stream  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name fclose  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name channel descriptor  end_name  end_type  begin_name new fd 2  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name original file  end_name  begin_operator  end_operator  begin_name get pipe stream  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get descriptor  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name dup 2  end_name  begin_argument_list  begin_argument  begin_expr  begin_name fd  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name self file  end_name  begin_operator  end_operator  begin_name set pipe stream  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name channel stream  end_name  begin_operator  end_operator  begin_name fdopen  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name new fd 2  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get io modes  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment re register since fileno points at something new now  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name register descriptor  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new fd 2  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_block  end_then  end_if  begin_comment todo restore binary mode  end_comment  begin_comment if fptr mode fmode binmode  end_comment  begin_comment rb io binmode io  end_comment  begin_comment   end_comment  begin_comment todo set our metaclass to target s class i e scary  end_comment  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name io exception  end_name  end_type  begin_name ex  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo better error handling  end_comment  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new io error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name ex  end_name  begin_operator  end_operator  begin_name get message  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name bad descriptor exception  end_name  end_type  begin_name ex  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new io error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name ex  end_name  begin_operator  end_operator  begin_name get message  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name pipe exception  end_name  end_type  begin_name ex  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new io error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name ex  end_name  begin_operator  end_operator  begin_name get message  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  end_block  end_then  begin_else  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name path string  end_name  begin_init  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name convert to string  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo check safe taint on incoming string  end_comment  begin_if  begin_condition  begin_expr  begin_name open file  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name open file  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name open file  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_try  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name mode flags  end_name  end_type  begin_name modes  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name mode string  end_name  begin_init  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name convert to string  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name modes  end_name  begin_operator  end_operator  begin_call  begin_name get io modes  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name mode string  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name open file  end_name  begin_operator  end_operator  begin_name set mode  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name modes  end_name  begin_operator  end_operator  begin_name get open file flags  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name modes  end_name  begin_operator  end_operator  begin_call  begin_name get io modes  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name path  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name path string  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment ruby code frequently uses a platform check to choose nul on windows  end_comment  begin_comment but since that check doesn t work well on j ruby we help it out  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name open file  end_name  begin_operator  end_operator  begin_name set path  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name path  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name open file  end_name  begin_operator  end_operator  begin_name get main stream  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name open file  end_name  begin_operator  end_operator  begin_name set main stream  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name channel stream  end_name  begin_operator  end_operator  begin_name fopen  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name path  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name modes  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name file exists exception  end_name  end_type  begin_name fee  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new errno eexist error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name path  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  begin_expr_stmt  begin_expr  begin_call  begin_name register descriptor  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name open file  end_name  begin_operator  end_operator  begin_name get main stream  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get descriptor  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name open file  end_name  begin_operator  end_operator  begin_name get pipe stream  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name open file  end_name  begin_operator  end_operator  begin_name get pipe stream  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name fclose  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name unregister descriptor  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name open file  end_name  begin_operator  end_operator  begin_name get pipe stream  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get descriptor  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get fileno  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name open file  end_name  begin_operator  end_operator  begin_name set pipe stream  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_name this  end_name  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_comment todo this is an freopen in mri this is close but not quite the same  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name open file  end_name  begin_operator  end_operator  begin_name get main stream  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name freopen  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name path  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get io modes  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name open file  end_name  begin_operator  end_operator  begin_name get mode as string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment re register  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name register descriptor  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name open file  end_name  begin_operator  end_operator  begin_name get main stream  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get descriptor  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name open file  end_name  begin_operator  end_operator  begin_name get pipe stream  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment todo pipe handler to be reopened with path and w mode  end_comment  end_block  end_then  end_if  end_block  end_else  end_if  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name pipe exception  end_name  end_type  begin_name pe  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new errno epipe error  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name io exception  end_name  end_type  begin_name ex  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new io error from exception  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ex  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name bad descriptor exception  end_name  end_type  begin_name ex  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new errno ebadf error  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name invalid value exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new errno einval error  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  end_block  end_else  end_if  begin_comment a potentially previously close io is being reopened  end_comment  begin_return  begin_expr  begin_name this  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name get io modes int from string  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name modes string  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name modes  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name length  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name modes string  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name length  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new argument error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_switch  begin_condition  begin_expr  begin_call  begin_name  begin_name modes string  end_name  begin_operator  end_operator  begin_name char at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name modes  end_name  begin_operator  end_operator  begin_name  begin_name mode flags  end_name  begin_operator  end_operator  begin_name rdonly  end_name  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name modes  end_name  begin_operator  end_operator  begin_name  begin_name mode flags  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_operator  end_operator  begin_name  begin_name mode flags  end_name  begin_operator  end_operator  begin_name wronly  end_name  end_name  begin_operator  end_operator  begin_name  begin_name mode flags  end_name  begin_operator  end_operator  begin_name creat  end_name  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name modes  end_name  begin_operator  end_operator  begin_name  begin_name mode flags  end_name  begin_operator  end_operator  begin_name wronly  end_name  end_name  begin_operator  end_operator  begin_name  begin_name mode flags  end_name  begin_operator  end_operator  begin_name trunc  end_name  end_name  begin_operator  end_operator  begin_name  begin_name mode flags  end_name  begin_operator  end_operator  begin_name creat  end_name  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_default  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new argument error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name modes  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_default  end_block  end_switch  begin_label  begin_name modifier loop  end_name  end_label  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name n  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name n  end_name  begin_operator  end_operator  begin_name length  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name n  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_switch  begin_condition  begin_expr  begin_call  begin_name  begin_name modes string  end_name  begin_operator  end_operator  begin_name char at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name n  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name modes  end_name  begin_operator  end_operator  begin_name  begin_name mode flags  end_name  begin_operator  end_operator  begin_name binary  end_name  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name modes  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name modes  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name mode flags  end_name  begin_operator  end_operator  begin_name accmode  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name mode flags  end_name  begin_operator  end_operator  begin_name rdwr  end_name  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_comment fixme add text mode to mode flags  end_comment  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_break  end_break  end_case  begin_default  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new argument error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name modes  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_default  end_block  end_switch  end_block  end_for  begin_return  begin_expr  begin_name modes  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name stream  end_name  end_type  begin_name fdopen  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name channel descriptor  end_name  end_type  begin_name existing descriptor  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name mode flags  end_name  end_type  begin_name modes  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name invalid value exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_comment see if we already have this descriptor open  end_comment  begin_comment if so then we can mostly share the handler keep open  end_comment  begin_comment file but possibly change the mode  end_comment  begin_if  begin_condition  begin_expr  begin_name existing descriptor  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment redundant done above as well  end_comment  begin_comment this seems unlikely to happen unless it s a totally bogus fileno  end_comment  begin_comment so do we even need to bother trying to create one  end_comment  begin_comment in fact we should probably raise an error yes  end_comment  begin_throw  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new errno ebadf error  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  begin_comment if mode null  end_comment  begin_comment mode r  end_comment  begin_comment   end_comment  begin_comment   end_comment  begin_comment try  end_comment  begin_comment open file set main stream stream for fileno get runtime fileno  end_comment  begin_comment catch bad descriptor exception e  end_comment  begin_comment throw get runtime new errno ebadf error  end_comment  begin_comment catch io exception e  end_comment  begin_comment throw get runtime new errno ebadf error  end_comment  begin_comment   end_comment  begin_comment modes new io modes get runtime mode  end_comment  begin_comment   end_comment  begin_comment register stream open file get main stream  end_comment  end_block  end_then  begin_else  begin_block  begin_comment we are creating a new io object that shares the same  end_comment  begin_comment io handler and fileno  end_comment  begin_return  begin_expr  begin_call  begin_name  begin_name channel stream  end_name  begin_operator  end_operator  begin_name fdopen  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name existing descriptor  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name modes  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_else  end_if  end_block 
begin_comment io write end_comment begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name required  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name write  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name obj  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name secure  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name ruby string  end_name  end_type  begin_name str  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name obj  end_name  begin_operator  end_operator  begin_name as string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo ruby reuses this logic for other write behavior by checking if it s an io and calling write again  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name str  end_name  begin_operator  end_operator  begin_name get byte list  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name length  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new fixnum  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_try  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name open file  end_name  end_type  begin_name my open file  end_name  begin_init  begin_expr  begin_call  begin_name get open file checked  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name my open file  end_name  begin_operator  end_operator  begin_name check writable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name written  end_name  begin_init  begin_expr  begin_call  begin_name fwrite  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name str  end_name  begin_operator  end_operator  begin_name get byte list  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name written  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment todo sys fail  end_comment  end_block  end_then  end_if  begin_comment if not sync we switch to write buffered mode  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name my open file  end_name  begin_operator  end_operator  begin_name is sync  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name my open file  end_name  begin_operator  end_operator  begin_name set write buffered  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new fixnum  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name written  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name io exception  end_name  end_type  begin_name ex  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new io error from exception  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ex  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name bad descriptor exception  end_name  end_type  begin_name ex  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new errno ebadf error  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name invalid value exception  end_name  end_type  begin_name ex  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new errno einval error  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name pipe exception  end_name  end_type  begin_name ex  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new errno epipe error  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  end_block 
 begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name fwrite  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name byte list  end_name  end_type  begin_name buffer  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name n  end_name  end_decl  begin_operator  end_operator  begin_decl  begin_type  end_type  begin_name r  end_name  end_decl  begin_operator  end_operator  begin_decl  begin_type  end_type  begin_name l  end_name  end_decl  begin_operator  end_operator  begin_decl  begin_type  end_type  begin_name offset  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name eagain  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name stream  end_name  end_type  begin_name write stream  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name open file  end_name  begin_operator  end_operator  begin_name get write stream  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name len  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name buffer  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name n  end_name  begin_operator  end_operator  begin_name len  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_return  begin_expr  begin_name n  end_name  end_expr  end_return  end_then  end_if  begin_try  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name open file  end_name  begin_operator  end_operator  begin_name is sync  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name open file  end_name  begin_operator  end_operator  begin_name fflush  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name write stream  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo why is this guarded  end_comment  begin_comment if rb thread fd writable fileno f  end_comment  begin_comment rb io check closed fptr  end_comment  begin_comment   end_comment  begin_while  begin_condition  begin_expr  begin_name offset  end_name  begin_operator  end_operator  begin_name len  end_name  end_expr  end_condition  begin_block  begin_expr_stmt  begin_expr  begin_name l  end_name  begin_operator  end_operator  begin_name n  end_name  end_expr  end_expr_stmt  begin_comment todo something about pipe buffer length here  end_comment  begin_expr_stmt  begin_expr  begin_name r  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name write stream  end_name  begin_operator  end_operator  begin_name get descriptor  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name write  end_name  begin_argument_list  begin_argument  begin_expr  begin_name buffer  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name offset  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name l  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name r  end_name  begin_operator  end_operator  begin_name len  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name len  end_name  end_expr  end_return  begin_comment everything written  end_comment  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name r  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name offset  end_name  begin_operator  end_operator  begin_name r  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name n  end_name  begin_operator  end_operator  begin_name r  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name eagain  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name eagain  end_name  begin_operator  end_operator  begin_call  begin_name wait writable  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name write stream  end_name  begin_operator  end_operator  begin_name get descriptor  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name open file  end_name  begin_operator  end_operator  begin_name check closed  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name offset  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name buffer  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  end_expr  end_return  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name eagain  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_return  begin_expr  begin_operator  end_operator  end_expr  end_return  end_block  end_else  end_if  end_block  end_while  begin_comment todo all this stuff some pipe logic some async thread stuff  end_comment  begin_comment retry  end_comment  begin_comment l n  end_comment  begin_comment if pipe buf l  end_comment  begin_comment rb thread critical  end_comment  begin_comment rb thread alone  end_comment  begin_comment wsplit p fptr  end_comment  begin_comment l pipe buf  end_comment  begin_comment   end_comment  begin_comment trap beg  end_comment  begin_comment r write fileno f rstring str ptr offset l  end_comment  begin_comment trap end  end_comment  begin_comment if r n return len  end_comment  begin_comment if 0 r  end_comment  begin_comment offset r  end_comment  begin_comment n r  end_comment  begin_comment errno eagain  end_comment  begin_comment   end_comment  begin_comment if rb io wait writable fileno f  end_comment  begin_comment rb io check closed fptr  end_comment  begin_comment if offset rstring str len  end_comment  begin_comment goto retry  end_comment  begin_comment   end_comment  begin_comment return 1 l  end_comment  end_block  end_then  end_if  begin_comment todo handle errors in buffered write by retrying until finished or file is closed  end_comment  begin_return  begin_expr  begin_call  begin_name  begin_name write stream  end_name  begin_operator  end_operator  begin_name fwrite  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name buffer  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  begin_comment while errno 0 offset r fwrite rstring str ptr offset 1 n f n r 0  end_comment  begin_comment if ferror f  end_comment  begin_comment   end_comment  begin_comment if rb io wait writable fileno f  end_comment  begin_comment rb io check closed fptr  end_comment  begin_comment clearerr f  end_comment  begin_comment if offset rstring str len  end_comment  begin_comment continue  end_comment  begin_comment   end_comment  begin_comment return 1 l  end_comment  begin_comment   end_comment  begin_comment   end_comment  begin_comment return len n  end_comment  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name io exception  end_name  end_type  begin_name ex  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new io error from exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ex  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name bad descriptor exception  end_name  end_type  begin_name ex  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new errno ebadf error  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  end_block 
 begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name required  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name backtrace  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name putc  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name object  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name putc  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name object  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name putc  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name maybe io  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name object  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name c  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ruby numeric  end_name  begin_operator  end_operator  begin_name num 2 chr  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name object  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name maybe io  end_name  begin_operator  end_operator  begin_name ruby io  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment fixme we should probably still be dyncalling write here  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name ruby io  end_name  end_type  begin_name io  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name ruby io  end_name  begin_operator  end_operator  begin_name maybe io  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name open file  end_name  end_type  begin_name my open file  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name io  end_name  begin_operator  end_operator  begin_name get open file checked  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name my open file  end_name  begin_operator  end_operator  begin_name check writable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name stream  end_name  end_type  begin_name write stream  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name my open file  end_name  begin_operator  end_operator  begin_name get write stream  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name write stream  end_name  begin_operator  end_operator  begin_name fputc  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name ruby numeric  end_name  begin_operator  end_operator  begin_name num 2 chr  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name object  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name my open file  end_name  begin_operator  end_operator  begin_name is sync  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name my open file  end_name  begin_operator  end_operator  begin_name fflush  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name write stream  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name io exception  end_name  end_type  begin_name ex  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new io error from exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ex  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name bad descriptor exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new errno ebadf error  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name invalid value exception  end_name  end_type  begin_name ex  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new errno einval error  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name pipe exception  end_name  end_type  begin_name ex  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new errno epipe error  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name maybe io  end_name  begin_operator  end_operator  begin_name call method  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name ruby string  end_name  begin_operator  end_operator  begin_name new string no copy  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name byte  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_operator  end_operator  begin_name byte  end_name  begin_operator  end_operator  begin_name c  end_name  end_expr  end_block  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_return  begin_expr  begin_name object  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name close 2  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name open file  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_return  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name interrupt blocking threads  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment fixme why did we go to this trouble and not use these descriptors channel descriptor main pipe if open file get pipe stream null pipe open file get pipe stream get descriptor else if open file get main stream null return runtime get nil pipe null main open file get main stream get descriptor  end_comment  begin_comment cleanup raising errors if any  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name open file  end_name  begin_operator  end_operator  begin_name cleanup  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo notify threads waiting on descriptors io probably not  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name open file  end_name  begin_operator  end_operator  begin_name get process  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name open file  end_name  begin_operator  end_operator  begin_name get process  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name destroy  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name process result  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ruby process  end_name  begin_operator  end_operator  begin_name ruby status  end_name  begin_operator  end_operator  begin_name new process status  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name open file  end_name  begin_operator  end_operator  begin_name get process  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name wait for  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get global variables  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name process result  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name interrupted exception  end_name  end_type  begin_name ie  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo do something here  end_comment  end_block  end_catch  end_try  end_block  end_then  end_if  begin_return  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name write  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name byte list  end_name  end_type  begin_name byte list  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name call method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name ruby string  end_name  begin_operator  end_operator  begin_name new string shared  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name byte list  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name write  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name maybe io  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name byte list  end_name  end_type  begin_name byte list  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name maybe io  end_name  begin_operator  end_operator  begin_name call method  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name ruby string  end_name  begin_operator  end_operator  begin_name new string shared  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name byte list  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name required  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name optional  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name sysread  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  end_type  begin_name args  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name len  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name int  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ruby numeric  end_name  begin_operator  end_operator  begin_name num 2 long  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name len  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_throw  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new argument error  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_then  end_if  begin_try  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby string  end_name  end_type  begin_name str  end_name  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name byte list  end_name  end_type  begin_name buffer  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name is nil  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name len  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name ruby string  end_name  begin_operator  end_operator  begin_name new empty string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name buffer  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name byte list  end_name  begin_argument_list  begin_argument  begin_expr  begin_name len  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name str  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ruby string  end_name  begin_operator  end_operator  begin_name new string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name buffer  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name str  end_name  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name convert to string  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name str  end_name  begin_operator  end_operator  begin_name modify  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name len  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name len  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name str  end_name  end_expr  end_return  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name buffer  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name str  end_name  begin_operator  end_operator  begin_name get byte list  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buffer  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name open file  end_name  end_type  begin_name my open file  end_name  begin_init  begin_expr  begin_call  begin_name get open file checked  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name my open file  end_name  begin_operator  end_operator  begin_name check readable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name my open file  end_name  begin_operator  end_operator  begin_name get main stream  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name read data buffered  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new io error  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_comment todo ruby locks the string here  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name my open file  end_name  begin_operator  end_operator  begin_name check closed  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo ruby re checks that the buffer string hasn t been modified  end_comment  begin_comment select until read is ready  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get thread  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name before blocking call  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get thread  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name select  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name selection key  end_name  begin_operator  end_operator  begin_name op read  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name bytes read  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name my open file  end_name  begin_operator  end_operator  begin_name get main stream  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get descriptor  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name read  end_name  begin_argument_list  begin_argument  begin_expr  begin_name len  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name str  end_name  begin_operator  end_operator  begin_name get byte list  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo ruby unlocks the string here  end_comment  begin_comment todo ruby truncates string to specific size here but our bytelist should handle this already  end_comment  begin_if  begin_condition  begin_expr  begin_name bytes read  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name bytes read  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name len  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new eof error  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name str  end_name  begin_operator  end_operator  begin_name set taint  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name str  end_name  end_expr  end_return  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name bad descriptor exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new errno ebadf error  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name invalid value exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new errno einval error  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name pipe exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new errno epipe error  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name eof exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new eof error  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name io exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment all errors to sysread should be system call errors but on a closed stream  end_comment  begin_comment ruby returns an io error java throws same exception for all errors so  end_comment  begin_comment we resort to this hack  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name get message  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new io error  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name get message  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_throw  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new system call error  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name get message  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_finally  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get thread  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name after blocking call  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_finally  end_try  end_block 
 begin_type  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name read not all  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name open file  end_name  end_type  begin_name my open file  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name length  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby string  end_name  end_type  begin_name str  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name my open file  end_name  begin_operator  end_operator  begin_name check readable  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name my open file  end_name  begin_operator  end_operator  begin_name set read buffered  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name my open file  end_name  begin_operator  end_operator  begin_name get main stream  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name feof  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_comment todo ruby locks the string here  end_comment  begin_comment read check from mri io c  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name read check  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name my open file  end_name  begin_operator  end_operator  begin_name get main stream  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo check buffer length again  end_comment  begin_comment if rstring str len len  end_comment  begin_comment rb raise rb e runtime error buffer string modified  end_comment  begin_comment   end_comment  begin_comment todo read into buffer using all the fread logic  end_comment  begin_comment int read open file get main stream fread buffer  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name byte list  end_name  end_type  begin_name new buffer  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name my open file  end_name  begin_operator  end_operator  begin_name get main stream  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name fread  end_name  begin_argument_list  begin_argument  begin_expr  begin_name length  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo ruby unlocks the string here  end_comment  begin_comment todo change this to check number read into buffer once that s working  end_comment  begin_comment if read 0  end_comment  begin_if  begin_condition  begin_expr  begin_name new buffer  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name new buffer  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name my open file  end_name  begin_operator  end_operator  begin_name get main stream  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name my open file  end_name  begin_operator  end_operator  begin_name get main stream  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name feof  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment truncate buffer string to zero if provided  end_comment  begin_if  begin_condition  begin_expr  begin_name str  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name str  end_name  begin_operator  end_operator  begin_name set value  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name byte list  end_name  begin_operator  end_operator  begin_name empty bytelist  end_name  begin_operator  end_operator  begin_name dup  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_comment removed while working on jruby 2386 since fixes for that  end_comment  begin_comment modified eof logic such that this check is not really valid  end_comment  begin_comment we expect that an eof exception will be thrown now in eof  end_comment  begin_comment cases  end_comment  begin_comment if length 0  end_comment  begin_comment i think this is only partly correct sys fail based on errno in ruby  end_comment  begin_comment throw get runtime new eof error  end_comment  begin_comment   end_comment  end_block  end_then  end_if  begin_comment todo ruby truncates string to specific size here but our bytelist should handle this already  end_comment  begin_comment fixme i don t like the null checks here  end_comment  begin_if  begin_condition  begin_expr  begin_name str  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name new buffer  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name str  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ruby string  end_name  begin_operator  end_operator  begin_name new empty string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name str  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ruby string  end_name  begin_operator  end_operator  begin_name new string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name new buffer  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  begin_else  begin_block  begin_if  begin_condition  begin_expr  begin_name new buffer  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name str  end_name  begin_operator  end_operator  begin_name empty  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name str  end_name  begin_operator  end_operator  begin_name set value  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new buffer  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name str  end_name  begin_operator  end_operator  begin_name set taint  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name str  end_name  end_expr  end_return  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name eof exception  end_name  end_type  begin_name ex  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new eof error  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name pipe exception  end_name  end_type  begin_name ex  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new errno epipe error  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name invalid value exception  end_name  end_type  begin_name ex  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new errno einval error  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name io exception  end_name  end_type  begin_name ex  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new io error from exception  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ex  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name bad descriptor exception  end_name  end_type  begin_name ex  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new errno ebadf error  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  end_block 
 begin_type  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name read all  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name buffer  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name bad descriptor exception  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name eof exception  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name io exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  begin_init  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo handle writing into original buffer better  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name ruby string  end_name  end_type  begin_name str  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name buffer  end_name  begin_operator  end_operator  begin_name ruby string  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name str  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name ruby string  end_name  begin_operator  end_operator  begin_name buffer  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment todo ruby locks the string here  end_comment  begin_comment read check from mri io c  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name open file  end_name  begin_operator  end_operator  begin_name get main stream  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name read data buffered  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name open file  end_name  begin_operator  end_operator  begin_name check closed  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name byte list  end_name  end_type  begin_name new buffer  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name open file  end_name  begin_operator  end_operator  begin_name get main stream  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name readall  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo same zero length checks as file above  end_comment  begin_if  begin_condition  begin_expr  begin_name str  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name new buffer  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name str  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ruby string  end_name  begin_operator  end_operator  begin_name new empty string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name str  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ruby string  end_name  begin_operator  end_operator  begin_name new string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name new buffer  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  begin_else  begin_block  begin_if  begin_condition  begin_expr  begin_name new buffer  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name str  end_name  begin_operator  end_operator  begin_name empty  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name str  end_name  begin_operator  end_operator  begin_name set value  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new buffer  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name str  end_name  begin_operator  end_operator  begin_name taint  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get current context  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name str  end_name  end_expr  end_return  begin_comment long bytes 0  end_comment  begin_comment long n  end_comment  begin_comment   end_comment  begin_comment if siz 0 siz bufsiz  end_comment  begin_comment if nil p str  end_comment  begin_comment str rb str new 0 siz  end_comment  begin_comment   end_comment  begin_comment else  end_comment  begin_comment rb str resize str siz  end_comment  begin_comment   end_comment  begin_comment for  end_comment  begin_comment rb str locktmp str  end_comment  begin_comment read check fptr f  end_comment  begin_comment n io fread rstring str ptr bytes siz bytes fptr  end_comment  begin_comment rb str unlocktmp str  end_comment  begin_comment if n 0 bytes 0  end_comment  begin_comment if fptr f break  end_comment  begin_comment if feof fptr f break  end_comment  begin_comment if ferror fptr f break  end_comment  begin_comment rb sys fail fptr path  end_comment  begin_comment   end_comment  begin_comment bytes n  end_comment  begin_comment if bytes siz break  end_comment  begin_comment siz bufsiz  end_comment  begin_comment rb str resize str siz  end_comment  begin_comment   end_comment  begin_comment if bytes siz rb str resize str bytes  end_comment  begin_comment obj taint str  end_comment  begin_comment   end_comment  begin_comment return str  end_comment  end_block 
 begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name select static  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  end_type  begin_name args  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name selector  end_name  end_type  begin_name selector  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name set  end_name  end_type  begin_name pending  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name hash set  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name set  end_name  end_type  begin_name unselectable reads  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name hash set  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name set  end_name  end_type  begin_name unselectable writes  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name hash set  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name map  end_name  begin_argument_list  begin_argument  begin_name ruby io  end_name  end_argument  begin_argument  begin_name boolean  end_name  end_argument  end_argument_list  end_name  end_type  begin_name blocking  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name hash map  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name selector  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name selector  end_name  begin_operator  end_operator  begin_name open  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name is nil  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment read  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name check array type  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name ruby array  end_name  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get list  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name iterator  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_call  begin_name  begin_name i  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_incr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name obj  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name i ruby object  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name i  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name ruby io  end_name  end_type  begin_name io obj  end_name  begin_init  begin_expr  begin_call  begin_name convert to io  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name obj  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment save blocking state  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name io obj  end_name  begin_operator  end_operator  begin_name get channel  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name selectable channel  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name blocking  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name io obj  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name selectable channel  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name io obj  end_name  begin_operator  end_operator  begin_name get channel  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name is blocking  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name register select  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name selector  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name obj  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name io obj  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name selection key  end_name  begin_operator  end_operator  begin_name op read  end_name  end_name  begin_operator  end_operator  begin_name  begin_name selection key  end_name  begin_operator  end_operator  begin_name op accept  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name io obj  end_name  begin_operator  end_operator  begin_name write data buffered  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name pending  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name obj  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  begin_else  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name io obj  end_name  begin_operator  end_operator  begin_name open file  end_name  begin_operator  end_operator  begin_name get mode  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name  begin_name open file  end_name  begin_operator  end_operator  begin_name readable  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name unselectable reads  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name obj  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_else  end_if  end_block  end_for  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name is nil  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment write  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name check array type  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name ruby array  end_name  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get list  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name iterator  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_call  begin_name  begin_name i  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_incr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name obj  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name i ruby object  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name i  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name ruby io  end_name  end_type  begin_name io obj  end_name  begin_init  begin_expr  begin_call  begin_name convert to io  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name obj  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment save blocking state  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name blocking  end_name  begin_operator  end_operator  begin_name contains key  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name io obj  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name io obj  end_name  begin_operator  end_operator  begin_name get channel  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name selectable channel  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name blocking  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name io obj  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name selectable channel  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name io obj  end_name  begin_operator  end_operator  begin_name get channel  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name is blocking  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name register select  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name selector  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name obj  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name io obj  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name selection key  end_name  begin_operator  end_operator  begin_name op write  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name io obj  end_name  begin_operator  end_operator  begin_name open file  end_name  begin_operator  end_operator  begin_name get mode  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name  begin_name open file  end_name  begin_operator  end_operator  begin_name writable  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name unselectable writes  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name obj  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_for  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name is nil  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name check array type  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment java s select doesn t do anything about this so we leave it be  end_comment  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name has timeout  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name is nil  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name long  end_name  end_type  begin_name timeout  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name has timeout  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name time arg  end_name  begin_init  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name time arg  end_name  begin_operator  end_operator  begin_name ruby float  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name timeout  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name round  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name ruby float  end_name  begin_operator  end_operator  begin_name time arg  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get double value  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name time arg  end_name  begin_operator  end_operator  begin_name ruby fixnum  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name timeout  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name round  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name ruby fixnum  end_name  begin_operator  end_operator  begin_name time arg  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get double value  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_comment todo mri also can hadle bignum here  end_comment  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new type error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name time arg  end_name  begin_operator  end_operator  begin_name get meta class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_else  end_if  end_else  end_if  begin_if  begin_condition  begin_expr  begin_name timeout  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new argument error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name pending  end_name  begin_operator  end_operator  begin_name is empty  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name unselectable reads  end_name  begin_operator  end_operator  begin_name is empty  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name unselectable writes  end_name  begin_operator  end_operator  begin_name is empty  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name has timeout  end_name  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name timeout  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name selector  end_name  begin_operator  end_operator  begin_name select now  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name selector  end_name  begin_operator  end_operator  begin_name select  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name timeout  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name selector  end_name  begin_operator  end_operator  begin_name select  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name selector  end_name  begin_operator  end_operator  begin_name select now  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name list  end_name  end_type  begin_name r  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name array list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name list  end_name  end_type  begin_name w  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name array list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name list  end_name  end_type  begin_name e  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name array list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name iterator  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name selector  end_name  begin_operator  end_operator  begin_name selected keys  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name iterator  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_call  begin_name  begin_name i  end_name  begin_operator  end_operator  begin_name has next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_incr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name selection key  end_name  end_type  begin_name key  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name selection key  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name i  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name interest and ready  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name key  end_name  begin_operator  end_operator  begin_name interest ops  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name key  end_name  begin_operator  end_operator  begin_name ready ops  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name interest and ready  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name selection key  end_name  begin_operator  end_operator  begin_name op read  end_name  end_name  begin_operator  end_operator  begin_name  begin_name selection key  end_name  begin_operator  end_operator  begin_name op accept  end_name  end_name  begin_operator  end_operator  begin_name  begin_name selection key  end_name  begin_operator  end_operator  begin_name op connect  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name r  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name key  end_name  begin_operator  end_operator  begin_name attachment  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name pending  end_name  begin_operator  end_operator  begin_name remove  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name key  end_name  begin_operator  end_operator  begin_name attachment  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name interest and ready  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name selection key  end_name  begin_operator  end_operator  begin_name op write  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name w  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name key  end_name  begin_operator  end_operator  begin_name attachment  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name cancelled key exception  end_name  end_type  begin_name cke  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo is this the right thing to do  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name pending  end_name  begin_operator  end_operator  begin_name remove  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name key  end_name  begin_operator  end_operator  begin_name attachment  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name key  end_name  begin_operator  end_operator  begin_name attachment  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_catch  end_try  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name r  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name pending  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name r  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name unselectable reads  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name w  end_name  begin_operator  end_operator  begin_name add all  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name unselectable writes  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment make all sockets blocking as configured again  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name selector  end_name  begin_operator  end_operator  begin_name close  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment close unregisters all channels so we can safely reset blocking modes  end_comment  begin_for  begin_init  begin_decl  begin_type  begin_name  begin_name map  end_name  begin_operator  end_operator  begin_name entry  end_name  end_name  end_type  begin_name blocking entry  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name blocking  end_name  begin_operator  end_operator  begin_name entry set  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name selectable channel  end_name  end_type  begin_name channel  end_name  begin_init  begin_expr  begin_call  begin_name selectable channel  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name ruby io  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name blocking entry  end_name  begin_operator  end_operator  begin_name get key  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get channel  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_synchronized  begin_expr  begin_call  begin_name  begin_name channel  end_name  begin_operator  end_operator  begin_name blocking lock  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name channel  end_name  begin_operator  end_operator  begin_name configure blocking  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name boolean  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name blocking entry  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_synchronized  end_block  end_for  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name r  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name w  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name list  end_name  end_type  begin_name ret  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name array list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ret  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name ruby array  end_name  begin_operator  end_operator  begin_name new array  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name r  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ret  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name ruby array  end_name  begin_operator  end_operator  begin_name new array  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name w  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ret  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name ruby array  end_name  begin_operator  end_operator  begin_name new array  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name e  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_call  begin_name  begin_name ruby array  end_name  begin_operator  end_operator  begin_name new array  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name ret  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name io exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new io error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name get message  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_finally  begin_block  begin_if  begin_condition  begin_expr  begin_name selector  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name selector  end_name  begin_operator  end_operator  begin_name close  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  end_block  end_catch  end_try  end_block  end_then  end_if  end_block  end_finally  end_try  end_block 
begin_comment nio based pipe end_comment begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name meta  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name pipe  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name recv  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_comment todo this isn t an exact port of mri s pipe behavior so revisit  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name pipe  end_name  end_type  begin_name pipe  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name pipe  end_name  begin_operator  end_operator  begin_name open  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name ruby io  end_name  end_type  begin_name source  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name ruby io  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name pipe  end_name  begin_operator  end_operator  begin_name source  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name ruby io  end_name  end_type  begin_name sink  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name ruby io  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name pipe  end_name  begin_operator  end_operator  begin_name sink  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name sink  end_name  begin_operator  end_operator  begin_name open file  end_name  begin_operator  end_operator  begin_name get main stream  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set sync  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new array no copy  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_name source  end_name  end_expr  begin_operator  end_operator  begin_expr  begin_name sink  end_name  end_expr  end_block  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment options code opt code can have the following keys mode same as code mode code parameter external encoding external encoding for the io is a synonym for the default external encoding internal encoding internal encoding for the io is a synonym for the default internal encoding if the value is nil no conversion occurs encoding specifies external and internal encodings as extern intern textmode if the value is truth value same as b in argument code mode code binmode if the value is truth value same as t in argument code mode code also code opt code can have same keys in code string encode code for controlling conversion between the external encoding and the internal encoding end_comment begin_type  begin_specifier  end_specifier  begin_name mode flags  end_name  end_type  begin_name parse options  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name options  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name mode flags  end_name  end_type  begin_name modes  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name ruby hash  end_name  end_type  begin_name ruby options  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name ruby hash  end_name  begin_operator  end_operator  begin_name options  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name internal encoding option  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ruby options  end_name  begin_operator  end_operator  begin_name fast a ref  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new symbol  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name external encoding option  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ruby options  end_name  begin_operator  end_operator  begin_name fast a ref  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new symbol  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name ruby string  end_name  end_type  begin_name dash  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name external encoding option  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name external encoding option  end_name  begin_operator  end_operator  begin_name is nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name dash  end_name  begin_operator  end_operator  begin_name eql  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name external encoding option  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name external encoding option  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ruby encoding  end_name  begin_operator  end_operator  begin_name get default external  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name set external encoding  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name external encoding option  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name internal encoding option  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name internal encoding option  end_name  begin_operator  end_operator  begin_name is nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name dash  end_name  begin_operator  end_operator  begin_name eql  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name internal encoding option  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name internal encoding option  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ruby encoding  end_name  begin_operator  end_operator  begin_name get default internal  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name set internal encoding  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name internal encoding option  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name encoding  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ruby options  end_name  begin_operator  end_operator  begin_name fast a ref  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new symbol  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name encoding  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name encoding  end_name  begin_operator  end_operator  begin_name is nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name external encoding option  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name external encoding option  end_name  begin_operator  end_operator  begin_name is nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get warnings  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name warn  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name encoding  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name internal encoding option  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name internal encoding option  end_name  begin_operator  end_operator  begin_name is nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get warnings  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name warn  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name encoding  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name parse encoding from string  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name encoding  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_else  end_if  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name ruby options  end_name  begin_operator  end_operator  begin_name contains key  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new symbol  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name modes  end_name  begin_operator  end_operator  begin_call  begin_name parse modes 19  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name ruby options  end_name  begin_operator  end_operator  begin_name fast a ref  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new symbol  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name as string  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment fixme check how ruby 1 9 handles this  end_comment  begin_comment if ruby options contains key runtime new symbol textmode  end_comment  begin_comment ruby options fast a ref runtime new symbol textmode is true  end_comment  begin_comment try  end_comment  begin_comment modes get io modes runtime t  end_comment  begin_comment catch invalid value exception e  end_comment  begin_comment throw get runtime new errno einval error  end_comment  begin_comment   end_comment  begin_comment   end_comment  begin_comment   end_comment  begin_comment if ruby options contains key runtime new symbol binmode  end_comment  begin_comment ruby options fast a ref runtime new symbol binmode is true  end_comment  begin_comment try  end_comment  begin_comment modes get io modes runtime b  end_comment  begin_comment catch invalid value exception e  end_comment  begin_comment throw get runtime new errno einval error  end_comment  begin_comment   end_comment  begin_comment   end_comment  begin_return  begin_expr  begin_name modes  end_name  end_expr  end_return  end_block 
begin_comment todo someday enable end_comment begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name optional  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name subclasses  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name maybe class  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  end_type  begin_name args  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby class  end_name  end_type  begin_name clazz  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name maybe class  end_name  begin_operator  end_operator  begin_name ruby class  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name clazz  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name ruby class  end_name  begin_operator  end_operator  begin_name maybe class  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new type error  end_name  begin_argument_list  begin_argument  begin_expr  begin_name maybe class  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get class class  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_else  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name recursive  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_name ruby boolean  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name recursive  end_name  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name is true  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new type error  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name fast get class  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  end_if  begin_return  begin_expr  begin_call  begin_name  begin_name ruby array  end_name  begin_operator  end_operator  begin_name new array  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name clazz  end_name  begin_operator  end_operator  begin_name subclasses  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name recursive  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name freeze  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name method missing  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name clazz  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  end_type  begin_name args  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name block  end_name  end_type  begin_name block  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name ruby kernel  end_name  begin_operator  end_operator  begin_name method missing  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name private  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name call type  end_name  begin_operator  end_operator  begin_name normal  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name block  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name method missing  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name clazz  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  end_type  begin_name args  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name block  end_name  end_type  begin_name block  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name ruby kernel  end_name  begin_operator  end_operator  begin_name method missing  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name protected  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name call type  end_name  begin_operator  end_operator  begin_name normal  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name block  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name method missing  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name clazz  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  end_type  begin_name args  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name block  end_name  end_type  begin_name block  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name ruby kernel  end_name  begin_operator  end_operator  begin_name method missing  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name public  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name call type  end_name  begin_operator  end_operator  begin_name variable  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name block  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name method missing  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name clazz  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  end_type  begin_name args  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name block  end_name  end_type  begin_name block  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name ruby kernel  end_name  begin_operator  end_operator  begin_name method missing  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name public  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name call type  end_name  begin_operator  end_operator  begin_name super  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name block  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name method missing  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name clazz  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  end_type  begin_name args  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name block  end_name  end_type  begin_name block  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name ruby kernel  end_name  begin_operator  end_operator  begin_name method missing  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name public  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name call type  end_name  begin_operator  end_operator  begin_name normal  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name block  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name method missing  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name recv  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name visibility  end_name  end_type  begin_name last vis  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name call type  end_name  end_type  begin_name last call type  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  end_type  begin_name args  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name block  end_name  end_type  begin_name block  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo pass this in  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name ruby symbol  end_name  end_type  begin_name symbol  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new symbol  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment create a lightweight thunk  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name msg  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name ruby name error  end_name  begin_operator  end_operator  begin_name ruby name error message  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name recv  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name symbol  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name last vis  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name last call type  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name i ruby object  end_name  begin_index  end_index  end_type  begin_name ex args  end_name  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name ruby class  end_name  end_type  begin_name exc  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name last call type  end_name  begin_operator  end_operator  begin_name  begin_name call type  end_name  begin_operator  end_operator  begin_name variable  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name exc  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get no method error  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name ex args  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_name msg  end_name  end_expr  begin_operator  end_operator  begin_expr  begin_name symbol  end_name  end_expr  begin_operator  end_operator  begin_expr  begin_call  begin_name  begin_name ruby array  end_name  begin_operator  end_operator  begin_name new array no copy  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_block  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name exc  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get name error  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name ex args  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_name msg  end_name  end_expr  begin_operator  end_operator  begin_expr  begin_name symbol  end_name  end_expr  end_block  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name raise exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name ruby exception  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name exc  end_name  begin_operator  end_operator  begin_name new instance  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name ex args  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name null block  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block 
begin_comment fixme add at exit and finalizers to exit then make exit bang not call those end_comment begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name optional  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name module  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name visibility  end_name  begin_operator  end_operator  begin_name private  end_name  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name exit  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name recv  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  end_type  begin_name args  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name exit  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name recv  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_call  begin_name  begin_name recv  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get nil  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  begin_comment not reached  end_comment  end_block 
begin_comment not reached end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name exit  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  end_type  begin_name args  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name hard  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name secure  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name status  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby object  end_name  end_type  begin_name argument  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name ruby object  end_name  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name argument  end_name  begin_operator  end_operator  begin_name ruby fixnum  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name status  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ruby numeric  end_name  begin_operator  end_operator  begin_name fix 2 int  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name argument  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name status  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name argument  end_name  begin_operator  end_operator  begin_name is false  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name hard  end_name  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name main exit exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name status  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  begin_else  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new system exit  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name status  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_else  end_if  end_block 
 begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  begin_block  begin_expr  end_expr  begin_operator  end_operator  begin_argument  begin_expr  end_expr  end_argument  end_block  end_expr  end_argument  begin_argument  begin_expr  begin_name optional  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name frame  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name module  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name visibility  end_name  begin_operator  end_operator  begin_name private  end_name  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name raise  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name recv  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  end_type  begin_name args  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name block  end_name  end_type  begin_name block  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment fixme pass block down  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name last exception  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get global variables  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name last exception  end_name  begin_operator  end_operator  begin_name is nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name raise exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get runtime error  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name raise exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name ruby exception  end_name  begin_operator  end_operator  begin_name last exception  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name exception  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_name ruby string  end_name  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name raise exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name ruby exception  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get runtime error  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new instance  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name block  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name responds to  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new type error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name exception  end_name  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name call method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name responds to  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new type error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name exception  end_name  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name call method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name fast get class  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is instance  end_name  begin_argument_list  begin_argument  begin_expr  begin_name exception  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new type error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name ruby exception  end_name  begin_operator  end_operator  begin_name exception  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name set backtrace  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get debug  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is true  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name print exception summary  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name ruby exception  end_name  begin_operator  end_operator  begin_name exception  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name raise exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name ruby exception  end_name  begin_operator  end_operator  begin_name exception  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  begin_block  begin_expr  end_expr  end_block  end_expr  end_argument  begin_argument  begin_expr  begin_name required  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name rest  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name module  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name visibility  end_name  begin_operator  end_operator  begin_name private  end_name  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name exec  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name recv  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  end_type  begin_name args  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment this is a fairly specific hack for empty string but it does the job  end_comment  begin_if  begin_condition  begin_expr  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name convert to string  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is empty  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new errno enoent error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name convert to string  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to string  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name result code  end_name  end_decl  end_decl_stmt  begin_try  begin_block  begin_comment todo exec should replace the current process  end_comment  begin_comment this could be possible with jna  end_comment  begin_expr_stmt  begin_expr  begin_name result code  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name shell launcher  end_name  begin_operator  end_operator  begin_name exec and wait  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new errno enoent error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  begin_expr_stmt  begin_expr  begin_call  begin_name exit  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new fixnum  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name result code  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_block  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment not reached  end_comment  begin_return  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment create the ruby method class and add it to the ruby runtime end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name ruby class  end_name  end_type  begin_name create method class  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo not allocatable allocator is probably ok here confirm jruby 415  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name ruby class  end_name  end_type  begin_name method class  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define class  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get object  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name object allocator  end_name  begin_operator  end_operator  begin_name not allocatable allocator  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name set method  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name method class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method class  end_name  begin_operator  end_operator  begin_name define annotated methods  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name ruby method  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name method class  end_name  end_expr  end_return  end_block 
begin_comment create a proc object end_comment begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name frame  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name to proc  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name block  end_name  end_type  begin_name unused block  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name dynamic scope  end_name  end_type  begin_name current scope  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get current scope  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name method block  end_name  end_type  begin_name mb  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name method block  end_name  end_super  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name current scope  end_name  begin_operator  end_operator  begin_name get static scope  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  begin_block  begin_function  begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name callback  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name value  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name method  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name block  end_name  end_type  begin_name block  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name bmcall  end_name  begin_argument_list  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name block  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_function  end_block  end_class  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name block  end_name  end_type  begin_name block  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name method block  end_name  begin_operator  end_operator  begin_name create method block  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get top self  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get current scope  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name mb  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  end_expr  end_condition  begin_block  begin_try  begin_block  begin_comment fixme we should not be regenerating this over and over  end_comment  begin_return  begin_expr  begin_call  begin_name mproc  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name block  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name  begin_name jump exception  end_name  begin_operator  end_operator  begin_name break jump  end_name  end_name  end_type  begin_name bj  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_name i ruby object  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name bj  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name  begin_name jump exception  end_name  begin_operator  end_operator  begin_name return jump  end_name  end_name  end_type  begin_name rj  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_name i ruby object  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name rj  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name  begin_name jump exception  end_name  begin_operator  end_operator  begin_name retry jump  end_name  end_name  end_type  begin_name rj  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment execute iterate method again  end_comment  end_block  end_catch  end_try  end_block  end_while  end_block 
begin_comment delegate a block call to a bound method call used by the ruby method to proc method end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name bmcall  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name block arg  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name arg 1  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name block  end_name  end_type  begin_name unused block  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name arg 1  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get current context  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name block arg  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name ruby method  end_name  begin_operator  end_operator  begin_name arg 1  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name call  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name i ruby object  end_name  begin_operator  end_operator  begin_name null array  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name null block  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name block arg  end_name  begin_operator  end_operator  begin_name ruby array  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment enebo very wrong  end_comment  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name ruby method  end_name  begin_operator  end_operator  begin_name arg 1  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name call  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name ruby array  end_name  begin_operator  end_operator  begin_name block arg  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name to java array  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name null block  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_else  end_if  begin_comment enebo very wrong  end_comment  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name ruby method  end_name  begin_operator  end_operator  begin_name arg 1  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name call  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_name block arg  end_name  end_expr  end_block  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name null block  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name define annotated method  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name class  end_name  end_type  begin_name clazz  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment fixme this is probably not very efficient since it loads all methods for each call  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name found method  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name method  end_name  end_type  begin_name method  end_name  begin_range  begin_expr  begin_call  begin_name  begin_name clazz  end_name  begin_operator  end_operator  begin_name get declared methods  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_range  end_decl  end_init  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name define annotated method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name method factory  end_name  begin_operator  end_operator  begin_name create factory  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get j ruby class loader  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name found method  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name found method  end_name  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name runtime exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name clazz  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name define annotated method  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name list  end_name  begin_argument_list  begin_argument  begin_name java method descriptor  end_name  end_argument  end_argument_list  end_name  end_type  begin_name methods  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name method factory  end_name  end_type  begin_name method factory  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name java method descriptor  end_name  end_type  begin_name desc  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name methods  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name methods  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name define annotated method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name desc  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name method factory  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name dynamic method  end_name  end_type  begin_name dynamic method  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name method factory  end_name  begin_operator  end_operator  begin_name get annotated method  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name methods  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method defining callback  end_name  begin_operator  end_operator  begin_name define  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name desc  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name dynamic method  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  end_expr  end_return  end_block  end_else  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name define annotated method  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name method  end_name  end_type  begin_name method  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name method factory  end_name  end_type  begin_name method factory  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name j ruby method  end_name  end_type  begin_name jruby method  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name get annotation  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name j ruby method  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name jruby method  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_return  begin_expr  end_expr  end_return  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name jruby method  end_name  begin_operator  end_operator  begin_name compat  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name  begin_name compat version  end_name  begin_operator  end_operator  begin_name both  end_name  end_name  begin_operator  end_operator  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get instance config  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get compat version  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name jruby method  end_name  begin_operator  end_operator  begin_name compat  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name java method descriptor  end_name  end_type  begin_name desc  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name java method descriptor  end_name  begin_argument_list  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name dynamic method  end_name  end_type  begin_name dynamic method  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name method factory  end_name  begin_operator  end_operator  begin_name get annotated method  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name desc  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method defining callback  end_name  begin_operator  end_operator  begin_name define  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name desc  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name dynamic method  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name define annotated method  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name java method descriptor  end_name  end_type  begin_name desc  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name method factory  end_name  end_type  begin_name method factory  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name j ruby method  end_name  end_type  begin_name jruby method  end_name  begin_init  begin_expr  begin_name  begin_name desc  end_name  begin_operator  end_operator  begin_name anno  end_name  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name jruby method  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_return  begin_expr  end_expr  end_return  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name jruby method  end_name  begin_operator  end_operator  begin_name compat  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name  begin_name compat version  end_name  begin_operator  end_operator  begin_name both  end_name  end_name  begin_operator  end_operator  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get instance config  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get compat version  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name jruby method  end_name  begin_operator  end_operator  begin_name compat  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name dynamic method  end_name  end_type  begin_name dynamic method  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name method factory  end_name  begin_operator  end_operator  begin_name get annotated method  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name desc  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method defining callback  end_name  begin_operator  end_operator  begin_name define  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name desc  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name dynamic method  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_return  begin_expr  end_expr  end_return  end_block 
begin_comment todo consider a better way of synchronizing end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name add method  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name dynamic method  end_name  end_type  begin_name method  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  begin_init  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name this  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get object  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name secure  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get safe level  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name is taint  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new security error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name test frozen  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add method internal  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment fixme create attr reader method attr writer method for faster attr access end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name add accessor  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name interned name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name visibility  end_name  end_type  begin_name visibility  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name readable  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name writeable  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_assert  begin_expr  begin_name interned name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name interned name  end_name  begin_operator  end_operator  begin_name intern  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name interned name  end_name  begin_operator  end_operator  end_expr  end_assert  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name ruby  end_name  end_type  begin_name runtime  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name visibility  end_name  begin_operator  end_operator  begin_name private  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment fixme warning  end_comment  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name visibility  end_name  begin_operator  end_operator  begin_name module function  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name visibility  end_name  begin_operator  end_operator  begin_name private  end_name  end_expr  end_expr_stmt  begin_comment fixme warning  end_comment  end_block  end_then  end_if  end_else  end_if  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name variable name  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name interned name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name intern  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name readable  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name add method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name interned name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name java method zero  end_name  end_super  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name visibility  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name call configuration  end_name  begin_operator  end_operator  begin_name frame none scope none  end_name  end_name  end_expr  end_argument  end_argument_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name  begin_name ruby class  end_name  begin_operator  end_operator  begin_name variable accessor  end_name  end_name  end_type  begin_name accessor  end_name  begin_init  begin_expr  begin_name  begin_name ruby class  end_name  begin_operator  end_operator  begin_name variable accessor  end_name  begin_operator  end_operator  begin_name dummy accessor  end_name  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_function  begin_type  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name clazz  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name variable  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name i ruby object  end_name  begin_operator  end_operator  begin_call  begin_name verify accessor  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name self  end_name  begin_operator  end_operator  begin_name get meta class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get real class  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_return  begin_expr  begin_name variable  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name variable  end_name  end_expr  end_return  end_block  end_function  begin_function  begin_type  begin_specifier  end_specifier  begin_name  begin_name ruby class  end_name  begin_operator  end_operator  begin_name variable accessor  end_name  end_name  end_type  begin_name verify accessor  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby class  end_name  end_type  begin_name cls  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name ruby class  end_name  begin_operator  end_operator  begin_name variable accessor  end_name  end_name  end_type  begin_name local accessor  end_name  begin_init  begin_expr  begin_name accessor  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name local accessor  end_name  begin_operator  end_operator  begin_name get class id  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name cls  end_name  begin_operator  end_operator  begin_name hash code  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name local accessor  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name cls  end_name  begin_operator  end_operator  begin_name get variable accessor for read  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name variable name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name accessor  end_name  begin_operator  end_operator  begin_name local accessor  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_name local accessor  end_name  end_expr  end_return  end_block  end_function  end_block  end_class  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name call method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name fast new symbol  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name interned name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name writeable  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name interned name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name interned name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name intern  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name add method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name interned name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_class  begin_super  begin_name java method one  end_name  end_super  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name visibility  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name call configuration  end_name  begin_operator  end_operator  begin_name frame none scope none  end_name  end_name  end_expr  end_argument  end_argument_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name  begin_name ruby class  end_name  begin_operator  end_operator  begin_name variable accessor  end_name  end_name  end_type  begin_name accessor  end_name  begin_init  begin_expr  begin_name  begin_name ruby class  end_name  begin_operator  end_operator  begin_name variable accessor  end_name  begin_operator  end_operator  begin_name dummy accessor  end_name  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_function  begin_type  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name call  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name clazz  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name arg 1  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name verify accessor  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name self  end_name  begin_operator  end_operator  begin_name get meta class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get real class  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set  end_name  begin_argument_list  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg 1  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name arg 1  end_name  end_expr  end_return  end_block  end_function  begin_function  begin_type  begin_specifier  end_specifier  begin_name  begin_name ruby class  end_name  begin_operator  end_operator  begin_name variable accessor  end_name  end_name  end_type  begin_name verify accessor  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby class  end_name  end_type  begin_name cls  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name ruby class  end_name  begin_operator  end_operator  begin_name variable accessor  end_name  end_name  end_type  begin_name local accessor  end_name  begin_init  begin_expr  begin_name accessor  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name local accessor  end_name  begin_operator  end_operator  begin_name get class id  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name cls  end_name  begin_operator  end_operator  begin_name hash code  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name local accessor  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name cls  end_name  begin_operator  end_operator  begin_name get variable accessor for write  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name variable name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name accessor  end_name  begin_operator  end_operator  begin_name local accessor  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_name local accessor  end_name  end_expr  end_return  end_block  end_function  end_block  end_class  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name call method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name fast new symbol  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name interned name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block 
begin_comment rb export method end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name export method  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name visibility  end_name  end_type  begin_name visibility  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name this  end_name  begin_operator  end_operator  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get object  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name secure  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name dynamic method  end_name  end_type  begin_name method  end_name  begin_init  begin_expr  begin_call  begin_name search method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name is undefined  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new name error  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name is module  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name get visibility  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name visibility  end_name  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name this  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name get implementation class  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name method  end_name  begin_operator  end_operator  begin_name set visibility  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name visibility  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_comment fixme why was this using a full function callback method before that did call super  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name add method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name wrapper method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name visibility  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name invalidate cache descendants  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block 
begin_comment rb mod to s end_comment begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_annotation  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name to s  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name is singleton  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name attached  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name meta class  end_name  begin_operator  end_operator  begin_name this  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get attached  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string builder  end_name  end_type  begin_name buffer  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name string builder  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name attached  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment fixme figure out why we get null sometimes  end_comment  begin_if  begin_condition  begin_expr  begin_name attached  end_name  begin_operator  end_operator  begin_name ruby class  end_name  begin_operator  end_operator  begin_name attached  end_name  begin_operator  end_operator  begin_name ruby module  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buffer  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name attached  end_name  begin_operator  end_operator  begin_name inspect  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buffer  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name attached  end_name  begin_operator  end_operator  begin_name any to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buffer  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new string  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name buffer  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_return  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new string  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment rb mod remove cvar fixme any good reason to have two identical methods same as remove class variable end_comment begin_type  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name remove cvar  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name name  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment wrong parameter  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name interned name  end_name  begin_init  begin_expr  begin_call  begin_name validate class variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name as java string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name value  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name value  end_name  begin_operator  end_operator  begin_call  begin_name delete class variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_name interned name  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name value  end_name  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name fast is class var defined  end_name  begin_argument_list  begin_argument  begin_expr  begin_name interned name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_call  begin_name cannot remove error  end_name  begin_argument_list  begin_argument  begin_expr  begin_name interned name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_throw  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new name error  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name interned name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name interned name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name  begin_name map  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  begin_argument  begin_name nkf charset  end_name  end_argument  end_argument_list  end_name  end_type  begin_name parse opt  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name s  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name  begin_name map  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  begin_argument  begin_name nkf charset  end_name  end_argument  end_argument_list  end_name  end_type  begin_name options  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name hash map  end_name  begin_argument_list  begin_argument  begin_name string  end_name  end_argument  begin_argument  begin_name nkf charset  end_name  end_argument  end_argument_list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment default options  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name options  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name auto  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name options  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name jis  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name options  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name mime detect  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name options  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name noconv  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_switch  begin_condition  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name char at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_comment iso 2022 jp  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name options  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name jis  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_comment shift jis  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name options  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name sjis  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_comment euc jp  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name options  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name euc  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_comment utf 8  end_comment  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name n  end_name  begin_init  begin_expr  begin_call  begin_name option utf  end_name  begin_argument_list  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name n  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name options  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name utf 32  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name n  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name options  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name utf 16  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  begin_else  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name options  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name utf 8  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_else  end_if  end_else  end_if  end_block  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_comment iso 2022 jp  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name options  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name jis  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_comment shift jis  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name options  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name sjis  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_comment euc jp  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name options  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name euc  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_comment utf 8  end_comment  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name n  end_name  begin_init  begin_expr  begin_call  begin_name option utf  end_name  begin_argument_list  begin_argument  begin_expr  begin_name s  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name n  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name options  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name utf 32  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name n  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name options  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name utf 16  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  begin_else  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name options  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name utf 8  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_else  end_if  end_else  end_if  end_block  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_if  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name options  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name mime detect  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_then  end_if  begin_switch  begin_condition  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name char at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name options  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name base 64  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name options  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name qencode  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_comment todo non strict option  end_comment  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name options  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name noconv  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  end_block  end_switch  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_if  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name options  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name noconv  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_switch  begin_condition  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name char at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name options  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name base 64  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name options  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name qencode  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  end_block  end_switch  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name s  end_name  begin_operator  end_operator  begin_name char at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment long name option  end_comment  end_block  end_then  end_if  end_case  begin_default  end_default  end_block  end_switch  end_block  end_for  begin_return  begin_expr  begin_name options  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name long  end_name  end_type  begin_name float 2 long  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby float  end_name  end_type  begin_name flt  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name double  end_name  end_type  begin_name a float  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name flt  end_name  begin_operator  end_operator  begin_name get double value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name a float  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name double  end_name  begin_operator  end_operator  begin_name  begin_name long  end_name  begin_operator  end_operator  begin_name max value  end_name  end_name  begin_operator  end_operator  begin_name a float  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name double  end_name  begin_operator  end_operator  begin_name  begin_name long  end_name  begin_operator  end_operator  begin_name min value  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_name long  end_name  begin_operator  end_operator  begin_name a float  end_name  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_comment todo number formatting here mri uses 10 g 1 4 api is a must  end_comment  begin_throw  begin_expr  begin_call  begin_name  begin_name flt  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new range error  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name a float  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_else  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name float step 19  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name from  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name to  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name step  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name excl  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name block  end_name  end_type  begin_name block  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name double  end_name  end_type  begin_name beg  end_name  begin_init  begin_expr  begin_call  begin_name num 2 dbl  end_name  begin_argument_list  begin_argument  begin_expr  begin_name from  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name double  end_name  end_type  begin_name end  end_name  begin_init  begin_expr  begin_call  begin_name num 2 dbl  end_name  begin_argument_list  begin_argument  begin_expr  begin_name to  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name double  end_name  end_type  begin_name unit  end_name  begin_init  begin_expr  begin_call  begin_name num 2 dbl  end_name  begin_argument_list  begin_argument  begin_expr  begin_name step  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo remove  end_comment  begin_if  begin_condition  begin_expr  begin_name unit  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new argument error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name double  end_name  end_type  begin_name n  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name end  end_name  begin_operator  end_operator  begin_name beg  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name unit  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name double  end_name  end_type  begin_name err  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name abs  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name beg  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name abs  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name end  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name abs  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name end  end_name  begin_operator  end_operator  begin_name beg  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name abs  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name unit  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_name dbl epsilon  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name double  end_name  begin_operator  end_operator  begin_name is infinite  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name unit  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name unit  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name yield  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name ruby float  end_name  begin_operator  end_operator  begin_name new float  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name beg  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block  end_then  begin_else  begin_block  begin_if  begin_condition  begin_expr  begin_name err  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_name err  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_then  end_if  begin_expr_stmt  begin_expr  begin_name n  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name floor  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name n  end_name  begin_operator  end_operator  begin_name err  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name excl  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_name n  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_then  end_if  begin_for  begin_init  begin_decl  begin_type  begin_name long  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name n  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name yield  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name ruby float  end_name  begin_operator  end_operator  begin_name new float  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name unit  end_name  begin_operator  end_operator  begin_name beg  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  end_block  end_else  end_if  end_block 
begin_comment will yield to the specific block changing the self to be the current object instead of the self that is part of the frame saved in the block frame this method is the basis for the ruby instance eval and module eval methods the arguments sent in to it in the args array will be yielded to the block this makes it possible to emulate both instance eval and instance exec with this implementation end_comment begin_type  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name yield under  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name under  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  end_type  begin_name args  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name block  end_name  end_type  begin_name block  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name pre execute under  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name under  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name block  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name visibility  end_name  end_type  begin_name saved visibility  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name get binding  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get visibility  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name get binding  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set visibility  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name visibility  end_name  begin_operator  end_operator  begin_name public  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_try  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name value in yield  end_name  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name a value  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name value in yield  end_name  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name a value  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name value in yield  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ruby array  end_name  begin_operator  end_operator  begin_name new array no copy  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name a value  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_comment fixme this is an ugly hack to resolve jruby 1381 i m not proud of it  end_comment  begin_expr_stmt  begin_expr  begin_name block  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name clone block  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name get binding  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set self  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name ruby object  end_name  begin_operator  end_operator  begin_name this  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name get binding  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get frame  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set self  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name ruby object  end_name  begin_operator  end_operator  begin_name this  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment end hack  end_comment  begin_return  begin_expr  begin_call  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name yield  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name value in yield  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name ruby object  end_name  begin_operator  end_operator  begin_name this  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get ruby class  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name a value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  begin_comment todo should next and return also catch here  end_comment  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name  begin_name jump exception  end_name  begin_operator  end_operator  begin_name break jump  end_name  end_name  end_type  begin_name bj  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_name i ruby object  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name bj  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_catch  begin_finally  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name get binding  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set visibility  end_name  begin_argument_list  begin_argument  begin_expr  begin_name saved visibility  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name post execute under  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_finally  end_try  end_block 
begin_comment will yield to the specific block changing the self to be the current object instead of the self that is part of the frame saved in the block frame this method is the basis for the ruby instance eval and module eval methods the arguments sent in to it in the args array will be yielded to the block this makes it possible to emulate both instance eval and instance exec with this implementation end_comment begin_type  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name yield under  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name under  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name block  end_name  end_type  begin_name block  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name pre execute under  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name under  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name block  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name visibility  end_name  end_type  begin_name saved visibility  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name get binding  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get visibility  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name get binding  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set visibility  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name visibility  end_name  begin_operator  end_operator  begin_name public  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_try  begin_block  begin_comment fixme this is an ugly hack to resolve jruby 1381 i m not proud of it  end_comment  begin_expr_stmt  begin_expr  begin_name block  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name clone block  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name get binding  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set self  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name ruby object  end_name  begin_operator  end_operator  begin_name this  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name get binding  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get frame  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set self  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name ruby object  end_name  begin_operator  end_operator  begin_name this  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment end hack  end_comment  begin_return  begin_expr  begin_call  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name yield  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get ruby class  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  begin_comment todo should next and return also catch here  end_comment  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name  begin_name jump exception  end_name  begin_operator  end_operator  begin_name break jump  end_name  end_name  end_type  begin_name bj  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_name i ruby object  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name bj  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_catch  begin_finally  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name get binding  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set visibility  end_name  begin_argument_list  begin_argument  begin_expr  begin_name saved visibility  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name post execute under  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_finally  end_try  end_block 
begin_comment rb obj id return the internal id of an object fixme should this be renamed to match its ruby name end_comment begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  begin_block  begin_expr  end_expr  begin_operator  end_operator  begin_argument  begin_expr  end_expr  end_argument  end_block  end_expr  end_argument  end_argument_list  end_annotation  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name id  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name super  end_name  begin_operator  end_operator  begin_name id  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment rb obj is kind of call seq obj is a class true or false obj kind of class true or false returns code true code if i class i is the class of i obj i or if i class i is one of the superclasses of i obj i or modules included in i obj i module m end class a include m end class b a end class c b end b b new b instance of a false b instance of b true b instance of c false b instance of m false b kind of a true b kind of b true b kind of c false b kind of m true end_comment begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  begin_block  begin_expr  end_expr  begin_operator  end_operator  begin_argument  begin_expr  end_expr  end_argument  end_block  end_expr  end_argument  begin_argument  begin_expr  begin_name required  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_name ruby boolean  end_name  end_type  begin_name kind of p  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo generalize this type checking code into i ruby object helper  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name ruby module  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment todo new type error does not offer enough for ruby error string  end_comment  begin_throw  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new type error  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_return  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new boolean  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name ruby module  end_name  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name is instance  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment fixme if true array is common enough we should pre allocate and stick somewhere end_comment begin_type  begin_specifier  end_specifier  begin_name i ruby object  end_name  begin_index  end_index  end_type  begin_name true if no argument  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  end_type  begin_name args  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get true  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_block  begin_operator  end_operator  begin_name args  end_name  end_expr  end_return  end_block 
begin_comment rb obj singleton methods call seq obj singleton methods all true array returns an array of the names of singleton methods for i obj i if the optional i all i parameter is true the list will include methods in modules included in i obj i module other def three end end class single def single four end end a single new def a one end class a include other def two end end single singleton methods four a singleton methods false two one a singleton methods two one three end_commentbegin_comment todo this is almost ruby module instance methods on the meta class perhaps refactor end_comment begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name optional  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name compat  end_name  begin_operator  end_operator  begin_name  begin_name compat version  end_name  begin_operator  end_operator  begin_name ruby 1 8  end_name  end_name  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_name ruby array  end_name  end_type  begin_name singleton methods  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  end_type  begin_name args  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name singleton methods  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name frame  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name visibility  end_name  begin_operator  end_operator  begin_name  begin_name visibility  end_name  begin_operator  end_operator  begin_name private  end_name  end_name  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name initialize  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name block  end_name  end_type  begin_name proc block  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name proc block  end_name  begin_operator  end_operator  begin_name is given  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new argument error  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name type  end_name  begin_operator  end_operator  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name lambda  end_name  end_name  begin_operator  end_operator  begin_name proc block  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment todo warn tried to create proc object without a block  end_comment  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name block  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name proc block  end_name  begin_operator  end_operator  begin_name clone block  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name type  end_name  begin_operator  end_operator  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name thread  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment modify the block with a new backref lastline grabbing scope  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name static scope  end_name  end_type  begin_name old scope  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name get body  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get static scope  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name static scope  end_name  end_type  begin_name new scope  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name block static scope  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name old scope  end_name  begin_operator  end_operator  begin_name get enclosing scope  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name old scope  end_name  begin_operator  end_operator  begin_name get variables  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name new scope  end_name  begin_operator  end_operator  begin_name set backref lastline scope  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name new scope  end_name  begin_operator  end_operator  begin_name set previous c ref scope  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name old scope  end_name  begin_operator  end_operator  begin_name get previous c ref scope  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name new scope  end_name  begin_operator  end_operator  begin_name set module  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name old scope  end_name  begin_operator  end_operator  begin_name get module  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name get body  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set static scope  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new scope  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name type  end_name  end_name  begin_operator  end_operator  begin_name type  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name set proc object  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name file  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get file  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name line  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get line  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name this  end_name  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_annotation  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name rb clone  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby proc  end_name  end_type  begin_name new proc  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name ruby proc  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get proc  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name type  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name new proc  end_name  begin_operator  end_operator  begin_name block  end_name  end_name  begin_operator  end_operator  begin_call  begin_name get block  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name new proc  end_name  begin_operator  end_operator  begin_name file  end_name  end_name  begin_operator  end_operator  begin_name file  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name new proc  end_name  begin_operator  end_operator  begin_name line  end_name  end_name  begin_operator  end_operator  begin_name line  end_name  end_expr  end_expr_stmt  begin_comment todo clone setup here  end_comment  begin_return  begin_expr  begin_name new proc  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name ruby module  end_name  end_type  begin_name create process module  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name process  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define module  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name set process  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name process  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo not allocatable allocator is probably ok here confirm jruby 415  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name ruby class  end_name  end_type  begin_name process status  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name process  end_name  begin_operator  end_operator  begin_name define class under  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get object  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name object allocator  end_name  begin_operator  end_operator  begin_name not allocatable allocator  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name set proc status  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name process status  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name process uid  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name process  end_name  begin_operator  end_operator  begin_name define module under  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name set proc uid  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name process uid  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name process gid  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name process  end_name  begin_operator  end_operator  begin_name define module under  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name set proc gid  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name process gid  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name process sys  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name process  end_name  begin_operator  end_operator  begin_name define module under  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name set proc sys  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name process sys  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name process  end_name  begin_operator  end_operator  begin_name define annotated methods  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name ruby process  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name process status  end_name  begin_operator  end_operator  begin_name define annotated methods  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name ruby status  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name process uid  end_name  begin_operator  end_operator  begin_name define annotated methods  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name user id  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name process gid  end_name  begin_operator  end_operator  begin_name define annotated methods  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name group id  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name process sys  end_name  begin_operator  end_operator  begin_name define annotated methods  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name sys  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name load constant set  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name process  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name com  end_name  begin_operator  end_operator  begin_name kenai  end_name  begin_operator  end_operator  begin_name constantine  end_name  begin_operator  end_operator  begin_name platform  end_name  begin_operator  end_operator  begin_name prio  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name load constant set  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name process  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name com  end_name  begin_operator  end_operator  begin_name kenai  end_name  begin_operator  end_operator  begin_name constantine  end_name  begin_operator  end_operator  begin_name platform  end_name  begin_operator  end_operator  begin_name rlim  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name load constant set  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name process  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name com  end_name  begin_operator  end_operator  begin_name kenai  end_name  begin_operator  end_operator  begin_name constantine  end_name  begin_operator  end_operator  begin_name platform  end_name  begin_operator  end_operator  begin_name rlimit  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name process  end_name  begin_operator  end_operator  begin_name define constant  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new fixnum  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name process  end_name  end_expr  end_return  end_block 
begin_comment bunch of methods still not implemented end_comment begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  begin_block  begin_expr  end_expr  begin_operator  end_operator  begin_argument  begin_expr  end_expr  end_argument  begin_operator  end_operator  begin_argument  begin_expr  end_expr  end_argument  begin_operator  end_operator  begin_argument  begin_expr  end_expr  end_argument  begin_operator  end_operator  begin_argument  begin_expr  end_expr  end_argument  begin_operator  end_operator  begin_argument  begin_expr  end_expr  end_argument  begin_operator  end_operator  begin_argument  begin_expr  end_expr  end_argument  begin_operator  end_operator  begin_argument  begin_expr  end_expr  end_argument  end_block  end_expr  end_argument  begin_argument  begin_expr  begin_name frame  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name not implemented  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name error  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get current context  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get frame name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_throw  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new not implemented error  end_name  begin_argument_list  begin_argument  begin_expr  begin_name error  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block 
begin_comment rb enc reg raise end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name raise regexp error 19  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name byte list  end_name  end_type  begin_name bytes  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name encoding  end_name  end_type  begin_name enc  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name flags  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name err  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo we loose encoding information here fix it  end_comment  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new regexp error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name err  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name regexp description 19  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name bytes  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name flags  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name enc  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name multi byte casecmp  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name encoding  end_name  end_type  begin_name enc  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name byte list  end_name  end_type  begin_name value  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name byte list  end_name  end_type  begin_name other value  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name byte  end_name  begin_index  end_index  end_type  begin_name bytes  end_name  begin_init  begin_expr  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name bytes  end_name  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name p  end_name  begin_init  begin_expr  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name begin  end_name  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name end  end_name  begin_init  begin_expr  begin_name p  end_name  begin_operator  end_operator  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name real size  end_name  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name byte  end_name  begin_index  end_index  end_type  begin_name obytes  end_name  begin_init  begin_expr  begin_name  begin_name other value  end_name  begin_operator  end_operator  begin_name bytes  end_name  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name op  end_name  begin_init  begin_expr  begin_name  begin_name other value  end_name  begin_operator  end_operator  begin_name begin  end_name  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name oend  end_name  begin_init  begin_expr  begin_name op  end_name  begin_operator  end_operator  begin_name  begin_name other value  end_name  begin_operator  end_operator  begin_name real size  end_name  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_name p  end_name  begin_operator  end_operator  begin_name end  end_name  begin_operator  end_operator  begin_name op  end_name  begin_operator  end_operator  begin_name oend  end_name  end_expr  end_condition  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name c  end_name  end_decl  begin_operator  end_operator  begin_decl  begin_type  end_type  begin_name oc  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name enc  end_name  begin_operator  end_operator  begin_name is ascii compatible  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name c  end_name  begin_operator  end_operator  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name p  end_name  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name oc  end_name  begin_operator  end_operator  begin_name  begin_name obytes  end_name  begin_index  begin_expr  begin_name op  end_name  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name c  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name string support  end_name  begin_operator  end_operator  begin_name precise code point  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name enc  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name bytes  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name p  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name end  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name oc  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name string support  end_name  begin_operator  end_operator  begin_name precise code point  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name enc  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name obytes  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name op  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name oend  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name cl  end_name  end_decl  begin_operator  end_operator  begin_decl  begin_type  end_type  begin_name ocl  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name encoding  end_name  begin_operator  end_operator  begin_name is ascii  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name encoding  end_name  begin_operator  end_operator  begin_name is ascii  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name oc  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name  begin_name ascii tables  end_name  begin_operator  end_operator  begin_name to upper case table  end_name  begin_index  begin_expr  begin_name c  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_name  begin_name ascii tables  end_name  begin_operator  end_operator  begin_name to upper case table  end_name  begin_index  begin_expr  begin_name oc  end_name  end_expr  end_index  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name c  end_name  begin_operator  end_operator  begin_name oc  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ruby fixnum  end_name  begin_operator  end_operator  begin_name minus one  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name ruby fixnum  end_name  begin_operator  end_operator  begin_name one  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name cl  end_name  begin_operator  end_operator  begin_name ocl  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name cl  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name string support  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name enc  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name bytes  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name p  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name end  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name ocl  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name string support  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name enc  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name obytes  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name op  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name oend  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo opt for 2 and 3  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name ret  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name string support  end_name  begin_operator  end_operator  begin_name case cmp  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name bytes  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name p  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name obytes  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name op  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name cl  end_name  begin_operator  end_operator  begin_name ocl  end_name  begin_operator  end_operator  begin_name cl  end_name  begin_operator  end_operator  begin_name ocl  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name ret  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_return  begin_expr  begin_name ret  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name ruby fixnum  end_name  begin_operator  end_operator  begin_name minus one  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name ruby fixnum  end_name  begin_operator  end_operator  begin_name one  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name cl  end_name  begin_operator  end_operator  begin_name ocl  end_name  end_expr  end_condition  begin_then  begin_return  begin_expr  begin_name cl  end_name  begin_operator  end_operator  begin_name ocl  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ruby fixnum  end_name  begin_operator  end_operator  begin_name minus one  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name ruby fixnum  end_name  begin_operator  end_operator  begin_name one  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_then  end_if  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_name p  end_name  begin_operator  end_operator  begin_name cl  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name op  end_name  begin_operator  end_operator  begin_name ocl  end_name  end_expr  end_expr_stmt  end_block  end_while  begin_if  begin_condition  begin_expr  begin_name end  end_name  begin_operator  end_operator  begin_name p  end_name  begin_operator  end_operator  begin_name oend  end_name  begin_operator  end_operator  begin_name op  end_name  end_expr  end_condition  begin_then  begin_return  begin_expr  begin_call  begin_name  begin_name ruby fixnum  end_name  begin_operator  end_operator  begin_name zero  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_then  end_if  begin_return  begin_expr  begin_name end  end_name  begin_operator  end_operator  begin_name p  end_name  begin_operator  end_operator  begin_name oend  end_name  begin_operator  end_operator  begin_name op  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ruby fixnum  end_name  begin_operator  end_operator  begin_name one  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name ruby fixnum  end_name  begin_operator  end_operator  begin_name minus one  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  begin_block  begin_expr  end_expr  begin_operator  end_operator  begin_argument  begin_expr  end_expr  end_argument  end_block  end_expr  end_argument  begin_argument  begin_expr  begin_name compat  end_name  begin_operator  end_operator  begin_name  begin_name compat version  end_name  begin_operator  end_operator  begin_name ruby 1 9  end_name  end_name  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name succ 19  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name ruby string  end_name  end_type  begin_name str  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name real size  end_name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name str  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name ruby string  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name get meta class  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name succ common 19  end_name  begin_argument_list  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo rescan code range  end_comment  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name str  end_name  begin_operator  end_operator  begin_call  begin_name new empty string  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name encoding  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_return  begin_expr  begin_call  begin_name  begin_name str  end_name  begin_operator  end_operator  begin_name infect by  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  begin_block  begin_expr  end_expr  begin_operator  end_operator  begin_argument  begin_expr  end_expr  end_argument  end_block  end_expr  end_argument  begin_argument  begin_expr  begin_name compat  end_name  begin_operator  end_operator  begin_name  begin_name compat version  end_name  begin_operator  end_operator  begin_name ruby 1 9  end_name  end_name  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name succ bang 19  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name modify check  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name real size  end_name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name value  end_name  begin_operator  end_operator  begin_call  begin_name succ common 19  end_name  begin_argument_list  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name share level  end_name  begin_operator  end_operator  begin_name share level none  end_name  end_expr  end_expr_stmt  begin_comment todo rescan code range  end_comment  end_block  end_then  end_if  begin_return  begin_expr  begin_name this  end_name  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name suppress warnings  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_annotation  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name optional  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name read  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  end_type  begin_name args  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name check readable  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name byte list  end_name  end_type  begin_name buf  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name length  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name old length  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name ruby string  end_name  end_type  begin_name original string  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_switch  begin_condition  begin_expr  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name original string  end_name  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name convert to string  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment must let original string know we re modifying so shared buffers aren t damaged  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name original string  end_name  begin_operator  end_operator  begin_name modify  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name buf  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name original string  end_name  begin_operator  end_operator  begin_name get byte list  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_case  begin_case  begin_expr  end_expr  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name is nil  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name length  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ruby numeric  end_name  begin_operator  end_operator  begin_name fix 2 int  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name old length  end_name  begin_operator  end_operator  begin_name length  end_name  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name length  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new argument error  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name length  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name length  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name pos  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name internal  end_name  begin_operator  end_operator  begin_name get byte list  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name length  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name eof  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name buf  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name real size  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_then  end_if  begin_return  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get nil  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name eof  end_name  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name buf  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name real size  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_then  end_if  begin_return  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get nil  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  end_else  end_if  begin_break  end_break  end_block  end_then  end_if  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name old length  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name length  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name internal  end_name  begin_operator  end_operator  begin_name get byte list  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name length  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name length  end_name  begin_operator  end_operator  begin_name pos  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name eof  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name buf  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name buf  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name byte list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name real size  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_return  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new string  end_name  begin_argument_list  begin_argument  begin_expr  begin_name buf  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name length  end_name  begin_operator  end_operator  begin_name pos  end_name  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_break  end_break  end_case  begin_default  begin_expr_stmt  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new argument error  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_default  end_block  end_switch  begin_if  begin_condition  begin_expr  begin_name buf  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name internal length  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name internal  end_name  begin_operator  end_operator  begin_name get byte list  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name length  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name internal length  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name internal length  end_name  begin_operator  end_operator  begin_name pos  end_name  begin_operator  end_operator  begin_name length  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name buf  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name byte list  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name internal  end_name  begin_operator  end_operator  begin_name get byte list  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name int  end_name  begin_operator  end_operator  begin_name pos  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name length  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name rest  end_name  begin_init  begin_expr  begin_call  begin_name int  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name internal  end_name  begin_operator  end_operator  begin_name get byte list  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name length  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name pos  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name length  end_name  begin_operator  end_operator  begin_name rest  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_name length  end_name  begin_operator  end_operator  begin_name rest  end_name  end_expr  end_expr_stmt  end_then  end_if  begin_expr_stmt  begin_expr  begin_name buf  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name byte list  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name internal  end_name  begin_operator  end_operator  begin_name get byte list  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name int  end_name  begin_operator  end_operator  begin_name pos  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name length  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  end_if  end_block  end_then  begin_else  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name rest  end_name  begin_init  begin_expr  begin_call  begin_name int  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name internal  end_name  begin_operator  end_operator  begin_name get byte list  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name length  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name pos  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name length  end_name  begin_operator  end_operator  begin_name rest  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_name length  end_name  begin_operator  end_operator  begin_name rest  end_name  end_expr  end_expr_stmt  end_then  end_if  begin_comment yow this is still ugly  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name byte  end_name  begin_index  end_index  end_type  begin_name target  end_name  begin_init  begin_expr  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name bytes  end_name  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name  begin_name target  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  begin_name length  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name arraycopy  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name internal  end_name  begin_operator  end_operator  begin_name get byte list  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name bytes  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name int  end_name  begin_operator  end_operator  begin_name pos  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name length  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name begin  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name real size  end_name  end_name  begin_operator  end_operator  begin_name length  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name target  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name byte  end_name  begin_index  begin_expr  begin_name length  end_name  end_expr  end_index  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name arraycopy  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name internal  end_name  begin_operator  end_operator  begin_name get byte list  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name bytes  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name int  end_name  begin_operator  end_operator  begin_name pos  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name target  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name length  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name begin  end_name  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name real size  end_name  end_name  begin_operator  end_operator  begin_name length  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name bytes  end_name  end_name  begin_operator  end_operator  begin_name target  end_name  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_else  end_if  begin_if  begin_condition  begin_expr  begin_name buf  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name eof  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_name buf  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name byte list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  begin_expr_stmt  begin_expr  begin_name length  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name length  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name pos  end_name  begin_operator  end_operator  begin_name length  end_name  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_if  begin_condition  begin_expr  begin_name  begin_name old length  end_name  begin_argument_list  begin_argument  begin_operator  end_operator  begin_name old length  end_name  end_argument  end_argument_list  end_name  begin_name length  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_name eof  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_then  end_if  begin_return  begin_expr  begin_name original string  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name original string  end_name  begin_operator  end_operator  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new string  end_name  begin_argument_list  begin_argument  begin_expr  begin_name buf  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment inspect struct end_comment begin_type  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name inspect struct  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby array  end_name  end_type  begin_name member  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name ruby array  end_name  begin_operator  end_operator  begin_call  begin_name get internal variable  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name class of  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_assert  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name member  end_name  begin_operator  end_operator  begin_name is nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_assert  begin_decl_stmt  begin_decl  begin_type  begin_name byte list  end_name  end_type  begin_name buffer  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name byte list  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name get bytes  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buffer  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get meta class  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get real class  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get real class  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get bytes  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buffer  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  begin_operator  end_operator  begin_name k  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name member  end_name  begin_operator  end_operator  begin_name get length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name k  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_if  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buffer  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name append  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  begin_comment fixme mri has special case for constants here  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buffer  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name ruby string  end_name  begin_operator  end_operator  begin_name obj as string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name member  end_name  begin_operator  end_operator  begin_name elt internal  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get byte list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buffer  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buffer  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name inspect  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name values  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get byte list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buffer  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new string  end_name  begin_argument_list  begin_argument  begin_expr  begin_name buffer  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  begin_comment obj infect  end_comment  end_block 
 begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name ruby class  end_name  end_type  begin_name create thread class  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment fixme in order for thread to play well with the standard new behavior  end_comment  begin_comment it must provide an allocator that can create empty object instances which  end_comment  begin_comment initialize then fills with appropriate data  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name ruby class  end_name  end_type  begin_name thread class  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define class  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get object  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name object allocator  end_name  begin_operator  end_operator  begin_name not allocatable allocator  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name set thread  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name thread class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name thread class  end_name  begin_operator  end_operator  begin_name define annotated methods  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name ruby thread  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name ruby thread  end_name  end_type  begin_name ruby thread  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name ruby thread  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name thread class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo need to isolate the current thread from class creation  end_comment  begin_expr_stmt  begin_expr  begin_name  begin_name ruby thread  end_name  begin_operator  end_operator  begin_name thread impl  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name native thread  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ruby thread  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name thread  end_name  begin_operator  end_operator  begin_name current thread  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get thread service  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set main thread  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name thread  end_name  begin_operator  end_operator  begin_name current thread  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name ruby thread  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment set to default thread group  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get default thread group  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name add directly  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ruby thread  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name thread class  end_name  begin_operator  end_operator  begin_name set marshal  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name object marshal  end_name  begin_operator  end_operator  begin_name not marshalable marshal  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name thread class  end_name  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_annotation  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name inspect  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment fixme there s some code duplication here with ruby object inspect  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name string builder  end_name  end_type  begin_name part  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name string builder  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name cname  end_name  begin_init  begin_expr  begin_call  begin_name get meta class  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get real class  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name part  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name append  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cname  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name append  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name part  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name integer  end_name  begin_operator  end_operator  begin_name to hex string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name identity hash code  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name part  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name status  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to lower case  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name part  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new string  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name part  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name required  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name frame  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name meta  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name kill  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name receiver  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name ruby thread  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name block  end_name  end_type  begin_name block  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name ruby thread  end_name  begin_operator  end_operator  begin_name ruby thread  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_throw  begin_expr  begin_call  begin_name  begin_name receiver  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new type error  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ruby thread  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name receiver  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get thread  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_then  end_if  begin_return  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name ruby thread  end_name  begin_operator  end_operator  begin_name ruby thread  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name kill  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name required  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name priority set  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name priority  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment fixme this should probably do some translation from ruby priority levels to java priority levels until we have green threads  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i priority  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ruby numeric  end_name  begin_operator  end_operator  begin_name fix 2 int  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name priority  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name i priority  end_name  begin_operator  end_operator  begin_name  begin_name thread  end_name  begin_operator  end_operator  begin_name min priority  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name i priority  end_name  begin_operator  end_operator  begin_name  begin_name thread  end_name  begin_operator  end_operator  begin_name min priority  end_name  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name i priority  end_name  begin_operator  end_operator  begin_name  begin_name thread  end_name  begin_operator  end_operator  begin_name max priority  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name i priority  end_name  begin_operator  end_operator  begin_name  begin_name thread  end_name  begin_operator  end_operator  begin_name max priority  end_name  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  begin_expr_stmt  begin_expr  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name priority  end_name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ruby fixnum  end_name  begin_operator  end_operator  begin_name new fixnum  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name i priority  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name thread impl  end_name  begin_operator  end_operator  begin_name is alive  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name thread impl  end_name  begin_operator  end_operator  begin_name set priority  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i priority  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name priority  end_name  end_name  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name status  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name thread impl  end_name  begin_operator  end_operator  begin_name is alive  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment todo no java stringity  end_comment  begin_return  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new string  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name status  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to lower case  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name exiting exception  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get nil  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_return  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get false  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_else  end_if  end_else  end_if  end_block 
 begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  begin_block  begin_expr  end_expr  begin_operator  end_operator  begin_argument  begin_expr  end_expr  end_argument  begin_operator  end_operator  begin_argument  begin_expr  end_expr  end_argument  end_block  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name kill  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment need to reexamine this  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name ruby thread  end_name  end_type  begin_name current thread  end_name  begin_init  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get current context  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get thread  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment if the killee thread is the same as the killer thread just die  end_comment  begin_if  begin_condition  begin_expr  begin_name current thread  end_name  begin_operator  end_operator  begin_name this  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name throw thread kill  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name debug  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name out  end_name  begin_operator  end_operator  begin_name println  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name thread  end_name  begin_operator  end_operator  begin_name current thread  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name current thread  end_name  begin_operator  end_operator  begin_name poll thread events  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get runtime  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get thread service  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name deliver event  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name thread service  end_name  begin_operator  end_operator  begin_name event  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name current thread  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name thread service  end_name  begin_operator  end_operator  begin_name event  end_name  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name kill  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name debug  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name out  end_name  begin_operator  end_operator  begin_name println  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name thread  end_name  begin_operator  end_operator  begin_name current thread  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  begin_comment fixme is this still necessary  end_comment  begin_comment try  end_comment  begin_comment thread impl join  end_comment  begin_comment catch interrupted exception ie  end_comment  begin_comment we were interrupted check thread events again  end_comment  begin_comment current thread poll thread events  end_comment  begin_comment catch execution exception ie  end_comment  begin_comment we were interrupted check thread events again  end_comment  begin_comment current thread poll thread events  end_comment  begin_comment   end_comment  begin_return  begin_expr  begin_name this  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name wait for io  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name ruby io  end_name  end_type  begin_name io  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name ops  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name channel  end_name  end_type  begin_name channel  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name io  end_name  begin_operator  end_operator  begin_name get channel  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name channel  end_name  begin_operator  end_operator  begin_name selectable channel  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name io  end_name  begin_operator  end_operator  begin_name add blocking thread  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name blocking io  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name blocking io  end_name  begin_operator  end_operator  begin_name new condition  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name channel  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name ops  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name ready  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name blocking io  end_name  begin_operator  end_operator  begin_name await  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment check for thread events in case we ve been woken up to die  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name poll thread events  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name ready  end_name  end_expr  end_return  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name io exception  end_name  end_type  begin_name ioe  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new runtime error  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name ioe  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name interrupted exception  end_name  end_type  begin_name ex  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment fixme not correct exception  end_comment  begin_throw  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new runtime error  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  begin_finally  begin_block  begin_expr_stmt  begin_expr  begin_name blocking io  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name io  end_name  begin_operator  end_operator  begin_name remove blocking thread  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_finally  end_try  end_block 
 begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name date time zone  end_name  end_type  begin_name get time zone  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name zone  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name date time zone  end_name  end_type  begin_name cached zone  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get timezone cache  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get  end_name  begin_argument_list  begin_argument  begin_expr  begin_name zone  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name cached zone  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_return  begin_expr  begin_name cached zone  end_name  end_expr  end_return  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name original zone  end_name  begin_init  begin_expr  begin_name zone  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_comment value of tz property is of a bit different format  end_comment  begin_comment which confuses the java s time zone get time zone id method  end_comment  begin_comment and so we need to convert it  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name matcher  end_name  end_type  begin_name tz matcher  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name tz pattern  end_name  begin_operator  end_operator  begin_name matcher  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name zone  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name tz matcher  end_name  begin_operator  end_operator  begin_name matches  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name sign  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name tz matcher  end_name  begin_operator  end_operator  begin_name group  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name hours  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name tz matcher  end_name  begin_operator  end_operator  begin_name group  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name minutes  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name tz matcher  end_name  begin_operator  end_operator  begin_name group  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment gmt 00 00 etc gmt see mri behavior  end_comment  begin_comment comment below  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name hours  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name hours  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name minutes  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name minutes  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name minutes  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name zone  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_comment invert the sign since tz format and java format  end_comment  begin_comment use opposite signs sigh also java api requires  end_comment  begin_comment the sign to be always present be it or  end_comment  begin_expr_stmt  begin_expr  begin_name sign  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name sign  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_expr_stmt  begin_comment always use gmt since that s required by java api  end_comment  begin_expr_stmt  begin_expr  begin_name zone  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name sign  end_name  begin_operator  end_operator  begin_name hours  end_name  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name minutes  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name zone  end_name  begin_operator  end_operator  begin_name minutes  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_else  end_if  end_block  end_then  end_if  begin_comment mri behavior with tz equal to gmt or utc time now  end_comment  begin_comment is not considered as a proper gmt utc time  end_comment  begin_comment env tz gmt  end_comment  begin_comment time now gmt false  end_comment  begin_comment env tz utc  end_comment  begin_comment time now utc false  end_comment  begin_comment hence we need to adjust for that  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals ignore case  end_name  begin_argument_list  begin_argument  begin_expr  begin_name zone  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name equals ignore case  end_name  begin_argument_list  begin_argument  begin_expr  begin_name zone  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name zone  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name zone  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment for jruby 2759 when met choose cet timezone to work around joda  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name equals ignore case  end_name  begin_argument_list  begin_argument  begin_expr  begin_name zone  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name zone  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name date time zone  end_name  end_type  begin_name dtz  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name date time zone  end_name  begin_operator  end_operator  begin_name for time zone  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name time zone  end_name  begin_operator  end_operator  begin_name get time zone  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name zone  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get timezone cache  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name put  end_name  begin_argument_list  begin_argument  begin_expr  begin_name original zone  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name dtz  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name dtz  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name ruby time  end_name  end_type  begin_name create time  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name recv  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  end_type  begin_name args  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name gmt  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name recv  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name len  end_name  begin_init  begin_expr  begin_name arg size  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name is dst  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name date time zone  end_name  end_type  begin_name dtz  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name gmt  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name dtz  end_name  begin_operator  end_operator  begin_name  begin_name date time zone  end_name  begin_operator  end_operator  begin_name utc  end_name  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_name ruby string  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name dtz  end_name  begin_operator  end_operator  begin_call  begin_name get time zone  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name ruby string  end_name  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name to string  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name dtz  end_name  begin_operator  end_operator  begin_call  begin_name get local time zone  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_else  end_if  begin_if  begin_condition  begin_expr  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_name ruby boolean  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name is dst  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name ruby boolean  end_name  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name is true  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name args  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  begin_operator  end_operator  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  begin_operator  end_operator  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  begin_operator  end_operator  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  begin_operator  end_operator  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  begin_operator  end_operator  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  begin_operator  end_operator  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_block  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_comment mri accepts additional wday argument which appears to be ignored  end_comment  begin_expr_stmt  begin_expr  begin_name len  end_name  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name len  end_name  begin_operator  end_operator  begin_name arg size  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  begin_index  end_index  end_type  begin_name new args  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name i ruby object  end_name  begin_index  begin_expr  begin_name arg size  end_name  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name arraycopy  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name new args  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  begin_name len  end_name  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name arg size  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_expr_stmt  begin_expr  begin_name  begin_name new args  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_name args  end_name  begin_operator  end_operator  begin_name new args  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name len  end_name  begin_operator  end_operator  begin_name arg size  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_else  end_if  begin_if  begin_condition  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_name ruby string  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ruby numeric  end_name  begin_operator  end_operator  begin_name str 2 inum  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name ruby string  end_name  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name year  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name int  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ruby numeric  end_name  begin_operator  end_operator  begin_name num 2 long  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name month  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name len  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name is nil  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name tmp  end_name  begin_init  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name check string type  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name tmp  end_name  begin_operator  end_operator  begin_name is nil  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name month string  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name tmp  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to lower case  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name integer  end_name  end_type  begin_name month int  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name months map  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name month string  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name month int  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name month  end_name  begin_operator  end_operator  begin_name month int  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_name month  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name integer  end_name  begin_operator  end_operator  begin_name parse int  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name month string  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name number format exception  end_name  end_type  begin_name nf excptn  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new argument error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  end_block  end_else  end_if  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name month  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name int  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ruby numeric  end_name  begin_operator  end_operator  begin_name num 2 long  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name month  end_name  begin_operator  end_operator  begin_name month  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new argument error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name month  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  begin_index  end_index  end_type  begin_name int args  end_name  begin_init  begin_expr  begin_block  begin_expr  end_expr  begin_expr  end_expr  begin_expr  end_expr  begin_expr  end_expr  begin_expr  end_expr  begin_expr  end_expr  end_block  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name  begin_name int args  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  begin_name i  end_name  begin_operator  end_operator  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name is nil  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_name ruby numeric  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name call method  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get current context  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name long  end_name  end_type  begin_name value  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ruby numeric  end_name  begin_operator  end_operator  begin_name num 2 long  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name args  end_name  begin_index  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name  begin_name time min  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_name value  end_name  begin_operator  end_operator  begin_name value  end_name  begin_operator  end_operator  begin_name  begin_name time max  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new argument error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name  begin_name int args  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name int  end_name  begin_operator  end_operator  begin_name value  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name year  end_name  begin_operator  end_operator  begin_name year  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name year  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name year  end_name  begin_operator  end_operator  begin_name year  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name year  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name date time  end_name  end_type  begin_name dt  end_name  end_decl  end_decl_stmt  begin_comment set up with min values and then add to allow rolling over  end_comment  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_name dt  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name date time  end_name  begin_argument_list  begin_argument  begin_expr  begin_name year  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name date time zone  end_name  begin_operator  end_operator  begin_name utc  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name dt  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name dt  end_name  begin_operator  end_operator  begin_name plus months  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name month  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name plus days  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name int args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name plus hours  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name int args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name plus minutes  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name int args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name plus seconds  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name int args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name dt  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name dt  end_name  begin_operator  end_operator  begin_name with zone retain fields  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dtz  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment we might need to perform a dst correction  end_comment  begin_if  begin_condition  begin_expr  begin_name is dst  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment the instant at which we will ask dtz what the difference between dst and  end_comment  begin_comment standard time is  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name long  end_name  end_type  begin_name offset calculation instant  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name dt  end_name  begin_operator  end_operator  begin_name get millis  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment if we might be moving this time from dst dst the offset is assumed  end_comment  begin_comment to be the same as it was just before we last moved from dst dst  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name dtz  end_name  begin_operator  end_operator  begin_name is standard offset  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name dt  end_name  begin_operator  end_operator  begin_name get millis  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_name offset calculation instant  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name dtz  end_name  begin_operator  end_operator  begin_name previous transition  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name offset calculation instant  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name offset  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name dtz  end_name  begin_operator  end_operator  begin_name get standard offset  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name offset calculation instant  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name dtz  end_name  begin_operator  end_operator  begin_name get offset  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name offset calculation instant  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name is dst  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name dtz  end_name  begin_operator  end_operator  begin_name is standard offset  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name dt  end_name  begin_operator  end_operator  begin_name get millis  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name dt  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name dt  end_name  begin_operator  end_operator  begin_name minus millis  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name offset  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name is dst  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name dtz  end_name  begin_operator  end_operator  begin_name is standard offset  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name dt  end_name  begin_operator  end_operator  begin_name get millis  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name dt  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name dt  end_name  begin_operator  end_operator  begin_name plus millis  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name offset  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name  begin_name org  end_name  begin_operator  end_operator  begin_name joda  end_name  begin_operator  end_operator  begin_name time  end_name  begin_operator  end_operator  begin_name illegal field value exception  end_name  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new argument error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  begin_decl_stmt  begin_decl  begin_type  begin_name ruby time  end_name  end_type  begin_name time  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name ruby time  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name ruby class  end_name  begin_operator  end_operator  begin_name recv  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name dt  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment ignores usec if 8 args for compatibility with parsedate or if not supplied  end_comment  begin_if  begin_condition  begin_expr  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name is nil  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name usec  end_name  begin_init  begin_expr  begin_name  begin_name int args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name msec  end_name  begin_init  begin_expr  begin_name  begin_name int args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name  begin_name int args  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name msec  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name usec  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name  begin_name time  end_name  begin_operator  end_operator  begin_name dt  end_name  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name dt  end_name  begin_operator  end_operator  begin_name with millis  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name dt  end_name  begin_operator  end_operator  begin_name get millis  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name msec  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name time  end_name  begin_operator  end_operator  begin_name set u sec  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name usec  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name time  end_name  begin_operator  end_operator  begin_name call init  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name i ruby object  end_name  begin_operator  end_operator  begin_name null array  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name block  end_name  begin_operator  end_operator  begin_name null block  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name time  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name ruby class  end_name  end_type  begin_name define unbound method class  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo not allocatable allocator is probably ok here confirm jruby 415  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name ruby class  end_name  end_type  begin_name new class  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name define class  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get method  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name  begin_name object allocator  end_name  begin_operator  end_operator  begin_name not allocatable allocator  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name set unbound method  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name new class  end_name  begin_operator  end_operator  begin_name define annotated methods  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name ruby unbound method  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name new class  end_name  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name required  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name frame  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_name ruby method  end_name  end_type  begin_name bind  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name a receiver  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name block  end_name  end_type  begin_name block  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby class  end_name  end_type  begin_name receiver class  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name a receiver  end_name  begin_operator  end_operator  begin_name get meta class  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name origin module  end_name  begin_operator  end_operator  begin_name is instance  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name a receiver  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name origin module  end_name  begin_operator  end_operator  begin_name meta class  end_name  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new type error  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name receiver class  end_name  begin_operator  end_operator  begin_name meta class  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name receiver class  end_name  begin_operator  end_operator  begin_name get methods  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name contains key  end_name  begin_argument_list  begin_argument  begin_expr  begin_name origin name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new type error  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name origin name  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name origin module  end_name  begin_operator  end_operator  begin_name is module  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name origin module  end_name  begin_operator  end_operator  begin_name is instance  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name a receiver  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name a receiver  end_name  begin_operator  end_operator  begin_name get type  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name origin module  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment fix replace type with is instance of  end_comment  begin_throw  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new type error  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name origin module  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  end_else  end_if  end_else  end_if  end_block  end_then  end_if  begin_return  begin_expr  begin_call  begin_name  begin_name ruby method  end_name  begin_operator  end_operator  begin_name new method  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name implementation module  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name method name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name receiver class  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name origin name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name a receiver  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name j ruby method  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name required  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name frame  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name meta  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_annotation  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name wrap  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread context  end_name  end_type  begin_name context  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name recv  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name io  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name block  end_name  end_type  begin_name block  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name io exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name recv  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name ruby gzip file  end_name  end_type  begin_name instance  end_name  end_decl  end_decl_stmt  begin_comment todo people extending gzip writer reader will break find better way here  end_comment  begin_if  begin_condition  begin_expr  begin_name recv  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get module  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get class  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name instance  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ruby gzip writer  end_name  begin_operator  end_operator  begin_name new gzip writer  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name recv  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_name io  end_name  end_expr  end_block  end_expr  end_argument  begin_argument  begin_expr  begin_name block  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name instance  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ruby gzip reader  end_name  begin_operator  end_operator  begin_name new instance  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name recv  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_name io  end_name  end_expr  end_block  end_expr  end_argument  begin_argument  begin_expr  begin_name block  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_return  begin_expr  begin_call  begin_name wrap block  end_name  begin_argument_list  begin_argument  begin_expr  begin_name context  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name instance  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name block  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name node type  end_name  end_type  begin_name get argument type wacky hack  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name iter node  end_name  end_type  begin_name iter node  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name node type  end_name  end_type  begin_name args node id  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name iter node  end_name  begin_operator  end_operator  begin_name get var node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name iter node  end_name  begin_operator  end_operator  begin_name get var node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get node type  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name  begin_name node type  end_name  begin_operator  end_operator  begin_name zeroargnode  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment if we have multiple asgn with just args need a special type for that  end_comment  begin_expr_stmt  begin_expr  begin_name args node id  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name iter node  end_name  begin_operator  end_operator  begin_name get var node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get node type  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name args node id  end_name  begin_operator  end_operator  begin_name  begin_name node type  end_name  begin_operator  end_operator  begin_name multipleasgnnode  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name multiple asgn node  end_name  end_type  begin_name multiple asgn node  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name multiple asgn node  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name iter node  end_name  begin_operator  end_operator  begin_name get var node  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name multiple asgn node  end_name  begin_operator  end_operator  begin_name get head node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name multiple asgn node  end_name  begin_operator  end_operator  begin_name get args node  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment fixme this is gross don t do this  end_comment  begin_expr_stmt  begin_expr  begin_name args node id  end_name  begin_operator  end_operator  begin_name  begin_name node type  end_name  begin_operator  end_operator  begin_name svaluenode  end_name  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_then  end_if  begin_return  begin_expr  begin_name args node id  end_name  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name deprecated  end_name  end_annotation  begin_specifier  end_specifier  begin_name callback  end_name  end_type  begin_name get block method  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name method  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo this is probably bad  end_comment  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name reflection callback  end_name  begin_argument_list  begin_argument  begin_expr  begin_name type  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name method  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name  begin_name class  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_name  begin_name ruby kernel  end_name  begin_operator  end_operator  begin_name iruby object  end_name  end_name  end_expr  begin_operator  end_operator  begin_expr  begin_name  begin_name ruby kernel  end_name  begin_operator  end_operator  begin_name iruby object  end_name  end_name  end_expr  end_block  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name arity  end_name  begin_operator  end_operator  begin_name fixed  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name callback factory  end_name  end_type  begin_name create factory  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name class  end_name  end_type  begin_name type  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name create factory  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name type  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get j ruby class loader  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment used by compiler end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name callback factory  end_name  end_type  begin_name create factory  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name class  end_name  end_type  begin_name type  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name class loader  end_name  end_type  begin_name class loader  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name reflection  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name reflection callback factory  end_name  begin_argument_list  begin_argument  begin_expr  begin_name type  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name dumping  end_name  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name dumping invocation callback factory  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name type  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name class loader  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_comment fixme no i don t like it  end_comment  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name invocation callback factory  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name type  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name class loader  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_else  end_if  end_else  end_if  end_block 
 begin_specifier  end_specifier  begin_name encoding service  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name runtime  end_name  end_name  begin_operator  end_operator  begin_name runtime  end_name  end_expr  end_expr_stmt  begin_comment todo make it cross runtime safe by cow or eager copy  end_comment  begin_expr_stmt  begin_expr  begin_name encodings  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name encoding db  end_name  begin_operator  end_operator  begin_name get encodings  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name aliases  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name encoding db  end_name  begin_operator  end_operator  begin_name get aliases  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name encoding list  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name i ruby object  end_name  begin_index  begin_expr  begin_call  begin_name  begin_name encodings  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_index  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name define encodings  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name define aliases  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name write object data  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name value  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name io exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_comment switch on the object s native type this allows use defined  end_comment  begin_comment classes that have extended core native types to piggyback on their  end_comment  begin_comment marshalling logic  end_comment  begin_if  begin_condition  begin_expr  begin_name value  end_name  begin_operator  end_operator  begin_name core object type  end_name  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name value  end_name  begin_operator  end_operator  begin_name data type  end_name  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new type error  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name get meta class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name native type index  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name core object type  end_name  begin_operator  end_operator  begin_name value  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get native type index  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_switch  begin_condition  begin_expr  begin_name native type index  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  begin_name  begin_name class index  end_name  begin_operator  end_operator  begin_name array  end_name  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name write  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ruby array  end_name  begin_operator  end_operator  begin_name marshal to  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name ruby array  end_name  begin_operator  end_operator  begin_name value  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_case  begin_case  begin_expr  begin_name  begin_name class index  end_name  begin_operator  end_operator  begin_name false  end_name  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name write  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_case  begin_case  begin_expr  begin_name  begin_name class index  end_name  begin_operator  end_operator  begin_name fixnum  end_name  end_name  end_expr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby fixnum  end_name  end_type  begin_name fixnum  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name ruby fixnum  end_name  begin_operator  end_operator  begin_name value  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name is marshal fixnum  end_name  begin_argument_list  begin_argument  begin_expr  begin_name fixnum  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name write  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name write int  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name int  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name fixnum  end_name  begin_operator  end_operator  begin_name get long value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_then  end_if  begin_comment fixme inefficient constructing a bignum just for dumping  end_comment  begin_expr_stmt  begin_expr  begin_name value  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ruby bignum  end_name  begin_operator  end_operator  begin_name new bignum  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name fixnum  end_name  begin_operator  end_operator  begin_name get long value  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment fall through  end_comment  end_block  end_case  begin_case  begin_expr  begin_name  begin_name class index  end_name  begin_operator  end_operator  begin_name bignum  end_name  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name write  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ruby bignum  end_name  begin_operator  end_operator  begin_name marshal to  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name ruby bignum  end_name  begin_operator  end_operator  begin_name value  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_case  begin_case  begin_expr  begin_name  begin_name class index  end_name  begin_operator  end_operator  begin_name class  end_name  end_name  end_expr  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name ruby class  end_name  begin_operator  end_operator  begin_name value  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name is singleton  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new type error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name write  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ruby class  end_name  begin_operator  end_operator  begin_name marshal to  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name ruby class  end_name  begin_operator  end_operator  begin_name value  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_case  begin_case  begin_expr  begin_name  begin_name class index  end_name  begin_operator  end_operator  begin_name float  end_name  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name write  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ruby float  end_name  begin_operator  end_operator  begin_name marshal to  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name ruby float  end_name  begin_operator  end_operator  begin_name value  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_case  begin_case  begin_expr  begin_name  begin_name class index  end_name  begin_operator  end_operator  begin_name hash  end_name  end_name  end_expr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby hash  end_name  end_type  begin_name hash  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name ruby hash  end_name  begin_operator  end_operator  begin_name value  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name hash  end_name  begin_operator  end_operator  begin_name get if none  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is nil  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name write  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name hash  end_name  begin_operator  end_operator  begin_name has default proc  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name hash  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name new type error  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name write  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ruby hash  end_name  begin_operator  end_operator  begin_name marshal to  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name hash  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_block  end_case  begin_case  begin_expr  begin_name  begin_name class index  end_name  begin_operator  end_operator  begin_name module  end_name  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name write  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ruby module  end_name  begin_operator  end_operator  begin_name marshal to  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name ruby module  end_name  begin_operator  end_operator  begin_name value  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_case  begin_case  begin_expr  begin_name  begin_name class index  end_name  begin_operator  end_operator  begin_name nil  end_name  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name write  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_case  begin_case  begin_expr  begin_name  begin_name class index  end_name  begin_operator  end_operator  begin_name object  end_name  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name dump default object header  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name get meta class  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name get meta class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get real class  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name marshal  end_name  begin_argument_list  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_case  begin_case  begin_expr  begin_name  begin_name class index  end_name  begin_operator  end_operator  begin_name regexp  end_name  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name write  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ruby regexp  end_name  begin_operator  end_operator  begin_name marshal to  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name ruby regexp  end_name  begin_operator  end_operator  begin_name value  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_case  begin_case  begin_expr  begin_name  begin_name class index  end_name  begin_operator  end_operator  begin_name string  end_name  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name register link target  end_name  begin_argument_list  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name write  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name write string  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name convert to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get byte list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_case  begin_case  begin_expr  begin_name  begin_name class index  end_name  begin_operator  end_operator  begin_name struct  end_name  end_name  end_expr  begin_comment write s  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ruby struct  end_name  begin_operator  end_operator  begin_name marshal to  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name ruby struct  end_name  begin_operator  end_operator  begin_name value  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_case  begin_case  begin_expr  begin_name  begin_name class index  end_name  begin_operator  end_operator  begin_name symbol  end_name  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name register link target  end_name  begin_argument_list  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name write  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name write string  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_case  begin_case  begin_expr  begin_name  begin_name class index  end_name  begin_operator  end_operator  begin_name true  end_name  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name write  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  end_return  end_case  begin_default  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new type error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name get meta class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_default  end_block  end_switch  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name dump default object header  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name get meta class  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name value  end_name  begin_operator  end_operator  begin_name get meta class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get real class  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name marshal  end_name  begin_argument_list  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name this  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block 
begin_comment get value from current scope or one of its captured scopes fixme block variables are not getting primed to nil so we need to null check those until we prime them properly also add assert back in param offset zero indexed value that represents where variable lives param depth how many captured scopes down this variable should be set return the value here end_comment begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name get value  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name offset  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name depth  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name depth  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name parent  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name offset  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name depth  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_assert  begin_expr  begin_name offset  end_name  begin_operator  end_operator  begin_name size  end_name  begin_operator  end_operator  begin_name size error  end_name  end_expr  end_assert  begin_switch  begin_condition  begin_expr  begin_name offset  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  begin_return  begin_expr  begin_name variable value zero  end_name  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_return  begin_expr  begin_name variable value one  end_name  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_return  begin_expr  begin_name variable value two  end_name  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_return  begin_expr  begin_name variable value three  end_name  end_expr  end_return  end_case  begin_default  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name runtime exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name size error  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_default  end_block  end_switch  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  begin_index  end_index  end_type  begin_name get arg values  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment if we re not the argument scope for zsuper try our parent  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name static scope  end_name  begin_operator  end_operator  begin_name is argument scope  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name parent  end_name  begin_operator  end_operator  begin_name get arg values  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name total args  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name static scope  end_name  begin_operator  end_operator  begin_name get required args  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name static scope  end_name  begin_operator  end_operator  begin_name get optional args  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_assert  begin_expr  begin_name total args  end_name  begin_operator  end_operator  begin_name size  end_name  begin_operator  end_operator  begin_name size error  end_name  end_expr  end_assert  begin_comment copy and splat arguments out of the scope to use for zsuper call  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name static scope  end_name  begin_operator  end_operator  begin_name get rest arg  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_switch  begin_condition  begin_expr  begin_name total args  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  begin_return  begin_expr  begin_name  begin_name i ruby object  end_name  begin_operator  end_operator  begin_name null array  end_name  end_name  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_return  begin_expr  begin_operator  end_operator  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_name variable value zero  end_name  end_expr  end_block  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_return  begin_expr  begin_operator  end_operator  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_name variable value zero  end_name  end_expr  begin_operator  end_operator  begin_expr  begin_name variable value one  end_name  end_expr  end_block  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_return  begin_expr  begin_operator  end_operator  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_name variable value zero  end_name  end_expr  begin_operator  end_operator  begin_expr  begin_name variable value one  end_name  end_expr  begin_operator  end_operator  begin_expr  begin_name variable value two  end_name  end_expr  end_block  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_return  begin_expr  begin_operator  end_operator  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_name variable value zero  end_name  end_expr  begin_operator  end_operator  begin_expr  begin_name variable value one  end_name  end_expr  begin_operator  end_operator  begin_expr  begin_name variable value two  end_name  end_expr  begin_operator  end_operator  begin_expr  begin_name variable value three  end_name  end_expr  end_block  end_expr  end_return  end_case  begin_default  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name runtime exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_default  end_block  end_switch  end_block  end_then  begin_else  begin_block  begin_comment rest arg must be splatted  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name rest arg  end_name  begin_init  begin_expr  begin_call  begin_name get value  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name static scope  end_name  begin_operator  end_operator  begin_name get rest arg  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_assert  begin_expr  begin_name rest arg  end_name  begin_operator  end_operator  end_expr  end_assert  begin_comment fixme not very efficient  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name ruby array  end_name  end_type  begin_name splatted args  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name runtime helpers  end_name  begin_operator  end_operator  begin_name splat value  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name rest arg  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  begin_index  end_index  end_type  begin_name arg values  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name i ruby object  end_name  begin_index  begin_expr  begin_name total args  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name splatted args  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name arraycopy  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name splatted args  end_name  begin_operator  end_operator  begin_name to java array  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name arg values  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name total args  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name splatted args  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_switch  begin_condition  begin_expr  begin_name total args  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name  begin_name arg values  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_name variable value three  end_name  end_expr  end_expr_stmt  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name  begin_name arg values  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_name variable value two  end_name  end_expr  end_expr_stmt  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name  begin_name arg values  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_name variable value one  end_name  end_expr  end_expr_stmt  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name  begin_name arg values  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_name variable value zero  end_name  end_expr  end_expr_stmt  end_case  end_block  end_switch  begin_return  begin_expr  begin_name arg values  end_name  end_expr  end_return  end_block  end_else  end_if  end_block 
begin_comment get value from current scope or one of its captured scopes fixme block variables are not getting primed to nil so we need to null check those until we prime them properly also add assert back in param offset zero indexed value that represents where variable lives param depth how many captured scopes down this variable should be set return the value here end_comment begin_type  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name get value  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name offset  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name depth  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name depth  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name parent  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name offset  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name depth  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name assert get value  end_name  begin_argument_list  begin_argument  begin_expr  begin_name offset  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name depth  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment foo are not getting set from somewhere i want the following assert to be true though  end_comment  begin_comment assert variable values offset null getting unassigned static scope get variables offset  end_comment  begin_return  begin_expr  begin_name  begin_name variable values  end_name  begin_index  begin_expr  begin_name offset  end_name  end_expr  end_index  end_name  end_expr  end_return  end_block 
begin_comment copy variable values back for z super call end_comment begin_type  begin_specifier  end_specifier  begin_name i ruby object  end_name  begin_index  end_index  end_type  begin_name get arg values  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment if we re not the argument scope for zsuper try our parent  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name static scope  end_name  begin_operator  end_operator  begin_name is argument scope  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name parent  end_name  begin_operator  end_operator  begin_name get arg values  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name total args  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name static scope  end_name  begin_operator  end_operator  begin_name get required args  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name static scope  end_name  begin_operator  end_operator  begin_name get optional args  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment copy and splat arguments out of the scope to use for zsuper call  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name static scope  end_name  begin_operator  end_operator  begin_name get rest arg  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment required and optional only  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  begin_index  end_index  end_type  begin_name arg values  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name i ruby object  end_name  begin_index  begin_expr  begin_name total args  end_name  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name arraycopy  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name variable values  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name arg values  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name total args  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name arg values  end_name  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_comment rest arg must be splatted  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name rest arg  end_name  begin_init  begin_expr  begin_call  begin_name get value  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name static scope  end_name  begin_operator  end_operator  begin_name get rest arg  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_assert  begin_expr  begin_name rest arg  end_name  begin_operator  end_operator  end_expr  end_assert  begin_comment fixme not very efficient  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name ruby array  end_name  end_type  begin_name splatted args  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name runtime helpers  end_name  begin_operator  end_operator  begin_name splat value  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name rest arg  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  begin_index  end_index  end_type  begin_name arg values  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name i ruby object  end_name  begin_index  begin_expr  begin_name total args  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name splatted args  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name arraycopy  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name variable values  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name arg values  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name total args  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name arraycopy  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name splatted args  end_name  begin_operator  end_operator  begin_name to java array  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name arg values  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name total args  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name splatted args  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name arg values  end_name  end_expr  end_return  end_block  end_else  end_if  end_block 
begin_comment get value from current scope or one of its captured scopes fixme block variables are not getting primed to nil so we need to null check those until we prime them properly also add assert back in param offset zero indexed value that represents where variable lives param depth how many captured scopes down this variable should be set return the value here end_comment begin_type  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name get value  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name offset  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name depth  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_assert  begin_expr  begin_name depth  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name size error  end_name  end_expr  end_assert  begin_return  begin_expr  begin_call  begin_name  begin_name parent  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name offset  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name depth  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment get value from current scope or one of its captured scopes fixme block variables are not getting primed to nil so we need to null check those until we prime them properly also add assert back in param offset zero indexed value that represents where variable lives param depth how many captured scopes down this variable should be set return the value here end_comment begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name get value  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name offset  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name depth  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name depth  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name parent  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name offset  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name depth  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_assert  begin_expr  begin_name offset  end_name  begin_operator  end_operator  begin_name size  end_name  begin_operator  end_operator  begin_name size error  end_name  end_expr  end_assert  begin_return  begin_expr  begin_name variable value zero  end_name  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  begin_index  end_index  end_type  begin_name get arg values  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment if we re not the argument scope for zsuper try our parent  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name static scope  end_name  begin_operator  end_operator  begin_name is argument scope  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name parent  end_name  begin_operator  end_operator  begin_name get arg values  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name total args  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name static scope  end_name  begin_operator  end_operator  begin_name get required args  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name static scope  end_name  begin_operator  end_operator  begin_name get optional args  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment copy and splat arguments out of the scope to use for zsuper call  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name static scope  end_name  begin_operator  end_operator  begin_name get rest arg  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name total args  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_operator  end_operator  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_name variable value zero  end_name  end_expr  end_block  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_return  begin_expr  begin_name  begin_name i ruby object  end_name  begin_operator  end_operator  begin_name null array  end_name  end_name  end_expr  end_return  end_block  end_else  end_if  end_block  end_then  begin_else  begin_block  begin_comment rest arg must be splatted  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name rest arg  end_name  begin_init  begin_expr  begin_call  begin_name get value  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name static scope  end_name  begin_operator  end_operator  begin_name get rest arg  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment fixme not very efficient  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name ruby array  end_name  end_type  begin_name splatted args  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name runtime helpers  end_name  begin_operator  end_operator  begin_name splat value  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name rest arg  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  begin_index  end_index  end_type  begin_name arg values  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name i ruby object  end_name  begin_index  begin_expr  begin_name total args  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name splatted args  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name arraycopy  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name splatted args  end_name  begin_operator  end_operator  begin_name to java array  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name arg values  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name total args  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name splatted args  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name total args  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name  begin_name arg values  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_name variable value zero  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_name arg values  end_name  end_expr  end_return  end_block  end_else  end_if  end_block 
begin_comment get value from current scope or one of its captured scopes fixme block variables are not getting primed to nil so we need to null check those until we prime them properly also add assert back in param offset zero indexed value that represents where variable lives param depth how many captured scopes down this variable should be set return the value here end_comment begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name get value  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name offset  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name depth  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name depth  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name parent  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name offset  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name depth  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_assert  begin_expr  begin_name offset  end_name  begin_operator  end_operator  begin_name size  end_name  begin_operator  end_operator  begin_name size error  end_name  end_expr  end_assert  begin_switch  begin_condition  begin_expr  begin_name offset  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  begin_return  begin_expr  begin_name variable value zero  end_name  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_return  begin_expr  begin_name variable value one  end_name  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_return  begin_expr  begin_name variable value two  end_name  end_expr  end_return  end_case  begin_default  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name runtime exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name size error  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_default  end_block  end_switch  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  begin_index  end_index  end_type  begin_name get arg values  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment if we re not the argument scope for zsuper try our parent  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name static scope  end_name  begin_operator  end_operator  begin_name is argument scope  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name parent  end_name  begin_operator  end_operator  begin_name get arg values  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name total args  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name static scope  end_name  begin_operator  end_operator  begin_name get required args  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name static scope  end_name  begin_operator  end_operator  begin_name get optional args  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_assert  begin_expr  begin_name total args  end_name  begin_operator  end_operator  begin_name size  end_name  begin_operator  end_operator  begin_name size error  end_name  end_expr  end_assert  begin_comment copy and splat arguments out of the scope to use for zsuper call  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name static scope  end_name  begin_operator  end_operator  begin_name get rest arg  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_switch  begin_condition  begin_expr  begin_name total args  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  begin_return  begin_expr  begin_name  begin_name i ruby object  end_name  begin_operator  end_operator  begin_name null array  end_name  end_name  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_return  begin_expr  begin_operator  end_operator  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_name variable value zero  end_name  end_expr  end_block  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_return  begin_expr  begin_operator  end_operator  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_name variable value zero  end_name  end_expr  begin_operator  end_operator  begin_expr  begin_name variable value one  end_name  end_expr  end_block  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_return  begin_expr  begin_operator  end_operator  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_name variable value zero  end_name  end_expr  begin_operator  end_operator  begin_expr  begin_name variable value one  end_name  end_expr  begin_operator  end_operator  begin_expr  begin_name variable value two  end_name  end_expr  end_block  end_expr  end_return  end_case  begin_default  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name runtime exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_default  end_block  end_switch  end_block  end_then  begin_else  begin_block  begin_comment rest arg must be splatted  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name rest arg  end_name  begin_init  begin_expr  begin_call  begin_name get value  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name static scope  end_name  begin_operator  end_operator  begin_name get rest arg  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_assert  begin_expr  begin_name rest arg  end_name  begin_operator  end_operator  end_expr  end_assert  begin_comment fixme not very efficient  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name ruby array  end_name  end_type  begin_name splatted args  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name runtime helpers  end_name  begin_operator  end_operator  begin_name splat value  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name rest arg  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  begin_index  end_index  end_type  begin_name arg values  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name i ruby object  end_name  begin_index  begin_expr  begin_name total args  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name splatted args  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name arraycopy  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name splatted args  end_name  begin_operator  end_operator  begin_name to java array  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name arg values  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name total args  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name splatted args  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_switch  begin_condition  begin_expr  begin_name total args  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name  begin_name arg values  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_name variable value two  end_name  end_expr  end_expr_stmt  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name  begin_name arg values  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_name variable value one  end_name  end_expr  end_expr_stmt  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name  begin_name arg values  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_name variable value zero  end_name  end_expr  end_expr_stmt  end_case  end_block  end_switch  begin_return  begin_expr  begin_name arg values  end_name  end_expr  end_return  end_block  end_else  end_if  end_block 
begin_comment get value from current scope or one of its captured scopes fixme block variables are not getting primed to nil so we need to null check those until we prime them properly also add assert back in param offset zero indexed value that represents where variable lives param depth how many captured scopes down this variable should be set return the value here end_comment begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name get value  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name offset  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name depth  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name depth  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name parent  end_name  begin_operator  end_operator  begin_name get value  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name offset  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name depth  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_assert  begin_expr  begin_name offset  end_name  begin_operator  end_operator  begin_name size  end_name  begin_operator  end_operator  begin_name size error  end_name  end_expr  end_assert  begin_switch  begin_condition  begin_expr  begin_name offset  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  begin_return  begin_expr  begin_name variable value zero  end_name  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_return  begin_expr  begin_name variable value one  end_name  end_expr  end_return  end_case  begin_default  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name runtime exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name size error  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_default  end_block  end_switch  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name i ruby object  end_name  begin_index  end_index  end_type  begin_name get arg values  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment if we re not the argument scope for zsuper try our parent  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name static scope  end_name  begin_operator  end_operator  begin_name is argument scope  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name parent  end_name  begin_operator  end_operator  begin_name get arg values  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name total args  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name static scope  end_name  begin_operator  end_operator  begin_name get required args  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name static scope  end_name  begin_operator  end_operator  begin_name get optional args  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_assert  begin_expr  begin_name total args  end_name  begin_operator  end_operator  begin_name size  end_name  begin_operator  end_operator  begin_name size error  end_name  end_expr  end_assert  begin_comment copy and splat arguments out of the scope to use for zsuper call  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name static scope  end_name  begin_operator  end_operator  begin_name get rest arg  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_switch  begin_condition  begin_expr  begin_name total args  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  begin_return  begin_expr  begin_name  begin_name i ruby object  end_name  begin_operator  end_operator  begin_name null array  end_name  end_name  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_return  begin_expr  begin_operator  end_operator  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_name variable value zero  end_name  end_expr  end_block  end_expr  end_return  end_case  begin_case  begin_expr  end_expr  begin_return  begin_expr  begin_operator  end_operator  begin_name  begin_name i ruby object  end_name  begin_index  end_index  end_name  begin_block  begin_expr  begin_name variable value zero  end_name  end_expr  begin_operator  end_operator  begin_expr  begin_name variable value one  end_name  end_expr  end_block  end_expr  end_return  end_case  begin_default  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name runtime exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_default  end_block  end_switch  end_block  end_then  begin_else  begin_block  begin_comment rest arg must be splatted  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name rest arg  end_name  begin_init  begin_expr  begin_call  begin_name get value  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name static scope  end_name  begin_operator  end_operator  begin_name get rest arg  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_assert  begin_expr  begin_name rest arg  end_name  begin_operator  end_operator  end_expr  end_assert  begin_comment fixme not very efficient  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name ruby array  end_name  end_type  begin_name splatted args  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name runtime helpers  end_name  begin_operator  end_operator  begin_name splat value  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name rest arg  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  begin_index  end_index  end_type  begin_name arg values  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name i ruby object  end_name  begin_index  begin_expr  begin_name total args  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name splatted args  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name arraycopy  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name splatted args  end_name  begin_operator  end_operator  begin_name to java array  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name arg values  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name total args  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name splatted args  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_switch  begin_condition  begin_expr  begin_name total args  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name  begin_name arg values  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_name variable value one  end_name  end_expr  end_expr_stmt  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name  begin_name arg values  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_name variable value zero  end_name  end_expr  end_expr_stmt  end_case  end_block  end_switch  begin_return  begin_expr  begin_name arg values  end_name  end_expr  end_return  end_block  end_else  end_if  end_block 
begin_comment used by the evaluator and the compiler to set a constant by name this is for a null const decl end_comment begin_type  begin_specifier  end_specifier  begin_name i ruby object  end_name  end_type  begin_name set constant in current  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name interned name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name result  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name module  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name module  end_name  begin_operator  end_operator  begin_call  begin_name get current scope  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get static scope  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get module  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name module  end_name  begin_operator  end_operator  begin_name fast set constant  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name interned name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name result  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name result  end_name  end_expr  end_return  end_block  end_then  end_if  begin_comment todo wire into new exception handling mechanism  end_comment  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new type error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name pre bsf apply  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name  begin_name string  end_name  begin_index  end_index  end_name  end_type  begin_name names  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment fixme i think we need these pushed somewhere  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name local static scope  end_name  end_type  begin_name static scope  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name local static scope  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name static scope  end_name  begin_operator  end_operator  begin_name set variables  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name names  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name push frame  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name pre method frame and scope  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name clazz  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name block  end_name  end_type  begin_name block  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name static scope  end_name  end_type  begin_name static scope  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name implementation class  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name static scope  end_name  begin_operator  end_operator  begin_name get module  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment fixme this is currently only here because of some problems with io output stream writing to a bare runtime without a proper scope  end_comment  begin_if  begin_condition  begin_expr  begin_name implementation class  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name implementation class  end_name  begin_operator  end_operator  begin_name clazz  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name push call frame  end_name  begin_argument_list  begin_argument  begin_expr  begin_name clazz  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name block  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name push scope  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name dynamic scope  end_name  begin_operator  end_operator  begin_name new dynamic scope  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name static scope  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name push ruby class  end_name  begin_argument_list  begin_argument  begin_expr  begin_name implementation class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name pre method frame and dummy scope  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name clazz  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name self  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name block  end_name  end_type  begin_name block  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name static scope  end_name  end_type  begin_name static scope  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name implementation class  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name static scope  end_name  begin_operator  end_operator  begin_name get module  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment fixme this is currently only here because of some problems with io output stream writing to a bare runtime without a proper scope  end_comment  begin_if  begin_condition  begin_expr  begin_name implementation class  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name implementation class  end_name  begin_operator  end_operator  begin_name clazz  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name push call frame  end_name  begin_argument_list  begin_argument  begin_expr  begin_name clazz  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name self  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name block  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name push scope  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name static scope  end_name  begin_operator  end_operator  begin_name get dummy scope  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name push ruby class  end_name  begin_argument_list  begin_argument  begin_expr  begin_name implementation class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name pre method no frame and dummy scope  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name clazz  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name static scope  end_name  end_type  begin_name static scope  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name implementation class  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name static scope  end_name  begin_operator  end_operator  begin_name get module  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment fixme this is currently only here because of some problems with io output stream writing to a bare runtime without a proper scope  end_comment  begin_if  begin_condition  begin_expr  begin_name implementation class  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name implementation class  end_name  begin_operator  end_operator  begin_name clazz  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name push scope  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name static scope  end_name  begin_operator  end_operator  begin_name get dummy scope  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name push ruby class  end_name  begin_argument_list  begin_argument  begin_expr  begin_name implementation class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name pre method scope only  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name clazz  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name static scope  end_name  end_type  begin_name static scope  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name implementation class  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name static scope  end_name  begin_operator  end_operator  begin_name get module  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment fixme this is currently only here because of some problems with io output stream writing to a bare runtime without a proper scope  end_comment  begin_if  begin_condition  begin_expr  begin_name implementation class  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name implementation class  end_name  begin_operator  end_operator  begin_name clazz  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name push scope  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name dynamic scope  end_name  begin_operator  end_operator  begin_name new dynamic scope  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name static scope  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name push ruby class  end_name  begin_argument_list  begin_argument  begin_expr  begin_name implementation class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name pre method backtrace dummy scope  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name clazz  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name static scope  end_name  end_type  begin_name static scope  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name push backtrace frame  end_name  begin_argument_list  begin_argument  begin_expr  begin_name name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name implementation class  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name static scope  end_name  begin_operator  end_operator  begin_name get module  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment fixme this is currently only here because of some problems with io output stream writing to a bare runtime without a proper scope  end_comment  begin_if  begin_condition  begin_expr  begin_name implementation class  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name implementation class  end_name  begin_operator  end_operator  begin_name clazz  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name push scope  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name static scope  end_name  begin_operator  end_operator  begin_name get dummy scope  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name push ruby class  end_name  begin_argument_list  begin_argument  begin_expr  begin_name implementation class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment xxx again screwy evaling under previous frame s scope end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name pre execute under  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby module  end_name  end_type  begin_name execute under class  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name block  end_name  end_type  begin_name block  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name frame  end_name  end_type  begin_name frame  end_name  begin_init  begin_expr  begin_call  begin_name get current frame  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name push ruby class  end_name  begin_argument_list  begin_argument  begin_expr  begin_name execute under class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name dynamic scope  end_name  end_type  begin_name scope  end_name  begin_init  begin_expr  begin_call  begin_name get current scope  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name static scope  end_name  end_type  begin_name s scope  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name block static scope  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name scope  end_name  begin_operator  end_operator  begin_name get static scope  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name s scope  end_name  begin_operator  end_operator  begin_name set module  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name execute under class  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name push scope  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name dynamic scope  end_name  begin_operator  end_operator  begin_name new dynamic scope  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name s scope  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name scope  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name push call frame  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name frame  end_name  begin_operator  end_operator  begin_name get klazz  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name frame  end_name  begin_operator  end_operator  begin_name get name  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name frame  end_name  begin_operator  end_operator  begin_name get self  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name block  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name get current frame  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name set visibility  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name get previous frame  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get visibility  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment converts a byte array containing a ruby string representation of a double value to a double equivalent to double parse double string s but accounts for embedded underscore characters as permitted in ruby strings single underscores allowed between digits in strict mode multiple in non strict mode param bytes the array containing the ruby string value to convert param buflen the length of the array to be used param strict if true strict rules as required by float str are enforced otherwise the laxer rules of str to f are employed return the converted double value end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name double  end_name  end_type  begin_name byte array to double  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name  begin_name byte  end_name  begin_index  end_index  end_name  end_type  begin_name bytes  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name begin  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name buflen  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name strict  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment simple cases abs exponent 22 up to 37 depending on significand length  end_comment  begin_comment are converted directly which is considerably faster than creating a java  end_comment  begin_comment string and passing it to double parse double which in turn passes it to  end_comment  begin_comment sun misc floating decimal the latter approach involves 5 object allocations  end_comment  begin_comment 3 arrays string floating decimal and 3 array copies two of them one byte char  end_comment  begin_comment at a time here and in floating decimal  end_comment  begin_comment however the latter approach is employed for more difficult cases generally  end_comment  begin_comment speaking those that require rounding the code for the difficult cases is  end_comment  begin_comment quite involved see sun misc floating decimal java if you re interested  end_comment  begin_comment states  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name scomplete  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name sbegin  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_comment remove leading whitespace includes for lax  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name ssign  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_comment get sign if any  end_comment  begin_comment optimistic pass calculate value as digits are processed  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name soptdigit  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_comment digits lax rules  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name soptdecdigit  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_comment decimal digits lax rules  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name soptexp  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_comment exponent sign digits lax rules  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name soptdigit strict  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_comment digits strict rules  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name soptdecdigit strict  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_comment decimal digits strict rules  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name soptexp strict  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_comment exponent sign digits strict rules  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name soptcalc  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_comment complete calculation if possible  end_comment  begin_comment fallback pass gather chars into array and pass to double parse double  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name sdigit  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_comment digits lax rules  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name sdecdigit  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_comment decimal digits lax rules  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name sexp  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_comment exponent sign digits lax rules  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name sdigit strict  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_comment digits strict rules  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name sdecdigit strict  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_comment decimal digits strict rules  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name sexp strict  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_comment exponent sign digits strict rules  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name serr not strict  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_comment largest abs exponent we can potentially handle without  end_comment  begin_comment calling double parse double aka sun misc floating decimal  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name max exp  end_name  begin_init  begin_expr  begin_name max decimal digits  end_name  begin_operator  end_operator  begin_name max small 10  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_comment 37  end_comment  begin_if  begin_condition  begin_expr  begin_name bytes  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name  begin_name buflen  end_name  begin_argument_list  begin_argument  begin_operator  end_operator  begin_name buflen  end_name  end_argument  end_argument_list  end_name  begin_name  begin_name bytes  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name illegal argument exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_comment todo get rid of this lax returns 0 0 strict will throw  end_comment  begin_if  begin_condition  begin_expr  begin_name buflen  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name number format exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  begin_name begin  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name buflen  end_name  begin_operator  end_operator  begin_name begin  end_name  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name byte  end_name  end_type  begin_name ival  end_name  begin_init  begin_expr  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name negative  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_comment fields used for direct optimistic calculation  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name n digits  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_comment number of significant digits updated as parsed  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name n trailing zeroes  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_comment zeroes that may go to significand or exponent  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name dec pos  end_name  begin_init  begin_expr  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_comment offset of decimal pt from start 1 no decimal  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name long  end_name  end_type  begin_name significand  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_comment significand updated as parsed  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name exponent  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_comment exponent updated as parsed  end_comment  begin_comment fields used for fallback send to double parse double  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name start pos  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_comment start of digits or if no leading digits  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name char  end_name  begin_index  end_index  end_type  begin_name chars  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name offset  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name last valid offset  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name state  end_name  begin_init  begin_expr  begin_name sbegin  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name scomplete  end_name  end_expr  end_condition  begin_block  begin_label  begin_name states  end_name  end_label  begin_switch  begin_condition  begin_expr  begin_name state  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  begin_name sbegin  end_name  end_expr  begin_if  begin_condition  begin_expr  begin_name strict  end_name  end_expr  end_condition  begin_then  begin_block  begin_for  begin_init  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  begin_operator  end_operator  begin_call  begin_name is whitespace  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_empty_stmt  end_empty_stmt  end_for  end_block  end_then  begin_else  begin_block  begin_for  begin_init  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name is whitespace  end_name  begin_argument_list  begin_argument  begin_expr  begin_name ival  end_name  begin_operator  end_operator  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_name ival  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_empty_stmt  end_empty_stmt  end_for  end_block  end_else  end_if  begin_if  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name strict  end_name  begin_operator  end_operator  begin_name serr not strict  end_name  begin_operator  end_operator  begin_name scomplete  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_then  end_if  begin_comment drop through for sign  end_comment  end_case  begin_case  begin_expr  begin_name ssign  end_name  end_expr  begin_switch  begin_condition  begin_expr  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name negative  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_case  begin_case  begin_expr  end_expr  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment todo turn off the negative will return 0 0 in lax mode  end_comment  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name strict  end_name  begin_operator  end_operator  begin_name serr not strict  end_name  begin_operator  end_operator  begin_name scomplete  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_then  end_if  end_case  end_block  end_switch  begin_comment switch  end_comment  begin_expr_stmt  begin_expr  begin_name start pos  end_name  begin_operator  end_operator  begin_name i  end_name  end_expr  end_expr_stmt  begin_comment will use this if we have to go back the slow way  end_comment  begin_if  begin_condition  begin_expr  begin_name strict  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name soptdigit strict  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_then  end_if  begin_comment drop through for non strict digits  end_comment  end_case  begin_case  begin_expr  begin_name soptdigit  end_name  end_expr  begin_comment first char must be digit or decimal point  end_comment  begin_switch  begin_condition  begin_expr  begin_name ival  end_name  begin_operator  end_operator  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_index  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  begin_comment ignore leading zeroes  end_comment  begin_break  end_break  begin_comment switch  end_comment  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name significand  end_name  begin_operator  end_operator  begin_call  begin_name long  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name int  end_name  begin_operator  end_operator  begin_name ival  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name int  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name n digits  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_break  end_break  begin_comment switch  end_comment  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name soptdecdigit  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_default  begin_comment no digits go calc will return 0 0 for lax  end_comment  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name soptcalc  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_default  end_block  end_switch  begin_comment switch  end_comment  begin_for  begin_init  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  end_expr  end_condition  begin_incr  end_incr  begin_block  begin_switch  begin_condition  begin_expr  begin_name ival  end_name  begin_operator  end_operator  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_index  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  begin_comment ignore leading zeroes  end_comment  begin_if  begin_condition  begin_expr  begin_name n digits  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment just save a count of zeroes for now if no digit  end_comment  begin_comment ends up following them they ll be applied to the  end_comment  begin_comment exponent rather than the significand and our max  end_comment  begin_comment length for optimistic calc  end_comment  begin_expr_stmt  begin_expr  begin_name n trailing zeroes  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_break  end_break  begin_comment switch  end_comment  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_comment ok got a non zero have to own up to our horded zeroes  end_comment  begin_if  begin_condition  begin_expr  begin_name n trailing zeroes  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name n digits  end_name  begin_operator  end_operator  begin_name n trailing zeroes  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name max decimal digits  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name significand  end_name  begin_operator  end_operator  begin_name  begin_name long 10 powers  end_name  begin_index  begin_expr  begin_name n trailing zeroes  end_name  end_expr  end_index  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name n trailing zeroes  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment else catch oversize below  end_comment  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name n digits  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name max decimal digits  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name significand  end_name  begin_operator  end_operator  begin_name significand  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name long  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name int  end_name  begin_operator  end_operator  begin_name ival  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name int  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  begin_comment switch  end_comment  end_block  end_then  begin_else  begin_block  begin_comment oh well it was worth a try go let  end_comment  begin_comment double floating decimal handle it  end_comment  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name sdigit  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_else  end_if  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name soptdecdigit  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name soptexp  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_comment ignore  end_comment  begin_break  end_break  begin_comment switch  end_comment  end_case  begin_default  begin_comment end of parseable data go to calc  end_comment  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name soptcalc  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_default  end_block  end_switch  begin_comment switch  end_comment  end_block  end_for  begin_comment for  end_comment  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name soptcalc  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name soptdecdigit  end_name  end_expr  begin_expr_stmt  begin_expr  begin_name dec pos  end_name  begin_operator  end_operator  begin_name n digits  end_name  begin_operator  end_operator  begin_name n trailing zeroes  end_name  end_expr  end_expr_stmt  begin_for  begin_init  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  begin_operator  end_operator  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_empty_stmt  end_empty_stmt  end_for  begin_comment first non underscore char must be digit  end_comment  begin_if  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  end_expr  end_condition  begin_then  begin_block  begin_switch  begin_condition  begin_expr  begin_name ival  end_name  begin_operator  end_operator  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_index  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  begin_if  begin_condition  begin_expr  begin_name n digits  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name n trailing zeroes  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name exponent  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_break  end_break  begin_comment switch  end_comment  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_if  begin_condition  begin_expr  begin_name n trailing zeroes  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name n digits  end_name  begin_operator  end_operator  begin_name n trailing zeroes  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name max decimal digits  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name significand  end_name  begin_operator  end_operator  begin_name  begin_name long 10 powers  end_name  begin_index  begin_expr  begin_name n trailing zeroes  end_name  end_expr  end_index  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name n trailing zeroes  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment else catch oversize below  end_comment  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name n digits  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name max decimal digits  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name significand  end_name  begin_operator  end_operator  begin_name significand  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name long  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name int  end_name  begin_operator  end_operator  begin_name ival  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name int  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  begin_comment switch  end_comment  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name sdigit  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_else  end_if  end_case  begin_default  begin_comment no dec digits end of parseable data go to calc  end_comment  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name soptcalc  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_default  end_block  end_switch  begin_comment switch  end_comment  end_block  end_then  end_if  begin_comment if  end_comment  begin_for  begin_init  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  end_expr  end_condition  begin_incr  end_incr  begin_block  begin_switch  begin_condition  begin_expr  begin_name ival  end_name  begin_operator  end_operator  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_index  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  begin_if  begin_condition  begin_expr  begin_name n digits  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name n trailing zeroes  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name exponent  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_break  end_break  begin_comment switch  end_comment  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_if  begin_condition  begin_expr  begin_name n trailing zeroes  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name n digits  end_name  begin_operator  end_operator  begin_name n trailing zeroes  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name max decimal digits  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name significand  end_name  begin_operator  end_operator  begin_name  begin_name long 10 powers  end_name  begin_index  begin_expr  begin_name n trailing zeroes  end_name  end_expr  end_index  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name n trailing zeroes  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment else catch oversize below  end_comment  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name n digits  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name max decimal digits  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name significand  end_name  begin_operator  end_operator  begin_name significand  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name long  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name int  end_name  begin_operator  end_operator  begin_name ival  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name int  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  begin_comment switch  end_comment  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name sdigit  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_else  end_if  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name soptexp  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_comment ignore  end_comment  begin_break  end_break  begin_comment switch  end_comment  end_case  begin_default  begin_comment end of parseable data go to calc  end_comment  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name soptcalc  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_default  end_block  end_switch  begin_comment switch  end_comment  end_block  end_for  begin_comment for  end_comment  begin_comment no exponent so drop through for calculation  end_comment  end_case  begin_case  begin_expr  begin_name soptcalc  end_name  end_expr  begin_comment calculation for simple and typical case  end_comment  begin_comment adapted from sun misc floating decimal  end_comment  begin_if  begin_condition  begin_expr  begin_name n digits  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name buflen  end_name  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name ival  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name ival  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name  begin_name double  end_name  begin_operator  end_operator  begin_name na n  end_name  end_name  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name ival  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name ival  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name negative  end_name  begin_operator  end_operator  begin_name  begin_name double  end_name  begin_operator  end_operator  begin_name negative infinity  end_name  end_name  begin_operator  end_operator  begin_name  begin_name double  end_name  begin_operator  end_operator  begin_name positive infinity  end_name  end_name  end_expr  end_return  end_block  end_then  end_if  end_else  end_if  end_block  end_then  end_if  begin_return  begin_expr  begin_name negative  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_return  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name dec pos  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name exponent  end_name  begin_operator  end_operator  begin_name n trailing zeroes  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name exponent  end_name  begin_operator  end_operator  begin_name dec pos  end_name  begin_operator  end_operator  begin_name n digits  end_name  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name double  end_name  end_type  begin_name d value  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name double  end_name  begin_operator  end_operator  begin_name significand  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name exponent  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name d value  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  begin_name negative  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name d value  end_name  begin_operator  end_operator  begin_name d value  end_name  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name exponent  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name exponent  end_name  begin_operator  end_operator  begin_name max small 10  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name d value  end_name  begin_operator  end_operator  begin_name  begin_name small 10 powers  end_name  begin_index  begin_expr  begin_name exponent  end_name  end_expr  end_index  end_name  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name negative  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name d value  end_name  begin_operator  end_operator  begin_name d value  end_name  end_expr  end_return  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name slop  end_name  begin_init  begin_expr  begin_name max decimal digits  end_name  begin_operator  end_operator  begin_name n digits  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name exponent  end_name  begin_operator  end_operator  begin_name max small 10  end_name  begin_operator  end_operator  begin_name slop  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name d value  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name d value  end_name  begin_operator  end_operator  begin_name  begin_name small 10 powers  end_name  begin_index  begin_expr  begin_name slop  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name small 10 powers  end_name  begin_index  begin_expr  begin_name exponent  end_name  begin_operator  end_operator  begin_name slop  end_name  end_expr  end_index  end_name  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name negative  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name d value  end_name  begin_operator  end_operator  begin_name d value  end_name  end_expr  end_return  end_block  end_then  end_if  end_block  end_then  begin_else  begin_block  begin_comment todo it s not clear to me why in floating decimal the  end_comment  begin_comment slop calculation performed above for positive exponents  end_comment  begin_comment isn t used for negative exponents as well will find out  end_comment  begin_if  begin_condition  begin_expr  begin_name exponent  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name max small 10  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name d value  end_name  begin_operator  end_operator  begin_name d value  end_name  begin_operator  end_operator  begin_name  begin_name small 10 powers  end_name  begin_index  begin_expr  begin_operator  end_operator  begin_name exponent  end_name  end_expr  end_index  end_name  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name negative  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name d value  end_name  begin_operator  end_operator  begin_name d value  end_name  end_expr  end_return  end_block  end_then  end_if  end_block  end_else  end_if  end_else  end_if  begin_comment difficult case send to double floating decimal  end_comment  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name sdigit  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name soptexp  end_name  end_expr  begin_block  begin_comment lax str to f allows underscores between e e and sign  end_comment  begin_for  begin_init  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  begin_operator  end_operator  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_empty_stmt  end_empty_stmt  end_for  begin_if  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name soptcalc  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name exp sign  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name exp spec  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_switch  begin_condition  begin_expr  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name exp sign  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_expr_stmt  end_case  begin_case  begin_expr  end_expr  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name soptcalc  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_then  end_if  end_case  end_block  end_switch  begin_for  begin_init  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  end_expr  end_condition  begin_incr  end_incr  begin_block  begin_switch  begin_condition  begin_expr  begin_name ival  end_name  begin_operator  end_operator  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_index  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name exp spec  end_name  begin_operator  end_operator  begin_name exp spec  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name int  end_name  begin_operator  end_operator  begin_name ival  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name int  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name max exp  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment too big for us  end_comment  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name sdigit  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_then  end_if  begin_break  end_break  begin_comment switch  end_comment  end_case  begin_case  begin_expr  end_expr  begin_break  end_break  begin_comment switch  end_comment  end_case  begin_default  begin_expr_stmt  begin_expr  begin_name exponent  end_name  begin_operator  end_operator  begin_name exp sign  end_name  begin_operator  end_operator  begin_name exp spec  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name soptcalc  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_default  end_block  end_switch  end_block  end_for  begin_expr_stmt  begin_expr  begin_name exponent  end_name  begin_operator  end_operator  begin_name exp sign  end_name  begin_operator  end_operator  begin_name exp spec  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name soptcalc  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_block  begin_comment block  end_comment  end_case  begin_case  begin_expr  begin_name soptdigit strict  end_name  end_expr  begin_comment first char must be digit or decimal point  end_comment  begin_switch  begin_condition  begin_expr  begin_name ival  end_name  begin_operator  end_operator  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_index  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  begin_break  end_break  begin_comment switch  end_comment  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name significand  end_name  begin_operator  end_operator  begin_call  begin_name long  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name int  end_name  begin_operator  end_operator  begin_name ival  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name int  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name n digits  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_break  end_break  begin_comment switch  end_comment  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name soptdecdigit strict  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_default  begin_comment no digits error  end_comment  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name serr not strict  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_default  end_block  end_switch  begin_for  begin_init  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  end_expr  end_condition  begin_incr  end_incr  begin_block  begin_switch  begin_condition  begin_expr  begin_name ival  end_name  begin_operator  end_operator  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_index  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  begin_if  begin_condition  begin_expr  begin_name n digits  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name n trailing zeroes  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_break  end_break  begin_comment switch  end_comment  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_if  begin_condition  begin_expr  begin_name n trailing zeroes  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name n digits  end_name  begin_operator  end_operator  begin_name n trailing zeroes  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name max decimal digits  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name significand  end_name  begin_operator  end_operator  begin_name  begin_name long 10 powers  end_name  begin_index  begin_expr  begin_name n trailing zeroes  end_name  end_expr  end_index  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name n trailing zeroes  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment else catch oversize below  end_comment  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name n digits  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name max decimal digits  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name significand  end_name  begin_operator  end_operator  begin_name significand  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name long  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name int  end_name  begin_operator  end_operator  begin_name ival  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name int  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  begin_comment switch  end_comment  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name sdigit  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_else  end_if  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name soptdecdigit strict  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name soptexp strict  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_if  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  begin_operator  end_operator  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name serr not strict  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_then  end_if  begin_break  end_break  begin_comment switch  end_comment  end_case  begin_default  begin_comment only whitespace allowed after value for strict  end_comment  begin_for  begin_init  begin_expr  begin_operator  end_operator  begin_name i  end_name  end_expr  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  begin_operator  end_operator  begin_call  begin_name is whitespace  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_empty_stmt  end_empty_stmt  end_for  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  begin_operator  end_operator  begin_name serr not strict  end_name  begin_operator  end_operator  begin_name soptcalc  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_default  end_block  end_switch  begin_comment switch  end_comment  end_block  end_for  begin_comment for  end_comment  begin_comment no more data ok for strict to go calc  end_comment  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name soptcalc  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name soptdecdigit strict  end_name  end_expr  begin_expr_stmt  begin_expr  begin_name dec pos  end_name  begin_operator  end_operator  begin_name n digits  end_name  begin_operator  end_operator  begin_name n trailing zeroes  end_name  end_expr  end_expr_stmt  begin_comment first char must be digit  end_comment  begin_if  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  end_expr  end_condition  begin_then  begin_block  begin_switch  begin_condition  begin_expr  begin_name ival  end_name  begin_operator  end_operator  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_index  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  begin_if  begin_condition  begin_expr  begin_name n digits  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name n trailing zeroes  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name exponent  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_break  end_break  begin_comment switch  end_comment  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_if  begin_condition  begin_expr  begin_name n trailing zeroes  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name n digits  end_name  begin_operator  end_operator  begin_name n trailing zeroes  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name max decimal digits  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name significand  end_name  begin_operator  end_operator  begin_name  begin_name long 10 powers  end_name  begin_index  begin_expr  begin_name n trailing zeroes  end_name  end_expr  end_index  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name n trailing zeroes  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment else catch oversize below  end_comment  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name n digits  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name max decimal digits  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name significand  end_name  begin_operator  end_operator  begin_name significand  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name long  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name int  end_name  begin_operator  end_operator  begin_name ival  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name int  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  begin_comment switch  end_comment  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name sdigit  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_else  end_if  end_case  begin_default  begin_comment no dec digits after error for strict  end_comment  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name serr not strict  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_default  end_block  end_switch  begin_comment switch  end_comment  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name serr not strict  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_else  end_if  begin_for  begin_init  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  end_expr  end_condition  begin_incr  end_incr  begin_block  begin_switch  begin_condition  begin_expr  begin_name ival  end_name  begin_operator  end_operator  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_index  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  begin_if  begin_condition  begin_expr  begin_name n digits  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name n trailing zeroes  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name exponent  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_break  end_break  begin_comment switch  end_comment  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_if  begin_condition  begin_expr  begin_name n trailing zeroes  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name n digits  end_name  begin_operator  end_operator  begin_name n trailing zeroes  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name max decimal digits  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name significand  end_name  begin_operator  end_operator  begin_name  begin_name long 10 powers  end_name  begin_index  begin_expr  begin_name n trailing zeroes  end_name  end_expr  end_index  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name n trailing zeroes  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment else catch oversize below  end_comment  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name n digits  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name max decimal digits  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name significand  end_name  begin_operator  end_operator  begin_name significand  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name long  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name int  end_name  begin_operator  end_operator  begin_name ival  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name int  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  begin_comment switch  end_comment  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name sdigit  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_else  end_if  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name soptexp strict  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_if  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  begin_operator  end_operator  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name serr not strict  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_then  end_if  begin_break  end_break  begin_comment switch  end_comment  end_case  begin_default  begin_comment only whitespace allowed after value for strict  end_comment  begin_for  begin_init  begin_expr  begin_operator  end_operator  begin_name i  end_name  end_expr  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  begin_operator  end_operator  begin_call  begin_name is whitespace  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_empty_stmt  end_empty_stmt  end_for  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  begin_operator  end_operator  begin_name serr not strict  end_name  begin_operator  end_operator  begin_name soptcalc  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_default  end_block  end_switch  begin_comment switch  end_comment  end_block  end_for  begin_comment for  end_comment  begin_comment no more data ok for strict to go calc  end_comment  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name soptcalc  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name soptexp strict  end_name  end_expr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name exp sign  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name exp spec  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  end_expr  end_condition  begin_then  begin_block  begin_switch  begin_condition  begin_expr  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name exp sign  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_expr_stmt  end_case  begin_case  begin_expr  end_expr  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name serr not strict  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_then  end_if  end_case  end_block  end_switch  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name serr not strict  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_else  end_if  begin_comment must be at least one digit for strict  end_comment  begin_if  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  end_expr  end_condition  begin_then  begin_block  begin_switch  begin_condition  begin_expr  begin_name ival  end_name  begin_operator  end_operator  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_index  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name exp spec  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name int  end_name  begin_operator  end_operator  begin_name ival  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name int  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_break  end_break  begin_comment switch  end_comment  end_case  begin_default  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name serr not strict  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_default  end_block  end_switch  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name serr not strict  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_else  end_if  begin_for  begin_init  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  end_expr  end_condition  begin_incr  end_incr  begin_block  begin_switch  begin_condition  begin_expr  begin_name ival  end_name  begin_operator  end_operator  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_index  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name exp spec  end_name  begin_operator  end_operator  begin_name exp spec  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name int  end_name  begin_operator  end_operator  begin_name ival  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name int  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name max exp  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment too big for us  end_comment  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name sdigit  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_then  end_if  begin_break  end_break  begin_comment switch  end_comment  end_case  begin_case  begin_expr  end_expr  begin_if  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  begin_operator  end_operator  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name serr not strict  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_then  end_if  begin_break  end_break  begin_comment switch  end_comment  end_case  begin_default  begin_expr_stmt  begin_expr  begin_name exponent  end_name  begin_operator  end_operator  begin_name exp sign  end_name  begin_operator  end_operator  begin_name exp spec  end_name  end_expr  end_expr_stmt  begin_comment only whitespace allowed after value for strict  end_comment  begin_for  begin_init  begin_expr  begin_operator  end_operator  begin_name i  end_name  end_expr  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  begin_operator  end_operator  begin_call  begin_name is whitespace  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_empty_stmt  end_empty_stmt  end_for  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  begin_operator  end_operator  begin_name serr not strict  end_name  begin_operator  end_operator  begin_name soptcalc  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_default  end_block  end_switch  begin_comment switch  end_comment  end_block  end_for  begin_comment for  end_comment  begin_expr_stmt  begin_expr  begin_name exponent  end_name  begin_operator  end_operator  begin_name exp sign  end_name  begin_operator  end_operator  begin_name exp spec  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name soptcalc  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_block  begin_comment block  end_comment  begin_comment fallback copy non whitespace chars to char buffer and send  end_comment  begin_comment to double parse double front for sun misc floating decimal  end_comment  end_case  begin_case  begin_expr  begin_name sdigit  end_name  end_expr  begin_expr_stmt  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name start pos  end_name  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name negative  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name chars  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name char  end_name  begin_index  begin_expr  begin_name buflen  end_name  begin_operator  end_operator  begin_name i  end_name  begin_operator  end_operator  end_expr  end_index  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name chars  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name offset  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name chars  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name char  end_name  begin_index  begin_expr  begin_name buflen  end_name  begin_operator  end_operator  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_if  begin_condition  begin_expr  begin_name strict  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name sdigit strict  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_then  end_if  begin_comment first char must be digit or decimal point  end_comment  begin_if  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  end_expr  end_condition  begin_then  begin_block  begin_switch  begin_condition  begin_expr  begin_name ival  end_name  begin_operator  end_operator  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_index  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  begin_comment ignore leading zeroes  end_comment  begin_break  end_break  begin_comment switch  end_comment  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name  begin_name chars  end_name  begin_index  begin_expr  begin_name offset  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name char  end_name  begin_operator  end_operator  begin_name ival  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name last valid offset  end_name  begin_operator  end_operator  begin_name offset  end_name  end_expr  end_expr_stmt  begin_break  end_break  begin_comment switch  end_comment  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name sdecdigit  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_default  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name scomplete  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_default  end_block  end_switch  begin_comment switch  end_comment  end_block  end_then  end_if  begin_comment if  end_comment  begin_for  begin_init  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  end_expr  end_condition  begin_incr  end_incr  begin_block  begin_switch  begin_condition  begin_expr  begin_name ival  end_name  begin_operator  end_operator  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_index  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name  begin_name chars  end_name  begin_index  begin_expr  begin_name offset  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name char  end_name  begin_operator  end_operator  begin_name ival  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name last valid offset  end_name  begin_operator  end_operator  begin_name offset  end_name  end_expr  end_expr_stmt  begin_break  end_break  begin_comment switch  end_comment  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name sdecdigit  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name sexp  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_break  end_break  begin_comment switch  end_comment  end_case  begin_default  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name scomplete  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_default  end_block  end_switch  begin_comment switch  end_comment  end_block  end_for  begin_comment for  end_comment  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name scomplete  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name sdecdigit  end_name  end_expr  begin_expr_stmt  begin_expr  begin_name  begin_name chars  end_name  begin_index  begin_expr  begin_name offset  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_for  begin_init  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  begin_operator  end_operator  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_empty_stmt  end_empty_stmt  end_for  begin_if  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  end_expr  end_condition  begin_then  begin_block  begin_switch  begin_condition  begin_expr  begin_name ival  end_name  begin_operator  end_operator  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_index  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name  begin_name chars  end_name  begin_index  begin_expr  begin_name offset  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name char  end_name  begin_operator  end_operator  begin_name ival  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name last valid offset  end_name  begin_operator  end_operator  begin_name offset  end_name  end_expr  end_expr_stmt  begin_break  end_break  begin_comment switch  end_comment  end_case  begin_default  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name scomplete  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_default  end_block  end_switch  begin_comment switch  end_comment  end_block  end_then  end_if  begin_comment if  end_comment  begin_for  begin_init  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  end_expr  end_condition  begin_incr  end_incr  begin_block  begin_switch  begin_condition  begin_expr  begin_name ival  end_name  begin_operator  end_operator  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_index  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name  begin_name chars  end_name  begin_index  begin_expr  begin_name offset  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name char  end_name  begin_operator  end_operator  begin_name ival  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name last valid offset  end_name  begin_operator  end_operator  begin_name offset  end_name  end_expr  end_expr_stmt  begin_break  end_break  begin_comment switch  end_comment  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name sexp  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_break  end_break  begin_comment switch  end_comment  end_case  begin_default  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name scomplete  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_default  end_block  end_switch  begin_comment switch  end_comment  end_block  end_for  begin_comment for  end_comment  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name scomplete  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name sexp  end_name  end_expr  begin_expr_stmt  begin_expr  begin_name  begin_name chars  end_name  begin_index  begin_expr  begin_name offset  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_for  begin_init  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  begin_operator  end_operator  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_empty_stmt  end_empty_stmt  end_for  begin_if  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name scomplete  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_then  end_if  begin_switch  begin_condition  begin_expr  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name  begin_name chars  end_name  begin_index  begin_expr  begin_name offset  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name char  end_name  begin_operator  end_operator  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name scomplete  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_then  end_if  end_case  end_block  end_switch  begin_for  begin_init  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  end_expr  end_condition  begin_incr  end_incr  begin_block  begin_switch  begin_condition  begin_expr  begin_name ival  end_name  begin_operator  end_operator  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_index  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name  begin_name chars  end_name  begin_index  begin_expr  begin_name offset  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name char  end_name  begin_operator  end_operator  begin_name ival  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name last valid offset  end_name  begin_operator  end_operator  begin_name offset  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_break  end_break  end_case  begin_default  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name scomplete  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_default  end_block  end_switch  end_block  end_for  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name scomplete  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name sdigit strict  end_name  end_expr  begin_comment first char must be digit or decimal point  end_comment  begin_if  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  end_expr  end_condition  begin_then  begin_block  begin_switch  begin_condition  begin_expr  begin_name ival  end_name  begin_operator  end_operator  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_index  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  begin_comment ignore leading zeroes  end_comment  begin_break  end_break  begin_comment switch  end_comment  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name  begin_name chars  end_name  begin_index  begin_expr  begin_name offset  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name char  end_name  begin_operator  end_operator  begin_name ival  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name last valid offset  end_name  begin_operator  end_operator  begin_name offset  end_name  end_expr  end_expr_stmt  begin_break  end_break  begin_comment switch  end_comment  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name sdecdigit strict  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_default  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name serr not strict  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_default  end_block  end_switch  begin_comment switch  end_comment  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name serr not strict  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_else  end_if  begin_for  begin_init  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  end_expr  end_condition  begin_incr  end_incr  begin_block  begin_switch  begin_condition  begin_expr  begin_name ival  end_name  begin_operator  end_operator  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_index  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name  begin_name chars  end_name  begin_index  begin_expr  begin_name offset  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name char  end_name  begin_operator  end_operator  begin_name ival  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name last valid offset  end_name  begin_operator  end_operator  begin_name offset  end_name  end_expr  end_expr_stmt  begin_break  end_break  begin_comment switch  end_comment  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name sdecdigit strict  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name sexp strict  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_if  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  begin_operator  end_operator  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name serr not strict  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_then  end_if  begin_break  end_break  begin_comment switch  end_comment  end_case  begin_default  begin_comment only whitespace allowed after value for strict  end_comment  begin_for  begin_init  begin_expr  begin_operator  end_operator  begin_name i  end_name  end_expr  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  begin_operator  end_operator  begin_call  begin_name is whitespace  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_empty_stmt  end_empty_stmt  end_for  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  begin_operator  end_operator  begin_name serr not strict  end_name  begin_operator  end_operator  begin_name scomplete  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_default  end_block  end_switch  begin_comment switch  end_comment  end_block  end_for  begin_comment for  end_comment  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name scomplete  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name sdecdigit strict  end_name  end_expr  begin_expr_stmt  begin_expr  begin_name  begin_name chars  end_name  begin_index  begin_expr  begin_name offset  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  end_expr  end_condition  begin_then  begin_block  begin_switch  begin_condition  begin_expr  begin_name ival  end_name  begin_operator  end_operator  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_index  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name  begin_name chars  end_name  begin_index  begin_expr  begin_name offset  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name char  end_name  begin_operator  end_operator  begin_name ival  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name last valid offset  end_name  begin_operator  end_operator  begin_name offset  end_name  end_expr  end_expr_stmt  begin_break  end_break  begin_comment switch  end_comment  end_case  begin_default  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name serr not strict  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_default  end_block  end_switch  begin_comment switch  end_comment  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name serr not strict  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_else  end_if  begin_for  begin_init  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  end_expr  end_condition  begin_incr  end_incr  begin_block  begin_switch  begin_condition  begin_expr  begin_name ival  end_name  begin_operator  end_operator  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_index  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name  begin_name chars  end_name  begin_index  begin_expr  begin_name offset  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name char  end_name  begin_operator  end_operator  begin_name ival  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name last valid offset  end_name  begin_operator  end_operator  begin_name offset  end_name  end_expr  end_expr_stmt  begin_break  end_break  begin_comment switch  end_comment  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name sexp strict  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_if  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  begin_operator  end_operator  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name serr not strict  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_then  end_if  begin_break  end_break  begin_comment switch  end_comment  end_case  begin_default  begin_for  begin_init  begin_expr  begin_operator  end_operator  begin_name i  end_name  end_expr  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  begin_operator  end_operator  begin_call  begin_name is whitespace  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_empty_stmt  end_empty_stmt  end_for  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  begin_operator  end_operator  begin_name serr not strict  end_name  begin_operator  end_operator  begin_name scomplete  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_default  end_block  end_switch  begin_comment switch  end_comment  end_block  end_for  begin_comment for  end_comment  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name scomplete  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name sexp strict  end_name  end_expr  begin_expr_stmt  begin_expr  begin_name  begin_name chars  end_name  begin_index  begin_expr  begin_name offset  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  end_expr  end_condition  begin_then  begin_block  begin_switch  begin_condition  begin_expr  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name  begin_name chars  end_name  begin_index  begin_expr  begin_name offset  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name char  end_name  begin_operator  end_operator  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name serr not strict  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_then  end_if  end_case  end_block  end_switch  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name serr not strict  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_else  end_if  begin_comment must be at least one digit for strict  end_comment  begin_if  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  end_expr  end_condition  begin_then  begin_block  begin_switch  begin_condition  begin_expr  begin_name ival  end_name  begin_operator  end_operator  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_index  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name  begin_name chars  end_name  begin_index  begin_expr  begin_name offset  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name char  end_name  begin_operator  end_operator  begin_name ival  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name last valid offset  end_name  begin_operator  end_operator  begin_name offset  end_name  end_expr  end_expr_stmt  begin_break  end_break  begin_comment switch  end_comment  end_case  begin_default  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name serr not strict  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_default  end_block  end_switch  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name serr not strict  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_else  end_if  begin_for  begin_init  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  end_expr  end_condition  begin_incr  end_incr  begin_block  begin_switch  begin_condition  begin_expr  begin_name ival  end_name  begin_operator  end_operator  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_index  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name  begin_name chars  end_name  begin_index  begin_expr  begin_name offset  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name char  end_name  begin_operator  end_operator  begin_name ival  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name last valid offset  end_name  begin_operator  end_operator  begin_name offset  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_if  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  begin_operator  end_operator  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name serr not strict  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_then  end_if  begin_break  end_break  begin_comment switch  end_comment  end_case  begin_default  begin_for  begin_init  begin_expr  begin_operator  end_operator  begin_name i  end_name  end_expr  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  begin_operator  end_operator  begin_call  begin_name is whitespace  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name bytes  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_empty_stmt  end_empty_stmt  end_for  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name i  end_name  begin_operator  end_operator  begin_name buflen  end_name  begin_operator  end_operator  begin_name serr not strict  end_name  begin_operator  end_operator  begin_name scomplete  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_default  end_block  end_switch  end_block  end_for  begin_expr_stmt  begin_expr  begin_name state  end_name  begin_operator  end_operator  begin_name scomplete  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name serr not strict  end_name  end_expr  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name number format exception  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_case  end_block  end_switch  begin_comment switch  end_comment  end_block  end_while  begin_comment while  end_comment  begin_if  begin_condition  begin_expr  begin_name chars  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name last valid offset  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_return  begin_expr  begin_call  begin_name  begin_name double  end_name  begin_operator  end_operator  begin_name parse double  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name string  end_name  begin_argument_list  begin_argument  begin_expr  begin_name chars  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name last valid offset  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_else  end_if  end_block 
begin_comment check the syntax of a ruby variable including that it s longer than zero characters and starts with either an or a capital letter end_commentbegin_comment fixme this should go somewhere more generic maybe id util end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is ruby variable  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name name  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name char  end_name  end_type  begin_name c  end_name  end_decl  end_decl_stmt  begin_return  begin_expr  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name c  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name name  end_name  begin_operator  end_operator  begin_name char at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name c  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name c  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_return  end_block 
begin_comment perform a low level read of the specified number of bytes into the specified byte list the incoming bytes will be appended to the byte list this is equivalent to the read 2 posix function and like that function it ignores read and write buffers defined elsewhere param number the number of bytes to read param byte list the byte list on which to append the incoming bytes return the number of bytes actually read throws java io io exception if there is an exception during io throws org jruby util io bad descriptor exception if the associated channel is already closed see java util byte list end_comment begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name read  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name number  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name byte list  end_name  end_type  begin_name byte list  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name io exception  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name bad descriptor exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name check open  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name byte list  end_name  begin_operator  end_operator  begin_name ensure  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name byte list  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name number  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name bytes read  end_name  begin_init  begin_expr  begin_call  begin_name read  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name byte buffer  end_name  begin_operator  end_operator  begin_name wrap  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name byte list  end_name  begin_operator  end_operator  begin_name unsafe bytes  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name byte list  end_name  begin_operator  end_operator  begin_name begin  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name byte list  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name number  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name bytes read  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name byte list  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name byte list  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name bytes read  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_name bytes read  end_name  end_expr  end_return  end_block 
begin_comment perform a low level read of the remaining number of bytes into the specified byte buffer the incoming bytes will be used to fill the remaining space in the target byte buffer this is equivalent to the read 2 posix function and like that function it ignores read and write buffers defined elsewhere param buffer the java nio byte buffer in which to put the incoming bytes return the number of bytes actually read throws java io io exception if there is an exception during io throws org jruby util io bad descriptor exception if the associated channel is already closed see java nio byte buffer end_comment begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name read  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name byte buffer  end_name  end_type  begin_name buffer  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name io exception  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name bad descriptor exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name check open  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo it would be nice to throw a better error for this  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name channel  end_name  begin_operator  end_operator  begin_name readable byte channel  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name bad descriptor exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name readable byte channel  end_name  end_type  begin_name read channel  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name readable byte channel  end_name  begin_operator  end_operator  begin_name channel  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name bytes read  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name bytes read  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name read channel  end_name  begin_operator  end_operator  begin_name read  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name buffer  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name bytes read  end_name  end_expr  end_return  end_block 
begin_comment write the bytes in the specified byte list to the associated channel param buf the byte list containing the bytes to be written return the number of bytes actually written throws java io io exception if there is an exception during io throws org jruby util io bad descriptor exception if the associated channel is already closed end_comment begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name internal write  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name byte buffer  end_name  end_type  begin_name buffer  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name io exception  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name bad descriptor exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name check open  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment todo it would be nice to throw a better error for this  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name channel  end_name  begin_operator  end_operator  begin_name writable byte channel  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name bad descriptor exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name writable byte channel  end_name  end_type  begin_name write channel  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name writable byte channel  end_name  begin_operator  end_operator  begin_name channel  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name is seekable  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name original modes  end_name  begin_operator  end_operator  begin_name is appendable  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name file channel  end_name  end_type  begin_name file channel  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name file channel  end_name  begin_operator  end_operator  begin_name channel  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name file channel  end_name  begin_operator  end_operator  begin_name position  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name file channel  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_call  begin_name  begin_name write channel  end_name  begin_operator  end_operator  begin_name write  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name buffer  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment open a new descriptor using the given working directory file path mode flags and file permission this is equivalent to the open 2 posix function see org jruby util io channel descriptor open string string mode flags int posix for the version that also sets file permissions param cwd the current working directory to use when opening the file param path the file path to open param flags the mode flags to use for opening the file return a new channel descriptor based on the specified parameters throws java io file not found exception if the target file could not be found and the create flag was not specified throws org jruby util io directory as file exception if the target file is a directory being opened as a file throws org jruby util io file exists exception if the target file should be created anew but already exists throws java io io exception if there is an exception during io end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name channel descriptor  end_name  end_type  begin_name open  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name cwd  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name path  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name mode flags  end_name  end_type  begin_name flags  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name file not found exception  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name directory as file exception  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name file exists exception  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name io exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_return  begin_expr  begin_call  begin_name open  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cwd  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name path  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name flags  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
begin_comment open a new descriptor using the given working directory file path mode flags and file permission this is equivalent to the open 2 posix function param cwd the current working directory to use when opening the file param path the file path to open param flags the mode flags to use for opening the file param perm the file permissions to use when creating a new file currently unobserved param posix a posix api implementation used for setting permissions if null permissions are ignored return a new channel descriptor based on the specified parameters throws java io file not found exception if the target file could not be found and the create flag was not specified throws org jruby util io directory as file exception if the target file is a directory being opened as a file throws org jruby util io file exists exception if the target file should be created anew but already exists throws java io io exception if there is an exception during io end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name channel descriptor  end_name  end_type  begin_name open  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name cwd  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name path  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name mode flags  end_name  end_type  begin_name flags  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name perm  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name posix  end_name  end_type  begin_name posix  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name file not found exception  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name directory as file exception  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name file exists exception  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name io exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name file created  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name path  end_name  begin_operator  end_operator  begin_name equals  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name path  end_name  begin_operator  end_operator  begin_name equals ignore case  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name path  end_name  begin_operator  end_operator  begin_name equals ignore case  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name channel  end_name  end_type  begin_name null channel  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name null channel  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment fixme don t use ruby io for this  end_comment  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name channel descriptor  end_name  begin_argument_list  begin_argument  begin_expr  begin_name null channel  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name ruby io  end_name  begin_operator  end_operator  begin_name get new fileno  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name flags  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name file descriptor  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name path  end_name  begin_operator  end_operator  begin_name starts with  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name bang index  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name path  end_name  begin_operator  end_operator  begin_name index of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name bang index  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name file path  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name path  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name bang index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name internal path  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name path  end_name  begin_operator  end_operator  begin_name substring  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name bang index  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name file  end_name  begin_argument_list  begin_argument  begin_expr  begin_name file path  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name exists  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name file not found exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name path  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name jar file  end_name  end_type  begin_name jf  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name jar file  end_name  begin_argument_list  begin_argument  begin_expr  begin_name file path  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name zip entry  end_name  end_type  begin_name zf  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name jf  end_name  begin_operator  end_operator  begin_name get entry  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name internal path  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name zf  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name file not found exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name path  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name input stream  end_name  end_type  begin_name is  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name jf  end_name  begin_operator  end_operator  begin_name get input stream  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name zf  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment fixme don t use ruby io for this  end_comment  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name channel descriptor  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name channels  end_name  begin_operator  end_operator  begin_name new channel  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name is  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name ruby io  end_name  begin_operator  end_operator  begin_name get new fileno  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name flags  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name file descriptor  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_then  begin_else  begin_block  begin_comment raw file url just open directly  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name url  end_name  end_type  begin_name url  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name url  end_name  begin_argument_list  begin_argument  begin_expr  begin_name path  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name input stream  end_name  end_type  begin_name is  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name url  end_name  begin_operator  end_operator  begin_name open stream  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment fixme don t use ruby io for this  end_comment  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name channel descriptor  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name channels  end_name  begin_operator  end_operator  begin_name new channel  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name is  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name ruby io  end_name  begin_operator  end_operator  begin_name get new fileno  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name flags  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name file descriptor  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_else  end_if  end_block  end_then  begin_else  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name j ruby file  end_name  end_type  begin_name the file  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name j ruby file  end_name  begin_operator  end_operator  begin_name create  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name cwd  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name path  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name the file  end_name  begin_operator  end_operator  begin_name is directory  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name flags  end_name  begin_operator  end_operator  begin_name is writable  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name directory as file exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name flags  end_name  begin_operator  end_operator  begin_name is create  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name the file  end_name  begin_operator  end_operator  begin_name exists  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name flags  end_name  begin_operator  end_operator  begin_name is exclusive  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name file exists exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name path  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name file created  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name the file  end_name  begin_operator  end_operator  begin_name create new file  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name the file  end_name  begin_operator  end_operator  begin_name exists  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name file not found exception  end_name  begin_argument_list  begin_argument  begin_expr  begin_name path  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  end_block  end_else  end_if  begin_comment we always open this rw since we can only open it r or rw  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name random access file  end_name  end_type  begin_name file  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name random access file  end_name  begin_argument_list  begin_argument  begin_expr  begin_name the file  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name flags  end_name  begin_operator  end_operator  begin_name to java mode string  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment call chmod after we created the random acces file  end_comment  begin_comment because otherwise the file could be read only  end_comment  begin_if  begin_condition  begin_expr  begin_name file created  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment attempt to set the permissions if we have been passed a posix instance  end_comment  begin_comment and only if the file was created in this call  end_comment  begin_if  begin_condition  begin_expr  begin_name posix  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name perm  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name posix  end_name  begin_operator  end_operator  begin_name chmod  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name the file  end_name  begin_operator  end_operator  begin_name get path  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name perm  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name flags  end_name  begin_operator  end_operator  begin_name is truncate  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name set length  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  begin_comment todo append should set the fd to end no but there is no seek int in libc  end_comment  begin_comment if modes is appendable seek 0 stream seek end  end_comment  begin_return  begin_expr  begin_operator  end_operator  begin_call  begin_name channel descriptor  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name get channel  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name ruby io  end_name  begin_operator  end_operator  begin_name get new fileno  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name flags  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name file  end_name  begin_operator  end_operator  begin_name get fd  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block  end_else  end_if  end_else  end_if  end_block 
begin_comment build a set of mode flags using the specified channel s actual capabilities param channel the channel to examine for capabilities return the mode flags throws org jruby util io invalid value exception end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name mode flags  end_name  end_type  begin_name get modes from channel  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name channel  end_name  end_type  begin_name channel  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name invalid value exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name mode flags  end_name  end_type  begin_name modes  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name channel  end_name  begin_operator  end_operator  begin_name readable byte channel  end_name  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name channel  end_name  begin_operator  end_operator  begin_name writable byte channel  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name modes  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name mode flags  end_name  begin_argument_list  begin_argument  begin_expr  begin_name rdwr  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name modes  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name mode flags  end_name  begin_argument_list  begin_argument  begin_expr  begin_name rdonly  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name channel  end_name  begin_operator  end_operator  begin_name writable byte channel  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name modes  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name mode flags  end_name  begin_argument_list  begin_argument  begin_expr  begin_name wronly  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_comment fixme i don t like this  end_comment  begin_expr_stmt  begin_expr  begin_name modes  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name mode flags  end_name  begin_argument_list  begin_argument  begin_expr  begin_name rdwr  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_else  end_if  begin_return  begin_expr  begin_name modes  end_name  end_expr  end_return  end_block 
begin_comment flush the write buffer to the channel if needed throws io exception end_comment begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name flush write  end_name  begin_parameter_list  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name io exception  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name bad descriptor exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_if  begin_condition  begin_expr  begin_name reading  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name modes  end_name  begin_operator  end_operator  begin_name is writable  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name buffer  end_name  begin_operator  end_operator  begin_name position  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_return  end_return  end_then  end_if  begin_comment don t bother  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name len  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name buffer  end_name  begin_operator  end_operator  begin_name position  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buffer  end_name  begin_operator  end_operator  begin_name flip  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name n  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name descriptor  end_name  begin_operator  end_operator  begin_name write  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name buffer  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name n  end_name  begin_operator  end_operator  begin_name len  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment todo check the return value here  end_comment  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buffer  end_name  begin_operator  end_operator  begin_name clear  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block 
begin_comment flush the write buffer to the channel if needed throws io exception end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name flush write  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name block  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name io exception  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name bad descriptor exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_if  begin_condition  begin_expr  begin_name reading  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name modes  end_name  begin_operator  end_operator  begin_name is writable  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name buffer  end_name  begin_operator  end_operator  begin_name position  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_return  begin_expr  end_expr  end_return  end_then  end_if  begin_comment don t bother  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name len  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name buffer  end_name  begin_operator  end_operator  begin_name position  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name n written  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buffer  end_name  begin_operator  end_operator  begin_name flip  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment for sockets only write as much as will fit  end_comment  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name descriptor  end_name  begin_operator  end_operator  begin_name get channel  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name selectable channel  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name selectable channel  end_name  end_type  begin_name selectable channel  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name selectable channel  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name descriptor  end_name  begin_operator  end_operator  begin_name get channel  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_synchronized  begin_expr  begin_call  begin_name  begin_name selectable channel  end_name  begin_operator  end_operator  begin_name blocking lock  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name old blocking  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name selectable channel  end_name  begin_operator  end_operator  begin_name is blocking  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_if  begin_condition  begin_expr  begin_name old blocking  end_name  begin_operator  end_operator  begin_name block  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name selectable channel  end_name  begin_operator  end_operator  begin_name configure blocking  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name block  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name n written  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name descriptor  end_name  begin_operator  end_operator  begin_name write  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name buffer  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_finally  begin_block  begin_if  begin_condition  begin_expr  begin_name old blocking  end_name  begin_operator  end_operator  begin_name block  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name selectable channel  end_name  begin_operator  end_operator  begin_name configure blocking  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name old blocking  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_finally  end_try  end_block  end_synchronized  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name n written  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name descriptor  end_name  begin_operator  end_operator  begin_name write  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name buffer  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_if  begin_condition  begin_expr  begin_name n written  end_name  begin_operator  end_operator  begin_name len  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buffer  end_name  begin_operator  end_operator  begin_name compact  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buffer  end_name  begin_operator  end_operator  begin_name clear  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name reset for write  end_name  begin_parameter_list  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name io exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name descriptor  end_name  begin_operator  end_operator  begin_name is seekable  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name file channel  end_name  end_type  begin_name file channel  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name file channel  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name descriptor  end_name  begin_operator  end_operator  begin_name get channel  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name buffer  end_name  begin_operator  end_operator  begin_name has remaining  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment we have read ahead and need to back up  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name file channel  end_name  begin_operator  end_operator  begin_name position  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name file channel  end_name  begin_operator  end_operator  begin_name position  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name buffer  end_name  begin_operator  end_operator  begin_name remaining  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  begin_comment fixme clearing read buffer here is this appropriate  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buffer  end_name  begin_operator  end_operator  begin_name clear  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name reading  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block 
 begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name byte list  end_name  end_type  begin_name read  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name number  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name io exception  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name bad descriptor exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name check readable  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name ensure read non buffered  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name byte list  end_name  end_type  begin_name byte list  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name byte list  end_name  begin_argument_list  begin_argument  begin_expr  begin_name number  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment todo this should entry into error handling somewhere  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name bytes read  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name descriptor  end_name  begin_operator  end_operator  begin_name read  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name number  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name byte list  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name bytes read  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name eof  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_return  begin_expr  begin_name byte list  end_name  end_expr  end_return  end_block 
begin_comment throws io exception throws bad descriptor exception see org jruby util io handler syswrite string buf end_comment begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name buffered write  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name byte list  end_name  end_type  begin_name buf  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name io exception  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name bad descriptor exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name check writable  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name ensure write  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment ruby ignores empty syswrites  end_comment  begin_if  begin_condition  begin_expr  begin_name buf  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_return  begin_expr  end_expr  end_return  end_then  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name buffer  end_name  begin_operator  end_operator  begin_name capacity  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment doesn t fit in buffer write immediately  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name flush write  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment ensure nothing left to write  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name n  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name descriptor  end_name  begin_operator  end_operator  begin_name write  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name byte buffer  end_name  begin_operator  end_operator  begin_name wrap  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name unsafe bytes  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name begin  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name n  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment todo check the return value here  end_comment  end_block  end_then  end_if  end_block  end_then  begin_else  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name buffer  end_name  begin_operator  end_operator  begin_name remaining  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name flush write  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buffer  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name unsafe bytes  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name begin  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name is sync  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name flush write  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  begin_return  begin_expr  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name real size  end_name  end_name  end_expr  end_return  end_block 
begin_comment throws io exception throws bad descriptor exception see org jruby util io handler syswrite string buf end_comment begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name buffered write  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name c  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name io exception  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name bad descriptor exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name check writable  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name ensure write  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name buffer  end_name  begin_operator  end_operator  begin_name has remaining  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name flush write  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buffer  end_name  begin_operator  end_operator  begin_name put  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name byte  end_name  begin_operator  end_operator  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name is sync  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name flush write  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name ftruncate  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name long  end_name  end_type  begin_name new length  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name io exception  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name bad descriptor exception  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name invalid value exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name channel  end_name  end_type  begin_name ch  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name descriptor  end_name  begin_operator  end_operator  begin_name get channel  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name ch  end_name  begin_operator  end_operator  begin_name file channel  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name invalid value exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name invalidate buffer  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name file channel  end_name  end_type  begin_name file channel  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name file channel  end_name  begin_operator  end_operator  begin_name ch  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name new length  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name file channel  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_comment truncate can t lengthen files so we save position seek write and go back  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name long  end_name  end_type  begin_name position  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name file channel  end_name  begin_operator  end_operator  begin_name position  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name difference  end_name  begin_init  begin_expr  begin_call  begin_name int  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new length  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name file channel  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name file channel  end_name  begin_operator  end_operator  begin_name position  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name file channel  end_name  begin_operator  end_operator  begin_name size  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment fixme this worries me a bit since it could allocate a lot with a large new length  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name file channel  end_name  begin_operator  end_operator  begin_name write  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name byte buffer  end_name  begin_operator  end_operator  begin_name allocate  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name difference  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name file channel  end_name  begin_operator  end_operator  begin_name position  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name position  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name file channel  end_name  begin_operator  end_operator  begin_name truncate  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name new length  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block 
begin_comment ensure close especially flush when we re finished with end_comment begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name finalize  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_name closed explicitly  end_name  end_expr  end_condition  begin_then  begin_return  end_return  end_then  end_if  begin_comment fixme i got a bunch of np es when i didn t check for nulls here how  end_comment  begin_if  begin_condition  begin_expr  begin_name descriptor  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name descriptor  end_name  begin_operator  end_operator  begin_name is seekable  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name  begin_name descriptor  end_name  begin_operator  end_operator  begin_name is open  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name close for finalize  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment close without removing from finalizers  end_comment  end_block  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name read  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name byte buffer  end_name  end_type  begin_name dst  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name io exception  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name bad descriptor exception  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name eof exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_return  begin_expr  begin_call  begin_name read  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dst  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name descriptor  end_name  begin_operator  end_operator  begin_name get channel  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name file channel  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name read  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name byte buffer  end_name  end_type  begin_name dst  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name partial  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name io exception  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name bad descriptor exception  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name eof exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_assert  begin_expr  begin_call  begin_name  begin_name dst  end_name  begin_operator  end_operator  begin_name has remaining  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_assert  begin_return  begin_expr  begin_call  begin_name buffered read  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dst  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name partial  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name read  end_name  begin_parameter_list  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name io exception  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name bad descriptor exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name descriptor  end_name  begin_operator  end_operator  begin_name check open  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name ungotc  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name c  end_name  begin_init  begin_expr  begin_name ungotc  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name ungotc  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_expr_stmt  begin_return  begin_expr  begin_name c  end_name  end_expr  end_return  end_block  end_then  end_if  begin_return  begin_expr  begin_call  begin_name buffered read  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name eof exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_name eof  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_return  begin_expr  begin_operator  end_operator  end_expr  end_return  end_block  end_catch  end_try  end_block 
begin_comment check whether the target set of flags is a superset of this one used to ensure that a file is not re opened with more privileges than it already had param superset the mode flags object which should be a superset of this one return true if the object is a superset false otherwise end_comment begin_type  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name is subset of  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name mode flags  end_name  end_type  begin_name superset  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment todo make sure all appropriate open flags are added to this check  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name superset  end_name  begin_operator  end_operator  begin_name is readable  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is readable  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name superset  end_name  begin_operator  end_operator  begin_name is writable  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is writable  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name superset  end_name  begin_operator  end_operator  begin_name is appendable  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is appendable  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_then  end_if  begin_return  begin_expr  end_expr  end_return  end_block 
 begin_type  begin_annotation  begin_name override  end_name  end_annotation  begin_specifier  end_specifier  begin_name string  end_name  end_type  begin_name to string  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_comment todo make this more intelligible value  end_comment  begin_return  begin_expr  begin_operator  end_operator  begin_name flags  end_name  end_expr  end_return  end_block 
begin_comment construct a new mode flags object with the default read only flag end_comment begin_specifier  end_specifier  begin_name mode flags  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_name flags  end_name  begin_operator  end_operator  begin_name rdonly  end_name  end_expr  end_expr_stmt  end_block 
begin_comment construct a new mode flags object with the specified flags param flags the flags to use for this object throws org jruby util io invalid value exception if the modes are invalid end_comment begin_specifier  end_specifier  begin_name mode flags  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name long  end_name  end_type  begin_name flags  end_name  end_decl  end_param  end_parameter_list  begin_throws  begin_argument  begin_expr  begin_name invalid value exception  end_name  end_expr  end_argument  end_throws  begin_block  begin_comment todo ruby does not seem to care about invalid numeric mode values  end_comment  begin_comment i am not sure if ruby overflows here also  end_comment  begin_expr_stmt  begin_expr  begin_name  begin_name this  end_name  begin_operator  end_operator  begin_name flags  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name int  end_name  begin_operator  end_operator  begin_name flags  end_name  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name is read only  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name flags  end_name  begin_operator  end_operator  begin_name append  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment mri 1 8 behavior this combination of flags is not allowed  end_comment  begin_throw  begin_expr  begin_operator  end_operator  begin_call  begin_name invalid value exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  end_block 
 begin_type  begin_specifier  end_specifier  begin_name int  end_name  end_type  begin_name run  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ng context  end_name  end_type  begin_name context  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name assert loopback client  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment fixme this is almost entirely duplicated from main java  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name ruby instance config  end_name  end_type  begin_name config  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name ruby instance config  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name main  end_name  end_type  begin_name main  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name main  end_name  begin_argument_list  begin_argument  begin_expr  begin_name config  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_try  begin_block  begin_comment populate commandline with ng provided stuff  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name config  end_name  begin_operator  end_operator  begin_name process arguments  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get args  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name config  end_name  begin_operator  end_operator  begin_name set current directory  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get working directory  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name config  end_name  begin_operator  end_operator  begin_name set environment  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name context  end_name  begin_operator  end_operator  begin_name get env  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_return  begin_expr  begin_call  begin_name  begin_name main  end_name  begin_operator  end_operator  begin_name run  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name main exit exception  end_name  end_type  begin_name mee  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name mee  end_name  begin_operator  end_operator  begin_name is aborted  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name config  end_name  begin_operator  end_operator  begin_name get output  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name println  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name mee  end_name  begin_operator  end_operator  begin_name get message  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name mee  end_name  begin_operator  end_operator  begin_name is usage error  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name main  end_name  begin_operator  end_operator  begin_name print usage  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  begin_return  begin_expr  begin_call  begin_name  begin_name mee  end_name  begin_operator  end_operator  begin_name get status  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_return  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name out of memory error  end_name  end_type  begin_name oome  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment produce a nicer error since rubyists aren t used to seeing this  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name gc  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name memory max  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name safe property accessor  end_name  begin_operator  end_operator  begin_name get property  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name message  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name memory max  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name message  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name memory max  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name config  end_name  begin_operator  end_operator  begin_name get error  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name println  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name message  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name config  end_name  begin_operator  end_operator  begin_name get error  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name println  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name config  end_name  begin_operator  end_operator  begin_name get verbose  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name config  end_name  begin_operator  end_operator  begin_name get error  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name println  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name oome  end_name  begin_operator  end_operator  begin_name print stack trace  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name config  end_name  begin_operator  end_operator  begin_name get error  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name println  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_return  begin_expr  end_expr  end_return  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name stack overflow error  end_name  end_type  begin_name soe  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment produce a nicer error since rubyists aren t used to seeing this  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name gc  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name stack max  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name safe property accessor  end_name  begin_operator  end_operator  begin_name get property  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name message  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name stack max  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name message  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name stack max  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name config  end_name  begin_operator  end_operator  begin_name get error  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name println  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name message  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name config  end_name  begin_operator  end_operator  begin_name get error  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name println  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name config  end_name  begin_operator  end_operator  begin_name get verbose  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name config  end_name  begin_operator  end_operator  begin_name get error  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name println  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name soe  end_name  begin_operator  end_operator  begin_name print stack trace  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name config  end_name  begin_operator  end_operator  begin_name get error  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name println  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_return  begin_expr  end_expr  end_return  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name unsupported class version error  end_name  end_type  begin_name ucve  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name config  end_name  begin_operator  end_operator  begin_name get error  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name println  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name config  end_name  begin_operator  end_operator  begin_name get error  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name println  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name config  end_name  begin_operator  end_operator  begin_name get verbose  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name config  end_name  begin_operator  end_operator  begin_name get error  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name println  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name ucve  end_name  begin_operator  end_operator  begin_name print stack trace  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name config  end_name  begin_operator  end_operator  begin_name get error  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name println  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_return  begin_expr  end_expr  end_return  end_block  end_catch  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name thread kill  end_name  end_type  begin_name kill  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  end_expr  end_return  end_block  end_catch  end_try  end_block 
begin_comment decodes i str i which may contain binary data according to the format string returning an array of each value extracted the format string consists of a sequence of single character directives br each directive may be followed by a number indicating the number of times to repeat with this directive an asterisk code code will use up all remaining elements br the directives code s si il l code may each be followed by an underscore code code to use the underlying platform s native size for the specified type otherwise it uses a platform independent consistent size br spaces are ignored in the format string see ruby array pack table border 2 width 500 bgcolor ffe 0 e 0 tr td p p b directives for a href ref c string html string unpack code string unpack code a b table class codebox cellspacing 0 border 0 cellpadding 3 tr bgcolor ff 9999 td valign top b format b td td valign top b function b td td valign top b returns b td tr tr td valign top a td td valign top string with trailing nulls and spaces removed td td valign top string td tr tr td valign top a td td valign top string td td valign top string td tr tr td valign top b td td valign top extract bits from each character msb first td td valign top string td tr tr td valign top b td td valign top extract bits from each character lsb first td td valign top string td tr tr td valign top c td td valign top extract a character as an unsigned integer td td valign top fixnum td tr tr td valign top c td td valign top extract a character as an integer td td valign top fixnum td tr tr td valign top d td td valign top treat em sizeof double em characters as a native double td td valign top float td tr tr td valign top e td td valign top treat em sizeof double em characters as a double in little endian byte order td td valign top float td tr tr td valign top e td td valign top treat em sizeof float em characters as a float in little endian byte order td td valign top float td tr tr td valign top f td td valign top treat em sizeof float em characters as a native float td td valign top float td tr tr td valign top g td td valign top treat em sizeof double em characters as a double in network byte order td td valign top float td tr tr td valign top g td td valign top treat em sizeof float em characters as a float in network byte order td td valign top float td tr tr td valign top h td td valign top extract hex nibbles from each character most significant first td td valign top string td tr tr td valign top h td td valign top extract hex nibbles from each character least significant first td td valign top string td tr tr td valign top i td td valign top treat em sizeof int em sup 1 sup successive characters as an unsigned native integer td td valign top integer td tr tr td valign top i td td valign top treat em sizeof int em sup 1 sup successive characters as a signed native integer td td valign top integer td tr tr td valign top l td td valign top treat four sup 1 sup successive characters as an unsigned native long integer td td valign top integer td tr tr td valign top l td td valign top treat four sup 1 sup successive characters as a signed native long integer td td valign top integer td tr tr td valign top m td td valign top extract a quoted printable string td td valign top string td tr tr td valign top m td td valign top extract a base 64 encoded string td td valign top string td tr tr td valign top n td td valign top treat four characters as an unsigned long in network byte order td td valign top fixnum td tr tr td valign top n td td valign top treat two characters as an unsigned short in network byte order td td valign top fixnum td tr tr td valign top p td td valign top treat em sizeof char em characters as a pointer and return em len em characters from the referenced location td td valign top string td tr tr td valign top p td td valign top treat em sizeof char em characters as a pointer to a null terminated string td td valign top string td tr tr td valign top s td td valign top treat two sup 1 sup successive characters as an unsigned short in native byte order td td valign top fixnum td tr tr td valign top s td td valign top treat two sup 1 sup successive characters as a signed short in native byte order td td valign top fixnum td tr tr td valign top u td td valign top extract utf 8 characters as unsigned integers td td valign top integer td tr tr td valign top u td td valign top extract a uu encoded string td td valign top string td tr tr td valign top v td td valign top treat four characters as an unsigned long in little endian byte order td td valign top fixnum td tr tr td valign top v td td valign top treat two characters as an unsigned short in little endian byte order td td valign top fixnum td tr tr td valign top x td td valign top skip backward one character td td valign top td tr tr td valign top x td td valign top skip forward one character td td valign top td tr tr td valign top z td td valign top string with trailing nulls removed td td valign top string td tr tr td valign top td td valign top skip to the offset given by the length argument td td valign top td tr tr td colspan 9 bgcolor ff 9999 height 2 img src dot gif width 1 height 1 td tr table p p sup 1 sup nbsp may be modified by appending to the directive p p td tr table end_comment begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name ruby array  end_name  end_type  begin_name unpack  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name ruby  end_name  end_type  begin_name runtime  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name byte list  end_name  end_type  begin_name encoded string  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name byte list  end_name  end_type  begin_name format string  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby array  end_name  end_type  begin_name result  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new array  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment fixme potentially could just use byte list here  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name byte buffer  end_name  end_type  begin_name format  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name byte buffer  end_name  begin_operator  end_operator  begin_name wrap  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name format string  end_name  begin_operator  end_operator  begin_name unsafe bytes  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name format string  end_name  begin_operator  end_operator  begin_name begin  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name format string  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name byte buffer  end_name  end_type  begin_name encode  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name byte buffer  end_name  begin_operator  end_operator  begin_name wrap  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name encoded string  end_name  begin_operator  end_operator  begin_name unsafe bytes  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name encoded string  end_name  begin_operator  end_operator  begin_name begin  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name encoded string  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name type  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name next  end_name  begin_init  begin_expr  begin_call  begin_name safe get  end_name  begin_argument_list  begin_argument  begin_expr  begin_name format  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_name next  end_name  begin_operator  end_operator  end_expr  end_condition  begin_block  begin_expr_stmt  begin_expr  begin_name type  end_name  begin_operator  end_operator  begin_name next  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name next  end_name  begin_operator  end_operator  begin_call  begin_name safe get  end_name  begin_argument_list  begin_argument  begin_expr  begin_name format  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment next indicates to decode using native encoding format  end_comment  begin_if  begin_condition  begin_expr  begin_name next  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name next  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name index  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name native codes  end_name  begin_operator  end_operator  begin_name index of  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name type  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name index  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new argument error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name next  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name native codes  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name mapped codes  end_name  begin_operator  end_operator  begin_name char at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name next  end_name  begin_operator  end_operator  begin_call  begin_name safe get  end_name  begin_argument_list  begin_argument  begin_expr  begin_name format  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment how many occurrences of type we want  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name occurrences  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name next  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name occurrences  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_if  begin_condition  begin_expr  begin_name next  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name occurrences  end_name  begin_operator  end_operator  begin_name is star  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name next  end_name  begin_operator  end_operator  begin_call  begin_name safe get  end_name  begin_argument_list  begin_argument  begin_expr  begin_name format  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name ascii  end_name  begin_operator  end_operator  begin_name is digit  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name next  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name occurrences  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_do  begin_block  begin_expr_stmt  begin_expr  begin_name occurrences  end_name  begin_operator  end_operator  begin_name occurrences  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name character  end_name  begin_operator  end_operator  begin_name digit  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name char  end_name  begin_argument_list  begin_argument  begin_expr  begin_name next  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name next  end_name  begin_operator  end_operator  begin_call  begin_name safe get  end_name  begin_argument_list  begin_argument  begin_expr  begin_name format  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_condition  begin_expr  begin_name next  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name ascii  end_name  begin_operator  end_operator  begin_name is digit  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name next  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  end_do  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name occurrences  end_name  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_else  end_if  end_else  end_if  end_block  end_else  end_if  begin_comment see if we have a converter for the job  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name converter  end_name  end_type  begin_name converter  end_name  begin_init  begin_expr  begin_name  begin_name converters  end_name  begin_index  begin_expr  begin_name type  end_name  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name converter  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name decode  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name encode  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name occurrences  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name result  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name converter  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name type  end_name  begin_operator  end_operator  begin_name next  end_name  end_expr  end_expr_stmt  begin_continue  end_continue  end_block  end_then  end_if  begin_comment otherwise the unpack should be here  end_comment  begin_switch  begin_condition  begin_expr  begin_name type  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  begin_try  begin_block  begin_if  begin_condition  begin_expr  begin_name occurrences  end_name  begin_operator  end_operator  begin_name is star  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name position  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name remaining  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name position  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name occurrences  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name illegal argument exception  end_name  end_type  begin_name iae  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new argument error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new argument error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_case  begin_case  begin_expr  end_expr  begin_block  begin_if  begin_condition  begin_expr  begin_name occurrences  end_name  begin_operator  end_operator  begin_name is star  end_name  begin_operator  end_operator  begin_name occurrences  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name remaining  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name occurrences  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name remaining  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name byte  end_name  begin_index  end_index  end_type  begin_name potential  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name byte  end_name  begin_index  begin_expr  begin_name occurrences  end_name  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name potential  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name t  end_name  begin_init  begin_expr  begin_name occurrences  end_name  begin_operator  end_operator  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name occurrences  end_name  begin_operator  end_operator  end_expr  end_condition  begin_incr  begin_expr  begin_name occurrences  end_name  begin_operator  end_operator  end_expr  begin_operator  end_operator  begin_expr  begin_name t  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name byte  end_name  end_type  begin_name c  end_name  begin_init  begin_expr  begin_name  begin_name potential  end_name  begin_index  begin_expr  begin_name t  end_name  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name c  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name c  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_break  end_break  end_block  end_then  end_if  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name ruby string  end_name  begin_operator  end_operator  begin_name new string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name byte list  end_name  begin_argument_list  begin_argument  begin_expr  begin_name potential  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name occurrences  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name is star  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name occurrences  end_name  begin_operator  end_operator  begin_name is star  end_name  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name occurrences  end_name  begin_operator  end_operator  begin_name is star  end_name  begin_operator  end_operator  begin_name occurrences  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name remaining  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name occurrences  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name remaining  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name byte  end_name  begin_index  end_index  end_type  begin_name potential  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name byte  end_name  begin_index  begin_expr  begin_name occurrences  end_name  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name t  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_name t  end_name  begin_operator  end_operator  begin_name occurrences  end_name  end_expr  end_condition  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name byte  end_name  end_type  begin_name b  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name b  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_break  end_break  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name  begin_name potential  end_name  begin_index  begin_expr  begin_name t  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_name b  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name t  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_while  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name ruby string  end_name  begin_operator  end_operator  begin_name new string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name byte list  end_name  begin_argument_list  begin_argument  begin_expr  begin_name potential  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name t  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment in case when the number of occurences is  end_comment  begin_comment explicitly specified we have to read up  end_comment  begin_comment the remaining garbage after the 0 to  end_comment  begin_comment satisfy the requested pattern  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name is star  end_name  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name t  end_name  begin_operator  end_operator  begin_name occurrences  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment we encountered 0 when  end_comment  begin_comment were reading the buffer above  end_comment  begin_comment increment the number of read bytes  end_comment  begin_expr_stmt  begin_expr  begin_name t  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_while  begin_condition  begin_expr  begin_name t  end_name  begin_operator  end_operator  begin_name occurrences  end_name  end_expr  end_condition  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name t  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_while  end_block  end_then  end_if  end_block  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_if  begin_condition  begin_expr  begin_name occurrences  end_name  begin_operator  end_operator  begin_name is star  end_name  begin_operator  end_operator  begin_name occurrences  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name remaining  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name occurrences  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name remaining  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name byte  end_name  begin_index  end_index  end_type  begin_name potential  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name byte  end_name  begin_index  begin_expr  begin_name occurrences  end_name  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name potential  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name ruby string  end_name  begin_operator  end_operator  begin_name new string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name byte list  end_name  begin_argument_list  begin_argument  begin_expr  begin_name potential  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_block  begin_if  begin_condition  begin_expr  begin_name occurrences  end_name  begin_operator  end_operator  begin_name is star  end_name  begin_operator  end_operator  begin_name occurrences  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name remaining  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name occurrences  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name remaining  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name bits  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name byte  end_name  begin_index  end_index  end_type  begin_name l elem  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name byte  end_name  begin_index  begin_expr  begin_name occurrences  end_name  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name l cur byte  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name l cur byte  end_name  begin_operator  end_operator  begin_name occurrences  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name l cur byte  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name l cur byte  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name bits  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name bits  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_name  begin_name l elem  end_name  begin_index  begin_expr  begin_name l cur byte  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name bits  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name byte  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name byte  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name ruby string  end_name  begin_operator  end_operator  begin_name new string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name byte list  end_name  begin_argument_list  begin_argument  begin_expr  begin_name l elem  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_block  begin_if  begin_condition  begin_expr  begin_name occurrences  end_name  begin_operator  end_operator  begin_name is star  end_name  begin_operator  end_operator  begin_name occurrences  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name remaining  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name occurrences  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name remaining  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name bits  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name byte  end_name  begin_index  end_index  end_type  begin_name l elem  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name byte  end_name  begin_index  begin_expr  begin_name occurrences  end_name  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name l cur byte  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name l cur byte  end_name  begin_operator  end_operator  begin_name occurrences  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name l cur byte  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name l cur byte  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_name bits  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_then  begin_else  begin_expr_stmt  begin_expr  begin_name bits  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_else  end_if  begin_expr_stmt  begin_expr  begin_name  begin_name l elem  end_name  begin_index  begin_expr  begin_name l cur byte  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name bits  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name byte  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name byte  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name ruby string  end_name  begin_operator  end_operator  begin_name new string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name byte list  end_name  begin_argument_list  begin_argument  begin_expr  begin_name l elem  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_block  begin_if  begin_condition  begin_expr  begin_name occurrences  end_name  begin_operator  end_operator  begin_name is star  end_name  begin_operator  end_operator  begin_name occurrences  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name remaining  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name occurrences  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name remaining  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name bits  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name byte  end_name  begin_index  end_index  end_type  begin_name l elem  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name byte  end_name  begin_index  begin_expr  begin_name occurrences  end_name  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name l cur byte  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name l cur byte  end_name  begin_operator  end_operator  begin_name occurrences  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name l cur byte  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name l cur byte  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name bits  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name bits  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_name  begin_name l elem  end_name  begin_index  begin_expr  begin_name l cur byte  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_name  begin_name s hex digits  end_name  begin_index  begin_expr  begin_name bits  end_name  begin_operator  end_operator  end_expr  end_index  end_name  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name ruby string  end_name  begin_operator  end_operator  begin_name new string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name byte list  end_name  begin_argument_list  begin_argument  begin_expr  begin_name l elem  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_block  begin_if  begin_condition  begin_expr  begin_name occurrences  end_name  begin_operator  end_operator  begin_name is star  end_name  begin_operator  end_operator  begin_name occurrences  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name remaining  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name occurrences  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name remaining  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name bits  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name byte  end_name  begin_index  end_index  end_type  begin_name l elem  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name byte  end_name  begin_index  begin_expr  begin_name occurrences  end_name  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name l cur byte  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name l cur byte  end_name  begin_operator  end_operator  begin_name occurrences  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name l cur byte  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name l cur byte  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_name bits  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_then  begin_else  begin_expr_stmt  begin_expr  begin_name bits  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_else  end_if  begin_expr_stmt  begin_expr  begin_name  begin_name l elem  end_name  begin_index  begin_expr  begin_name l cur byte  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_name  begin_name s hex digits  end_name  begin_index  begin_expr  begin_operator  end_operator  begin_name bits  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_index  end_name  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name ruby string  end_name  begin_operator  end_operator  begin_name new string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name byte list  end_name  begin_argument_list  begin_argument  begin_expr  begin_name l elem  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name length  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name remaining  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name byte  end_name  begin_index  end_index  end_type  begin_name l elem  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name byte  end_name  begin_index  begin_expr  begin_name length  end_name  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name index  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name s  end_name  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name total  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name s  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name has remaining  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name s  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name s  end_name  begin_operator  end_operator  end_expr  end_condition  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name a  end_name  end_decl  begin_operator  end_operator  begin_decl  begin_type  end_type  begin_name b  end_name  end_decl  begin_operator  end_operator  begin_decl  begin_type  end_type  begin_name c  end_name  end_decl  begin_operator  end_operator  begin_decl  begin_type  end_type  begin_name d  end_name  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name byte  end_name  begin_index  end_index  end_type  begin_name hunk  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name byte  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name len  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name s  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name s  end_name  begin_operator  end_operator  begin_call  begin_name safe get  end_name  begin_argument_list  begin_argument  begin_expr  begin_name encode  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name total  end_name  begin_operator  end_operator  begin_name len  end_name  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name total  end_name  begin_operator  end_operator  begin_name length  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name len  end_name  begin_operator  end_operator  begin_name total  end_name  begin_operator  end_operator  begin_name length  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name total  end_name  begin_operator  end_operator  begin_name length  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_while  begin_condition  begin_expr  begin_name len  end_name  begin_operator  end_operator  end_expr  end_condition  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name mlen  end_name  begin_init  begin_expr  begin_name len  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name len  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name has remaining  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name s  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name a  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name s  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name s  end_name  begin_operator  end_operator  begin_call  begin_name safe get  end_name  begin_argument_list  begin_argument  begin_expr  begin_name encode  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_expr_stmt  begin_expr  begin_name a  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_else  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name has remaining  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name s  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name b  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name s  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name s  end_name  begin_operator  end_operator  begin_call  begin_name safe get  end_name  begin_argument_list  begin_argument  begin_expr  begin_name encode  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_expr_stmt  begin_expr  begin_name b  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_else  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name has remaining  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name s  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name c  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name s  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name s  end_name  begin_operator  end_operator  begin_call  begin_name safe get  end_name  begin_argument_list  begin_argument  begin_expr  begin_name encode  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_expr_stmt  begin_expr  begin_name c  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_else  end_if  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name has remaining  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name s  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name d  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name s  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name s  end_name  begin_operator  end_operator  begin_call  begin_name safe get  end_name  begin_argument_list  begin_argument  begin_expr  begin_name encode  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_expr_stmt  begin_expr  begin_name d  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_else  end_if  begin_expr_stmt  begin_expr  begin_name  begin_name hunk  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name byte  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name a  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name b  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name hunk  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name byte  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name b  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name c  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name hunk  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name byte  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name c  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name d  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name mlen  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_expr_stmt  begin_expr  begin_name  begin_name l elem  end_name  begin_index  begin_expr  begin_name index  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_name  begin_name hunk  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  end_expr  end_expr_stmt  end_for  begin_expr_stmt  begin_expr  begin_name len  end_name  begin_operator  end_operator  begin_name mlen  end_name  end_expr  end_expr_stmt  end_block  end_while  begin_if  begin_condition  begin_expr  begin_name s  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_name s  end_name  begin_operator  end_operator  begin_call  begin_name safe get  end_name  begin_argument_list  begin_argument  begin_expr  begin_name encode  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name s  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_name s  end_name  begin_operator  end_operator  begin_call  begin_name safe get  end_name  begin_argument_list  begin_argument  begin_expr  begin_name encode  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name has remaining  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name safe get  end_name  begin_argument_list  begin_argument  begin_expr  begin_name encode  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name safe get  end_name  begin_argument_list  begin_argument  begin_expr  begin_name encode  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment possible checksum byte  end_comment  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name has remaining  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name position  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name position  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_block  end_then  end_if  end_else  end_if  end_block  end_while  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name ruby string  end_name  begin_operator  end_operator  begin_name new string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name byte list  end_name  begin_argument_list  begin_argument  begin_expr  begin_name l elem  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name index  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name length  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name remaining  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name byte  end_name  begin_index  end_index  end_type  begin_name l elem  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name byte  end_name  begin_index  begin_expr  begin_name length  end_name  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name a  end_name  begin_init  begin_expr  begin_operator  end_operator  end_expr  end_init  begin_operator  end_operator  begin_name b  end_name  begin_init  begin_expr  begin_operator  end_operator  end_expr  end_init  begin_operator  end_operator  begin_name c  end_name  begin_init  begin_expr  end_expr  end_init  begin_operator  end_operator  begin_name d  end_name  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name index  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name s  end_name  begin_init  begin_expr  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name has remaining  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_expr_stmt  begin_expr  begin_name a  end_name  begin_operator  end_operator  begin_name b  end_name  begin_operator  end_operator  begin_name c  end_name  begin_operator  end_operator  begin_name d  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_expr_stmt  begin_comment obtain a  end_comment  begin_expr_stmt  begin_expr  begin_name s  end_name  begin_operator  end_operator  begin_call  begin_name safe get  end_name  begin_argument_list  begin_argument  begin_expr  begin_name encode  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_while  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name a  end_name  begin_operator  end_operator  begin_name  begin_name b 64 xtable  end_name  begin_index  begin_expr  begin_name s  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name has remaining  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_expr_stmt  begin_expr  begin_name s  end_name  begin_operator  end_operator  begin_call  begin_name safe get  end_name  begin_argument_list  begin_argument  begin_expr  begin_name encode  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_while  begin_if  begin_condition  begin_expr  begin_name a  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_break  end_break  end_then  end_if  begin_comment obtain b  end_comment  begin_expr_stmt  begin_expr  begin_name s  end_name  begin_operator  end_operator  begin_call  begin_name safe get  end_name  begin_argument_list  begin_argument  begin_expr  begin_name encode  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_while  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name b  end_name  begin_operator  end_operator  begin_name  begin_name b 64 xtable  end_name  begin_index  begin_expr  begin_name s  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name has remaining  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_expr_stmt  begin_expr  begin_name s  end_name  begin_operator  end_operator  begin_call  begin_name safe get  end_name  begin_argument_list  begin_argument  begin_expr  begin_name encode  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_while  begin_if  begin_condition  begin_expr  begin_name b  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_break  end_break  end_then  end_if  begin_comment obtain c  end_comment  begin_expr_stmt  begin_expr  begin_name s  end_name  begin_operator  end_operator  begin_call  begin_name safe get  end_name  begin_argument_list  begin_argument  begin_expr  begin_name encode  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_while  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name c  end_name  begin_operator  end_operator  begin_name  begin_name b 64 xtable  end_name  begin_index  begin_expr  begin_name s  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name has remaining  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_if  begin_condition  begin_expr  begin_name s  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_break  end_break  end_then  end_if  begin_expr_stmt  begin_expr  begin_name s  end_name  begin_operator  end_operator  begin_call  begin_name safe get  end_name  begin_argument_list  begin_argument  begin_expr  begin_name encode  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_while  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name s  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name c  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name s  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name position  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name position  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_break  end_break  end_block  end_then  end_if  begin_comment obtain d  end_comment  begin_expr_stmt  begin_expr  begin_name s  end_name  begin_operator  end_operator  begin_call  begin_name safe get  end_name  begin_argument_list  begin_argument  begin_expr  begin_name encode  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_while  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name d  end_name  begin_operator  end_operator  begin_name  begin_name b 64 xtable  end_name  begin_index  begin_expr  begin_name s  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name has remaining  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_if  begin_condition  begin_expr  begin_name s  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_break  end_break  end_then  end_if  begin_expr_stmt  begin_expr  begin_name s  end_name  begin_operator  end_operator  begin_call  begin_name safe get  end_name  begin_argument_list  begin_argument  begin_expr  begin_name encode  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_while  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name s  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name d  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name s  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name position  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name position  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_break  end_break  end_block  end_then  end_if  begin_comment calculate based on a b c and d  end_comment  begin_expr_stmt  begin_expr  begin_name  begin_name l elem  end_name  begin_index  begin_expr  begin_name index  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name byte  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name a  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name b  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name l elem  end_name  begin_index  begin_expr  begin_name index  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name byte  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name b  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name c  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name l elem  end_name  begin_index  begin_expr  begin_name index  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name byte  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name c  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name d  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_while  begin_if  begin_condition  begin_expr  begin_name a  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name b  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name c  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name s  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name  begin_name l elem  end_name  begin_index  begin_expr  begin_name index  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name byte  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name a  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name b  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name c  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name s  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name  begin_name l elem  end_name  begin_index  begin_expr  begin_name index  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name byte  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name a  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name b  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name l elem  end_name  begin_index  begin_expr  begin_name index  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name byte  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name b  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name c  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name ruby string  end_name  begin_operator  end_operator  begin_name new string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name byte list  end_name  begin_argument_list  begin_argument  begin_expr  begin_name l elem  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name index  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name byte  end_name  begin_index  end_index  end_type  begin_name l elem  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name byte  end_name  begin_index  begin_expr  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name max  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name remaining  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name index  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  end_init  begin_condition  end_condition  begin_incr  end_incr  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name has remaining  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_break  end_break  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name c  end_name  begin_init  begin_expr  begin_call  begin_name safe get  end_name  begin_argument_list  begin_argument  begin_expr  begin_name encode  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name c  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name  begin_name l elem  end_name  begin_index  begin_expr  begin_name index  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name byte  end_name  begin_operator  end_operator  begin_name c  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name has remaining  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_break  end_break  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name mark  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name c 1  end_name  begin_init  begin_expr  begin_call  begin_name safe get  end_name  begin_argument_list  begin_argument  begin_expr  begin_name encode  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name c 1  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_continue  end_continue  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name d 1  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name character  end_name  begin_operator  end_operator  begin_name digit  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c 1  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name d 1  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name reset  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name mark  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name has remaining  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_break  end_break  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name c 2  end_name  begin_init  begin_expr  begin_call  begin_name safe get  end_name  begin_argument_list  begin_argument  begin_expr  begin_name encode  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name d 2  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name character  end_name  begin_operator  end_operator  begin_name digit  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c 2  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name d 2  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name reset  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name byte  end_name  end_type  begin_name value  end_name  begin_init  begin_expr  begin_call  begin_name byte  end_name  begin_argument_list  begin_argument  begin_expr  begin_name d 1  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name d 2  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name  begin_name l elem  end_name  begin_index  begin_expr  begin_name index  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_name value  end_name  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name ruby string  end_name  begin_operator  end_operator  begin_name new string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name byte list  end_name  begin_argument_list  begin_argument  begin_expr  begin_name l elem  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name index  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_block  begin_if  begin_condition  begin_expr  begin_name occurrences  end_name  begin_operator  end_operator  begin_name is star  end_name  begin_operator  end_operator  begin_name occurrences  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name remaining  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name occurrences  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name remaining  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_while  begin_condition  begin_expr  begin_name occurrences  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name remaining  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_block  begin_try  begin_block  begin_comment todo for now we use a faithful  end_comment  begin_comment reimplementation of mri s algorithm  end_comment  begin_comment but should use utf 8 encoding facilities  end_comment  begin_comment from joni once it starts prefroming  end_comment  begin_comment utf 8 content validation  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new fixnum  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name utf 8 decode  end_name  begin_argument_list  begin_argument  begin_expr  begin_name encode  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name illegal argument exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new argument error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name e  end_name  begin_operator  end_operator  begin_name get message  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  end_block  end_while  end_block  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_if  begin_condition  begin_expr  begin_name occurrences  end_name  begin_operator  end_operator  begin_name is star  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment mri behavior contrary to what seems to be logical  end_comment  begin_comment when is given mri calculates the distance  end_comment  begin_comment to the end in order to go backwards  end_comment  begin_expr_stmt  begin_expr  begin_name occurrences  end_name  begin_operator  end_operator  begin_comment encode limit  end_comment  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name remaining  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name position  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name position  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name occurrences  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name illegal argument exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new argument error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_if  begin_condition  begin_expr  begin_name occurrences  end_name  begin_operator  end_operator  begin_name is star  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name occurrences  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name remaining  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name position  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name position  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name occurrences  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name illegal argument exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new argument error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_if  begin_condition  begin_expr  begin_name occurrences  end_name  begin_operator  end_operator  begin_name is star  end_name  begin_operator  end_operator  begin_name occurrences  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name remaining  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name occurrences  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name remaining  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name long  end_name  end_type  begin_name ul  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name long  end_name  end_type  begin_name ulmask  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name ruby bignum  end_name  end_type  begin_name big 128  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ruby bignum  end_name  begin_operator  end_operator  begin_name new bignum  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name pos  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name position  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_name occurrences  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name pos  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name limit  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_expr_stmt  begin_expr  begin_name ul  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name ul  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name pos  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name pos  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name ruby fixnum  end_name  begin_operator  end_operator  begin_name new fixnum  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name ul  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name occurrences  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name ul  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name ul  end_name  begin_operator  end_operator  begin_name ulmask  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name ruby bignum  end_name  end_type  begin_name big  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name ruby bignum  end_name  begin_operator  end_operator  begin_name new bignum  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name ul  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_while  begin_condition  begin_expr  begin_name occurrences  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name pos  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name limit  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_expr_stmt  begin_expr  begin_name big  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name ruby bignum  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name big  end_name  begin_operator  end_operator  begin_name op mul  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get current context  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name big 128  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name v  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name big  end_name  begin_operator  end_operator  begin_name op plus  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name get current context  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name ruby bignum  end_name  begin_operator  end_operator  begin_name new bignum  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name pos  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name v  end_name  begin_operator  end_operator  begin_name ruby fixnum  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name big  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ruby bignum  end_name  begin_operator  end_operator  begin_name new bignum  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name runtime  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name ruby numeric  end_name  begin_operator  end_operator  begin_name fix 2 long  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name v  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name v  end_name  begin_operator  end_operator  begin_name ruby bignum  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name big  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name ruby bignum  end_name  begin_operator  end_operator  begin_name v  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name get  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name pos  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name result  end_name  begin_operator  end_operator  begin_name add  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name big  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name occurrences  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name ul  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_then  end_if  end_block  end_while  end_block  end_then  end_if  end_else  end_if  end_block  end_while  begin_try  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name encode  end_name  begin_operator  end_operator  begin_name position  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name pos  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name illegal argument exception  end_name  end_type  begin_name e  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_throw  begin_expr  begin_call  begin_name  begin_name runtime  end_name  begin_operator  end_operator  begin_name new argument error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_throw  end_block  end_catch  end_try  begin_break  end_break  end_case  end_block  end_switch  end_block  end_while  begin_return  begin_expr  begin_name result  end_name  end_expr  end_return  end_block 
begin_comment see date format format date string buffer field position end_comment begin_type  begin_specifier  end_specifier  begin_name string buffer  end_name  end_type  begin_name format  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name date  end_name  end_type  begin_name ignored  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name string buffer  end_name  end_type  begin_name to append to  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name field position  end_name  end_type  begin_name field position  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name time output formatter  end_name  end_type  begin_name formatter  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name token  end_name  end_type  begin_name token  end_name  begin_range  begin_expr  begin_name compiled pattern  end_name  end_expr  end_range  end_decl  end_init  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name output  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name format  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_switch  begin_condition  begin_expr  begin_call  begin_name  begin_name token  end_name  begin_operator  end_operator  begin_name get format  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_case  begin_expr  begin_name format output  end_name  end_expr  begin_expr_stmt  begin_expr  begin_name formatter  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name time output formatter  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name token  end_name  begin_operator  end_operator  begin_name get data  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name format string  end_name  end_expr  begin_expr_stmt  begin_expr  begin_name output  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name token  end_name  begin_operator  end_operator  begin_name get data  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name to string  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name format  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name format week long  end_name  end_expr  begin_comment this is gross but java api s aren t iso 8601 compliant at all  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name v  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_call  begin_name  begin_name dt  end_name  begin_operator  end_operator  begin_name get day of week  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name v  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name v  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name output  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name format symbols  end_name  begin_operator  end_operator  begin_name get weekdays  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_index  begin_expr  begin_name v  end_name  end_expr  end_index  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name format week short  end_name  end_expr  begin_comment this is gross but java api s aren t iso 8601 compliant at all  end_comment  begin_expr_stmt  begin_expr  begin_name v  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name dt  end_name  begin_operator  end_operator  begin_name get day of week  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name v  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name v  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name output  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name format symbols  end_name  begin_operator  end_operator  begin_name get short weekdays  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_index  begin_expr  begin_name v  end_name  end_expr  end_index  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name format month long  end_name  end_expr  begin_expr_stmt  begin_expr  begin_name output  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name format symbols  end_name  begin_operator  end_operator  begin_name get months  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_index  begin_expr  begin_call  begin_name  begin_name dt  end_name  begin_operator  end_operator  begin_name get month of year  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_index  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name format month short  end_name  end_expr  begin_expr_stmt  begin_expr  begin_name output  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name format symbols  end_name  begin_operator  end_operator  begin_name get short months  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_index  begin_expr  begin_call  begin_name  begin_name dt  end_name  begin_operator  end_operator  begin_name get month of year  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_index  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name format day  end_name  end_expr  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name value  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name dt  end_name  begin_operator  end_operator  begin_name get day of month  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name output  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name string  end_name  begin_operator  end_operator  begin_name format  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name format day s  end_name  end_expr  begin_expr_stmt  begin_expr  begin_name value  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name dt  end_name  begin_operator  end_operator  begin_name get day of month  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name output  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name value  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name integer  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name format hour  end_name  end_expr  end_case  begin_case  begin_expr  begin_name format hour blank  end_name  end_expr  begin_expr_stmt  begin_expr  begin_name value  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name dt  end_name  begin_operator  end_operator  begin_name get hour of day  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name output  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name value  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name output  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name token  end_name  begin_operator  end_operator  begin_name get format  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name format hour  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name output  end_name  begin_operator  end_operator  begin_name value  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name format hour m  end_name  end_expr  end_case  begin_case  begin_expr  begin_name format hour s  end_name  end_expr  begin_expr_stmt  begin_expr  begin_name value  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name dt  end_name  begin_operator  end_operator  begin_name get hour of day  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name value  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name value  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name value  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name output  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name output  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name value  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name output  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name token  end_name  begin_operator  end_operator  begin_name get format  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name format hour m  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name output  end_name  begin_operator  end_operator  begin_name value  end_name  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_break  end_break  end_case  begin_case  begin_expr  begin_name format day year  end_name  end_expr  begin_expr_stmt  begin_expr  begin_name value  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name dt  end_name  begin_operator  end_operator  begin_name get day of year  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name output  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name string  end_name  begin_operator  end_operator  begin_name format  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name format minutes  end_name  end_expr  begin_expr_stmt  begin_expr  begin_name value  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name dt  end_name  begin_operator  end_operator  begin_name get minute of hour  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name output  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name string  end_name  begin_operator  end_operator  begin_name format  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name format month  end_name  end_expr  begin_expr_stmt  begin_expr  begin_name value  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name dt  end_name  begin_operator  end_operator  begin_name get month of year  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name output  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name string  end_name  begin_operator  end_operator  begin_name format  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name format meridian  end_name  end_expr  end_case  begin_case  begin_expr  begin_name format meridian lower case  end_name  end_expr  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name dt  end_name  begin_operator  end_operator  begin_name get hour of day  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name output  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name token  end_name  begin_operator  end_operator  begin_name get format  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name format meridian  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name output  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name token  end_name  begin_operator  end_operator  begin_name get format  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name format meridian  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_break  end_break  end_case  begin_case  begin_expr  begin_name format seconds  end_name  end_expr  begin_expr_stmt  begin_expr  begin_name value  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name dt  end_name  begin_operator  end_operator  begin_name get second of minute  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name output  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name value  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name  begin_name integer  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name format week year m  end_name  end_expr  begin_expr_stmt  begin_expr  begin_name output  end_name  begin_operator  end_operator  begin_call  begin_name format week year  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name java  end_name  begin_operator  end_operator  begin_name util  end_name  begin_operator  end_operator  begin_name calendar  end_name  begin_operator  end_operator  begin_name monday  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name format week year s  end_name  end_expr  begin_expr_stmt  begin_expr  begin_name output  end_name  begin_operator  end_operator  begin_call  begin_name format week year  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name java  end_name  begin_operator  end_operator  begin_name util  end_name  begin_operator  end_operator  begin_name calendar  end_name  begin_operator  end_operator  begin_name sunday  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name format day week  end_name  end_expr  end_case  begin_case  begin_expr  begin_name format day week 2  end_name  end_expr  begin_expr_stmt  begin_expr  begin_name value  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name dt  end_name  begin_operator  end_operator  begin_name get day of week  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name token  end_name  begin_operator  end_operator  begin_name get format  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name format day week  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name value  end_name  begin_operator  end_operator  begin_name value  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name output  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name integer  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name format year long  end_name  end_expr  begin_expr_stmt  begin_expr  begin_name value  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name dt  end_name  begin_operator  end_operator  begin_name get year  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name output  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name string  end_name  begin_operator  end_operator  begin_name format  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name format year short  end_name  end_expr  begin_expr_stmt  begin_expr  begin_name value  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name dt  end_name  begin_operator  end_operator  begin_name get year  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name output  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name string  end_name  begin_operator  end_operator  begin_name format  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name format zone off  end_name  end_expr  begin_expr_stmt  begin_expr  begin_name value  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name dt  end_name  begin_operator  end_operator  begin_name get zone  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get offset  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name dt  end_name  begin_operator  end_operator  begin_name get millis  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name output  end_name  begin_operator  end_operator  begin_name value  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name value  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name abs  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name value  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name output  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name output  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name value  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name value  end_name  begin_operator  end_operator  begin_name value  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name value  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name output  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name output  end_name  begin_operator  end_operator  begin_name value  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name format zone id  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name to append to  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name dt  end_name  begin_operator  end_operator  begin_name get zone  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get short name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name dt  end_name  begin_operator  end_operator  begin_name get millis  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name format century  end_name  end_expr  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name to append to  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name dt  end_name  begin_operator  end_operator  begin_name get century of era  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name format millisec  end_name  end_expr  begin_expr_stmt  begin_expr  begin_name value  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name dt  end_name  begin_operator  end_operator  begin_name get millis of second  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name output  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name string  end_name  begin_operator  end_operator  begin_name format  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name format epoch  end_name  end_expr  begin_expr_stmt  begin_expr  begin_name output  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name long  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name dt  end_name  begin_operator  end_operator  begin_name get millis  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name format week weekyear  end_name  end_expr  begin_expr_stmt  begin_expr  begin_name value  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name dt  end_name  begin_operator  end_operator  begin_name get week of weekyear  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name output  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name string  end_name  begin_operator  end_operator  begin_name format  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name format nanosec  end_name  end_expr  begin_decl_stmt  begin_decl  begin_type  begin_name long  end_name  end_type  begin_name nano  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name system  end_name  begin_operator  end_operator  begin_name nano time  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name value  end_name  begin_operator  end_operator  begin_call  begin_name int  end_name  begin_argument_list  begin_argument  begin_expr  begin_name nano  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name output  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name integer  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name value  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name format weekyear  end_name  end_expr  begin_expr_stmt  begin_expr  begin_name output  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name integer  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name dt  end_name  begin_operator  end_operator  begin_name get weekyear  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  end_block  end_switch  begin_if  begin_condition  begin_expr  begin_name output  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name to append to  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name format  end_name  begin_operator  end_operator  begin_call  begin_name format output  end_name  begin_argument_list  begin_argument  begin_expr  begin_name formatter  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name output  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_name output  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_for  begin_return  begin_expr  begin_name to append to  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name ruby sprintf to buffer  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name byte list  end_name  end_type  begin_name buf  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name char sequence  end_name  end_type  begin_name char format  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name args  end_name  end_type  begin_name args  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_return  begin_expr  begin_call  begin_name ruby sprintf to buffer  end_name  begin_argument_list  begin_argument  begin_expr  begin_name buf  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name char format  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_specifier  end_specifier  begin_name boolean  end_name  end_type  begin_name ruby sprintf to buffer  end_name  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name byte list  end_name  end_type  begin_name buf  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name char sequence  end_name  end_type  begin_name char format  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name args  end_name  end_type  begin_name args  end_name  end_decl  end_param  begin_param  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name use prefix for zero  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name tainted  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_specifier  end_specifier  begin_name byte  end_name  begin_index  end_index  end_type  begin_name format  end_name  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name offset  end_name  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name length  end_name  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name start  end_name  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name mark  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name char format  end_name  begin_operator  end_operator  begin_name byte list  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name byte list  end_name  end_type  begin_name list  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name byte list  end_name  begin_operator  end_operator  begin_name char format  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name format  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name list  end_name  begin_operator  end_operator  begin_name unsafe bytes  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name begin  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name list  end_name  begin_operator  end_operator  begin_name begin  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name offset  end_name  begin_operator  end_operator  begin_name begin  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name length  end_name  begin_operator  end_operator  begin_name begin  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name list  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name start  end_name  begin_operator  end_operator  begin_name begin  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name mark  end_name  begin_operator  end_operator  begin_name begin  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name format  end_name  begin_operator  end_operator  begin_call  begin_name string to bytes  end_name  begin_argument_list  begin_argument  begin_expr  begin_name char format  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name offset  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name length  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name char format  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name start  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name mark  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_while  begin_condition  begin_expr  begin_name offset  end_name  begin_operator  end_operator  begin_name length  end_name  end_expr  end_condition  begin_block  begin_expr_stmt  begin_expr  begin_name start  end_name  begin_operator  end_operator  begin_name offset  end_name  end_expr  end_expr_stmt  begin_for  begin_init  end_init  begin_condition  begin_expr  begin_name offset  end_name  begin_operator  end_operator  begin_name length  end_name  begin_operator  end_operator  begin_name  begin_name format  end_name  begin_index  begin_expr  begin_name offset  end_name  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_condition  begin_incr  begin_expr  begin_name offset  end_name  begin_operator  end_operator  end_expr  end_incr  begin_empty_stmt  end_empty_stmt  end_for  begin_if  begin_condition  begin_expr  begin_name offset  end_name  begin_operator  end_operator  begin_name start  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name format  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name start  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name offset  end_name  begin_operator  end_operator  begin_name start  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name start  end_name  begin_operator  end_operator  begin_name offset  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name offset  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name length  end_name  end_expr  end_condition  begin_then  begin_break  end_break  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name i ruby object  end_name  end_type  begin_name arg  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name flags  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name width  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name precision  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name number  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name byte  end_name  end_type  begin_name fchar  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name incomplete  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  end_init  begin_condition  begin_expr  begin_name incomplete  end_name  begin_operator  end_operator  begin_name offset  end_name  begin_operator  end_operator  begin_name length  end_name  end_expr  end_condition  begin_incr  end_incr  begin_block  begin_switch  begin_condition  begin_expr  begin_name fchar  end_name  begin_operator  end_operator  begin_name  begin_name format  end_name  begin_index  begin_expr  begin_name offset  end_name  end_expr  end_index  end_name  end_expr  end_condition  begin_block  begin_default  begin_if  begin_condition  begin_expr  begin_name fchar  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name flags  end_name  begin_operator  end_operator  begin_name flag none  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment mri 1 8 6 behavior null byte after  end_comment  begin_comment leads to string null byte in  end_comment  begin_comment other places like 5 0 leads to error  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name fchar  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name incomplete  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name offset  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name is printable  end_name  begin_argument_list  begin_argument  begin_expr  begin_name fchar  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name raise argument error  end_name  begin_argument_list  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name char  end_name  begin_operator  end_operator  begin_name fchar  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name raise argument error  end_name  begin_argument_list  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name err malformed format  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_else  end_if  begin_break  end_break  end_default  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name flags  end_name  begin_operator  end_operator  begin_name flag space  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name offset  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name flags  end_name  begin_operator  end_operator  begin_name flag zero  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name offset  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name flags  end_name  begin_operator  end_operator  begin_name flag plus  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name offset  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name flags  end_name  begin_operator  end_operator  begin_name flag minus  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name offset  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name flags  end_name  begin_operator  end_operator  begin_name flag sharp  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name offset  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_comment mri doesn t flag it as an error if width is given multiple  end_comment  begin_comment times as a number but it does for  end_comment  begin_expr_stmt  begin_expr  begin_name number  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_for  begin_init  end_init  begin_condition  begin_expr  begin_name offset  end_name  begin_operator  end_operator  begin_name length  end_name  begin_operator  end_operator  begin_call  begin_name is digit  end_name  begin_argument_list  begin_argument  begin_expr  begin_name fchar  end_name  begin_operator  end_operator  begin_name  begin_name format  end_name  begin_index  begin_expr  begin_name offset  end_name  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_incr  begin_expr  begin_name offset  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_expr_stmt  begin_expr  begin_name number  end_name  begin_operator  end_operator  begin_call  begin_name extend width  end_name  begin_argument_list  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name number  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name fchar  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name check offset  end_name  begin_argument_list  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name offset  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name length  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name err malformed num  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name fchar  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name arg  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name raise argument error  end_name  begin_argument_list  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name number  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name arg  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name get nth  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name number  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name offset  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name width  end_name  begin_operator  end_operator  begin_name number  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name flags  end_name  begin_operator  end_operator  begin_name flag width  end_name  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name flags  end_name  begin_operator  end_operator  begin_name flag width  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name raise argument error  end_name  begin_argument_list  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name flags  end_name  begin_operator  end_operator  begin_name flag width  end_name  end_expr  end_expr_stmt  begin_comment todo factor this chunk as in mri yarv getaster  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name check offset  end_name  begin_argument_list  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name offset  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name length  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name err malformed star num  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name mark  end_name  begin_operator  end_operator  begin_name offset  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name number  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_for  begin_init  end_init  begin_condition  begin_expr  begin_name offset  end_name  begin_operator  end_operator  begin_name length  end_name  begin_operator  end_operator  begin_call  begin_name is digit  end_name  begin_argument_list  begin_argument  begin_expr  begin_name fchar  end_name  begin_operator  end_operator  begin_name  begin_name format  end_name  begin_index  begin_expr  begin_name offset  end_name  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_incr  begin_expr  begin_name offset  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_expr_stmt  begin_expr  begin_name number  end_name  begin_operator  end_operator  begin_call  begin_name extend width  end_name  begin_argument_list  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name number  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name fchar  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name check offset  end_name  begin_argument_list  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name offset  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name length  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name err malformed star num  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name fchar  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name width  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name get nth int  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name number  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name width  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name flags  end_name  begin_operator  end_operator  begin_name flag minus  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name width  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name width  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name offset  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name width  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name next int  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name width  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name flags  end_name  begin_operator  end_operator  begin_name flag minus  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name width  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name width  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment let the width if any get processed in the next loop  end_comment  begin_comment so any leading 0 gets treated correctly  end_comment  begin_expr_stmt  begin_expr  begin_name offset  end_name  begin_operator  end_operator  begin_name mark  end_name  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name flags  end_name  begin_operator  end_operator  begin_name flag precision  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name raise argument error  end_name  begin_argument_list  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name flags  end_name  begin_operator  end_operator  begin_name flag precision  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name check offset  end_name  begin_argument_list  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name offset  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name length  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name err malformed dot num  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name fchar  end_name  begin_operator  end_operator  begin_name  begin_name format  end_name  begin_index  begin_expr  begin_name offset  end_name  end_expr  end_index  end_name  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name fchar  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment todo factor this chunk as in mri yarv getaster  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name check offset  end_name  begin_argument_list  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_name offset  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name length  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name err malformed star num  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name mark  end_name  begin_operator  end_operator  begin_name offset  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name number  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_for  begin_init  end_init  begin_condition  begin_expr  begin_name offset  end_name  begin_operator  end_operator  begin_name length  end_name  begin_operator  end_operator  begin_call  begin_name is digit  end_name  begin_argument_list  begin_argument  begin_expr  begin_name fchar  end_name  begin_operator  end_operator  begin_name  begin_name format  end_name  begin_index  begin_expr  begin_name offset  end_name  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_incr  begin_expr  begin_name offset  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_expr_stmt  begin_expr  begin_name number  end_name  begin_operator  end_operator  begin_call  begin_name extend width  end_name  begin_argument_list  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name number  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name fchar  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name check offset  end_name  begin_argument_list  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name offset  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name length  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name err malformed star num  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name fchar  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name precision  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name get nth int  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name number  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name precision  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name flags  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name flag precision  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name offset  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name precision  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name next int  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name precision  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name flags  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name flag precision  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment let the width if any get processed in the next loop  end_comment  begin_comment so any leading 0 gets treated correctly  end_comment  begin_expr_stmt  begin_expr  begin_name offset  end_name  begin_operator  end_operator  begin_name mark  end_name  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name number  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_for  begin_init  end_init  begin_condition  begin_expr  begin_name offset  end_name  begin_operator  end_operator  begin_name length  end_name  begin_operator  end_operator  begin_call  begin_name is digit  end_name  begin_argument_list  begin_argument  begin_expr  begin_name fchar  end_name  begin_operator  end_operator  begin_name  begin_name format  end_name  begin_index  begin_expr  begin_name offset  end_name  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_incr  begin_expr  begin_name offset  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_expr_stmt  begin_expr  begin_name number  end_name  begin_operator  end_operator  begin_call  begin_name extend width  end_name  begin_argument_list  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name number  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name fchar  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_call  begin_name check offset  end_name  begin_argument_list  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name offset  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name length  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name err malformed dot num  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name precision  end_name  begin_operator  end_operator  begin_name number  end_name  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name offset  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_case  begin_case  begin_expr  end_expr  begin_if  begin_condition  begin_expr  begin_name flags  end_name  begin_operator  end_operator  begin_name flag none  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name raise argument error  end_name  begin_argument_list  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name err illegal format char  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name offset  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name incomplete  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_block  begin_if  begin_condition  begin_expr  begin_name arg  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_name arg  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name c  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_comment mri 1 8 5 p 12 doesn t support 1 char strings but  end_comment  begin_comment yarv 0 4 1 does i don t think it hurts to include  end_comment  begin_comment this sprintf c a is nicer than sprintf c a 0  end_comment  begin_if  begin_condition  begin_expr  begin_name arg  end_name  begin_operator  end_operator  begin_name ruby string  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name byte list  end_name  end_type  begin_name bytes  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name ruby string  end_name  begin_operator  end_operator  begin_name arg  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get byte list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name bytes  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name c  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name bytes  end_name  begin_operator  end_operator  begin_name unsafe bytes  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_index  begin_expr  begin_call  begin_name  begin_name bytes  end_name  begin_operator  end_operator  begin_name begin  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_index  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name raise argument error  end_name  begin_argument_list  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name c  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name int value  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name arg  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name flags  end_name  begin_operator  end_operator  begin_name flag width  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name width  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name flags  end_name  begin_operator  end_operator  begin_name flag minus  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name fill  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name width  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name fill  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name width  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name c  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_name offset  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name incomplete  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_block  begin_if  begin_condition  begin_expr  begin_name arg  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_name arg  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name fchar  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name arg  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name arg  end_name  begin_operator  end_operator  begin_name call method  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name arg  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get current context  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name byte list  end_name  end_type  begin_name bytes  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name arg  end_name  begin_operator  end_operator  begin_name as string  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get byte list  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name len  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name bytes  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name arg  end_name  begin_operator  end_operator  begin_name is taint  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_name tainted  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name flags  end_name  begin_operator  end_operator  begin_name flag precision  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name precision  end_name  begin_operator  end_operator  begin_name len  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name len  end_name  begin_operator  end_operator  begin_name precision  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment todo adjust length so it won t fall in the middle  end_comment  begin_comment of a multi byte character mri s sprintf c uses tables  end_comment  begin_comment in a modified version of regex c which assume some  end_comment  begin_comment particular encoding for a given installation application  end_comment  begin_comment see regex c re mbcinit in ruby 1 8 5 p 12  end_comment  begin_comment   end_comment  begin_comment this is only an issue if the user specifies a precision  end_comment  begin_comment that causes the string to be truncated the same issue  end_comment  begin_comment would arise taking a substring of a byte list backed ruby string  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name flags  end_name  begin_operator  end_operator  begin_name flag width  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name width  end_name  begin_operator  end_operator  begin_name len  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name width  end_name  begin_operator  end_operator  begin_name len  end_name  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name flags  end_name  begin_operator  end_operator  begin_name flag minus  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name bytes  end_name  begin_operator  end_operator  begin_name unsafe bytes  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name bytes  end_name  begin_operator  end_operator  begin_name begin  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name len  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name fill  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name width  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name fill  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name width  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name bytes  end_name  begin_operator  end_operator  begin_name unsafe bytes  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name bytes  end_name  begin_operator  end_operator  begin_name begin  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name len  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name bytes  end_name  begin_operator  end_operator  begin_name unsafe bytes  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name bytes  end_name  begin_operator  end_operator  begin_name begin  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_name len  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_name offset  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name incomplete  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_block  begin_if  begin_condition  begin_expr  begin_name arg  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_name arg  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name type  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name arg  end_name  begin_operator  end_operator  begin_name get meta class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name type  end_name  begin_operator  end_operator  begin_name  begin_name class index  end_name  begin_operator  end_operator  begin_name fixnum  end_name  end_name  begin_operator  end_operator  begin_name type  end_name  begin_operator  end_operator  begin_name  begin_name class index  end_name  begin_operator  end_operator  begin_name bignum  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_switch  begin_condition  begin_expr  begin_name type  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  begin_name  begin_name class index  end_name  begin_operator  end_operator  begin_name float  end_name  end_name  end_expr  begin_expr_stmt  begin_expr  begin_name arg  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ruby numeric  end_name  begin_operator  end_operator  begin_name dbl 2 num  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name arg  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name ruby float  end_name  begin_operator  end_operator  begin_name arg  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get value  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  begin_name  begin_name class index  end_name  begin_operator  end_operator  begin_name string  end_name  end_name  end_expr  begin_expr_stmt  begin_expr  begin_name arg  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name ruby string  end_name  begin_operator  end_operator  begin_name arg  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name string to inum  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_default  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name arg  end_name  begin_operator  end_operator  begin_name responds to  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name arg  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name type converter  end_name  begin_operator  end_operator  begin_name convert to type  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name arg  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name arg  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get integer  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name arg  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name type converter  end_name  begin_operator  end_operator  begin_name convert to type  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name arg  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name arg  end_name  begin_operator  end_operator  begin_name get runtime  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name get integer  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_break  end_break  end_default  end_block  end_switch  begin_expr_stmt  begin_expr  begin_name type  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name arg  end_name  begin_operator  end_operator  begin_name get meta class  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_name index  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name byte  end_name  begin_index  end_index  end_type  begin_name bytes  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name first  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name byte  end_name  begin_index  end_index  end_type  begin_name prefix  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name sign  end_name  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name negative  end_name  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name byte  end_name  end_type  begin_name sign char  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name byte  end_name  end_type  begin_name lead char  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name base  end_name  end_decl  end_decl_stmt  begin_comment d and i are the same  end_comment  begin_if  begin_condition  begin_expr  begin_name fchar  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_name fchar  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_then  end_if  begin_comment u with space or plus flags is same as d  end_comment  begin_if  begin_condition  begin_expr  begin_name fchar  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name flags  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name flag space  end_name  begin_operator  end_operator  begin_name flag plus  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name fchar  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name sign  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name fchar  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name flags  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name flag space  end_name  begin_operator  end_operator  begin_name flag plus  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_expr_stmt  begin_switch  begin_condition  begin_expr  begin_name fchar  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name base  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name base  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name base  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_default  begin_expr_stmt  begin_expr  begin_name base  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_break  end_break  end_default  end_block  end_switch  begin_comment we depart here from strict adherence to mri code as mri  end_comment  begin_comment uses c sprintf in part to format numeric output while  end_comment  begin_comment we ll use java s numeric formatting code and our own  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name zero  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name type  end_name  begin_operator  end_operator  begin_name  begin_name class index  end_name  begin_operator  end_operator  begin_name fixnum  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name negative  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name ruby fixnum  end_name  begin_operator  end_operator  begin_name arg  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get long value  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name zero  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name ruby fixnum  end_name  begin_operator  end_operator  begin_name arg  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get long value  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name negative  end_name  begin_operator  end_operator  begin_name fchar  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name bytes  end_name  begin_operator  end_operator  begin_call  begin_name get unsigned negative bytes  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name ruby fixnum  end_name  begin_operator  end_operator  begin_name arg  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name bytes  end_name  begin_operator  end_operator  begin_call  begin_name get fixnum bytes  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name ruby fixnum  end_name  begin_operator  end_operator  begin_name arg  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name base  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name sign  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name fchar  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name negative  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name ruby bignum  end_name  begin_operator  end_operator  begin_name arg  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get value  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name signum  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name zero  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name ruby bignum  end_name  begin_operator  end_operator  begin_name arg  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get value  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name big integer  end_name  begin_operator  end_operator  begin_name zero  end_name  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name negative  end_name  begin_operator  end_operator  begin_name fchar  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name bytes  end_name  begin_operator  end_operator  begin_call  begin_name get unsigned negative bytes  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name ruby bignum  end_name  begin_operator  end_operator  begin_name arg  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name bytes  end_name  begin_operator  end_operator  begin_call  begin_name get bignum bytes  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name ruby bignum  end_name  begin_operator  end_operator  begin_name arg  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name base  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name sign  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name fchar  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_else  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name flags  end_name  begin_operator  end_operator  begin_name flag sharp  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name zero  end_name  begin_operator  end_operator  begin_name use prefix for zero  end_name  end_expr  end_condition  begin_then  begin_block  begin_switch  begin_condition  begin_expr  begin_name fchar  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name prefix  end_name  begin_operator  end_operator  begin_name prefix octal  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name prefix  end_name  begin_operator  end_operator  begin_name prefix hex lc  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name prefix  end_name  begin_operator  end_operator  begin_name prefix hex uc  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name prefix  end_name  begin_operator  end_operator  begin_name prefix binary lc  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name prefix  end_name  begin_operator  end_operator  begin_name prefix binary uc  end_name  end_expr  end_expr_stmt  begin_break  end_break  end_case  end_block  end_switch  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name prefix  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_name width  end_name  begin_operator  end_operator  begin_name  begin_name prefix  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_expr_stmt  end_then  end_if  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name len  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name sign  end_name  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name negative  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name sign char  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name width  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name first  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_comment skip in bytes will add where appropriate  end_comment  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name flags  end_name  begin_operator  end_operator  begin_name flag plus  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name sign char  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name width  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name flags  end_name  begin_operator  end_operator  begin_name flag space  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name sign char  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name width  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_else  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name negative  end_name  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name base  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name warning  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name id  end_name  begin_operator  end_operator  begin_name negative number for u  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name lead char  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name len  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name flags  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name flag precision  end_name  begin_operator  end_operator  begin_name flag zero  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_name len  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_then  end_if  begin_comment   end_comment  begin_expr_stmt  begin_expr  begin_name first  end_name  begin_operator  end_operator  begin_call  begin_name skip sign bits  end_name  begin_argument_list  begin_argument  begin_expr  begin_name bytes  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name base  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_switch  begin_condition  begin_expr  begin_name fchar  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name lead char  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name lead char  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name lead char  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name lead char  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_break  end_break  end_case  end_block  end_switch  begin_if  begin_condition  begin_expr  begin_name lead char  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_name len  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_then  end_if  end_block  end_else  end_if  end_block  end_then  end_if  end_else  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name numlen  end_name  begin_init  begin_expr  begin_name  begin_name bytes  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_operator  end_operator  begin_name first  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name len  end_name  begin_operator  end_operator  begin_name numlen  end_name  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name flags  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name flag zero  end_name  begin_operator  end_operator  begin_name flag precision  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name flag zero  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name precision  end_name  begin_operator  end_operator  begin_name width  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name width  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_if  begin_condition  begin_expr  begin_name precision  end_name  begin_operator  end_operator  begin_name len  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_name precision  end_name  begin_operator  end_operator  begin_name len  end_name  end_expr  end_expr_stmt  end_then  end_if  begin_expr_stmt  begin_expr  begin_name width  end_name  begin_operator  end_operator  begin_name precision  end_name  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name flags  end_name  begin_operator  end_operator  begin_name flag minus  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name fill  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name width  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name width  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name sign char  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name sign char  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name prefix  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name prefix  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name len  end_name  begin_operator  end_operator  begin_name precision  end_name  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name lead char  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name fill  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name precision  end_name  begin_operator  end_operator  begin_name len  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name lead char  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name fill  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name lead char  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name precision  end_name  begin_operator  end_operator  begin_name len  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name prefix negative  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name fill  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name lead char  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name precision  end_name  begin_operator  end_operator  begin_name len  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment the 1 is for the stripped sign char  end_comment  end_block  end_else  end_if  end_else  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name lead char  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name flags  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name flag precision  end_name  begin_operator  end_operator  begin_name flag zero  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name prefix negative  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name lead char  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name lead char  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block  end_then  end_if  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name bytes  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name first  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name numlen  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name width  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name fill  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name width  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  begin_expr_stmt  begin_expr  begin_name offset  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name incomplete  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_block  begin_if  begin_condition  begin_expr  begin_name arg  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_name arg  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name next  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name arg  end_name  begin_operator  end_operator  begin_name ruby float  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment fixme what is correct recv argument  end_comment  begin_comment this does produce the desired behavior  end_comment  begin_expr_stmt  begin_expr  begin_name arg  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name ruby kernel  end_name  begin_operator  end_operator  begin_name new float  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name arg  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name arg  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name double  end_name  end_type  begin_name dval  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name ruby float  end_name  begin_operator  end_operator  begin_name arg  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name get double value  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name nan  end_name  begin_init  begin_expr  begin_name dval  end_name  begin_operator  end_operator  begin_name dval  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name inf  end_name  begin_init  begin_expr  begin_name dval  end_name  begin_operator  end_operator  begin_name  begin_name double  end_name  begin_operator  end_operator  begin_name positive infinity  end_name  end_name  begin_operator  end_operator  begin_name dval  end_name  begin_operator  end_operator  begin_name  begin_name double  end_name  begin_operator  end_operator  begin_name negative infinity  end_name  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name negative  end_name  begin_init  begin_expr  begin_name dval  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name dval  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name float  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dval  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name equals  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_call  begin_name float  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name byte  end_name  begin_index  end_index  end_type  begin_name digits  end_name  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name n digits  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name exponent  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name len  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name byte  end_name  end_type  begin_name sign char  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name nan  end_name  begin_operator  end_operator  begin_name inf  end_name  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name nan  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name digits  end_name  begin_operator  end_operator  begin_name nan value  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name len  end_name  begin_operator  end_operator  begin_name  begin_name nan value  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name digits  end_name  begin_operator  end_operator  begin_name infinity value  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name len  end_name  begin_operator  end_operator  begin_name  begin_name infinity value  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_if  begin_condition  begin_expr  begin_name negative  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name sign char  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name width  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name flags  end_name  begin_operator  end_operator  begin_name flag plus  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name sign char  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name width  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name flags  end_name  begin_operator  end_operator  begin_name flag space  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name sign char  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name width  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name sign char  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_else  end_if  end_else  end_if  end_else  end_if  begin_expr_stmt  begin_expr  begin_name width  end_name  begin_operator  end_operator  begin_name len  end_name  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name width  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name flags  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name flag zero  end_name  begin_operator  end_operator  begin_name flag minus  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name fill  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name width  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name width  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name sign char  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name sign char  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name width  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name flags  end_name  begin_operator  end_operator  begin_name flag minus  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name fill  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name width  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name width  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name digits  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name width  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name fill  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name width  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  begin_expr_stmt  begin_expr  begin_name offset  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name incomplete  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_break  end_break  end_block  end_then  end_if  begin_decl_stmt  begin_decl  begin_type  begin_name string  end_name  end_type  begin_name str  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name double  end_name  begin_operator  end_operator  begin_name to string  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name dval  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_comment grrr arghh want to subclass sun misc floating decimal but can t  end_comment  begin_comment so we must do all this the next 70 lines of code which has already  end_comment  begin_comment been done by floating decimal  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name strlen  end_name  begin_init  begin_expr  begin_call  begin_name  begin_name str  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_expr_stmt  begin_expr  begin_name digits  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name byte  end_name  begin_index  begin_expr  begin_name strlen  end_name  end_expr  end_index  end_name  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name n trailing zeroes  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  begin_name negative  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name dec pos  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name byte  end_name  end_type  begin_name ival  end_name  end_decl  end_decl_stmt  begin_label  begin_name int loop  end_name  end_label  begin_for  begin_init  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name strlen  end_name  end_expr  end_condition  begin_incr  end_incr  begin_block  begin_switch  begin_condition  begin_expr  begin_name ival  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name byte  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name str  end_name  begin_operator  end_operator  begin_name char at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  begin_if  begin_condition  begin_expr  begin_name n digits  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_name n trailing zeroes  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_then  end_if  begin_break  end_break  begin_comment switch  end_comment  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_if  begin_condition  begin_expr  begin_name n trailing zeroes  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_for  begin_init  end_init  begin_condition  begin_expr  begin_name n trailing zeroes  end_name  begin_operator  end_operator  end_expr  end_condition  begin_incr  begin_expr  begin_name n trailing zeroes  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_expr_stmt  begin_expr  begin_name  begin_name digits  end_name  begin_index  begin_expr  begin_name n digits  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_for  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name  begin_name digits  end_name  begin_index  begin_expr  begin_name n digits  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_name ival  end_name  end_expr  end_expr_stmt  begin_break  end_break  begin_comment switch  end_comment  end_case  begin_case  begin_expr  end_expr  begin_break  end_break  end_case  end_block  end_switch  end_block  end_for  begin_expr_stmt  begin_expr  begin_name dec pos  end_name  begin_operator  end_operator  begin_name n digits  end_name  begin_operator  end_operator  begin_name n trailing zeroes  end_name  end_expr  end_expr_stmt  begin_label  begin_name dec loop  end_name  end_label  begin_for  begin_init  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name strlen  end_name  end_expr  end_condition  begin_incr  end_incr  begin_block  begin_switch  begin_condition  begin_expr  begin_name ival  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name byte  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name str  end_name  begin_operator  end_operator  begin_name char at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  begin_if  begin_condition  begin_expr  begin_name n digits  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name n trailing zeroes  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name exponent  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_break  end_break  begin_comment switch  end_comment  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_if  begin_condition  begin_expr  begin_name n trailing zeroes  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_for  begin_init  end_init  begin_condition  begin_expr  begin_name n trailing zeroes  end_name  begin_operator  end_operator  end_expr  end_condition  begin_incr  begin_expr  begin_name n trailing zeroes  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_expr_stmt  begin_expr  begin_name  begin_name digits  end_name  begin_index  begin_expr  begin_name n digits  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_for  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name  begin_name digits  end_name  begin_index  begin_expr  begin_name n digits  end_name  begin_operator  end_operator  end_expr  end_index  end_name  begin_operator  end_operator  begin_name ival  end_name  end_expr  end_expr_stmt  begin_break  end_break  begin_comment switch  end_comment  end_case  begin_case  begin_expr  end_expr  begin_break  end_break  end_case  end_block  end_switch  end_block  end_for  begin_if  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name strlen  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name exp sign  end_name  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name exp val  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name str  end_name  begin_operator  end_operator  begin_name char at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name exp sign  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name exp sign  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_for  begin_init  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name strlen  end_name  end_expr  end_condition  begin_incr  end_incr  begin_block  begin_expr_stmt  begin_expr  begin_name exp val  end_name  begin_operator  end_operator  begin_name exp val  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name int  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name str  end_name  begin_operator  end_operator  begin_name char at  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_name int  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_for  begin_expr_stmt  begin_expr  begin_name exponent  end_name  begin_operator  end_operator  begin_name exp val  end_name  begin_operator  end_operator  begin_name exp sign  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name exponent  end_name  begin_operator  end_operator  begin_name dec pos  end_name  begin_operator  end_operator  begin_name n digits  end_name  end_expr  end_expr_stmt  begin_comment gotta have at least a zero  end_comment  begin_if  begin_condition  begin_expr  begin_name n digits  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name  begin_name digits  end_name  begin_index  begin_expr  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name n digits  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name exponent  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment ok we now have the significand in digits 0 n digits  end_comment  begin_comment and the exponent in exponent we re ready to format  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name int digits  end_name  end_decl  begin_operator  end_operator  begin_decl  begin_type  end_type  begin_name int zeroes  end_name  end_decl  begin_operator  end_operator  begin_decl  begin_type  end_type  begin_name int length  end_name  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name dec digits  end_name  end_decl  begin_operator  end_operator  begin_decl  begin_type  end_type  begin_name dec zeroes  end_name  end_decl  begin_operator  end_operator  begin_decl  begin_type  end_type  begin_name dec length  end_name  end_decl  end_decl_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name byte  end_name  end_type  begin_name exp char  end_name  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name negative  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name sign char  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name width  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name flags  end_name  begin_operator  end_operator  begin_name flag plus  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name sign char  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name width  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name flags  end_name  begin_operator  end_operator  begin_name flag space  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name sign char  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name width  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name sign char  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_else  end_if  end_else  end_if  end_else  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name flags  end_name  begin_operator  end_operator  begin_name flag precision  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name precision  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_switch  begin_condition  begin_expr  begin_name fchar  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name exp char  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name exp char  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_break  end_break  end_case  begin_default  begin_expr_stmt  begin_expr  begin_name exp char  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_default  end_block  end_switch  begin_switch  begin_condition  begin_expr  begin_name fchar  end_name  end_expr  end_condition  begin_block  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_comment an empirically derived rule precision applies to  end_comment  begin_comment significand length irrespective of exponent  end_comment  begin_comment an official rule clarified if the exponent  end_comment  begin_comment clarif after adjusting for exponent form clarif  end_comment  begin_comment is 4 or the exponent clarif after adjusting  end_comment  begin_comment for exponent form clarif is greater than the  end_comment  begin_comment precision use exponent form  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name exp form  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name exponent  end_name  begin_operator  end_operator  begin_name n digits  end_name  begin_operator  end_operator  begin_call  begin_argument_list  begin_argument  begin_operator  end_operator  begin_operator  end_operator  begin_name exponent  end_name  begin_operator  end_operator  begin_name n digits  end_name  end_argument  end_argument_list  begin_argument_list  begin_argument  begin_expr  begin_name precision  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name precision  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_comment it would be nice and logical if exponent form  end_comment  begin_comment behaved like e e and decimal form behaved like f  end_comment  begin_comment but no such luck hence  end_comment  begin_if  begin_condition  begin_expr  begin_name exp form  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment int digits isn t used here but if it were it would be 1  end_comment  begin_comment int digits 1  end_comment  begin_expr_stmt  begin_expr  begin_name dec digits  end_name  begin_operator  end_operator  begin_name n digits  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_comment precision for g g includes integer digits  end_comment  begin_expr_stmt  begin_expr  begin_name precision  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name max  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name precision  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name precision  end_name  begin_operator  end_operator  begin_name dec digits  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name n  end_name  begin_init  begin_expr  begin_call  begin_name round  end_name  begin_argument_list  begin_argument  begin_expr  begin_name digits  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name n digits  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name precision  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name precision  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name n  end_name  begin_operator  end_operator  begin_name n digits  end_name  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_name n digits  end_name  begin_operator  end_operator  begin_name n  end_name  end_expr  end_expr_stmt  end_then  end_if  begin_expr_stmt  begin_expr  begin_name dec digits  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name min  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name n digits  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name precision  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name exponent  end_name  begin_operator  end_operator  begin_name n digits  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name is sharp  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name flags  end_name  begin_operator  end_operator  begin_name flag sharp  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_comment deal with length width  end_comment  begin_expr_stmt  begin_expr  begin_name len  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_comment first digit is always printed  end_comment  begin_comment mri behavior be default 2 digits  end_comment  begin_comment in the exponent use 3 digits  end_comment  begin_comment only when necessary  end_comment  begin_comment see comment for write exp method for more details  end_comment  begin_if  begin_condition  begin_expr  begin_name exponent  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_name len  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_then  begin_comment 5 e nnn e nnn  end_comment  begin_else  begin_expr_stmt  begin_expr  begin_name len  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_else  end_if  begin_comment 4 e nn e nn  end_comment  begin_if  begin_condition  begin_expr  begin_name is sharp  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment in this mode is always printed  end_comment  begin_expr_stmt  begin_expr  begin_name len  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name precision  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name is sharp  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment mri behavior in this mode  end_comment  begin_comment trailing zeroes are removed  end_comment  begin_comment 1 500 e 05 1 5 e 05  end_comment  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name j  end_name  begin_init  begin_expr  begin_name dec digits  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  end_init  begin_condition  begin_expr  begin_name j  end_name  begin_operator  end_operator  end_expr  end_condition  begin_incr  begin_expr  begin_name j  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_if  begin_condition  begin_expr  begin_name  begin_name digits  end_name  begin_index  begin_expr  begin_name j  end_name  end_expr  end_index  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name dec digits  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_break  end_break  end_block  end_else  end_if  end_block  end_for  begin_if  begin_condition  begin_expr  begin_name dec digits  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name len  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_comment is printed  end_comment  begin_expr_stmt  begin_expr  begin_name len  end_name  begin_operator  end_operator  begin_name dec digits  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  begin_else  begin_block  begin_comment all precision numebers printed  end_comment  begin_expr_stmt  begin_expr  begin_name len  end_name  begin_operator  end_operator  begin_name precision  end_name  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name width  end_name  begin_operator  end_operator  begin_name len  end_name  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name width  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name flags  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name flag zero  end_name  begin_operator  end_operator  begin_name flag minus  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name fill  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name width  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name width  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name sign char  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name sign char  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name width  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name flags  end_name  begin_operator  end_operator  begin_name flag minus  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name fill  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name width  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name width  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment now some data  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name digits  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name dot to print  end_name  begin_init  begin_expr  begin_name is sharp  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name precision  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name dec digits  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name dot to print  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name get decimal separator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment   end_comment  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name precision  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name dec digits  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name digits  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name dec digits  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name precision  end_name  begin_operator  end_operator  begin_name dec digits  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name precision  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name is sharp  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name fill  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name precision  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name write exp  end_name  begin_argument_list  begin_argument  begin_expr  begin_name buf  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name exponent  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name exp char  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name width  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name fill  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name width  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  begin_else  begin_block  begin_comment decimal form like but not just like f  end_comment  begin_expr_stmt  begin_expr  begin_name int digits  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name max  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name min  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name n digits  end_name  begin_operator  end_operator  begin_name exponent  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name n digits  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name int zeroes  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name max  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name exponent  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name int length  end_name  begin_operator  end_operator  begin_name int digits  end_name  begin_operator  end_operator  begin_name int zeroes  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name dec digits  end_name  begin_operator  end_operator  begin_name n digits  end_name  begin_operator  end_operator  begin_name int digits  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name dec zeroes  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name max  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name dec digits  end_name  begin_operator  end_operator  begin_name exponent  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name dec length  end_name  begin_operator  end_operator  begin_name dec zeroes  end_name  begin_operator  end_operator  begin_name dec digits  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name precision  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name max  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name precision  end_name  begin_operator  end_operator  begin_name int length  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name precision  end_name  begin_operator  end_operator  begin_name dec digits  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name n  end_name  begin_init  begin_expr  begin_call  begin_name round  end_name  begin_argument_list  begin_argument  begin_expr  begin_name digits  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name n digits  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name int digits  end_name  begin_operator  end_operator  begin_name precision  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name precision  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name n  end_name  begin_operator  end_operator  begin_name n digits  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment digits array shifted update all  end_comment  begin_expr_stmt  begin_expr  begin_name n digits  end_name  begin_operator  end_operator  begin_name n  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name int digits  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name max  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name min  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name n digits  end_name  begin_operator  end_operator  begin_name exponent  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name n digits  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name int length  end_name  begin_operator  end_operator  begin_name int digits  end_name  begin_operator  end_operator  begin_name int zeroes  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name dec digits  end_name  begin_operator  end_operator  begin_name n digits  end_name  begin_operator  end_operator  begin_name int digits  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name dec zeroes  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name max  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name dec digits  end_name  begin_operator  end_operator  begin_name exponent  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name precision  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name max  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name precision  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name dec digits  end_name  begin_operator  end_operator  begin_name precision  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name dec length  end_name  begin_operator  end_operator  begin_name dec zeroes  end_name  begin_operator  end_operator  begin_name dec digits  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name len  end_name  begin_operator  end_operator  begin_name int length  end_name  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name dec length  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name len  end_name  begin_operator  end_operator  begin_name dec length  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name flags  end_name  begin_operator  end_operator  begin_name flag sharp  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name len  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_comment will have a trailing  end_comment  begin_if  begin_condition  begin_expr  begin_name precision  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment g fills trailing zeroes if  end_comment  begin_expr_stmt  begin_expr  begin_name len  end_name  begin_operator  end_operator  begin_name precision  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_name width  end_name  begin_operator  end_operator  begin_name len  end_name  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name width  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name flags  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name flag zero  end_name  begin_operator  end_operator  begin_name flag minus  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name fill  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name width  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name width  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name sign char  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name sign char  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name width  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name flags  end_name  begin_operator  end_operator  begin_name flag minus  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name fill  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name width  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name width  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment now some data  end_comment  begin_if  begin_condition  begin_expr  begin_name int length  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name int digits  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment s b true since int length 0  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name digits  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name int digits  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name int zeroes  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name fill  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name int zeroes  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  begin_else  begin_block  begin_comment always need at least a 0  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_if  begin_condition  begin_expr  begin_name dec length  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name flags  end_name  begin_operator  end_operator  begin_name flag sharp  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name get decimal separator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name dec length  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name dec zeroes  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name fill  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name dec zeroes  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name precision  end_name  begin_operator  end_operator  begin_name dec zeroes  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name dec digits  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name digits  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name int digits  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name dec digits  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name precision  end_name  begin_operator  end_operator  begin_name dec digits  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name flags  end_name  begin_operator  end_operator  begin_name flag sharp  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name precision  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name fill  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name precision  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name flags  end_name  begin_operator  end_operator  begin_name flag sharp  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name precision  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name fill  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name precision  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name width  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name fill  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name width  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block  end_else  end_if  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  begin_expr_stmt  begin_expr  begin_name int digits  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name max  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name min  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name n digits  end_name  begin_operator  end_operator  begin_name exponent  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name n digits  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name int zeroes  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name max  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name exponent  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name int length  end_name  begin_operator  end_operator  begin_name int digits  end_name  begin_operator  end_operator  begin_name int zeroes  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name dec digits  end_name  begin_operator  end_operator  begin_name n digits  end_name  begin_operator  end_operator  begin_name int digits  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name dec zeroes  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name max  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name dec digits  end_name  begin_operator  end_operator  begin_name exponent  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name dec length  end_name  begin_operator  end_operator  begin_name dec zeroes  end_name  begin_operator  end_operator  begin_name dec digits  end_name  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name precision  end_name  begin_operator  end_operator  begin_name dec length  end_name  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name precision  end_name  begin_operator  end_operator  begin_name dec zeroes  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name dec digits  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name dec zeroes  end_name  begin_operator  end_operator  begin_name precision  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name n  end_name  begin_init  begin_expr  begin_call  begin_name round  end_name  begin_argument_list  begin_argument  begin_expr  begin_name digits  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name n digits  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name int digits  end_name  begin_operator  end_operator  begin_name precision  end_name  begin_operator  end_operator  begin_name dec zeroes  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name precision  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name n  end_name  begin_operator  end_operator  begin_name n digits  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment digits arr shifted update all  end_comment  begin_expr_stmt  begin_expr  begin_name n digits  end_name  begin_operator  end_operator  begin_name n  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name int digits  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name max  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name min  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name n digits  end_name  begin_operator  end_operator  begin_name exponent  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name n digits  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name int length  end_name  begin_operator  end_operator  begin_name int digits  end_name  begin_operator  end_operator  begin_name int zeroes  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name dec digits  end_name  begin_operator  end_operator  begin_name n digits  end_name  begin_operator  end_operator  begin_name int digits  end_name  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name dec zeroes  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name max  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_operator  end_operator  begin_operator  end_operator  begin_name dec digits  end_name  begin_operator  end_operator  begin_name exponent  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name dec length  end_name  begin_operator  end_operator  begin_name dec zeroes  end_name  begin_operator  end_operator  begin_name dec digits  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name dec digits  end_name  begin_operator  end_operator  begin_name precision  end_name  begin_operator  end_operator  begin_name dec zeroes  end_name  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_name dec length  end_name  begin_operator  end_operator  begin_name dec zeroes  end_name  begin_operator  end_operator  begin_name dec digits  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name precision  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name len  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name max  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name int length  end_name  end_expr  end_argument  end_argument_list  end_call  begin_operator  end_operator  begin_operator  end_operator  begin_name precision  end_name  end_expr  end_expr_stmt  begin_comment 1 intlen prec  end_comment  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_name len  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name max  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name int length  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment 1 intlen  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name flags  end_name  begin_operator  end_operator  begin_name flag sharp  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name len  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_comment will have a trailing  end_comment  end_block  end_then  end_if  end_block  end_else  end_if  begin_expr_stmt  begin_expr  begin_name width  end_name  begin_operator  end_operator  begin_name len  end_name  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name width  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name flags  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name flag zero  end_name  begin_operator  end_operator  begin_name flag minus  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name fill  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name width  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name width  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name sign char  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name sign char  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name width  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name flags  end_name  begin_operator  end_operator  begin_name flag minus  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name fill  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name width  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name width  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment now some data  end_comment  begin_if  begin_condition  begin_expr  begin_name int length  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name int digits  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment s b true since int length 0  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name digits  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name int digits  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name int zeroes  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name fill  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name int zeroes  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  begin_else  begin_block  begin_comment always need at least a 0  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  begin_if  begin_condition  begin_expr  begin_name precision  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name flags  end_name  begin_operator  end_operator  begin_name flag sharp  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name get decimal separator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name precision  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name dec zeroes  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name fill  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name dec zeroes  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name precision  end_name  begin_operator  end_operator  begin_name dec zeroes  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name dec digits  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name digits  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name int digits  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name dec digits  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name precision  end_name  begin_operator  end_operator  begin_name dec digits  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment fill up the rest with zeroes  end_comment  begin_if  begin_condition  begin_expr  begin_name precision  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name fill  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name precision  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name width  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name fill  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name width  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_break  end_break  end_case  begin_case  begin_expr  end_expr  end_case  begin_case  begin_expr  end_expr  begin_comment int digits isn t used here but if it were it would be 1  end_comment  begin_comment int digits 1  end_comment  begin_expr_stmt  begin_expr  begin_name dec digits  end_name  begin_operator  end_operator  begin_name n digits  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name precision  end_name  begin_operator  end_operator  begin_name dec digits  end_name  end_expr  end_condition  begin_then  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name n  end_name  begin_init  begin_expr  begin_call  begin_name round  end_name  begin_argument_list  begin_argument  begin_expr  begin_name digits  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name n digits  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name precision  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name precision  end_name  begin_operator  end_operator  end_expr  end_argument  end_argument_list  end_call  end_expr  end_init  end_decl  end_decl_stmt  begin_if  begin_condition  begin_expr  begin_name n  end_name  begin_operator  end_operator  begin_name n digits  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name n digits  end_name  begin_operator  end_operator  begin_name n  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name dec digits  end_name  begin_operator  end_operator  begin_call  begin_name  begin_name math  end_name  begin_operator  end_operator  begin_name min  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name n digits  end_name  begin_operator  end_operator  end_expr  end_argument  begin_argument  begin_expr  begin_name precision  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_expr_stmt  begin_expr  begin_name exponent  end_name  begin_operator  end_operator  begin_name n digits  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_decl_stmt  begin_decl  begin_type  begin_name boolean  end_name  end_type  begin_name is sharp  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name flags  end_name  begin_operator  end_operator  begin_name flag sharp  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_init  end_decl  end_decl_stmt  begin_comment deal with length width  end_comment  begin_expr_stmt  begin_expr  begin_name len  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_comment first digit is always printed  end_comment  begin_comment mri behavior be default 2 digits  end_comment  begin_comment in the exponent use 3 digits  end_comment  begin_comment only when necessary  end_comment  begin_comment see comment for write exp method for more details  end_comment  begin_if  begin_condition  begin_expr  begin_name exponent  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_name len  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_then  begin_comment 5 e nnn e nnn  end_comment  begin_else  begin_expr_stmt  begin_expr  begin_name len  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_else  end_if  begin_comment 4 e nn e nn  end_comment  begin_if  begin_condition  begin_expr  begin_name precision  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_comment and all precision digits printed  end_comment  begin_expr_stmt  begin_expr  begin_name len  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name precision  end_name  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_name is sharp  end_name  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_name len  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_comment in this mode is always printed  end_comment  end_block  end_then  end_if  end_else  end_if  begin_expr_stmt  begin_expr  begin_name width  end_name  begin_operator  end_operator  begin_name len  end_name  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name width  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name flags  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_name flag zero  end_name  begin_operator  end_operator  begin_name flag minus  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name fill  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name width  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name width  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name sign char  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name sign char  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name width  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name flags  end_name  begin_operator  end_operator  begin_name flag minus  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name fill  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name width  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name width  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_comment now some data  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name digits  end_name  begin_index  begin_expr  end_expr  end_index  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name precision  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name get decimal separator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_comment   end_comment  begin_if  begin_condition  begin_expr  begin_name dec digits  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name digits  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name dec digits  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name precision  end_name  begin_operator  end_operator  begin_name dec digits  end_name  end_expr  end_expr_stmt  end_block  end_then  end_if  begin_if  begin_condition  begin_expr  begin_name precision  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name fill  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name precision  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name flags  end_name  begin_operator  end_operator  begin_name flag sharp  end_name  begin_operator  end_operator  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_call  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name get decimal separator  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  begin_expr_stmt  begin_expr  begin_call  begin_name write exp  end_name  begin_argument_list  begin_argument  begin_expr  begin_name buf  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name exponent  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name exp char  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  begin_if  begin_condition  begin_expr  begin_name width  end_name  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name fill  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  begin_argument  begin_expr  begin_name width  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_then  end_if  begin_break  end_break  end_case  end_block  end_switch  begin_comment switch format char e e f g g  end_comment  begin_expr_stmt  begin_expr  begin_name offset  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_expr_stmt  begin_expr  begin_name incomplete  end_name  begin_operator  end_operator  end_expr  end_expr_stmt  begin_break  end_break  end_block  begin_comment block case e e f g g  end_comment  end_case  end_block  end_switch  begin_comment switch each format char in spec  end_comment  end_block  end_for  begin_comment for each format spec  end_comment  begin_comment equivalent to mri case 0  end_comment  begin_if  begin_condition  begin_expr  begin_name incomplete  end_name  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name flags  end_name  begin_operator  end_operator  begin_name flag none  end_name  end_expr  end_condition  begin_then  begin_block  begin_comment dangling char  end_comment  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name buf  end_name  begin_operator  end_operator  begin_name append  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name raise argument error  end_name  begin_argument_list  begin_argument  begin_expr  begin_name args  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name err illegal format char  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_else  end_if  end_block  end_then  end_if  end_block  end_while  begin_comment main while loop offset length  end_comment  begin_comment mri behavior validate only the unnumbered arguments  end_comment  begin_if  begin_condition  begin_expr  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name numbered  end_name  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name unnumbered  end_name  end_name  begin_operator  end_operator  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name length  end_name  end_name  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name runtime  end_name  begin_operator  end_operator  begin_name get debug  end_name  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  begin_call  begin_name is true  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name raise argument error  end_name  end_name  begin_argument_list  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  begin_else  begin_if  begin_condition  begin_expr  begin_call  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name runtime  end_name  begin_operator  end_operator  begin_name is verbose  end_name  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_expr_stmt  begin_expr  begin_call  begin_name  begin_name args  end_name  begin_operator  end_operator  begin_name warn  end_name  end_name  begin_argument_list  begin_argument  begin_expr  begin_name  begin_name id  end_name  begin_operator  end_operator  begin_name too many arguments  end_name  end_name  end_expr  end_argument  begin_argument  begin_expr  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_block  end_then  end_if  end_else  end_if  end_block  end_then  end_if  begin_return  begin_expr  begin_name tainted  end_name  end_expr  end_return  end_block 
 begin_type  begin_specifier  end_specifier  begin_name void  end_name  end_type  begin_name test threading  end_name  begin_parameter_list  end_parameter_list  begin_block  begin_decl_stmt  begin_decl  begin_type  begin_name runner  end_name  begin_index  end_index  end_type  begin_name runners  end_name  begin_init  begin_expr  begin_operator  end_operator  begin_name  begin_name runner  end_name  begin_index  begin_expr  begin_name runner count  end_name  end_expr  end_index  end_name  end_expr  end_init  end_decl  end_decl_stmt  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name runner count  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_expr_stmt  begin_expr  begin_name  begin_name runners  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_operator  end_operator  begin_call  begin_name runner  end_name  begin_argument_list  begin_argument  begin_expr  begin_operator  end_operator  begin_name i  end_name  end_expr  end_argument  begin_argument  begin_expr  begin_name runner loop count  end_name  end_expr  end_argument  end_argument_list  end_call  end_expr  end_expr_stmt  end_for  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name runner count  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_expr_stmt  begin_expr  begin_name  begin_name runners  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name start  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_for  begin_try  begin_block  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name runner count  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_expr_stmt  begin_expr  begin_name  begin_name runners  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name join  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_expr_stmt  end_for  end_block  begin_catch  begin_parameter_list  begin_param  begin_decl  begin_type  begin_name interrupted exception  end_name  end_type  begin_name ie  end_name  end_decl  end_param  end_parameter_list  begin_block  begin_comment xxx do something  end_comment  end_block  end_catch  end_try  begin_for  begin_init  begin_decl  begin_type  begin_name int  end_name  end_type  begin_name i  end_name  begin_init  begin_expr  end_expr  end_init  end_decl  end_init  begin_condition  begin_expr  begin_name i  end_name  begin_operator  end_operator  begin_name runner count  end_name  end_expr  end_condition  begin_incr  begin_expr  begin_name i  end_name  begin_operator  end_operator  end_expr  end_incr  begin_block  begin_if  begin_condition  begin_expr  begin_name  begin_name runners  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name is failed  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_condition  begin_then  begin_block  begin_if  begin_condition  begin_expr  begin_name  begin_name runners  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name get failure exception  end_name  begin_argument_list  end_argument_list  end_call  begin_operator  end_operator  end_expr  end_condition  begin_then  begin_block  begin_throw  begin_expr  begin_name  begin_name runners  end_name  begin_index  begin_expr  begin_name i  end_name  end_expr  end_index  end_name  begin_operator  end_operator  begin_call  begin_name get failure exception  end_name  begin_argument_list  end_argument_list  end_call  end_expr  end_throw  end_block  end_then  end_if  end_block  end_then  end_if  end_block  end_for  end_block 
